!Libmicro_#:                                            0.4.1-rh.31
!Options:             -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000
!Machine_name:                                    openeuler-riscv64
!OS_name:                                                     Linux
!OS_release:                         6.4.0-10.1.0.20.oe2309.riscv64
!OS_build:                      #1 SMP Sun Sep 24 22:20:45 UTC 2023
!IPV4_address:                                            10.0.2.15
!IPV4_address:                                           172.17.0.1
!IPV6_address:                              fec0::5054:ff:fe12:3456
!IPV6_address:                              fe80::5054:ff:fe12:3456
!Run_by:                                                       root
!Date:                                               09/27/23 10:15
!Compiler:                                                      gcc
!Compiler Ver.:                                                  12
!Libc Ver.:                                              glibc 2.38
!Libpthread Ver.:                                         NPTL 2.38
!sizeof(long):                                                    8
!extra_CFLAGS:                                               [none]
!TimerRes:                                                  1 nsecs
!TimerOverhead:                                          1399 nsecs
!Location /tmp:                                                /tmp
!Location /var/tmp:                                               /
!CPU_NAME:                                                         
!Boot cmd line:       root=/dev/vda2 rw console=ttyS0 systemd.default_timeout_start_sec=600 selinux=0 highres=off earlycon no4lvl
!Processor:                                                 riscv64
!Byte_Order:                                          Little_Endian
!#CPUs:                                                           4
!On-line_CPUs_list:                                             0-3
!NUMA_nodes:                                                      1
!NUMA_node0_CPUs:                                               0-3
!Memory:                                                      0,0,0
!kernel.sched_autogroup_enabled:                                  1
!kernel.sched_cfs_bandwidth_slice_us:                          5000
!kernel.sched_child_runs_first:                                   0
!kernel.sched_deadline_period_max_us:                       4194304
!kernel.sched_deadline_period_min_us:                           100
!kernel.sched_rr_timeslice_ms:                                  100
!kernel.sched_rt_period_us:                                 1000000
!kernel.sched_rt_runtime_us:                                 950000
!kernel.sched_schedstats:                                         0
!Trans. Huge Page:                           always madvise [never]
!THP Defrag:             always defer defer+madvise [madvise] never
!THP khpd.alloc_sleep_millisecs:                              60000
!THP khpd.defrag:                                                 1
!THP khpd.full_scans:                                             8
!THP khpd.max_ptes_none:                                        511
!THP khpd.max_ptes_shared:                                      256
!THP khpd.max_ptes_swap:                                         64
!THP khpd.pages_collapsed:                                       72
!THP khpd.pages_to_scan:                                       4096
!THP khpd.scan_sleep_millisecs:                               10000
!vm.admin_reserve_kbytes:                                      8192
!vm.compaction_proactiveness:                                    20
!vm.compact_memory:                                                
!vm.compact_unevictable_allowed:                                  1
!vm.dirty_background_bytes:                                       0
!vm.dirty_background_ratio:                                      90
!vm.dirty_bytes:                                                  0
!vm.dirty_expire_centisecs:                                    2500
!vm.dirty_ratio:                                                 90
!vm.dirtytime_expire_seconds:                                 43200
!vm.dirty_writeback_centisecs:                                    0
!vm.drop_caches:                                                   
!vm.extfrag_threshold:                                          500
!vm.hugepage_mig_noalloc:                                         0
!vm.hugepage_pmem_allocall:                                       0
!vm.hugetlb_optimize_vmemmap:                                     0
!vm.hugetlb_shm_group:                                            0
!vm.laptop_mode:                                                  0
!vm.legacy_va_layout:                                             0
!vm.lowmem_reserve_ratio:                                  256 32 0
!vm.max_map_count:                                            65530
!vm.memfd_noexec:                                                 0
!vm.min_free_kbytes:                                           7932
!vm.min_slab_ratio:                                               5
!vm.min_unmapped_ratio:                                           1
!vm.mmap_min_addr:                                             4096
!vm.mmap_rnd_bits:                                               18
!vm.mmap_rnd_compat_bits:                                        11
!vm.nr_hugepages:                                                 0
!vm.nr_hugepages_mempolicy:                                       0
!vm.nr_overcommit_hugepages:                                      0
!vm.numa_stat:                                                    1
!vm.numa_zonelist_order:                                       Node
!vm.oom_dump_tasks:                                               1
!vm.oom_kill_allocating_task:                                     0
!vm.overcommit_kbytes:                                            0
!vm.overcommit_memory:                                            0
!vm.overcommit_ratio:                                            50
!vm.page-cluster:                                                 3
!vm.page_lock_unfairness:                                         5
!vm.panic_on_oom:                                                 0
!vm.percpu_pagelist_high_fraction:                                0
!vm.stat_interval:                                                1
!vm.stat_refresh:                                                  
!vm.swappiness:                                                  10
!vm.unprivileged_userfaultfd:                                     0
!vm.user_reserve_kbytes:                                     124629
!vm.vfs_cache_pressure:                                         100
!vm.watermark_boost_factor:                                   15000
!vm.watermark_scale_factor:                                      10
!vm.zone_reclaim_mode:                                            0
!nh:available: 1 nodes (0)
!nh:node:free:size:0
!nh:0:381:3906:10
     prc thr      nsecs/call      samples   errors cnt/samp 
atoi   1   1             143        20317        0     5574 
# bin/../bin-riscv64/atoi -N atoi -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       135                        135
#                        max     85691                        165
#                       mean       156.62147                  145.86706
#                     median       144                        143*
#                     stddev       634.36566                    6.30678
#             standard error         4.32031                    0.04425
#       99% confidence level        11.12913                    0.11398
#                       skew       122.50817                    1.11384
#                   kurtosis     15833.96579                    0.31961
#           time correlation         0.00379                    0.00099
#
#               elapsed time        20.00588
#                   run time        17.81463
#          getnsecs overhead      1399
#
#          number of samples     21560
#         number of outliers      1243
#    number of final samples     20317
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             135 |*                                             -
#                  3             136 |*                                             -
#                 44             137 |*                                             -
#                238             138 |**                                            -
#                843             139 |*********                                     -
#               2020             140 |***********************                       -
#               2744             141 |********************************              -
#               2629             142 |******************************                -
#               1915             143 |**********************                        -
#               1272             144 |**************                                -
#                965             145 |***********                                   -
#                863             146 |**********                                    -
#                681             147 |*******                                       -
#                539             148 |******                                        -
#                417             149 |****                                          -
#                414             150 |****                                          -
#                540             151 |******                                        -
#                597             152 |******                                        -
#                552             153 |******                                        -
#                495             154 |*****                                         -
#                377             155 |****                                          -
#                364             156 |****                                          -
#                345             157 |****                                          -
#                288             158 |***                                           -
#                155             159 |*                                             -
#
#               1016           > 95% |***********                           161.82677
#
#        mean of 95%       145.02694
#          95th %ile             159
#
# Usage: atoi
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'atoi')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures atoi()
     prc thr      nsecs/call      samples   errors cnt/samp 
bind   1   1           68594           61        0     1024 
# bin/../bin-riscv64/bind -N bind -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     66520                      66520
#                        max    125965                      71947
#                       mean     73809.87838                68797.34426
#                     median     68817                      68594*
#                     stddev     13184.23436                 1215.43779
#             standard error      1532.63611                  155.62086
#       99% confidence level      3948.07063                  400.87934
#                       skew         2.63728                    0.58300
#                   kurtosis         5.81719                   -0.00779
#           time correlation       396.41163                   65.56912
#
#               elapsed time        25.25885
#                   run time         5.59313
#          getnsecs overhead      1399
#
#          number of samples        74
#         number of outliers        13
#    number of final samples        61
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value        15
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           66520 |*******                             66550.00000
#                  0           66663 |                                              -
#                  0           66806 |                                              -
#                  1           66949 |***                                 66972.00000
#                  1           67092 |***                                 67095.00000
#                  2           67235 |*******                             67249.50000
#                  2           67378 |*******                             67481.00000
#                  3           67521 |**********                          67592.00000
#                  1           67664 |***                                 67677.00000
#                  2           67807 |*******                             67879.50000
#                  3           67950 |**********                          68033.00000
#                  1           68093 |***                                 68209.00000
#                  2           68236 |*******                             68320.00000
#                  9           68379 |********************************    68460.22222
#                  4           68522 |**************                      68591.25000
#                  4           68665 |**************                      68740.50000
#                  3           68808 |**********                          68868.33333
#                  2           68951 |*******                             69011.00000
#                  1           69094 |***                                 69220.00000
#                  2           69237 |*******                             69360.00000
#                  3           69380 |**********                          69474.66667
#                  1           69523 |***                                 69615.00000
#                  2           69666 |*******                             69764.00000
#                  0           69809 |                                              -
#                  0           69952 |                                              -
#                  1           70095 |***                                 70107.00000
#                  0           70238 |                                              -
#                  2           70381 |*******                             70486.00000
#                  1           70524 |***                                 70547.00000
#                  1           70667 |***                                 70770.00000
#                  0           70810 |                                              -
#                  1           70953 |***                                 71044.00000
#
#                  4           > 95% |**************                      71451.75000
#
#        mean of 95%     68611.07018
#          95th %ile           71083
#
# WARNINGS
#     Too few samples, 74 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 22.1% of elapsed time.
#
# Usage: bind
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'bind')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-z bind to port 0 rather than seq. number
# notes: measures bind() on TCP
         prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_1   1   1             748        19549        0     1093 
# bin/../bin-riscv64/cascade_cond -N c_cond_1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       721                        721
#                        max    319552                        836
#                       mean       810.60518                  758.37818
#                     median       750                        748*
#                     stddev      2343.32772                   25.78995
#             standard error        16.08077                    0.18445
#       99% confidence level        41.42407                    0.47515
#                       skew       124.70062                    1.44554
#                   kurtosis     16431.81931                    0.92542
#           time correlation         0.01756                    0.00396
#
#               elapsed time        20.00474
#                   run time        17.97753
#          getnsecs overhead      1399
#
#          number of samples     21235
#         number of outliers      1686
#    number of final samples     19549
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12             721 |*                                     722.66667
#                 85             725 |*                                     726.87059
#                397             729 |***                                   730.89924
#               1169             733 |***********                           734.72113
#               2253             737 |**********************                738.64225
#               3200             741 |********************************      742.50375
#               2737             745 |***************************           746.37121
#               1795             749 |*****************                     750.38774
#               1542             753 |***************                       754.43191
#               1195             757 |***********                           758.38745
#                744             761 |*******                               762.35349
#                427             765 |****                                  766.27166
#                268             769 |**                                    770.36567
#                207             773 |**                                    774.31884
#                111             777 |*                                     778.36036
#                 72             781 |*                                     782.30556
#                 79             785 |*                                     786.58228
#                 95             789 |*                                     790.77895
#                217             793 |**                                    794.76498
#                359             797 |***                                   798.63788
#                425             801 |****                                  802.53412
#                423             805 |****                                  806.56974
#                403             809 |****                                  810.46402
#                308             813 |***                                   814.40584
#                 48             817 |*                                     817.00000
#
#                978           > 95% |*********                             825.41820
#
#        mean of 95%       754.84767
#          95th %ile             817
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_o1   1   1             748        19353        0     1099 
# bin/../bin-riscv64/cascade_cond -N c_cond_o1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -o 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       721                        721
#                        max    300353                        835
#                       mean       807.81660                  758.21692
#                     median       749                        748*
#                     stddev      2237.21400                   25.43227
#             standard error        15.47921                    0.18281
#       99% confidence level        39.87444                    0.47093
#                       skew       122.00210                    1.45511
#                   kurtosis     15757.42033                    0.84538
#           time correlation         0.01710                    0.00390
#
#               elapsed time        20.00446
#                   run time        17.76517
#          getnsecs overhead      1399
#
#          number of samples     20889
#         number of outliers      1536
#    number of final samples     19353
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5             721 |*                                     721.80000
#                  8             724 |*                                     725.37500
#                 44             727 |*                                     728.15909
#                140             730 |*                                     731.27857
#                508             733 |*****                                 734.26772
#               1474             736 |****************                      737.20285
#               2444             739 |***************************           740.07529
#               2855             742 |********************************      742.90788
#               2191             745 |************************              745.95847
#               1347             748 |***************                       748.97847
#               1182             751 |*************                         751.92386
#               1144             754 |************                          754.96416
#                894             757 |**********                            757.95190
#                620             760 |******                                760.85323
#                364             763 |****                                  763.95604
#                247             766 |**                                    766.89474
#                158             769 |*                                     769.77848
#                 98             772 |*                                     772.86735
#                 56             775 |*                                     776.01786
#                 44             778 |*                                     778.70455
#                 32             781 |*                                     781.93750
#                 40             784 |*                                     785.10000
#                 65             787 |*                                     788.10769
#                135             790 |*                                     791.17037
#                238             793 |**                                    794.07143
#                312             796 |***                                   797.03205
#                319             799 |***                                   800.04389
#                345             802 |***                                   802.98261
#                332             805 |***                                   806.05120
#                311             808 |***                                   808.96141
#                275             811 |***                                   812.00364
#                158             814 |*                                     814.46203
#
#                968           > 95% |**********                            823.71178
#
#        mean of 95%       754.76851
#          95th %ile             815
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
           prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_os1   1   1             870        19208        0      989 
# bin/../bin-riscv64/cascade_cond -N c_cond_os1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -o -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       836                        836
#                        max    212802                        971
#                       mean       921.30371                  881.95304
#                     median       872                        870*
#                     stddev      1705.33148                   29.64278
#             standard error        11.94996                    0.21388
#       99% confidence level        30.78311                    0.55096
#                       skew       109.98889                    1.36223
#                   kurtosis     12780.93439                    0.60232
#           time correlation         0.01535                    0.00466
#
#               elapsed time        20.00498
#                   run time        18.00708
#          getnsecs overhead      1399
#
#          number of samples     20365
#         number of outliers      1157
#    number of final samples     19208
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             836 |*                                     837.50000
#                  4             840 |*                                     842.75000
#                 26             844 |*                                     846.15385
#                147             848 |*                                     850.06803
#                687             852 |*******                               853.87336
#               2209             856 |**********************                857.78044
#               3084             860 |********************************      861.48573
#               2336             864 |************************              865.36002
#               1611             868 |****************                      869.44941
#               1627             872 |****************                      873.50584
#               1434             876 |**************                        877.39400
#                873             880 |*********                             881.37457
#                539             884 |*****                                 885.34137
#                312             888 |***                                   889.30128
#                220             892 |**                                    893.44545
#                164             896 |*                                     897.45122
#                104             900 |*                                     901.39423
#                 71             904 |*                                     905.49296
#                 53             908 |*                                     909.64151
#                 81             912 |*                                     913.48148
#                168             916 |*                                     917.75000
#                301             920 |***                                   921.74751
#                434             924 |****                                  925.66590
#                438             928 |****                                  929.44292
#                405             932 |****                                  933.45185
#                388             936 |****                                  937.46134
#                343             940 |***                                   941.41399
#                186             944 |*                                     944.79570
#
#                961           > 95% |*********                             957.10198
#
#        mean of 95%       877.99523
#          95th %ile             946
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_s1   1   1            1007        17119        0      942 
# bin/../bin-riscv64/cascade_cond -N c_cond_s1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       842                        900
#                        max    105151                       1137
#                       mean      1032.22452                 1018.15346
#                     median      1008                       1007*
#                     stddev       781.44673                   39.49366
#             standard error         5.71557                    0.30185
#       99% confidence level        14.72332                    0.77756
#                       skew       127.05168                    0.89011
#                   kurtosis     16866.60506                    0.32699
#           time correlation         0.01430                    0.00745
#
#               elapsed time        20.00485
#                   run time        18.05309
#          getnsecs overhead      1399
#
#          number of samples     18693
#         number of outliers      1574
#    number of final samples     17119
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10             900 |*                                     902.60000
#                 22             907 |*                                     910.09091
#                 27             914 |*                                     917.07407
#                 33             921 |*                                     924.09091
#                 20             928 |*                                     930.25000
#                 16             935 |*                                     937.37500
#                  9             942 |*                                     945.11111
#                 12             949 |*                                     952.25000
#                 47             956 |*                                     960.53191
#                451             963 |******                                966.88914
#                947             970 |**************                        973.10454
#               1060             977 |****************                      980.08679
#               1129             984 |*****************                     987.08060
#               1814             991 |***************************           994.12624
#               2103             998 |********************************     1000.97813
#               1955            1005 |*****************************        1007.95959
#               1606            1012 |************************             1014.76899
#                914            1019 |*************                        1021.65317
#                546            1026 |********                             1028.63004
#                343            1033 |*****                                1035.71720
#                301            1040 |****                                 1043.08970
#                324            1047 |****                                 1050.10185
#                357            1054 |*****                                1056.96639
#                432            1061 |******                               1063.98611
#                393            1068 |*****                                1070.95165
#                447            1075 |******                               1078.07383
#                464            1082 |*******                              1084.85560
#                352            1089 |*****                                1091.98580
#                129            1096 |*                                    1097.03101
#
#                856           > 95% |*************                        1113.65771
#
#        mean of 95%      1013.12661
#          95th %ile            1099
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_fcntl_1   1   1          353603        14998        0        2 
# bin/../bin-riscv64/cascade_fcntl -N c_fcntl_1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    334602                     334602
#                        max   5735834                    1487160
#                       mean    547023.10098               534575.07774
#                     median    353853                     353603*
#                     stddev    345366.73824               319852.18902
#             standard error      2806.65407                 2611.75631
#       99% confidence level      7229.94089                 6727.88426
#                       skew         1.81477                    1.43340
#                   kurtosis         5.14519                    0.34500
#           time correlation        61.17717                   57.92232
#
#               elapsed time        20.00435
#                   run time        16.58722
#          getnsecs overhead      1399
#
#          number of samples     15142
#         number of outliers       144
#    number of final samples     14998
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               8761          334602 |********************************   347296.95001
#                653          361962 |**                                 371003.76570
#                744          389322 |**                                 403130.08333
#                415          416682 |*                                  429347.16386
#                442          444042 |*                                  457886.74887
#                241          471402 |*                                  482994.17427
#                136          498762 |*                                  511905.08824
#                 70          526122 |*                                  538579.71429
#                 60          553482 |*                                  567349.83333
#                 71          580842 |*                                  594373.76056
#                 54          608202 |*                                  618896.12963
#                 38          635562 |*                                  650288.89474
#                 27          662922 |*                                  680462.33333
#                 32          690282 |*                                  703237.81250
#                 22          717642 |*                                  730800.45455
#                 26          745002 |*                                  762824.23077
#                 39          772362 |*                                  784198.94872
#                 32          799722 |*                                  811403.90625
#                 23          827082 |*                                  841618.91304
#                 56          854442 |*                                  869165.82143
#                 54          881802 |*                                  895424.51852
#                 48          909162 |*                                  923851.83333
#                 32          936522 |*                                  950438.93750
#                 37          963882 |*                                  975998.29730
#                 29          991242 |*                                 1003617.20690
#                223         1018602 |*                                 1038486.59641
#                748         1045962 |**                                1059101.65241
#                202         1073322 |*                                 1081899.32673
#                 63         1100682 |*                                 1114742.82540
#                210         1128042 |*                                 1145014.61429
#                372         1155402 |*                                 1168676.94624
#                288         1182762 |*                                 1195756.95833
#
#                750           > 95% |**                                1296264.10400
#
#        mean of 95%    494480.55432
#          95th %ile         1210108
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: cascade_fcntl
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_fcntl')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp file (default /tmp)]
# notes: thread cascade using fcntl region locking
        prc thr      nsecs/call      samples   errors cnt/samp 
c_flock   1   1           34578        17009        0       18 
# bin/../bin-riscv64/cascade_flock -N c_flock -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     31950                      31950
#                        max    457954                     153661
#                       mean     56373.57652                54771.22494
#                     median     34622                      34578*
#                     stddev     36518.41604                32971.47261
#             standard error       278.46650                  252.81274
#       99% confidence level       717.32971                  651.24562
#                       skew         1.75936                    1.22195
#                   kurtosis         4.47175                   -0.20638
#           time correlation         5.88190                    5.50759
#
#               elapsed time        20.00980
#                   run time        17.50090
#          getnsecs overhead      1399
#
#          number of samples     17198
#         number of outliers       189
#    number of final samples     17009
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               8744           31950 |********************************    33609.08829
#               1285           34705 |****                                35573.38132
#                602           37460 |**                                  38925.00498
#                706           40215 |**                                  41457.94618
#                497           42970 |*                                   44388.05433
#                326           45725 |*                                   46919.85276
#                162           48480 |*                                   49787.07407
#                125           51235 |*                                   52564.03200
#                 59           53990 |*                                   55058.13559
#                 49           56745 |*                                   58023.18367
#                 37           59500 |*                                   60796.72973
#                 30           62255 |*                                   63921.73333
#                 40           65010 |*                                   66518.30000
#                 40           67765 |*                                   69149.22500
#                 26           70520 |*                                   71788.50000
#                 56           73275 |*                                   74750.32143
#                 41           76030 |*                                   77536.60976
#                 30           78785 |*                                   80333.73333
#                 73           81540 |*                                   83373.82192
#                 74           84295 |*                                   85543.48649
#                 37           87050 |*                                   88387.81081
#                 35           89805 |*                                   91485.40000
#                 40           92560 |*                                   94116.50000
#                 43           95315 |*                                   96813.23256
#                176           98070 |*                                  100175.52273
#               1070          100825 |***                                102232.42617
#                434          103580 |*                                  104558.25806
#                144          106335 |*                                  107729.50694
#                228          109090 |*                                  110615.57456
#                294          111845 |*                                  113320.02041
#                362          114600 |*                                  116000.95028
#                293          117355 |*                                  118571.45734
#
#                851           > 95% |***                                129253.40893
#
#        mean of 95%     50848.44127
#          95th %ile          120086
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: cascade_flock
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_flock')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp files (default /tmp)]
# notes: thread cascade using flock file locking
          prc thr      nsecs/call      samples   errors cnt/samp 
c_lockf_1   1   1          302052        17382        0        2 
# bin/../bin-riscv64/cascade_lockf -N c_lockf_1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    287203                     287203
#                        max   3888474                    1243558
#                       mean    454172.55611               445426.49143
#                     median    302253                     302052*
#                     stddev    282263.92808               266250.78732
#             standard error      2131.52344                 2019.48684
#       99% confidence level      5490.80438                 5202.19811
#                       skew         1.75137                    1.56975
#                   kurtosis         2.92657                    0.78174
#           time correlation        42.37865                   40.46616
#
#               elapsed time        20.00841
#                   run time        15.95326
#          getnsecs overhead      1399
#
#          number of samples     17536
#         number of outliers       154
#    number of final samples     17382
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#              10859          287203 |********************************   297726.11686
#                673          310813 |*                                  317823.10104
#                562          334423 |*                                  347792.67972
#                480          358033 |*                                  368316.43750
#                376          381643 |*                                  394023.34574
#                362          405253 |*                                  417229.94199
#                178          428863 |*                                  439883.80337
#                106          452473 |*                                  464412.88679
#                102          476083 |*                                  487351.72549
#                 89          499693 |*                                  511184.88764
#                 46          523303 |*                                  534194.21739
#                 50          546913 |*                                  559638.00000
#                 39          570523 |*                                  582870.66667
#                 29          594133 |*                                  605885.31034
#                 21          617743 |*                                  631323.71429
#                 39          641353 |*                                  653627.76923
#                 41          664963 |*                                  676050.12195
#                 23          688573 |*                                  701720.21739
#                 26          712183 |*                                  726989.61538
#                 85          735793 |*                                  747506.17647
#                 41          759403 |*                                  770475.87805
#                 30          783013 |*                                  793975.23333
#                 32          806623 |*                                  818063.31250
#                 32          830233 |*                                  840648.09375
#                 27          853843 |*                                  865217.11111
#                315          877453 |*                                  894238.22222
#                861          901063 |**                                 912337.70732
#                253          924673 |*                                  932705.62451
#                 61          948283 |*                                  958260.37705
#                114          971893 |*                                  987874.64035
#                275          995503 |*                                 1007786.82545
#                285         1019113 |*                                 1030639.45614
#
#                870           > 95% |**                                1110858.11379
#
#        mean of 95%    410365.59563
#          95th %ile         1042707
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 79.7% of elapsed time.
#
# Usage: cascade_lockf
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_lockf')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp files (default /tmp)]
# notes: thread cascade using lockf file locking
          prc thr      nsecs/call      samples   errors cnt/samp 
c_mutex_1   1   1             341        19466        0     2372 
# bin/../bin-riscv64/cascade_mutex -N c_mutex_1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       330                        330
#                        max    183352                        381
#                       mean       371.05616                  345.96645
#                     median       342                        341*
#                     stddev      1343.33003                   11.51573
#             standard error         9.21322                    0.08254
#       99% confidence level        23.73325                    0.21262
#                       skew       125.13901                    1.43236
#                   kurtosis     16509.92686                    0.80473
#           time correlation         0.00830                    0.00176
#
#               elapsed time        20.00494
#                   run time        17.79763
#          getnsecs overhead      1399
#
#          number of samples     21259
#         number of outliers      1793
#    number of final samples     19466
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             330 |*                                     330.00000
#                 59             332 |*                                     332.84746
#                581             334 |****                                  334.73322
#               2400             336 |*******************                   336.62125
#               3959             338 |********************************      338.51023
#               3245             340 |**************************            340.43513
#               1999             342 |****************                      342.45373
#               1473             344 |***********                           344.42634
#                980             346 |*******                               346.44082
#                513             348 |****                                  348.41131
#                256             350 |**                                    350.45312
#                171             352 |*                                     352.45614
#                 90             354 |*                                     354.44444
#                 74             356 |*                                     356.43243
#                110             358 |*                                     358.61818
#                267             360 |**                                    360.53558
#                451             362 |***                                   362.52106
#                587             364 |****                                  364.52470
#                529             366 |****                                  366.46692
#                431             368 |***                                   368.47564
#                316             370 |**                                    370.45253
#
#                974           > 95% |*******                               375.80595
#
#        mean of 95%       344.39477
#          95th %ile             371
#
# Usage: cascade_mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_mutexes
           prc thr      nsecs/call      samples   errors cnt/samp 
c_mutex_s1   1   1             384        19723        0     2128 
# bin/../bin-riscv64/cascade_mutex -N c_mutex_s1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       365                        365
#                        max    183052                        431
#                       mean       416.54844                  389.14820
#                     median       385                        384*
#                     stddev      1322.62908                   13.80005
#             standard error         9.08107                    0.09826
#       99% confidence level        23.39284                    0.25313
#                       skew       128.35970                    1.36044
#                   kurtosis     17326.06471                    0.71573
#           time correlation         0.00933                    0.00212
#
#               elapsed time        20.00576
#                   run time        17.98956
#          getnsecs overhead      1399
#
#          number of samples     21213
#         number of outliers      1490
#    number of final samples     19723
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             365 |*                                     365.50000
#                 12             367 |*                                     367.50000
#                 36             369 |*                                     369.61111
#                127             371 |*                                     371.63780
#                414             373 |****                                  373.65459
#                891             375 |*********                             375.56902
#               1412             377 |***************                       377.56586
#               2017             379 |*********************                 379.55776
#               2941             381 |********************************      381.50935
#               2733             383 |*****************************         383.44676
#               1629             385 |*****************                     385.44322
#               1330             387 |**************                        387.46992
#               1043             389 |***********                           389.47555
#                663             391 |*******                               391.47662
#                417             393 |****                                  393.42446
#                213             395 |**                                    395.41315
#                108             397 |*                                     397.50926
#                 78             399 |*                                     399.48718
#                 61             401 |*                                     401.50820
#                 57             403 |*                                     403.47368
#                113             405 |*                                     405.65487
#                223             407 |**                                    407.54260
#                344             409 |***                                   409.56977
#                431             411 |****                                  411.50348
#                480             413 |*****                                 413.54792
#                445             415 |****                                  415.49213
#                383             417 |****                                  417.48303
#                133             419 |*                                     419.00000
#
#                987           > 95% |**********                            424.19757
#
#        mean of 95%       387.30183
#          95th %ile             419
#
# Usage: cascade_mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_mutexes
          prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chdir_tmp   1   1          284635        14806        0        2     2     n
# bin/../bin-riscv64/chdir -N chdir_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 /tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.6465/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    267702                     278268
#                        max   1509009                     292169
#                       mean    299435.84687               285189.17027
#                     median    285935                     284635*
#                     stddev     44002.60036                 2332.98546
#             standard error       308.96711                   19.17314
#       99% confidence level       795.89927                   49.39000
#                       skew         9.56059                    0.70417
#                   kurtosis       139.61606                   -0.14045
#           time correlation         3.79825                    0.52588
#
#               elapsed time        20.00334
#                   run time        17.77835
#          getnsecs overhead      1399
#
#          number of samples     20283
#         number of outliers      5477
#    number of final samples     14806
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          278268 |*                                  278421.60000
#                  3          278626 |*                                  278857.33333
#                  8          278984 |*                                  279114.37500
#                  8          279342 |*                                  279489.12500
#                 15          279700 |*                                  279899.53333
#                 16          280058 |*                                  280265.37500
#                 13          280416 |*                                  280618.46154
#                 27          280774 |*                                  280962.37037
#                 36          281132 |*                                  281336.94444
#                146          281490 |***                                281699.76712
#                398          281848 |**********                         282068.30402
#                566          282206 |**************                     282398.45936
#                827          282564 |*********************              282757.14389
#               1256          282922 |********************************   283097.95064
#               1201          283280 |******************************     283464.00583
#               1058          283638 |**************************         283825.21739
#               1137          283996 |****************************       284165.00088
#                908          284354 |***********************            284536.05727
#                900          284712 |**********************             284895.29444
#                646          285070 |****************                   285260.21672
#                638          285428 |****************                   285604.87147
#                524          285786 |*************                      285966.35878
#                464          286144 |***********                        286313.00647
#                468          286502 |***********                        286676.27137
#                441          286860 |***********                        287038.22449
#                436          287218 |***********                        287396.38991
#                370          287576 |*********                          287741.27297
#                414          287934 |**********                         288099.96377
#                357          288292 |*********                          288463.38095
#                330          288650 |********                           288831.90303
#                246          289008 |******                             289167.58943
#                203          289366 |*****                              289514.12315
#
#                741           > 95% |******************                 290631.48583
#
#        mean of 95%    284902.44749
#          95th %ile          289702
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
          prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chdir_usr   1   1          308269        15079        0        2     2     n
# bin/../bin-riscv64/chdir -N chdir_usr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 /var/tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.6465/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    291102                     301203
#                        max  17181390                     316603
#                       mean    329281.74461               308903.59871
#                     median    309802                     308269*
#                     stddev    164044.80253                 2568.49728
#             standard error      1127.11633                   20.91668
#       99% confidence level      2903.45167                   53.88138
#                       skew        80.07788                    0.64080
#                   kurtosis      7629.82644                   -0.07677
#           time correlation         5.28071                    0.56744
#
#               elapsed time        20.00501
#                   run time        17.80045
#          getnsecs overhead      1399
#
#          number of samples     21183
#         number of outliers      6104
#    number of final samples     15079
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          301203 |*                                  301302.28571
#                  8          301594 |*                                  301722.87500
#                 11          301985 |*                                  302268.63636
#                 16          302376 |*                                  302540.75000
#                 10          302767 |*                                  302975.40000
#                 17          303158 |*                                  303339.23529
#                 21          303549 |*                                  303743.28571
#                 49          303940 |*                                  304168.12245
#                 96          304331 |**                                 304539.27083
#                189          304722 |****                               304951.13757
#                372          305113 |********                           305349.94892
#                469          305504 |**********                         305703.12367
#                567          305895 |************                       306087.84127
#                662          306286 |**************                     306499.03776
#               1091          306677 |************************           306886.05408
#               1326          307068 |*****************************      307268.87406
#               1420          307459 |********************************   307645.10423
#               1139          307850 |*************************          308041.24759
#               1068          308241 |************************           308434.82678
#                864          308632 |*******************                308810.82755
#                607          309023 |*************                      309206.36244
#                410          309414 |*********                          309617.82439
#                327          309805 |*******                            310004.61468
#                405          310196 |*********                          310386.85926
#                403          310587 |*********                          310769.65509
#                504          310978 |***********                        311173.46429
#                489          311369 |***********                        311567.10225
#                488          311760 |**********                         311944.12910
#                402          312151 |*********                          312348.66667
#                369          312542 |********                           312725.78862
#                287          312933 |******                             313113.73171
#                232          313324 |*****                              313518.41810
#
#                754           > 95% |****************                   314847.94960
#
#        mean of 95%    308590.71630
#          95th %ile          313702
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
            prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_tmp   1   1          330352        18855        0        1     2     y
# bin/../bin-riscv64/chdir -N chgetwd_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -g /tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.6465/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    315552                     322252
#                        max   1365658                     340203
#                       mean    350795.42580               331233.76362
#                     median    331352                     330352*
#                     stddev     62770.09492                 3002.18290
#             standard error       400.18311                   21.86371
#       99% confidence level      1030.87168                   56.32092
#                       skew         7.42179                    0.84388
#                   kurtosis        73.09762                   -0.01306
#           time correlation         4.43291                    0.52213
#
#               elapsed time        20.00435
#                   run time        17.10997
#          getnsecs overhead      1399
#
#          number of samples     24603
#         number of outliers      5748
#    number of final samples     18855
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          322252 |*                                  322469.16667
#                  7          322717 |*                                  322959.42857
#                  6          323182 |*                                  323435.83333
#                 10          323647 |*                                  323842.60000
#                 15          324112 |*                                  324392.33333
#                 12          324577 |*                                  324802.50000
#                 12          325042 |*                                  325344.08333
#                 21          325507 |*                                  325759.52381
#                 25          325972 |*                                  326238.40000
#                 41          326437 |*                                  326635.39024
#                260          326902 |****                               327217.01154
#                885          327367 |**************                     327627.44972
#                894          327832 |**************                     328047.75280
#               1226          328297 |*******************                328555.49266
#               1993          328762 |********************************   329010.46663
#               1919          329227 |******************************     329444.84992
#               1566          329692 |*************************          329928.91507
#               1497          330157 |************************           330407.97796
#               1161          330622 |******************                 330849.81481
#                877          331087 |**************                     331284.07754
#                682          331552 |**********                         331774.80059
#                447          332017 |*******                            332245.73154
#                409          332482 |******                             332691.55501
#                432          332947 |******                             333177.05787
#                373          333412 |*****                              333652.26005
#                416          333877 |******                             334099.95192
#                545          334342 |********                           334566.59633
#                507          334807 |********                           335050.56016
#                501          335272 |********                           335483.13772
#                440          335737 |*******                            335940.77727
#                421          336202 |******                             336410.76010
#                300          336667 |****                               336883.45333
#
#                943           > 95% |***************                    338336.80276
#
#        mean of 95%    330859.81510
#          95th %ile          337103
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
            prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_usr   1   1          352952        17343        0        1     2     y
# bin/../bin-riscv64/chdir -N chgetwd_usr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -g /var/tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.6465/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    334303                     343453
#                        max  14088473                     364253
#                       mean    381362.07964               353845.13343
#                     median    354603                     352952*
#                     stddev    126862.56781                 3474.74572
#             standard error       836.90736                   26.38523
#       99% confidence level      2155.87335                   67.96836
#                       skew        56.90127                    0.73597
#                   kurtosis      5938.45140                    0.00899
#           time correlation         6.69238                    0.66439
#
#               elapsed time        20.00358
#                   run time        17.39864
#          getnsecs overhead      1399
#
#          number of samples     22978
#         number of outliers      5635
#    number of final samples     17343
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          343453 |*                                  343689.91667
#                 12          343991 |*                                  344240.16667
#                 17          344529 |*                                  344843.58824
#                  9          345067 |*                                  345330.44444
#                 11          345605 |*                                  345825.27273
#                 20          346143 |*                                  346480.00000
#                 19          346681 |*                                  346926.31579
#                 37          347219 |*                                  347543.13514
#                 38          347757 |*                                  348069.65789
#                115          348295 |**                                 348582.17391
#                312          348833 |******                             349153.57692
#                677          349371 |*************                      349671.07533
#                916          349909 |*****************                  350200.39847
#               1270          350447 |************************           350700.60394
#               1629          350985 |*******************************    351256.24248
#               1632          351523 |********************************   351801.97243
#               1210          352061 |***********************            352315.63140
#               1114          352599 |*********************              352847.21544
#               1104          353137 |*********************              353390.12047
#                767          353675 |***************                    353938.07432
#                593          354213 |***********                        354469.73693
#                604          354751 |***********                        354986.51159
#                600          355289 |***********                        355556.46167
#                522          355827 |**********                         356111.32375
#                528          356365 |**********                         356631.11932
#                520          356903 |**********                         357150.29038
#                517          357441 |**********                         357685.26306
#                468          357979 |*********                          358252.60897
#                386          358517 |*******                            358797.79016
#                284          359055 |*****                              359299.89085
#                276          359593 |*****                              359845.30435
#                256          360131 |*****                              360393.94141
#
#                868           > 95% |*****************                  362091.52304
#
#        mean of 95%    353410.66507
#          95th %ile          360652
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
              prc thr      nsecs/call      samples   errors cnt/samp 
clock_gettime   1   1            1420        18115        0      676 
# bin/../bin-riscv64/clock_gettime -N clock_gettime -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1355                       1355
#                        max     31290                       1591
#                       mean      1457.86178                 1442.96368
#                     median      1422                       1420*
#                     stddev       262.21038                   49.24731
#             standard error         1.91660                    0.36590
#       99% confidence level         4.93716                    0.94256
#                       skew        83.78221                    1.28147
#                   kurtosis      9093.04395                    0.18876
#           time correlation         0.01197                    0.00802
#
#               elapsed time        20.00430
#                   run time        18.41399
#          getnsecs overhead      1399
#
#          number of samples     18717
#         number of outliers       602
#    number of final samples     18115
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11            1355 |*                                    1357.63636
#                 13            1361 |*                                    1362.69231
#                 19            1367 |*                                    1368.78947
#                 12            1373 |*                                    1375.91667
#                 16            1379 |*                                    1381.37500
#                  8            1385 |*                                    1388.25000
#                 11            1391 |*                                    1393.72727
#                 11            1397 |*                                    1399.72727
#               2043            1403 |***********                          1406.15663
#               5871            1409 |********************************     1410.03117
#               1075            1415 |*****                                1417.27721
#               1684            1421 |*********                            1423.83967
#               1682            1427 |*********                            1428.97622
#                675            1433 |***                                  1435.17630
#                326            1439 |*                                    1441.10736
#                168            1445 |*                                    1447.49405
#                109            1451 |*                                    1453.44954
#                 54            1457 |*                                    1459.07407
#                 32            1463 |*                                    1465.03125
#                 21            1469 |*                                    1471.85714
#                 16            1475 |*                                    1477.00000
#                 20            1481 |*                                    1482.55000
#                 12            1487 |*                                    1489.66667
#                 62            1493 |*                                    1496.19355
#                404            1499 |**                                   1502.36881
#                722            1505 |***                                  1507.21330
#                364            1511 |*                                    1513.45055
#                501            1517 |**                                   1519.68463
#                515            1523 |**                                   1525.36505
#                350            1529 |*                                    1531.26857
#                245            1535 |*                                    1537.50204
#                157            1541 |*                                    1542.52866
#
#                906           > 95% |****                                 1562.70199
#
#        mean of 95%      1436.65983
#          95th %ile            1545
#
# Usage: clock_gettime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_gettime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures clock_gettime(CLOCK_REALTIME)
                prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep   1   1         3858821         4825        0        1        1      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    769705                    3016817
#                        max   8201443                    4714825
#                       mean   3866006.19588              3864661.37016
#                     median   3859321                    3858821*
#                     stddev    419581.89769               283405.66003
#             standard error      5934.97122                 4079.99716
#       99% confidence level     15288.48585                10510.07268
#                       skew        -0.21273                    0.17826
#                   kurtosis        16.37798                    0.58848
#           time correlation       236.77025                  194.17101
#
#               elapsed time        20.01182
#                   run time        19.33206
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       173
#    number of final samples      4825
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12         3016817 |*                                 3036183.41667
#                 10         3058721 |*                                 3077427.00000
#                 13         3100625 |*                                 3125078.76923
#                 22         3142529 |*                                 3161230.90909
#                 24         3184433 |*                                 3201309.08333
#                 28         3226337 |*                                 3246928.28571
#                 42         3268241 |**                                3287384.66667
#                 35         3310145 |**                                3330312.48571
#                 50         3352049 |***                               3373270.48000
#                 58         3393953 |***                               3415260.05172
#                 60         3435857 |***                               3457082.18333
#                 98         3477761 |******                            3499405.77551
#                142         3519665 |*********                         3539960.82394
#                196         3561569 |************                      3581758.80612
#                188         3603473 |************                      3623955.88298
#                190         3645377 |************                      3666553.61579
#                191         3687281 |************                      3708055.79581
#                235         3729185 |***************                   3752274.41277
#                345         3771089 |**********************            3794031.58841
#                419         3812993 |***************************       3833906.47733
#                485         3854897 |********************************  3874935.64536
#                396         3896801 |**************************        3918106.32576
#                244         3938705 |****************                  3958667.36066
#                191         3980609 |************                      4000000.17801
#                148         4022513 |*********                         4043422.57432
#                155         4064417 |**********                        4085159.52258
#                102         4106321 |******                            4126686.07843
#                120         4148225 |*******                           4171268.29167
#                136         4190129 |********                          4211158.08088
#                111         4232033 |*******                           4252181.52252
#                 91         4273937 |******                            4293695.69231
#                 46         4315841 |***                               4336262.47826
#
#                242           > 95% |***************                   4517626.37190
#
#        mean of 95%   3830182.31050
#          95th %ile         4357724
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                    prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d10   1   1         3833720         4820        0        1       10      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    917106                    3021716
#                        max   7267538                    4650725
#                       mean   3843702.49400              3836246.12137
#                     median   3835820                    3833720*
#                     stddev    373011.92440               271573.93598
#             standard error      5277.29657                 3911.69124
#       99% confidence level     13594.31595                10076.51664
#                       skew        -0.22300                    0.09104
#                   kurtosis        12.33344                    0.59187
#           time correlation       220.21355                  186.63876
#
#               elapsed time        20.01133
#                   run time        19.21430
#          getnsecs overhead      1399
#
#          number of samples      4996
#         number of outliers       176
#    number of final samples      4820
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3021716 |*                                 3041652.42857
#                 14         3061532 |*                                 3078195.50000
#                 12         3101348 |*                                 3118783.83333
#                 23         3141164 |*                                 3163756.65217
#                 24         3180980 |*                                 3201401.08333
#                 34         3220796 |**                                3244111.82353
#                 38         3260612 |***                               3282439.02632
#                 45         3300428 |***                               3323158.17778
#                 48         3340244 |***                               3359041.25000
#                 52         3380060 |****                              3399708.94231
#                 68         3419876 |*****                             3439739.35294
#                 63         3459692 |*****                             3481795.20635
#                149         3499508 |************                      3520408.44966
#                150         3539324 |************                      3558954.06000
#                170         3579140 |**************                    3599851.35882
#                202         3618956 |****************                  3640792.07921
#                213         3658772 |*****************                 3680219.54460
#                254         3698588 |*********************             3720117.86614
#                319         3738404 |**************************        3757694.07210
#                386         3778220 |********************************  3797571.12953
#                375         3818036 |*******************************   3838215.20000
#                349         3857852 |****************************      3878472.34097
#                351         3897668 |*****************************     3916511.54416
#                232         3937484 |*******************               3955852.89224
#                196         3977300 |****************                  3995696.12245
#                143         4017116 |***********                       4037967.30070
#                142         4056932 |***********                       4075602.34507
#                135         4096748 |***********                       4116777.11111
#                126         4136564 |**********                        4156401.54762
#                 90         4176380 |*******                           4195869.36667
#                 87         4216196 |*******                           4235991.81609
#                 75         4256012 |******                            4273093.74667
#
#                241           > 95% |*******************               4448906.96266
#
#        mean of 95%   3804000.81393
#          95th %ile         4295824
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                     prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d100   1   1         2834016         3716        0        1      100      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    344903                     344903
#                        max   6498035                    5900132
#                       mean   2779099.52955              2773449.50161
#                     median   2838616                    2834016*
#                     stddev   1056777.31117              1048185.73023
#             standard error     17321.89079                17194.92914
#       99% confidence level     44621.19067                44294.13746
#                       skew        -0.08352                   -0.13037
#                   kurtosis        -0.42848                   -0.54722
#           time correlation       969.99644                  965.56462
#
#               elapsed time        20.00698
#                   run time        10.35188
#          getnsecs overhead      1399
#
#          number of samples      3722
#         number of outliers         6
#    number of final samples      3716
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 24          344903 |****                               422844.79167
#                 49          471295 |*********                          540199.57143
#                 58          597687 |**********                         658445.84483
#                 49          724079 |*********                          788168.36735
#                 42          850471 |*******                            912098.47619
#                 29          976863 |*****                             1042992.86207
#                 52         1103255 |*********                         1169728.19231
#                 43         1229647 |********                          1292109.95349
#                 71         1356039 |*************                     1422894.25352
#                118         1482431 |*********************             1546358.95763
#                135         1608823 |*************************         1669864.40000
#                121         1735215 |**********************            1796499.58678
#                119         1861607 |**********************            1925403.42017
#                124         1987999 |***********************           2050122.12903
#                124         2114391 |***********************           2179130.84677
#                168         2240783 |*******************************   2303984.30952
#                145         2367175 |**************************        2425805.30345
#                134         2493567 |************************          2554585.11940
#                144         2619959 |**************************        2679690.58333
#                160         2746351 |*****************************     2809970.25625
#                169         2872743 |*******************************   2937668.27811
#                162         2999135 |******************************    3058289.64815
#                172         3125527 |********************************  3185667.48837
#                153         3251919 |****************************      3321086.15686
#                146         3378311 |***************************       3443281.76712
#                130         3504703 |************************          3569192.50000
#                158         3631095 |*****************************     3693188.41139
#                164         3757487 |******************************    3819746.99390
#                130         3883879 |************************          3950702.13846
#                 95         4010271 |*****************                 4075956.80000
#                 69         4136663 |************                      4197818.34783
#                 73         4263055 |*************                     4315141.12329
#
#                186           > 95% |**********************************  4737687.29032
#
#        mean of 95%   2669951.41983
#          95th %ile         4389424
#
# WARNINGS
#     Actual benchmark run time only accounts for 51.7% of elapsed time.
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                      prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d1000   1   1         3849721         4719        0        1     1000      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    922006                    3130417
#                        max   6723836                    4591825
#                       mean   3865594.17247              3860565.45878
#                     median   3851521                    3849721*
#                     stddev    363295.37179               244963.97590
#             standard error      5138.80028                 3565.96629
#       99% confidence level     13237.54953                 9185.92917
#                       skew        -0.29963                    0.12253
#                   kurtosis        11.06074                    0.58529
#           time correlation       214.11038                  171.62157
#
#               elapsed time        20.01396
#                   run time        19.33122
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       279
#    number of final samples      4719
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15         3130417 |*                                 3149177.26667
#                 23         3166861 |*                                 3187447.82609
#                 19         3203305 |*                                 3222280.52632
#                 17         3239749 |*                                 3256123.70588
#                 22         3276193 |*                                 3298413.45455
#                 19         3312637 |*                                 3328528.63158
#                 28         3349081 |**                                3371429.03571
#                 40         3385525 |**                                3406061.15000
#                 56         3421969 |****                              3441718.69643
#                 59         3458413 |****                              3475920.66102
#                 78         3494857 |*****                             3514113.98718
#                106         3531301 |*******                           3549609.97170
#                135         3567745 |*********                         3586974.34074
#                133         3604189 |*********                         3622200.09774
#                178         3640633 |*************                     3658719.33146
#                184         3677077 |*************                     3696813.01630
#                238         3713521 |*****************                 3732786.25210
#                304         3749965 |**********************            3768474.79934
#                385         3786409 |****************************      3805098.55325
#                436         3822853 |********************************  3840625.40367
#                380         3859297 |***************************       3878135.77368
#                305         3895741 |**********************            3913403.51803
#                252         3932185 |******************                3948629.73810
#                182         3968629 |*************                     3986380.93407
#                174         4005073 |************                      4024412.02874
#                161         4041517 |***********                       4059583.42857
#                136         4077961 |*********                         4095794.22794
#                105         4114405 |*******                           4132516.55238
#                 88         4150849 |******                            4166606.64773
#                103         4187293 |*******                           4204104.26214
#                 54         4223737 |***                               4242848.87037
#                 68         4260181 |****                              4278793.67647
#
#                236           > 95% |*****************                 4419101.36441
#
#        mean of 95%   3831162.27482
#          95th %ile         4296623
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                       prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d10000   1   1         3850621         4815        0        1    10000      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d10000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 10000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    916406                    3051316
#                        max   6533135                    4653425
#                       mean   3850214.44698              3851945.23801
#                     median   3850621                    3850621*
#                     stddev    361613.40103               267622.77645
#             standard error      5115.00886                 3856.78053
#       99% confidence level     13176.26284                 9935.06665
#                       skew        -0.38905                    0.13406
#                   kurtosis        10.40324                    0.63752
#           time correlation       215.88738                  183.71950
#
#               elapsed time        20.01070
#                   run time        19.25403
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       183
#    number of final samples      4815
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 16         3051316 |*                                 3074129.25000
#                 11         3091045 |*                                 3117371.81818
#                 13         3130774 |*                                 3143425.30769
#                 27         3170503 |**                                3188554.37037
#                 19         3210232 |*                                 3235470.47368
#                 28         3249961 |**                                3268171.46429
#                 32         3289690 |**                                3311855.62500
#                 47         3329419 |***                               3349746.02128
#                 49         3369148 |***                               3389700.06122
#                 63         3408877 |****                              3428071.04762
#                 87         3448606 |******                            3467993.57471
#                105         3488335 |********                          3508588.62857
#                126         3528064 |*********                         3548865.34127
#                165         3567793 |************                      3588266.23030
#                187         3607522 |**************                    3628001.54011
#                168         3647251 |************                      3669095.52381
#                229         3686980 |*****************                 3707207.93450
#                271         3726709 |********************              3747050.99631
#                311         3766438 |***********************           3788388.74920
#                415         3806167 |********************************  3826241.24096
#                404         3845896 |*******************************   3865774.93812
#                368         3885625 |****************************      3905423.07065
#                301         3925354 |***********************           3943938.64120
#                213         3965083 |****************                  3983056.28169
#                184         4004812 |**************                    4023854.95652
#                187         4044541 |**************                    4064288.83422
#                131         4084270 |**********                        4105322.23664
#                138         4123999 |**********                        4141914.42029
#                 92         4163728 |*******                           4183133.48913
#                 79         4203457 |******                            4222449.41772
#                 51         4243186 |***                               4263966.15686
#                 57         4282915 |****                              4299453.00000
#
#                241           > 95% |******************                4474380.97925
#
#        mean of 95%   3819149.65129
#          95th %ile         4322623
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_m   1   1         3857921         4841        0        1        1      rel     mono        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    993606                    2988116
#                        max   8094642                    4739526
#                       mean   3864889.05083              3862619.78021
#                     median   3859021                    3857921*
#                     stddev    397022.59272               292677.12248
#             standard error      5616.43253                 4206.50331
#       99% confidence level     14467.93021                10835.95253
#                       skew        -0.14652                    0.22870
#                   kurtosis        13.23473                    0.60336
#           time correlation       233.71097                  200.17334
#
#               elapsed time        20.01215
#                   run time        19.32342
#          getnsecs overhead      1399
#
#          number of samples      4997
#         number of outliers       156
#    number of final samples      4841
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12         2988116 |*                                 3006341.50000
#                 10         3031576 |*                                 3049366.50000
#                 13         3075036 |*                                 3096324.61538
#                 13         3118496 |*                                 3140740.38462
#                 27         3161956 |**                                3183409.88889
#                 29         3205416 |**                                3224365.82759
#                 37         3248876 |**                                3273136.83784
#                 44         3292336 |***                               3316670.40909
#                 44         3335796 |***                               3357357.06818
#                 57         3379256 |****                              3401022.00000
#                 72         3422716 |*****                             3444788.23611
#                119         3466176 |*********                         3488511.47059
#                130         3509636 |*********                         3533110.76923
#                171         3553096 |*************                     3575776.45614
#                221         3596556 |****************                  3620835.52941
#                218         3640016 |****************                  3661196.51835
#                227         3683476 |*****************                 3704746.55507
#                291         3726936 |**********************            3750260.26117
#                327         3770396 |************************          3793752.11009
#                355         3813856 |***************************       3836076.87887
#                419         3857316 |********************************  3879254.68019
#                379         3900776 |****************************      3921148.43272
#                274         3944236 |********************              3966445.21168
#                199         3987696 |***************                   4008469.37688
#                187         4031156 |**************                    4052660.43850
#                123         4074616 |*********                         4095563.59350
#                147         4118076 |***********                       4139746.90476
#                135         4161536 |**********                        4181022.57778
#                120         4204996 |*********                         4228352.87500
#                 83         4248456 |******                            4269629.08434
#                 74         4291916 |*****                             4312427.35135
#                 41         4335376 |***                               4355979.53659
#
#                243           > 95% |******************                4552199.39506
#
#        mean of 95%   3826176.14245
#          95th %ile         4378823
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_mr   1   1         3828820         4799        0        1        1      rel     mono       yes     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_mr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -m -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    764605                    3019617
#                        max   6785836                    4645925
#                       mean   3838108.25821              3832344.39592
#                     median   3831121                    3828820*
#                     stddev    389207.11947               272572.67113
#             standard error      5506.42288                 3934.65751
#       99% confidence level     14184.54534                10135.67774
#                       skew        -0.19553                    0.06826
#                   kurtosis        13.34626                    0.45188
#           time correlation       227.33078                  188.98560
#
#               elapsed time        20.01001
#                   run time        19.18514
#          getnsecs overhead      1399
#
#          number of samples      4996
#         number of outliers       197
#    number of final samples      4799
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7         3019617 |*                                 3046816.85714
#                 13         3059386 |*                                 3076570.76923
#                 21         3099155 |*                                 3119050.52381
#                 24         3138924 |*                                 3157800.75000
#                 26         3178693 |**                                3196748.11538
#                 33         3218462 |**                                3238311.72727
#                 28         3258231 |**                                3279050.03571
#                 36         3298000 |**                                3321584.80556
#                 56         3337769 |****                              3358698.60714
#                 54         3377538 |****                              3400888.81481
#                 97         3417307 |*******                           3436945.50515
#                102         3457076 |********                          3478301.35294
#                129         3496845 |**********                        3518522.35659
#                154         3536614 |************                      3556647.93506
#                173         3576383 |*************                     3596174.51445
#                167         3616152 |*************                     3634875.98802
#                204         3655921 |****************                  3676220.48529
#                244         3695690 |*******************               3716357.90574
#                279         3735459 |**********************            3755761.98925
#                402         3775228 |********************************  3796194.20647
#                393         3814997 |*******************************   3834166.35369
#                366         3854766 |*****************************     3874946.95902
#                263         3894535 |********************              3914341.75665
#                248         3934304 |*******************               3953898.46774
#                222         3974073 |*****************                 3991935.13063
#                174         4013842 |*************                     4033831.60345
#                136         4053611 |**********                        4072639.69118
#                125         4093380 |*********                         4111646.26400
#                108         4133149 |********                          4152083.50000
#                119         4172918 |*********                         4191033.48739
#                101         4212687 |********                          4232700.08911
#                 55         4252456 |****                              4271763.03636
#
#                240           > 95% |*******************               4439398.05000
#
#        mean of 95%   3800387.19544
#          95th %ile         4292223
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_ms   1   1         3859221         4827        0        1        1      rel     mono        no  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_ms -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -m -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    858105                    3025317
#                        max   6725636                    4687825
#                       mean   3858195.35121              3858890.39424
#                     median   3859621                    3859221*
#                     stddev    386200.05469               278288.51139
#             standard error      5463.33280                 4005.49901
#       99% confidence level     14073.54529                10318.16544
#                       skew        -0.57873                    0.06626
#                   kurtosis        11.73465                    0.52806
#           time correlation       226.86162                  191.08443
#
#               elapsed time        20.00896
#                   run time        19.29003
#          getnsecs overhead      1399
#
#          number of samples      4997
#         number of outliers       170
#    number of final samples      4827
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3025317 |*                                 3042745.28571
#                 19         3066577 |*                                 3087722.15789
#                 18         3107837 |*                                 3126161.50000
#                 17         3149097 |*                                 3171440.82353
#                 21         3190357 |*                                 3207531.95238
#                 28         3231617 |**                                3253021.35714
#                 36         3272877 |**                                3294007.00000
#                 44         3314137 |***                               3335274.97727
#                 55         3355397 |****                              3376713.05455
#                 54         3396657 |****                              3419074.16667
#                 90         3437917 |******                            3461444.44444
#                 97         3479177 |*******                           3501830.49485
#                127         3520437 |*********                         3541819.37008
#                159         3561697 |************                      3582766.71069
#                179         3602957 |*************                     3624547.93855
#                181         3644217 |*************                     3665037.62431
#                225         3685477 |*****************                 3706679.71556
#                276         3726737 |*********************             3746608.07971
#                297         3767997 |**********************            3789620.51178
#                385         3809257 |*****************************     3829361.51948
#                406         3850517 |*******************************   3871601.05419
#                417         3891777 |********************************  3912534.64269
#                329         3933037 |*************************         3952281.91185
#                191         3974297 |**************                    3993228.42408
#                153         4015557 |***********                       4036727.15686
#                163         4056817 |************                      4076326.36196
#                145         4098077 |***********                       4119038.89655
#                148         4139337 |***********                       4158637.40541
#                 82         4180597 |******                            4201872.67073
#                 94         4221857 |*******                           4242831.44681
#                 83         4263117 |******                            4283279.75904
#                 52         4304377 |***                               4323592.42308
#
#                242           > 95% |******************                4486073.77686
#
#        mean of 95%   3825787.14918
#          95th %ile         4345623
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                    prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_msr   1   1         3818920         4844        0        1        1      rel     mono       yes  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_msr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -m -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    757105                    3007417
#                        max   8387544                    4683425
#                       mean   3850053.24264              3843963.50846
#                     median   3820421                    3818920*
#                     stddev    378670.88948               280688.40784
#             standard error      5357.89469                 4032.94603
#       99% confidence level     13801.93673                10388.86896
#                       skew         0.27703                    0.22997
#                   kurtosis        16.28518                    0.51939
#           time correlation       222.44319                  191.89917
#
#               elapsed time        20.01050
#                   run time        19.24178
#          getnsecs overhead      1399
#
#          number of samples      4995
#         number of outliers       151
#    number of final samples      4844
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10         3007417 |*                                 3031226.70000
#                 19         3049443 |*                                 3072058.89474
#                 12         3091469 |*                                 3121067.08333
#                 22         3133495 |*                                 3154521.77273
#                 27         3175521 |**                                3197436.07407
#                 28         3217547 |**                                3237674.89286
#                 30         3259573 |**                                3280297.86667
#                 34         3301599 |**                                3320918.23529
#                 48         3343625 |***                               3363985.00000
#                 50         3385651 |***                               3406336.54000
#                 71         3427677 |*****                             3449097.61972
#                109         3469703 |********                          3490159.39450
#                107         3511729 |********                          3534864.19626
#                171         3553755 |************                      3574748.72515
#                212         3595781 |***************                   3618016.84906
#                267         3637807 |*******************               3658120.28090
#                338         3679833 |*************************         3700436.40237
#                317         3721859 |***********************           3743507.72555
#                428         3763885 |********************************  3785720.30140
#                354         3805911 |**************************        3825492.23729
#                336         3847937 |*************************         3870132.87798
#                322         3889963 |************************          3910151.31677
#                227         3931989 |****************                  3952542.57709
#                178         3974015 |*************                     3992759.32584
#                143         4016041 |**********                        4035762.41259
#                131         4058067 |*********                         4078880.06107
#                147         4100093 |**********                        4120587.59864
#                137         4142119 |**********                        4163395.52555
#                 95         4184145 |*******                           4202989.00000
#                 95         4226171 |*******                           4246906.11579
#                 83         4268197 |******                            4287911.15663
#                 53         4310223 |***                               4328300.62264
#
#                243           > 95% |******************                4489913.48148
#
#        mean of 95%   3809847.91545
#          95th %ile         4352223
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_r   1   1         3850121         4846        0        1        1      rel     real       yes     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    907306                    3011216
#                        max   6447335                    4718925
#                       mean   3864693.24890              3864440.35390
#                     median   3850421                    3850121*
#                     stddev    361914.89709               284862.33038
#             standard error      5119.27352                 4092.07248
#       99% confidence level     13187.24858                10541.17872
#                       skew        -0.37740                    0.17906
#                   kurtosis         9.09295                    0.88944
#           time correlation       218.88530                  192.36553
#
#               elapsed time        20.01171
#                   run time        19.32577
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       152
#    number of final samples      4846
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 18         3011216 |*                                 3030402.66667
#                 19         3054148 |*                                 3080179.94737
#                 19         3097080 |*                                 3118617.21053
#                 22         3140012 |*                                 3161208.13636
#                 23         3182944 |*                                 3202691.65217
#                 30         3225876 |**                                3246871.03333
#                 36         3268808 |**                                3290520.75000
#                 41         3311740 |**                                3333932.90244
#                 52         3354672 |***                               3378187.69231
#                 51         3397604 |***                               3417530.35294
#                 60         3440536 |****                              3461207.20000
#                 81         3483468 |*****                             3505666.06173
#                113         3526400 |*******                           3550816.64602
#                168         3569332 |***********                       3592424.92857
#                189         3612264 |************                      3636443.07407
#                234         3655196 |***************                   3677214.84615
#                250         3698128 |****************                  3721471.77600
#                327         3741060 |**********************            3763345.17125
#                473         3783992 |********************************  3805682.15856
#                398         3826924 |**************************        3847970.65075
#                405         3869856 |***************************       3891124.29383
#                349         3912788 |***********************           3934052.83954
#                205         3955720 |*************                     3975008.28780
#                204         3998652 |*************                     4020684.50000
#                175         4041584 |***********                       4062754.54857
#                157         4084516 |**********                        4105067.39490
#                142         4127448 |*********                         4148375.26761
#                123         4170380 |********                          4190313.59350
#                 87         4213312 |*****                             4230669.96552
#                 57         4256244 |***                               4279312.57895
#                 55         4299176 |***                               4322465.03636
#                 40         4342108 |**                                4360008.60000
#
#                243           > 95% |****************                  4544212.54321
#
#        mean of 95%   3828554.05323
#          95th %ile         4385023
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_s   1   1         2554714         3489        0        1        1      rel     real        no  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_s -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    245802                     245802
#                        max   6432934                    5755631
#                       mean   2616867.44187              2613797.65205
#                     median   2557315                    2554714*
#                     stddev   1105849.34437              1101342.73155
#             standard error     18713.66485                18645.41290
#       99% confidence level     48206.40065                48030.58364
#                       skew         0.13202                    0.11261
#                   kurtosis        -0.54501                   -0.59761
#           time correlation      1084.84464                 1082.36170
#
#               elapsed time        20.01310
#                   run time         9.14610
#          getnsecs overhead      1399
#
#          number of samples      3492
#         number of outliers         3
#    number of final samples      3489
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 16          245802 |***                                334227.62500
#                 40          376659 |*******                            443965.65000
#                 44          507516 |********                           569204.00000
#                 66          638373 |************                       707516.83333
#                 55          769230 |**********                         833683.49091
#                 55          900087 |**********                         962755.07273
#                 86         1030944 |****************                  1095914.75581
#                103         1161801 |*******************               1226405.42718
#                 81         1292658 |***************                   1357067.27160
#                 87         1423515 |****************                  1492510.97701
#                 94         1554372 |*****************                 1628373.18085
#                125         1685229 |***********************           1753758.84800
#                153         1816086 |****************************      1879360.39216
#                169         1946943 |********************************  2016387.16568
#                153         2077800 |****************************      2141489.82353
#                155         2208657 |*****************************     2267263.69677
#                168         2339514 |*******************************   2408355.15476
#                134         2470371 |*************************         2531760.29851
#                135         2601228 |*************************         2663073.23704
#                124         2732085 |***********************           2795644.48387
#                140         2862942 |**************************        2921023.87143
#                133         2993799 |*************************         3058105.87218
#                120         3124656 |**********************            3194154.99167
#                148         3255513 |****************************      3323555.29730
#                124         3386370 |***********************           3452588.16129
#                141         3517227 |**************************        3579225.14184
#                101         3648084 |*******************               3713715.17822
#                 84         3778941 |***************                   3843737.48810
#                 49         3909798 |*********                         3966301.10204
#                 77         4040655 |**************                    4115807.89610
#                 74         4171512 |**************                    4228536.39189
#                 80         4302369 |***************                   4365548.63750
#
#                175           > 95% |*********************************  4804650.96000
#
#        mean of 95%   2498106.84671
#          95th %ile         4433224
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.7% of elapsed time.
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_sr   1   1         3865221         4785        0        1        1      rel     real       yes  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_sr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    752805                    3077217
#                        max  12761567                    4667025
#                       mean   3879974.79840              3871785.63678
#                     median   3866721                    3865221*
#                     stddev    437869.36519               265294.31813
#             standard error      6198.60966                 3835.19082
#       99% confidence level     15967.61848                 9879.45156
#                       skew         3.71715                    0.07794
#                   kurtosis        81.88379                    0.46252
#           time correlation       230.50697                  184.68490
#
#               elapsed time        20.01156
#                   run time        19.37082
#          getnsecs overhead      1399
#
#          number of samples      4990
#         number of outliers       205
#    number of final samples      4785
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13         3077217 |*                                 3094678.53846
#                 16         3116324 |*                                 3136386.12500
#                 17         3155431 |*                                 3178028.88235
#                 20         3194538 |*                                 3213902.55000
#                 24         3233645 |*                                 3256463.70833
#                 24         3272752 |*                                 3290201.29167
#                 24         3311859 |*                                 3334851.45833
#                 40         3350966 |***                               3371900.90000
#                 46         3390073 |***                               3406092.54348
#                 59         3429180 |****                              3448847.62712
#                 84         3468287 |******                            3488347.54762
#                111         3507394 |********                          3527576.93694
#                150         3546501 |************                      3565959.40000
#                168         3585608 |*************                     3605146.42857
#                163         3624715 |*************                     3645995.88957
#                186         3663822 |**************                    3685750.16129
#                223         3702929 |*****************                 3722528.30045
#                260         3742036 |********************              3762743.83846
#                304         3781143 |************************          3801790.07237
#                399         3820250 |********************************  3839478.22556
#                389         3859357 |*******************************   3877922.84576
#                290         3898464 |***********************           3917548.15862
#                241         3937571 |*******************               3956177.01660
#                241         3976678 |*******************               3996751.56432
#                250         4015785 |********************              4034871.01200
#                179         4054892 |**************                    4073772.88827
#                137         4093999 |**********                        4112314.22628
#                155         4133106 |************                      4153027.51613
#                121         4172213 |*********                         4190457.28926
#                 75         4211320 |******                            4227242.84000
#                 75         4250427 |******                            4268413.68000
#                 61         4289534 |****                              4307024.96721
#
#                240           > 95% |*******************               4463445.73750
#
#        mean of 95%   3840542.85919
#          95th %ile         4328623
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
          prc thr      nsecs/call      samples   errors cnt/samp 
close_bad   1   1            3566          543        0     7500 
# bin/../bin-riscv64/close -N close_bad -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 7500 -b 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      3418                       3418
#                        max     10449                       7260
#                       mean      4212.21284                 4191.47330
#                     median      3566                       3566*
#                     stddev      1105.61887                 1052.67388
#             standard error        47.35951                   45.17456
#       99% confidence level       121.99810                  116.36967
#                       skew         1.38898                    1.08995
#                   kurtosis         1.49652                   -0.65575
#           time correlation         5.70464                    5.53785
#
#               elapsed time        20.03264
#                   run time        17.21829
#          getnsecs overhead      1399
#
#          number of samples       545
#         number of outliers         2
#    number of final samples       543
#             ops per sample      7500.00000 (-B 7500)
#
#       recommended -B value       239
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                120            3418 |*********************                3469.11667
#                178            3501 |********************************     3534.49438
#                 49            3584 |********                             3621.14286
#                 19            3667 |***                                  3701.63158
#                 11            3750 |*                                    3796.36364
#                  1            3833 |*                                    3865.00000
#                  4            3916 |*                                    3946.00000
#                  6            3999 |*                                    4022.16667
#                  2            4082 |*                                    4118.00000
#                  3            4165 |*                                    4199.66667
#                  2            4248 |*                                    4316.50000
#                  3            4331 |*                                    4378.66667
#                  2            4414 |*                                    4477.00000
#                  0            4497 |                                              -
#                  0            4580 |                                              -
#                  2            4663 |*                                    4700.50000
#                  0            4746 |                                              -
#                  2            4829 |*                                    4850.00000
#                  1            4912 |*                                    4949.00000
#                  0            4995 |                                              -
#                  2            5078 |*                                    5122.50000
#                  0            5161 |                                              -
#                  1            5244 |*                                    5324.00000
#                  1            5327 |*                                    5399.00000
#                  1            5410 |*                                    5481.00000
#                  0            5493 |                                              -
#                  0            5576 |                                              -
#                  1            5659 |*                                    5675.00000
#                 15            5742 |**                                   5790.80000
#                 37            5825 |******                               5866.08108
#                 26            5908 |****                                 5944.46154
#                 26            5991 |****                                 6023.76923
#
#                 28           > 95% |*****                                6229.07143
#
#        mean of 95%      4080.69126
#          95th %ile            6064
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
          prc thr      nsecs/call      samples   errors cnt/samp 
close_tmp   1   1            7979           36        0     2600 
# bin/../bin-riscv64/close -N close_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 2600 -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      7630                       7630
#                        max     11855                      11855
#                       mean      8231.61111                 8231.61111
#                     median      7979                       7979*
#                     stddev       809.87570                  809.87570
#             standard error       134.97928                  134.97928
#       99% confidence level       347.70663                  347.70663
#                       skew         3.05977                    3.05977
#                   kurtosis         9.69495                    9.69495
#           time correlation        52.00901                   52.00901
#
#               elapsed time        25.62120
#                   run time         0.77053
#          getnsecs overhead      1399
#
#          number of samples        36
#         number of outliers         0
#    number of final samples        36
#             ops per sample      2600.00000 (-B 2600)
#
#       recommended -B value       121
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            7630 |****                                 7630.00000
#                  3            7711 |************                         7762.66667
#                  7            7792 |****************************         7845.28571
#                  5            7873 |********************                 7915.80000
#                  8            7954 |********************************     7989.00000
#                  2            8035 |********                             8080.50000
#                  3            8116 |************                         8147.66667
#                  0            8197 |                                              -
#                  0            8278 |                                              -
#                  1            8359 |****                                 8382.00000
#                  1            8440 |****                                 8498.00000
#                  0            8521 |                                              -
#                  0            8602 |                                              -
#                  0            8683 |                                              -
#                  0            8764 |                                              -
#                  1            8845 |****                                 8878.00000
#                  0            8926 |                                              -
#                  0            9007 |                                              -
#                  1            9088 |****                                 9150.00000
#                  0            9169 |                                              -
#                  0            9250 |                                              -
#                  0            9331 |                                              -
#                  1            9412 |****                                 9437.00000
#
#                  2           > 95% |********                            11031.50000
#
#        mean of 95%      8066.91176
#          95th %ile           10208
#
# WARNINGS
#     Too few samples, 36 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 3.0% of elapsed time.
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
           prc thr      nsecs/call      samples   errors cnt/samp 
close_zero   1   1            8319           48        0     2600 
# bin/../bin-riscv64/close -N close_zero -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 2600 -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8036                       8036
#                        max     17994                       9002
#                       mean      8616.35294                 8349.43750
#                     median      8321                       8319*
#                     stddev      1420.24447                  233.74599
#             standard error       198.87400                   33.73833
#       99% confidence level       512.29944                   86.90993
#                       skew         5.84828                    0.93958
#                   kurtosis        35.19834                    0.26713
#           time correlation        43.46326                   15.76058
#
#               elapsed time        25.40153
#                   run time         1.14260
#          getnsecs overhead      1399
#
#          number of samples        51
#         number of outliers         3
#    number of final samples        48
#             ops per sample      2600.00000 (-B 2600)
#
#       recommended -B value       120
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            8036 |******                               8036.00000
#                  3            8061 |*******************                  8081.00000
#                  4            8086 |*************************            8102.00000
#                  1            8111 |******                               8118.00000
#                  3            8136 |*******************                  8148.00000
#                  4            8161 |*************************            8163.25000
#                  0            8186 |                                              -
#                  0            8211 |                                              -
#                  2            8236 |************                         8241.00000
#                  1            8261 |******                               8267.00000
#                  3            8286 |*******************                  8299.33333
#                  5            8311 |********************************     8321.80000
#                  3            8336 |*******************                  8344.66667
#                  2            8361 |************                         8375.00000
#                  1            8386 |******                               8392.00000
#                  1            8411 |******                               8415.00000
#                  1            8436 |******                               8436.00000
#                  2            8461 |************                         8478.50000
#                  2            8486 |************                         8497.00000
#                  1            8511 |******                               8512.00000
#                  0            8536 |                                              -
#                  1            8561 |******                               8580.00000
#                  1            8586 |******                               8594.00000
#                  0            8611 |                                              -
#                  1            8636 |******                               8657.00000
#                  0            8661 |                                              -
#                  0            8686 |                                              -
#                  0            8711 |                                              -
#                  0            8736 |                                              -
#                  0            8761 |                                              -
#                  2            8786 |************                         8795.50000
#
#                  3           > 95% |*******************                  8901.00000
#
#        mean of 95%      8312.66667
#          95th %ile            8835
#
# WARNINGS
#     Too few samples, 51 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 4.5% of elapsed time.
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
             prc thr      nsecs/call      samples   errors cnt/samp 
conn_connect   1   1          248440          288        0      125 
# bin/../bin-riscv64/connection -N conn_connect -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 125 -c 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    229272                     229272
#                        max   1634188                     676795
#                       mean    346395.94408               311042.73958
#                     median    250112                     248440*
#                     stddev    206827.40998               122866.64271
#             standard error     11862.36551                 7239.98635
#       99% confidence level     30557.45356                18650.20485
#                       skew         3.15273                    1.74246
#                   kurtosis        12.74093                    1.72922
#           time correlation      1661.66592                 1165.63747
#
#               elapsed time        20.25111
#                   run time        13.16347
#          getnsecs overhead      1399
#
#          number of samples       304
#         number of outliers        16
#    number of final samples       288
#             ops per sample       125.00000 (-B 125)
#
#       recommended -B value         3
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                100          229272 |********************************   235887.16000
#                 65          241657 |********************               246480.98462
#                 19          254042 |******                             258548.21053
#                 10          266427 |***                                271882.00000
#                  6          278812 |*                                  283136.33333
#                  4          291197 |*                                  297551.75000
#                  9          303582 |**                                 308841.77778
#                  5          315967 |*                                  323354.60000
#                  7          328352 |**                                 335758.00000
#                  3          340737 |*                                  346178.66667
#                  2          353122 |*                                  358760.50000
#                  2          365507 |*                                  367804.00000
#                  2          377892 |*                                  384803.00000
#                  3          390277 |*                                  395328.66667
#                  1          402662 |*                                  413589.00000
#                  4          415047 |*                                  421147.00000
#                  1          427432 |*                                  431632.00000
#                  0          439817 |                                              -
#                  6          452202 |*                                  461873.66667
#                  2          464587 |*                                  466606.50000
#                  2          476972 |*                                  485743.00000
#                  1          489357 |*                                  495846.00000
#                  0          501742 |                                              -
#                  3          514127 |*                                  520928.66667
#                  1          526512 |*                                  529498.00000
#                  3          538897 |*                                  545743.00000
#                  3          551282 |*                                  557754.66667
#                  2          563667 |*                                  570437.50000
#                  0          576052 |                                              -
#                  4          588437 |*                                  593984.75000
#                  1          600822 |*                                  611422.00000
#                  2          613207 |*                                  622085.00000
#
#                 15           > 95% |****                               651958.46667
#
#        mean of 95%    292311.10623
#          95th %ile          625571
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 65.0% of elapsed time.
#
# Usage: connection
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'connection')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a] (measure accept() only)
#     [-c] (measure connect() only)
# notes: measures connect()/accept()
    prc thr      nsecs/call      samples   errors cnt/samp 
dup   1   1            2158          639        0     5500 
# bin/../bin-riscv64/dup -N dup -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 5500 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2053                       2053
#                        max      7335                       2318
#                       mean      2203.54519                 2160.85759
#                     median      2161                       2158*
#                     stddev       333.28160                   52.26326
#             standard error        12.82801                    2.06750
#       99% confidence level        33.04497                    5.32589
#                       skew        12.40115                    0.50519
#                   kurtosis       173.27733                    0.04204
#           time correlation         0.60369                    0.27500
#
#               elapsed time        20.04524
#                   run time         8.18162
#          getnsecs overhead      1399
#
#          number of samples       675
#         number of outliers        36
#    number of final samples       639
#             ops per sample      5500.00000 (-B 5500)
#
#       recommended -B value       463
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            2053 |*                                    2053.00000
#                  7            2060 |*****                                2063.57143
#                  9            2067 |******                               2069.22222
#                  8            2074 |*****                                2077.00000
#                 18            2081 |*************                        2083.94444
#                 18            2088 |*************                        2091.77778
#                 23            2095 |*****************                    2098.00000
#                 21            2102 |***************                      2104.90476
#                 26            2109 |*******************                  2111.92308
#                 28            2116 |********************                 2118.46429
#                 27            2123 |********************                 2126.03704
#                 28            2130 |********************                 2132.92857
#                 43            2137 |********************************     2140.02326
#                 27            2144 |********************                 2147.14815
#                 31            2151 |***********************              2153.87097
#                 37            2158 |***************************          2160.81081
#                 36            2165 |**************************           2167.83333
#                 28            2172 |********************                 2175.53571
#                 41            2179 |******************************       2181.24390
#                 24            2186 |*****************                    2189.08333
#                 35            2193 |**************************           2196.05714
#                 14            2200 |**********                           2203.00000
#                 18            2207 |*************                        2209.94444
#                 12            2214 |********                             2216.41667
#                 12            2221 |********                             2223.08333
#                  8            2228 |*****                                2230.75000
#                  3            2235 |**                                   2238.33333
#                 14            2242 |**********                           2244.85714
#                  3            2249 |**                                   2251.00000
#                  7            2256 |*****                                2258.14286
#
#                 32           > 95% |***********************              2285.40625
#
#        mean of 95%      2154.29160
#          95th %ile            2260
#
# WARNINGS
#     Actual benchmark run time only accounts for 40.8% of elapsed time.
#
# Usage: dup
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'dup')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-dup (default /dev/null)]
# notes: measures dup()
     prc thr      nsecs/call      samples   errors cnt/samp 
exec   1   1        42671946          505        0        1 
# bin/../bin-riscv64/exec -N exec -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  17372260                   17372260
#                        max  58401699                   58401699
#                       mean  39052334.48119             39052334.48119
#                     median  42671946                   42671946*
#                     stddev   8553845.03323              8553845.03323
#             standard error    380641.10810               380641.10810
#       99% confidence level    980531.49446               980531.49446
#                       skew        -1.10725                   -1.10725
#                   kurtosis         0.33621                    0.33621
#           time correlation     53281.16174                53281.16174
#
#               elapsed time        20.03608
#                   run time        19.76992
#          getnsecs overhead      1399
#
#          number of samples       505
#         number of outliers         0
#    number of final samples       505
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5        17372260 |**                               17740241.20000
#                  4        18310401 |*                                18751439.50000
#                 18        19248542 |*******                          19834379.61111
#                 16        20186683 |******                           20711377.81250
#                 15        21124824 |******                           21424700.53333
#                  4        22062965 |*                                22631628.00000
#                  2        23001106 |*                                23405030.50000
#                  0        23939247 |                                              -
#                  3        24877388 |*                                25511121.00000
#                  1        25815529 |*                                26159791.00000
#                  1        26753670 |*                                27476295.00000
#                  1        27691811 |*                                28485098.00000
#                  2        28629952 |*                                28801449.00000
#                  0        29568093 |                                              -
#                  3        30506234 |*                                31197007.33333
#                  9        31444375 |***                              31915520.66667
#                 11        32382516 |****                             32881758.63636
#                 11        33320657 |****                             33834061.72727
#                 17        34258798 |*******                          34739431.05882
#                 17        35196939 |*******                          35731081.76471
#                 20        36135080 |********                         36437520.05000
#                 13        37073221 |*****                            37508490.38462
#                 17        38011362 |*******                          38425249.47059
#                  8        38949503 |***                              39444160.50000
#                 17        39887644 |*******                          40414897.41176
#                 19        40825785 |********                         41267167.94737
#                 20        41763926 |********                         42237399.80000
#                 37        42702067 |***************                  43286413.16216
#                 75        43640208 |******************************** 44137212.62667
#                 57        44578349 |************************         45014322.71930
#                 35        45516490 |**************                   45919608.80000
#                 21        46454631 |********                         46842684.28571
#
#                 26           > 95% |***********                      50463270.92308
#
#        mean of 95%  38432951.70981
#          95th %ile        47392763
#
# Usage: exec
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exec')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures execv time of simple process()
      prc thr      nsecs/call      samples   errors cnt/samp 
execw   1   1        42529046          515        0        1 
# bin/../bin-riscv64/execw -N execw -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  17473261                   17473261
#                        max  60999108                   60999108
#                       mean  38541405.67767             38541405.67767
#                     median  42529046                   42529046*
#                     stddev   9417010.34432              9417010.34432
#             standard error    414963.05561               414963.05561
#       99% confidence level   1068944.83126              1068944.83126
#                       skew        -0.89545                   -0.89545
#                   kurtosis        -0.32121                   -0.32121
#           time correlation     58594.74167                58594.74167
#
#               elapsed time        20.04712
#                   run time        19.89910
#          getnsecs overhead      1399
#
#          number of samples       515
#         number of outliers         0
#    number of final samples       515
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        17473261 |*                                17548327.66667
#                 13        18425340 |*****                            18950150.15385
#                 18        19377419 |********                         19974102.33333
#                 25        20329498 |***********                      20775691.80000
#                 16        21281577 |*******                          21748400.00000
#                  7        22233656 |***                              22683278.14286
#                  3        23185735 |*                                23420880.66667
#                  2        24137814 |*                                24564335.00000
#                  2        25089893 |*                                25632988.00000
#                  1        26041972 |*                                26962793.00000
#                  2        26994051 |*                                27838796.00000
#                  3        27946130 |*                                28562532.00000
#                  5        28898209 |**                               29489701.80000
#                  0        29850288 |                                              -
#                  5        30802367 |**                               31236307.60000
#                  5        31754446 |**                               32243610.80000
#                  6        32706525 |**                               33346164.50000
#                 12        33658604 |*****                            34129033.91667
#                 20        34610683 |********                         35108120.45000
#                 19        35562762 |********                         36024934.31579
#                 16        36514841 |*******                          36866801.56250
#                 13        37466920 |*****                            37951284.23077
#                 12        38418999 |*****                            38783824.75000
#                  8        39371078 |***                              39992587.25000
#                 16        40323157 |*******                          40802383.81250
#                 20        41275236 |********                         41725148.10000
#                 17        42227315 |*******                          42714940.64706
#                 38        43179394 |****************                 43696999.71053
#                 72        44131473 |******************************** 44612658.51389
#                 49        45083552 |*********************            45517978.55102
#                 39        46035631 |*****************                46475718.25641
#                 22        46987710 |*********                        47409757.90909
#
#                 26           > 95% |***********                      50900974.38462
#
#        mean of 95%  37884250.69530
#          95th %ile        47939765
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_100r   1   1        85915594          233        0        1 
# bin/../bin-riscv64/execw -N execw_100r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  33969317                   44834854
#                        max 115362694                  115362694
#                       mean  83180893.56962             83965274.51073
#                     median  85757993                   85915594*
#                     stddev  14779513.11675             13620053.70129
#             standard error    960032.54157               892279.38528
#       99% confidence level   2473043.82709              2298511.69649
#                       skew        -1.08971                   -0.93388
#                   kurtosis         1.16716                    0.85819
#           time correlation    198504.80118               188350.19067
#
#               elapsed time        20.13458
#                   run time        19.82957
#          getnsecs overhead      1399
#
#          number of samples       237
#         number of outliers         4
#    number of final samples       233
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        44834854 |*****                            45557956.33333
#                  1        46585114 |*                                46855160.00000
#                  0        48335374 |                                              -
#                  9        50085634 |****************                 51004597.11111
#                  2        51835894 |***                              53011181.50000
#                  2        53586154 |***                              54453236.50000
#                  3        55336414 |*****                            55685324.00000
#                  0        57086674 |                                              -
#                  2        58836934 |***                              59623903.50000
#                  0        60587194 |                                              -
#                  1        62337454 |*                                63398417.00000
#                  1        64087714 |*                                64570421.00000
#                  1        65837974 |*                                66838129.00000
#                  0        67588234 |                                              -
#                  2        69338494 |***                              69848139.00000
#                  4        71088754 |*******                          72040696.25000
#                  9        72839014 |****************                 73789541.44444
#                  9        74589274 |****************                 75499380.33333
#                 10        76339534 |*****************                77248844.30000
#                 10        78089794 |*****************                79032240.20000
#                 15        79840054 |**************************       80610082.06667
#                 11        81590314 |*******************              82741519.09091
#                 16        83340574 |****************************     84152018.75000
#                 16        85090834 |****************************     86116394.43750
#                 10        86841094 |*****************                87495898.80000
#                 13        88591354 |***********************          89764298.84615
#                 18        90341614 |******************************** 91004838.83333
#                 10        92091874 |*****************                92902547.40000
#                 11        93842134 |*******************              94559004.81818
#                 14        95592394 |************************         96586958.50000
#                  9        97342654 |****************                 98149779.77778
#                  9        99092914 |****************                 99718073.77778
#
#                 12           > 95% |*********************           105436801.66667
#
#        mean of 95%  82799399.73303
#          95th %ile       100843145
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_1024n   1   1       109160672          161        0        1 
# bin/../bin-riscv64/execw -N execw_1024n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1024 -p 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  40875140                   96790831
#                        max 124771926                  121125814
#                       mean 103280423.76500            109448582.45963
#                     median 108224770                  109160672*
#                     stddev  14885344.26874              4245008.38394
#             standard error   1052552.78727               334553.52820
#       99% confidence level   2711375.98001               861809.88863
#                       skew        -2.04212                   -0.02691
#                   kurtosis         4.24591                    0.67915
#           time correlation    207418.31360                86762.95799
#
#               elapsed time        21.02819
#                   run time        20.77654
#          getnsecs overhead      1399
#
#          number of samples       200
#         number of outliers        39
#    number of final samples       161
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        96790831 |**                               96790831.00000
#                  1        97395562 |**                               97525933.00000
#                  0        98000293 |                                              -
#                  1        98605024 |**                               99033938.00000
#                  1        99209755 |**                               99391639.00000
#                  0        99814486 |                                              -
#                  2       100419217 |****                            100513593.50000
#                  2       101023948 |****                            101267695.50000
#                  0       101628679 |                                              -
#                  0       102233410 |                                              -
#                  0       102838141 |                                              -
#                  4       103442872 |********                        103746629.50000
#                  6       104047603 |************                    104298456.50000
#                  3       104652334 |******                          104989525.00000
#                  4       105257065 |********                        105637785.50000
#                  4       105861796 |********                        106092662.25000
#                 12       106466527 |*************************       106802331.50000
#                  8       107071258 |*****************               107349341.62500
#                 15       107675989 |********************************108002135.53333
#                 14       108280720 |*****************************   108576563.71429
#                  9       108885451 |*******************             109225150.88889
#                  8       109490182 |*****************               109863300.12500
#                  7       110094913 |**************                  110277005.14286
#                  9       110699644 |*******************             110991990.11111
#                 10       111304375 |*********************           111632671.20000
#                  6       111909106 |************                    112137516.00000
#                  8       112513837 |*****************               112807235.25000
#                  1       113118568 |**                              113422487.00000
#                  4       113723299 |********                        113975189.00000
#                  5       114328030 |**********                      114613191.60000
#                  4       114932761 |********                        115080368.00000
#                  3       115537492 |******                          115657128.33333
#
#                  9           > 95% |*******************             118625682.66667
#
#        mean of 95% 108905201.52632
#          95th %ile       116142196
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_10r   1   1        43128548          486        0        1 
# bin/../bin-riscv64/execw -N execw_10r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  19884269                   19884269
#                        max  66571028                   66571028
#                       mean  40597115.64198             40597115.64198
#                     median  43128548                   43128548*
#                     stddev  10667745.33041             10667745.33041
#             standard error    483898.75492               483898.75492
#       99% confidence level   1246523.19266              1246523.19266
#                       skew        -0.32853                   -0.32853
#                   kurtosis        -1.06432                   -1.06432
#           time correlation     74851.69136                74851.69136
#
#               elapsed time        20.02079
#                   run time        19.78624
#          getnsecs overhead      1399
#
#          number of samples       486
#         number of outliers         0
#    number of final samples       486
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        19884269 |******                           20473637.66667
#                  7        20980667 |*******                          21582774.28571
#                 16        22077065 |*****************                22630903.12500
#                 21        23173463 |**********************           23787272.52381
#                 16        24269861 |*****************                24719691.50000
#                 11        25366259 |***********                      25676461.27273
#                 14        26462657 |**************                   27133614.92857
#                 11        27559055 |***********                      27938323.63636
#                 12        28655453 |************                     29234367.08333
#                  7        29751851 |*******                          30053032.00000
#                  7        30848249 |*******                          31193693.28571
#                  7        31944647 |*******                          32334696.57143
#                  5        33041045 |*****                            33793215.80000
#                 12        34137443 |************                     34726344.41667
#                 13        35233841 |*************                    35776692.15385
#                 11        36330239 |***********                      37022027.27273
#                 13        37426637 |*************                    38194485.07692
#                 12        38523035 |************                     38921316.83333
#                  9        39619433 |*********                        40166271.33333
#                 12        40715831 |************                     41356366.91667
#                 16        41812229 |*****************                42371320.37500
#                 18        42908627 |*******************              43360093.05556
#                 24        44005025 |*************************        44536002.62500
#                 17        45101423 |******************               45611215.23529
#                 24        46197821 |*************************        46687272.66667
#                 18        47294219 |*******************              47897214.05556
#                 24        48390617 |*************************        48856159.08333
#                 30        49487015 |******************************** 50008967.96667
#                 28        50583413 |*****************************    51160693.07143
#                 19        51679811 |********************             52110010.10526
#                 16        52776209 |*****************                53248082.43750
#                  5        53872607 |*****                            54409926.60000
#
#                 25           > 95% |**************************       57579733.12000
#
#        mean of 95%  39676149.40130
#          95th %ile        54968988
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_128n   1   1        52793981          356        0        1 
# bin/../bin-riscv64/execw -N execw_128n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  19511567                   38554233
#                        max  70336841                   64038920
#                       mean  50112192.69114             52192522.30056
#                     median  52309779                   52793981*
#                     stddev   8373802.95713              4564961.34764
#             standard error    421331.75228               241942.46754
#       99% confidence level   1085350.59388               623243.79638
#                       skew        -1.76863                   -0.70374
#                   kurtosis         3.51714                    1.02393
#           time correlation     61599.48437                41029.50878
#
#               elapsed time        20.02829
#                   run time        19.86203
#          getnsecs overhead      1399
#
#          number of samples       395
#         number of outliers        39
#    number of final samples       356
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5        38554233 |***                              38710452.80000
#                  2        39208379 |*                                39696636.50000
#                  2        39862525 |*                                40192688.00000
#                  1        40516671 |*                                40919540.00000
#                  3        41170817 |**                               41505409.00000
#                  4        41824963 |**                               42059694.25000
#                  5        42479109 |***                              42826767.20000
#                  3        43133255 |**                               43531649.66667
#                  4        43787401 |**                               43937725.50000
#                  4        44441547 |**                               44780103.50000
#                  2        45095693 |*                                45401805.50000
#                  5        45749839 |***                              46047098.00000
#                  5        46403985 |***                              46777660.20000
#                  8        47058131 |*****                            47475737.87500
#                  6        47712277 |****                             48057631.33333
#                  9        48366423 |******                           48684677.88889
#                  7        49020569 |*****                            49347554.85714
#                  7        49674715 |*****                            50044585.85714
#                 11        50328861 |********                         50696119.18182
#                 23        50983007 |*****************                51362228.04348
#                 43        51637153 |******************************** 51972866.41860
#                 25        52291299 |******************               52623460.32000
#                 33        52945445 |************************         53262324.84848
#                 33        53599591 |************************         53895032.96970
#                 30        54253737 |**********************           54545670.06667
#                 14        54907883 |**********                       55231646.21429
#                 17        55562029 |************                     55831332.29412
#                  7        56216175 |*****                            56541165.00000
#                  8        56870321 |*****                            57198045.75000
#                  5        57524467 |***                              57904917.80000
#                  4        58178613 |**                               58461550.00000
#                  3        58832759 |**                               59178036.33333
#
#                 18           > 95% |*************                    61017880.94444
#
#        mean of 95%  51722532.78698
#          95th %ile        59486903
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_128nt   1   1       300678225           49        0        1 
# bin/../bin-riscv64/execw -N execw_128nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 238852115                  264721702
#                        max 370566863                  340875862
#                       mean 298656915.25490            298409871.42857
#                     median 300678225                  300678225*
#                     stddev  21028854.74987             16683319.62893
#             standard error   2944628.64962              2383331.37556
#       99% confidence level   7585363.40141              6139461.62344
#                       skew         0.39000                    0.14935
#                   kurtosis         2.31748                    0.35843
#           time correlation   1270773.40905              1096854.84388
#
#               elapsed time        25.79609
#                   run time        15.52750
#          getnsecs overhead      1399
#
#          number of samples        51
#         number of outliers         2
#    number of final samples        49
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       264721702 |****                            264721702.00000
#                  1       266943504 |****                            267195011.00000
#                  1       269165306 |****                            270234122.00000
#                  2       271387108 |*********                       273282981.50000
#                  2       273608910 |*********                       274364085.50000
#                  1       275830712 |****                            275859440.00000
#                  1       278052514 |****                            278165448.00000
#                  0       280274316 |                                              -
#                  0       282496118 |                                              -
#                  1       284717920 |****                            286423176.00000
#                  1       286939722 |****                            288682484.00000
#                  3       289161524 |*************                   290445523.66667
#                  3       291383326 |*************                   292397030.00000
#                  1       293605128 |****                            295532707.00000
#                  2       295826930 |*********                       296631786.50000
#                  4       298048732 |******************              299703122.00000
#                  2       300270534 |*********                       300934826.00000
#                  7       302492336 |********************************303525692.00000
#                  5       304714138 |**********************          306153423.60000
#                  4       306935940 |******************              307884150.00000
#                  1       309157742 |****                            310130557.00000
#                  0       311379544 |                                              -
#                  2       313601346 |*********                       315473025.50000
#                  1       315823148 |****                            316150478.00000
#
#                  3           > 95% |*************                   337763818.00000
#
#        mean of 95% 295843309.69565
#          95th %ile       335819344
#
# WARNINGS
#     Too few samples, 51 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 60.2% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
             prc thr      nsecs/call      samples   errors cnt/samp 
execw_128ntv   1   1        37583429          289        0        1 
# bin/../bin-riscv64/execw -N execw_128ntv -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15095152                   15095152
#                        max  59891205                   55763591
#                       mean  35462973.13103             35378446.37716
#                     median  37649529                   37583429*
#                     stddev   7664876.72636              7541561.58541
#             standard error    450097.05938               443621.26973
#       99% confidence level   1159450.02496              1142768.39082
#                       skew        -1.32076                   -1.47581
#                   kurtosis         1.77635                    1.66504
#           time correlation     75387.63188                74411.94567
#
#               elapsed time        20.69457
#                   run time        10.34456
#          getnsecs overhead      1399
#
#          number of samples       290
#         number of outliers         1
#    number of final samples       289
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        15095152 |***                              15483053.66667
#                 12        16014737 |******                           16557290.66667
#                 10        16934322 |*****                            17406070.30000
#                  3        17853907 |*                                18315263.33333
#                  0        18773492 |                                              -
#                  2        19693077 |*                                20102169.50000
#                  0        20612662 |                                              -
#                  1        21532247 |*                                21585874.00000
#                  1        22451832 |*                                22752079.00000
#                  0        23371417 |                                              -
#                  1        24291002 |*                                24992986.00000
#                  0        25210587 |                                              -
#                  1        26130172 |*                                26745093.00000
#                  1        27049757 |*                                27677495.00000
#                  1        27969342 |*                                28784199.00000
#                  5        28888927 |**                               29373120.80000
#                  4        29808512 |**                               30493679.50000
#                  2        30728097 |*                                31228957.00000
#                  5        31647682 |**                               31899010.00000
#                  8        32567267 |****                             33227901.62500
#                  0        33486852 |                                              -
#                  8        34406437 |****                             34933920.00000
#                 10        35326022 |*****                            35949793.30000
#                 28        36245607 |**************                   36767065.46429
#                 64        37165192 |******************************** 37600353.95312
#                 50        38084777 |*************************        38546350.26000
#                 23        39004362 |***********                      39407348.30435
#                 20        39923947 |**********                       40439683.85000
#                  2        40843532 |*                                41117641.00000
#                  2        41763117 |*                                41948944.00000
#                  1        42682702 |*                                42718947.00000
#                  3        43602287 |*                                44131618.00000
#
#                 15           > 95% |*******                          46388212.33333
#
#        mean of 95%  34775721.96350
#          95th %ile        44521853
#
# WARNINGS
#     Actual benchmark run time only accounts for 50.0% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
         prc thr      nsecs/call      samples   errors cnt/samp 
execw_1r   1   1        42809647          506        0        1 
# bin/../bin-riscv64/execw -N execw_1r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  19204767                   19204767
#                        max  71365094                   58600901
#                       mean  39053060.96252             38989203.18972
#                     median  42809647                   42809647*
#                     stddev   9615351.34411              9516644.07223
#             standard error    427032.74514               423066.43251
#       99% confidence level   1100036.35149              1089819.13015
#                       skew        -0.74286                   -0.82511
#                   kurtosis        -0.27262                   -0.43765
#           time correlation     61392.40491                60998.40606
#
#               elapsed time        20.02284
#                   run time        19.87198
#          getnsecs overhead      1399
#
#          number of samples       507
#         number of outliers         1
#    number of final samples       506
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14        19204767 |********                         19721346.78571
#                 29        20145936 |*****************                20684354.24138
#                 25        21087105 |***************                  21502414.20000
#                 13        22028274 |*******                          22314999.92308
#                  2        22969443 |*                                23522931.00000
#                  2        23910612 |*                                24118283.50000
#                  1        24851781 |*                                25557088.00000
#                  1        25792950 |*                                26323391.00000
#                  0        26734119 |                                              -
#                  4        27675288 |**                               28196072.25000
#                  3        28616457 |*                                28920199.33333
#                  4        29557626 |**                               29968452.75000
#                  3        30498795 |*                                30820272.66667
#                  4        31439964 |**                               32031335.00000
#                  7        32381133 |****                             32830970.14286
#                  5        33322302 |***                              33751796.00000
#                  7        34263471 |****                             34821491.00000
#                 23        35204640 |*************                    35644948.65217
#                 21        36145809 |************                     36539511.38095
#                 19        37086978 |***********                      37533376.42105
#                 16        38028147 |*********                        38412219.37500
#                 15        38969316 |*********                        39507008.86667
#                 10        39910485 |******                           40324738.30000
#                 15        40851654 |*********                        41287728.40000
#                 10        41792823 |******                           42191644.60000
#                 14        42733992 |********                         43292205.78571
#                 42        43675161 |*************************        44140453.71429
#                 48        44616330 |****************************     45114127.52083
#                 53        45557499 |******************************** 46034136.96226
#                 46        46498668 |***************************      46890556.43478
#                 22        47439837 |*************                    47909196.04545
#                  2        48381006 |*                                48653216.00000
#
#                 26           > 95% |***************                  52688945.92308
#
#        mean of 95%  38247133.79167
#          95th %ile        49322169
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_256n   1   1        60579908          317        0        1 
# bin/../bin-riscv64/execw -N execw_256n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 256 -p 1024 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  24528385                   48950867
#                        max  71810646                   71810646
#                       mean  59167856.90120             60195972.46688
#                     median  60359307                   60579908*
#                     stddev   6115210.10489              3880330.36493
#             standard error    334609.40956               217941.06619
#       99% confidence level    861953.83903               561416.18650
#                       skew        -2.39082                   -0.45981
#                   kurtosis         8.89526                    1.17245
#           time correlation     51312.83010                39275.52464
#
#               elapsed time        20.02525
#                   run time        19.83387
#          getnsecs overhead      1399
#
#          number of samples       334
#         number of outliers        17
#    number of final samples       317
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        48950867 |**                               49170068.00000
#                  4        49469816 |****                             49807645.75000
#                  2        49988765 |**                               50287622.00000
#                  3        50507714 |***                              50722240.33333
#                  0        51026663 |                                              -
#                  5        51545612 |******                           51838857.80000
#                  3        52064561 |***                              52260679.00000
#                  2        52583510 |**                               52711281.00000
#                  4        53102459 |****                             53363207.75000
#                  4        53621408 |****                             53828584.50000
#                  4        54140357 |****                             54459411.25000
#                  4        54659306 |****                             54887988.00000
#                  2        55178255 |**                               55533740.50000
#                  1        55697204 |*                                56081492.00000
#                  5        56216153 |******                           56444953.20000
#                  7        56735102 |********                         56984966.57143
#                  7        57254051 |********                         57596340.00000
#                  7        57773000 |********                         58023213.00000
#                 19        58291949 |***********************          58643179.52632
#                 18        58810898 |**********************           59054279.94444
#                 26        59329847 |******************************** 59578050.00000
#                 23        59848796 |****************************     60138627.60870
#                 19        60367745 |***********************          60647891.84211
#                 24        60886694 |*****************************    61175717.87500
#                 24        61405643 |*****************************    61690165.37500
#                 24        61924592 |*****************************    62180933.66667
#                 13        62443541 |****************                 62666553.07692
#                 11        62962490 |*************                    63193607.18182
#                 14        63481439 |*****************                63774846.92857
#                 10        64000388 |************                     64238019.50000
#                  8        64519337 |*********                        64700246.62500
#                  2        65038286 |**                               65279423.00000
#
#                 16           > 95% |*******************              68163567.62500
#
#        mean of 95%  59772445.81395
#          95th %ile        65557224
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_32n   1   1        46668160          454        0        1 
# bin/../bin-riscv64/execw -N execw_32n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  18444364                   19983969
#                        max  58056949                   58056949
#                       mean  43569191.70549             43624532.73568
#                     median  46651160                   46668160*
#                     stddev   7987191.49216              7908190.91960
#             standard error    374445.31264               371149.78993
#       99% confidence level    964571.12536               956081.85886
#                       skew        -1.43923                   -1.43627
#                   kurtosis         1.42614                    1.43084
#           time correlation     53559.00689                53180.70852
#
#               elapsed time        20.04182
#                   run time        19.88268
#          getnsecs overhead      1399
#
#          number of samples       455
#         number of outliers         1
#    number of final samples       454
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4        19983969 |**                               20325645.25000
#                  5        20977432 |**                               21254133.40000
#                  7        21970895 |***                              22542292.14286
#                 14        22964358 |*******                          23398502.14286
#                  5        23957821 |**                               24445524.40000
#                  0        24951284 |                                              -
#                  0        25944747 |                                              -
#                  3        26938210 |*                                27600928.66667
#                  0        27931673 |                                              -
#                  0        28925136 |                                              -
#                  4        29918599 |**                               30471829.75000
#                  2        30912062 |*                                31256557.50000
#                  5        31905525 |**                               32522691.80000
#                  4        32898988 |**                               33423214.75000
#                  2        33892451 |*                                34588419.00000
#                  5        34885914 |**                               35213721.20000
#                  9        35879377 |****                             36386980.55556
#                 16        36872840 |********                         37287378.12500
#                 12        37866303 |******                           38269714.58333
#                  9        38859766 |****                             39279801.44444
#                 13        39853229 |******                           40292084.23077
#                  9        40846692 |****                             41390908.55556
#                 11        41840155 |*****                            42237754.09091
#                 17        42833618 |********                         43354584.00000
#                 10        43827081 |*****                            44209461.50000
#                 31        44820544 |****************                 45374278.00000
#                 37        45814007 |*******************              46391529.29730
#                 62        46807470 |******************************** 47303079.85484
#                 53        47800933 |***************************      48206099.07547
#                 46        48794396 |***********************          49258314.45652
#                 24        49787859 |************                     50184109.45833
#                 12        50781322 |******                           51203600.41667
#
#                 23           > 95% |***********                      53442193.95652
#
#        mean of 95%  43100620.41995
#          95th %ile        51774777
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_32nt   1   1       295925309           52        0        1 
# bin/../bin-riscv64/execw -N execw_32nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 195065065                  240954822
#                        max 330781328                  330781328
#                       mean 288828581.92453            290631726.48077
#                     median 295288107                  295925309*
#                     stddev  21257109.28508             16882696.71507
#             standard error   2919888.51932              2341208.79517
#       99% confidence level   7521632.82576              6030953.85635
#                       skew        -1.97637                   -0.98512
#                   kurtosis         6.02400                    1.82216
#           time correlation   1125876.00951               979969.35640
#
#               elapsed time        25.85409
#                   run time        15.58921
#          getnsecs overhead      1399
#
#          number of samples        53
#         number of outliers         1
#    number of final samples        52
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2       240954822 |****                            241516423.50000
#                  0       243159224 |                                              -
#                  0       245363626 |                                              -
#                  0       247568028 |                                              -
#                  0       249772430 |                                              -
#                  1       251976832 |**                              252636862.00000
#                  0       254181234 |                                              -
#                  1       256385636 |**                              256662875.00000
#                  0       258590038 |                                              -
#                  1       260794440 |**                              262809297.00000
#                  0       262998842 |                                              -
#                  0       265203244 |                                              -
#                  0       267407646 |                                              -
#                  0       269612048 |                                              -
#                  2       271816450 |****                            272431229.00000
#                  0       274020852 |                                              -
#                  0       276225254 |                                              -
#                  1       278429656 |**                              280339755.00000
#                  4       280634058 |*********                       280872720.00000
#                  1       282838460 |**                              283572067.00000
#                  3       285042862 |*******                         286175042.33333
#                  2       287247264 |****                            288713534.50000
#                  0       289451666 |                                              -
#                  7       291656068 |*****************               293091842.14286
#                  4       293860470 |*********                       295779383.50000
#                 13       296064872 |********************************297182128.61538
#                  2       298269274 |****                            298688618.00000
#                  1       300473676 |**                              300668625.00000
#                  0       302678078 |                                              -
#                  2       304882480 |****                            305845143.00000
#                  1       307086882 |**                              308013450.00000
#                  1       309291284 |**                              310223258.00000
#
#                  3           > 95% |*******                         321129861.33333
#
#        mean of 95% 288764493.73469
#          95th %ile       311495662
#
# WARNINGS
#     Too few samples, 53 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 60.3% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_32ntv   1   1        37360129          292        0        1 
# bin/../bin-riscv64/execw -N execw_32ntv -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  14917252                   14917252
#                        max  61913562                   56137192
#                       mean  34540177.55631             34446433.08904
#                     median  37360129                   37360129*
#                     stddev   7772157.25910              7617760.22840
#             standard error    454054.27522               445795.69810
#       99% confidence level   1169643.81297              1148369.71830
#                       skew        -1.01177                   -1.20077
#                   kurtosis         1.25249                    0.99075
#           time correlation     80480.03748                79376.85297
#
#               elapsed time        20.67703
#                   run time        10.18260
#          getnsecs overhead      1399
#
#          number of samples       293
#         number of outliers         1
#    number of final samples       292
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7        14917252 |*****                            15448782.28571
#                 11        15766040 |********                         16069483.18182
#                  9        16614828 |******                           16988847.77778
#                  2        17463616 |*                                18004112.00000
#                  1        18312404 |*                                18410464.00000
#                  0        19161192 |                                              -
#                  1        20009980 |*                                20412171.00000
#                  0        20858768 |                                              -
#                  2        21707556 |*                                22054576.00000
#                  0        22556344 |                                              -
#                  4        23405132 |**                               23890032.50000
#                  2        24253920 |*                                24947086.00000
#                  2        25102708 |*                                25435687.50000
#                  2        25951496 |*                                26407041.00000
#                  2        26800284 |*                                27574644.50000
#                  5        27649072 |***                              28148877.00000
#                  3        28497860 |**                               28930732.66667
#                  3        29346648 |**                               29680802.33333
#                  8        30195436 |*****                            30672480.25000
#                  8        31044224 |*****                            31429895.62500
#                 12        31893012 |********                         32285186.00000
#                  8        32741800 |*****                            33333939.62500
#                  5        33590588 |***                              34044277.20000
#                  8        34439376 |*****                            34912432.50000
#                  4        35288164 |**                               35615422.50000
#                 22        36136952 |****************                 36611671.09091
#                 41        36985740 |*****************************    37458118.82927
#                 44        37834528 |******************************** 38290186.02273
#                 28        38683316 |********************             39060537.75000
#                 18        39532104 |*************                    39964098.22222
#                 10        40380892 |*******                          40763350.00000
#                  5        41229680 |***                              41739663.20000
#
#                 15           > 95% |**********                       45497415.86667
#
#        mean of 95%  33848004.41877
#          95th %ile        42078445
#
# WARNINGS
#     Actual benchmark run time only accounts for 49.2% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_512n   1   1        78175667          223        0        1 
# bin/../bin-riscv64/execw -N execw_512n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 512 -p 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  29853802                   68078633
#                        max  96663280                   87633400
#                       mean  75578426.51527             78386402.93722
#                     median  77738366                   78175667*
#                     stddev   9349728.71619              3589592.38863
#             standard error    577628.16914               240376.88566
#       99% confidence level   1487970.16370               619210.85746
#                       skew        -2.00200                   -0.02444
#                   kurtosis         5.12079                    0.27068
#           time correlation    100747.19189                53774.97166
#
#               elapsed time        20.08832
#                   run time        19.89858
#          getnsecs overhead      1399
#
#          number of samples       262
#         number of outliers        39
#    number of final samples       223
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        68078633 |***                              68124683.50000
#                  1        68586045 |*                                69020836.00000
#                  1        69093457 |*                                69225937.00000
#                  1        69600869 |*                                69744138.00000
#                  0        70108281 |                                              -
#                  1        70615693 |*                                70624042.00000
#                  1        71123105 |*                                71431444.00000
#                  3        71630517 |*****                            71817979.00000
#                  1        72137929 |*                                72550348.00000
#                  2        72645341 |***                              72904849.50000
#                  3        73152753 |*****                            73563951.00000
#                  3        73660165 |*****                            73899252.66667
#                 11        74167577 |********************             74412745.27273
#                  4        74674989 |*******                          74910756.25000
#                 12        75182401 |**********************           75458574.66667
#                 10        75689813 |******************               75896629.50000
#                 17        76197225 |******************************** 76456402.64706
#                 11        76704637 |********************             76929672.09091
#                 12        77212049 |**********************           77447589.66667
#                 17        77719461 |******************************** 77968107.76471
#                  9        78226873 |****************                 78454434.88889
#                 15        78734285 |****************************     78965563.06667
#                 12        79241697 |**********************           79432046.66667
#                 14        79749109 |**************************       79957801.85714
#                  5        80256521 |*********                        80569735.20000
#                 10        80763933 |******************               80988236.90000
#                  4        81271345 |*******                          81547328.75000
#                 10        81778757 |******************               81998620.30000
#                  3        82286169 |*****                            82524082.33333
#                  7        82793581 |*************                    83037383.71429
#                  4        83300993 |*******                          83503560.25000
#                  5        83808405 |*********                        84028827.00000
#
#                 12           > 95% |**********************           85761326.50000
#
#        mean of 95%  77966976.00474
#          95th %ile        84315789
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_64n   1   1        48368965          444        0        1 
# bin/../bin-riscv64/execw -N execw_64n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  18803465                   18803465
#                        max  63901519                   63901519
#                       mean  44612900.34910             44612900.34910
#                     median  48368965                   48368965*
#                     stddev   9220733.87084              9220733.87084
#             standard error    437596.66401               437596.66401
#       99% confidence level   1127249.00649              1127249.00649
#                       skew        -1.24027                   -1.24027
#                   kurtosis         0.64042                    0.64042
#           time correlation     63995.17901                63995.17901
#
#               elapsed time        20.01973
#                   run time        19.86498
#          getnsecs overhead      1399
#
#          number of samples       444
#         number of outliers         0
#    number of final samples       444
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        18803465 |*                                19000965.66667
#                  2        19895819 |*                                20211920.00000
#                  0        20988173 |                                              -
#                 12        22080527 |******                           22807737.00000
#                 16        23172881 |********                         23761031.93750
#                 12        24265235 |******                           24748577.08333
#                  4        25357589 |**                               25960789.25000
#                  1        26449943 |*                                26645792.00000
#                  1        27542297 |*                                28633098.00000
#                  0        28634651 |                                              -
#                  1        29727005 |*                                29855602.00000
#                  3        30819359 |*                                31561974.66667
#                  3        31911713 |*                                32651345.33333
#                  8        33004067 |****                             33447264.87500
#                  6        34096421 |***                              34572552.00000
#                  2        35188775 |*                                35674372.50000
#                  6        36281129 |***                              36675075.66667
#                 10        37373483 |*****                            37782239.80000
#                  6        38465837 |***                              38885133.33333
#                  9        39558191 |****                             39944536.88889
#                  6        40650545 |***                              41237141.50000
#                 14        41742899 |*******                          42244559.07143
#                 13        42835253 |******                           43473041.23077
#                 13        43927607 |******                           44493098.61538
#                 14        45019961 |*******                          45581013.42857
#                 19        46112315 |*********                        46681981.21053
#                 35        47204669 |*****************                47823975.34286
#                 64        48297023 |******************************** 48871259.62500
#                 59        49389377 |*****************************    49943406.67797
#                 40        50481731 |********************             50960062.17500
#                 29        51574085 |**************                   52086343.93103
#                 10        52666439 |*****                            53141602.00000
#
#                 23           > 95% |***********                      56743605.04348
#
#        mean of 95%  43950177.76485
#          95th %ile        53758784
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_64nt   1   1       299586021           49        0        1 
# bin/../bin-riscv64/execw -N execw_64nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 243671431                  243671431
#                        max 378978392                  312815367
#                       mean 295692572.82353            292867490.32653
#                     median 299823822                  299586021*
#                     stddev  22189929.18604             17230829.72299
#             standard error   3107211.59052              2461547.10328
#       99% confidence level   8004177.05718              6340945.33806
#                       skew         0.30804                   -1.85379
#                   kurtosis         4.07721                    2.34179
#           time correlation   1176221.63204               964616.03633
#
#               elapsed time        25.79994
#                   run time        15.38022
#          getnsecs overhead      1399
#
#          number of samples        51
#         number of outliers         2
#    number of final samples        49
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3       243671431 |**********                      244232599.66667
#                  0       245649732 |                                              -
#                  1       247628033 |***                             248776548.00000
#                  0       249606334 |                                              -
#                  0       251584635 |                                              -
#                  0       253562936 |                                              -
#                  0       255541237 |                                              -
#                  0       257519538 |                                              -
#                  0       259497839 |                                              -
#                  1       261476140 |***                             263054697.00000
#                  1       263454441 |***                             264992603.00000
#                  0       265432742 |                                              -
#                  0       267411043 |                                              -
#                  0       269389344 |                                              -
#                  1       271367645 |***                             272261228.00000
#                  0       273345946 |                                              -
#                  0       275324247 |                                              -
#                  0       277302548 |                                              -
#                  0       279280849 |                                              -
#                  0       281259150 |                                              -
#                  1       283237451 |***                             284397469.00000
#                  2       285215752 |*******                         286300926.00000
#                  1       287194053 |***                             287558380.00000
#                  1       289172354 |***                             290911792.00000
#                  0       291150655 |                                              -
#                  1       293128956 |***                             294548304.00000
#                  6       295107257 |*********************           296298526.83333
#                  5       297085558 |*****************               298050336.20000
#                  9       299063859 |********************************300194679.00000
#                  7       301042160 |************************        301984272.71429
#                  4       303020461 |**************                  303815985.75000
#                  2       304998762 |*******                         306221994.00000
#
#                  3           > 95% |**********                      309104520.33333
#
#        mean of 95% 291808553.58696
#          95th %ile       306977046
#
# WARNINGS
#     Too few samples, 51 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 59.6% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_64ntv   1   1        37510128          285        0        1 
# bin/../bin-riscv64/execw -N execw_64ntv -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15238453                   15238453
#                        max  67304980                   55518390
#                       mean  34803648.01748             34689608.25614
#                     median  37510629                   37510128*
#                     stddev   7317470.50406              7071164.59766
#             standard error    432691.10163               418859.64139
#       99% confidence level   1114612.27781              1078982.43621
#                       skew        -1.11784                   -1.53665
#                   kurtosis         2.56441                    1.73141
#           time correlation     73048.55729                71410.90625
#
#               elapsed time        20.68581
#                   run time        10.02155
#          getnsecs overhead      1399
#
#          number of samples       286
#         number of outliers         1
#    number of final samples       285
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        15238453 |***                              15591321.00000
#                 10        16028322 |******                           16392226.60000
#                  6        16818191 |***                              17396510.16667
#                  6        17608060 |***                              17932245.66667
#                  0        18397929 |                                              -
#                  0        19187798 |                                              -
#                  2        19977667 |*                                20412770.50000
#                  1        20767536 |*                                21279874.00000
#                  0        21557405 |                                              -
#                  0        22347274 |                                              -
#                  0        23137143 |                                              -
#                  0        23927012 |                                              -
#                  2        24716881 |*                                25301837.00000
#                  1        25506750 |*                                25951489.00000
#                  1        26296619 |*                                26429691.00000
#                  3        27086488 |*                                27452161.33333
#                  6        27876357 |***                              28297297.33333
#                  2        28666226 |*                                28886849.50000
#                  0        29456095 |                                              -
#                  9        30245964 |*****                            30642027.44444
#                  9        31035833 |*****                            31355341.22222
#                  7        31825702 |****                             32000495.57143
#                  3        32615571 |*                                32896712.66667
#                  6        33405440 |***                              33749149.50000
#                  5        34195309 |***                              34533798.80000
#                  4        34985178 |**                               35199595.75000
#                 12        35775047 |*******                          36195607.83333
#                 33        36564916 |*********************            37055457.45455
#                 49        37354785 |******************************** 37766809.14286
#                 39        38144654 |*************************        38533804.00000
#                 29        38934523 |******************               39286569.34483
#                 19        39724392 |************                     40015573.94737
#
#                 15           > 95% |*********                        42352225.40000
#
#        mean of 95%  34263907.30370
#          95th %ile        40514239
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.4% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
         prc thr      nsecs/call      samples   errors cnt/samp 
exit_100   1   1          792285          165        0       50 
# bin/../bin-riscv64/exit -N exit_100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 50 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    625880                     625880
#                        max    960925                     960925
#                       mean    794718.15758               794718.15758
#                     median    792285                     792285*
#                     stddev     66370.30611                66370.30611
#             standard error      5166.92132                 5166.92132
#       99% confidence level     13309.98933                13309.98933
#                       skew         0.03659                    0.03659
#                   kurtosis        -0.15048                   -0.15048
#           time correlation      1356.80567                 1356.80567
#
#               elapsed time        25.02884
#                   run time         6.55665
#          getnsecs overhead      1399
#
#          number of samples       165
#         number of outliers         0
#    number of final samples       165
#             ops per sample        50.00000 (-B 50)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          625880 |****                               626956.00000
#                  0          634728 |                                              -
#                  2          643576 |****                               646327.00000
#                  0          652424 |                                              -
#                  2          661272 |****                               663853.00000
#                  1          670120 |**                                 675444.00000
#                  1          678968 |**                                 681680.00000
#                  4          687816 |*********                          694551.00000
#                  2          696664 |****                               702868.00000
#                  1          705512 |**                                 711934.00000
#                  6          714360 |**************                     717830.66667
#                  2          723208 |****                               726595.00000
#                  7          732056 |*****************                  737120.71429
#                  8          740904 |*******************                744210.50000
#                 12          749752 |*****************************      753262.16667
#                  7          758600 |*****************                  762201.28571
#                 13          767448 |********************************   770517.76923
#                  8          776296 |*******************                781093.00000
#                  6          785144 |**************                     790899.66667
#                 10          793992 |************************           797296.20000
#                  9          802840 |**********************             808100.77778
#                  6          811688 |**************                     816049.66667
#                  5          820536 |************                       824551.00000
#                  6          829384 |**************                     834306.33333
#                  8          838232 |*******************                841437.25000
#                  8          847080 |*******************                852128.25000
#                  4          855928 |*********                          859651.00000
#                  5          864776 |************                       868541.80000
#                  5          873624 |************                       878879.80000
#                  3          882472 |*******                            889025.66667
#                  1          891320 |**                                 897187.00000
#                  2          900168 |****                               907507.00000
#
#                  9           > 95% |**********************             929757.88889
#
#        mean of 95%    786927.40385
#          95th %ile          909011
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.2% of elapsed time.
#
# Usage: exit
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exit')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-e] (uses _exit() rather than exit())notes: measures exit()
                prc thr      nsecs/call      samples   errors cnt/samp 
exit_100_nolibc   1   1          565439          149        0       60 
# bin/../bin-riscv64/exit -N exit_100_nolibc -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -e -B 60 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    410158                     410158
#                        max    731661                     731661
#                       mean    568769.77181               568769.77181
#                     median    565439                     565439*
#                     stddev     63926.82600                63926.82600
#             standard error      5237.08964                 5237.08964
#       99% confidence level     13490.74292                13490.74292
#                       skew         0.32760                    0.32760
#                   kurtosis        -0.16890                   -0.16890
#           time correlation      1446.74562                 1446.74562
#
#               elapsed time        25.12488
#                   run time         5.08501
#          getnsecs overhead      1399
#
#          number of samples       149
#         number of outliers         0
#    number of final samples       149
#             ops per sample        60.00000 (-B 60)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          410158 |***                                410158.00000
#                  0          418776 |                                              -
#                  0          427394 |                                              -
#                  0          436012 |                                              -
#                  1          444630 |***                                452477.00000
#                  1          453248 |***                                459150.00000
#                  2          461866 |******                             466116.50000
#                  9          470484 |****************************       474998.00000
#                  2          479102 |******                             482074.00000
#                  5          487720 |****************                   492307.60000
#                  2          496338 |******                             498956.00000
#                  6          504956 |*******************                508984.66667
#                  6          513574 |*******************                517900.83333
#                  8          522192 |*************************          525398.87500
#                  8          530810 |*************************          534682.75000
#                  7          539428 |**********************             543089.71429
#                  9          548046 |****************************       552201.55556
#                  6          556664 |*******************                559955.16667
#                  8          565282 |*************************          569302.62500
#                  8          573900 |*************************          577223.75000
#                  6          582518 |*******************                586968.00000
#                 10          591136 |********************************   595036.90000
#                 10          599754 |********************************   602843.70000
#                  4          608372 |************                       611786.50000
#                  3          616990 |*********                          624279.66667
#                  3          625608 |*********                          629820.00000
#                  4          634226 |************                       638883.50000
#                  6          642844 |*******************                647377.00000
#                  2          651462 |******                             654359.00000
#                  1          660080 |***                                664804.00000
#                  0          668698 |                                              -
#                  3          677316 |*********                          678097.66667
#
#                  8           > 95% |*************************          711384.75000
#
#        mean of 95%    560678.14184
#          95th %ile          685911
#
# WARNINGS
#     Actual benchmark run time only accounts for 20.2% of elapsed time.
#
# Usage: exit
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exit')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-e] (uses _exit() rather than exit())notes: measures exit()
    prc thr      nsecs/call      samples   errors cnt/samp     func
exp   1   1             149        19699        0     5415      exp
# bin/../bin-riscv64/exp -N exp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       143                        143
#                        max    108831                        171
#                       mean       163.56702                  152.26778
#                     median       150                        149*
#                     stddev       752.67047                    6.15697
#             standard error         5.16012                    0.04387
#       99% confidence level        13.29247                    0.11300
#                       skew       141.79669                    1.26280
#                   kurtosis     20426.08193                    0.43389
#           time correlation         0.00389                    0.00095
#
#               elapsed time        20.00447
#                   run time        17.89183
#          getnsecs overhead      1399
#
#          number of samples     21276
#         number of outliers      1577
#    number of final samples     19699
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             143 |*                                             -
#                  6             144 |*                                             -
#                 14             145 |*                                             -
#                173             146 |*                                             -
#               2373             147 |**************                                -
#               5133             148 |********************************              -
#               2697             149 |****************                              -
#               1759             150 |**********                                    -
#               1208             151 |*******                                       -
#                473             152 |**                                            -
#                251             153 |*                                             -
#                184             154 |*                                             -
#                181             155 |*                                             -
#                237             156 |*                                             -
#                310             157 |*                                             -
#                598             158 |***                                           -
#                690             159 |****                                          -
#                647             160 |****                                          -
#                574             161 |***                                           -
#                447             162 |**                                            -
#                332             163 |**                                            -
#                277             164 |*                                             -
#                149             165 |*                                             -
#
#                985           > 95% |******                                168.12081
#
#        mean of 95%       151.43337
#          95th %ile             165
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp10   1   1             619        18888        0     1423    exp10
# bin/../bin-riscv64/exp -N exp10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       590                        590
#                        max    155181                        691
#                       mean       651.62022                  627.05257
#                     median       619                        619*
#                     stddev      1107.92437                   21.26113
#             standard error         7.82424                    0.15470
#       99% confidence level        20.15524                    0.39851
#                       skew       135.66754                    1.33242
#                   kurtosis     18878.13818                    0.54717
#           time correlation         0.01010                    0.00342
#
#               elapsed time        20.00545
#                   run time        18.15960
#          getnsecs overhead      1399
#
#          number of samples     20051
#         number of outliers      1163
#    number of final samples     18888
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             590 |*                                     590.00000
#                  1             593 |*                                     593.00000
#                  5             596 |*                                     597.40000
#                 45             599 |*                                     600.33333
#                208             602 |**                                    603.15385
#                791             605 |*********                             606.25917
#               1735             608 |*********************                 609.16945
#               2475             611 |******************************        612.08121
#               2616             614 |********************************      614.94801
#               2178             617 |**************************            617.99587
#               1620             620 |*******************                   620.93642
#               1234             623 |***************                       623.96434
#                909             626 |***********                           626.89879
#                572             629 |******                                629.88112
#                305             632 |***                                   632.93770
#                174             635 |**                                    635.89655
#                114             638 |*                                     639.08772
#                 79             641 |*                                     642.03797
#                 92             644 |*                                     644.97826
#                139             647 |*                                     648.13669
#                176             650 |**                                    651.25000
#                274             653 |***                                   654.24088
#                329             656 |****                                  657.06991
#                390             659 |****                                  659.91282
#                424             662 |*****                                 662.96698
#                427             665 |*****                                 665.98829
#                350             668 |****                                  668.98857
#                280             671 |***                                   671.93571
#
#                945           > 95% |***********                           680.58307
#
#        mean of 95%       624.23329
#          95th %ile             673
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
exp10f   1   1             149        20558        0     5282   exp10f
# bin/../bin-riscv64/exp -N exp10f -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp10f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       143                        143
#                        max    112891                        168
#                       mean       163.89876                  151.47252
#                     median       150                        149*
#                     stddev       785.98279                    5.39651
#             standard error         5.30900                    0.03764
#       99% confidence level        13.67598                    0.09695
#                       skew       136.16436                    1.47393
#                   kurtosis     19344.53301                    1.01072
#           time correlation         0.00401                    0.00078
#
#               elapsed time        20.00436
#                   run time        17.81859
#          getnsecs overhead      1399
#
#          number of samples     21918
#         number of outliers      1360
#    number of final samples     20558
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             143 |*                                             -
#                 67             144 |*                                             -
#                 87             145 |*                                             -
#                284             146 |*                                             -
#               2530             147 |*****************                             -
#               4591             148 |********************************              -
#               3396             149 |***********************                       -
#               2285             150 |***************                               -
#               1597             151 |***********                                   -
#                902             152 |******                                        -
#                482             153 |***                                           -
#                281             154 |*                                             -
#                184             155 |*                                             -
#                117             156 |*                                             -
#                132             157 |*                                             -
#                249             158 |*                                             -
#                452             159 |***                                           -
#                494             160 |***                                           -
#                503             161 |***                                           -
#                454             162 |***                                           -
#                403             163 |**                                            -
#                 37             164 |*                                             -
#
#               1028           > 95% |*******                               165.73833
#
#        mean of 95%       150.72161
#          95th %ile             164
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
exp10l   1   1           18768        17516        0       50   exp10l
# bin/../bin-riscv64/exp -N exp10l -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp10l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     18022                      18022
#                        max    598053                      21074
#                       mean     19567.50437                19059.31525
#                     median     18803                      18768*
#                     stddev      5546.30164                  672.70839
#             standard error        40.71564                    5.08287
#       99% confidence level       104.88350                   13.09348
#                       skew        64.21127                    1.22161
#                   kurtosis      6405.15354                    0.23567
#           time correlation         0.25984                    0.11803
#
#               elapsed time        20.00559
#                   run time        18.43799
#          getnsecs overhead      1399
#
#          number of samples     18556
#         number of outliers      1040
#    number of final samples     17516
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9           18022 |*                                   18065.33333
#                 46           18099 |*                                   18151.04348
#                164           18176 |**                                  18217.07927
#                273           18253 |***                                 18292.14652
#                211           18330 |**                                  18365.40758
#                581           18407 |*******                             18453.27194
#               1515           18484 |******************                  18528.04752
#               2588           18561 |********************************    18600.03246
#               2394           18638 |*****************************       18673.39223
#               1300           18715 |****************                    18748.93769
#               1109           18792 |*************                       18829.05861
#               1154           18869 |**************                      18905.96794
#                901           18946 |***********                         18980.84573
#                465           19023 |*****                               19055.15269
#                312           19100 |***                                 19135.59936
#                185           19177 |**                                  19212.97838
#                114           19254 |*                                   19290.51754
#                107           19331 |*                                   19367.23364
#                 69           19408 |*                                   19447.44928
#                 62           19485 |*                                   19513.83871
#                 75           19562 |*                                   19600.04000
#                106           19639 |*                                   19680.75472
#                169           19716 |**                                  19757.48521
#                220           19793 |**                                  19831.44545
#                293           19870 |***                                 19907.94539
#                429           19947 |*****                               19985.51282
#                423           20024 |*****                               20060.19858
#                354           20101 |****                                20138.56780
#                290           20178 |***                                 20217.26552
#                302           20255 |***                                 20292.69536
#                261           20332 |***                                 20369.74713
#                159           20409 |*                                   20436.03774
#
#                876           > 95% |**********                          20704.57763
#
#        mean of 95%     18972.70168
#          95th %ile           20466
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
exp2   1   1             139        20472        0     5686     exp2
# bin/../bin-riscv64/exp -N exp2 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp2 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       132                        132
#                        max    132361                        157
#                       mean       152.72949                  141.49008
#                     median       139                        139*
#                     stddev       902.58822                    5.04057
#             standard error         6.12251                    0.03523
#       99% confidence level        15.77160                    0.09075
#                       skew       144.79215                    1.40627
#                   kurtosis     21182.25757                    0.80576
#           time correlation         0.00369                    0.00074
#
#               elapsed time        20.00423
#                   run time        17.73851
#          getnsecs overhead      1399
#
#          number of samples     21733
#         number of outliers      1261
#    number of final samples     20472
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             132 |*                                             -
#                  4             133 |*                                             -
#                  3             134 |*                                             -
#                  3             135 |*                                             -
#                104             136 |*                                             -
#               1727             137 |*********                                     -
#               5625             138 |********************************              -
#               3520             139 |********************                          -
#               1959             140 |***********                                   -
#               1611             141 |*********                                     -
#                715             142 |****                                          -
#                426             143 |**                                            -
#                480             144 |**                                            -
#                304             145 |*                                             -
#                154             146 |*                                             -
#                203             147 |*                                             -
#                460             148 |**                                            -
#                646             149 |***                                           -
#                631             150 |***                                           -
#                453             151 |**                                            -
#                414             152 |**                                            -
#                  4             153 |*                                             -
#
#               1024           > 95% |*****                                 154.68555
#
#        mean of 95%       140.79530
#          95th %ile             153
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp2f   1   1             131        20370        0     5878    exp2f
# bin/../bin-riscv64/exp -N exp2f -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp2f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       126                        126
#                        max    127141                        146
#                       mean       145.39765                  132.63574
#                     median       132                        131*
#                     stddev       863.61939                    4.37479
#             standard error         5.80736                    0.03065
#       99% confidence level        14.95977                    0.07896
#                       skew       144.20329                    1.38128
#                   kurtosis     21150.07040                    0.96815
#           time correlation         0.00392                    0.00066
#
#               elapsed time        20.00490
#                   run time        17.61373
#          getnsecs overhead      1399
#
#          number of samples     22115
#         number of outliers      1745
#    number of final samples     20370
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             126 |*                                             -
#                 54             127 |*                                             -
#               1276             128 |***********                                   -
#               3527             129 |********************************              -
#               3000             130 |***************************                   -
#               3048             131 |***************************                   -
#               2867             132 |**************************                    -
#               1490             133 |*************                                 -
#                826             134 |*******                                       -
#                510             135 |****                                          -
#                236             136 |**                                            -
#                154             137 |*                                             -
#                328             138 |**                                            -
#                504             139 |****                                          -
#                563             140 |*****                                         -
#                542             141 |****                                          -
#                424             142 |***                                           -
#
#               1019           > 95% |*********                             144.22866
#
#        mean of 95%       132.02527
#          95th %ile             142
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp2l   1   1            9279        16964        0      107    exp2l
# bin/../bin-riscv64/exp -N exp2l -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f exp2l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4430                       8474
#                        max    292131                      10390
#                       mean      9586.96369                 9407.33041
#                     median      9290                       9279*
#                     stddev      2596.76494                  327.45326
#             standard error        19.37776                    2.51412
#       99% confidence level        49.91712                    6.47636
#                       skew        79.72123                    1.07440
#                   kurtosis      8160.46059                    0.16348
#           time correlation         0.11233                    0.06031
#
#               elapsed time        20.00432
#                   run time        18.41743
#          getnsecs overhead      1399
#
#          number of samples     17958
#         number of outliers       994
#    number of final samples     16964
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            8474 |*                                    8490.00000
#                  9            8525 |*                                    8550.55556
#                 14            8576 |*                                    8593.21429
#                  7            8627 |*                                    8654.14286
#                  9            8678 |*                                    8708.77778
#                 39            8729 |*                                    8755.58974
#                 16            8780 |*                                    8805.56250
#                 17            8831 |*                                    8856.23529
#                 48            8882 |*                                    8905.45833
#                 50            8933 |*                                    8956.66000
#                 91            8984 |*                                    9011.63736
#                140            9035 |*                                    9062.44286
#               1197            9086 |***********                          9120.15873
#               3395            9137 |********************************     9162.83652
#               2091            9188 |*******************                  9211.18364
#               1793            9239 |****************                     9265.11545
#               1654            9290 |***************                      9313.65538
#                969            9341 |*********                            9363.81115
#                545            9392 |*****                                9413.09541
#                373            9443 |***                                  9465.86059
#                214            9494 |**                                   9517.09346
#                135            9545 |*                                    9568.52593
#                 92            9596 |*                                    9620.52174
#                130            9647 |*                                    9675.06923
#                237            9698 |**                                   9726.28692
#                507            9749 |****                                 9776.74753
#                597            9800 |*****                                9823.48576
#                519            9851 |****                                 9875.81696
#                481            9902 |****                                 9925.28690
#                357            9953 |***                                  9976.98599
#                283           10004 |**                                  10027.76678
#                100           10055 |*                                   10065.43000
#
#                849           > 95% |********                            10201.82803
#
#        mean of 95%      9365.47322
#          95th %ile           10079
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
expf   1   1             134        20532        0     5778     expf
# bin/../bin-riscv64/exp -N expf -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f expf 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       128                        128
#                        max    142231                        150
#                       mean       148.25139                  135.78716
#                     median       134                        134*
#                     stddev       963.14387                    4.70203
#             standard error         6.48571                    0.03281
#       99% confidence level        16.70718                    0.08453
#                       skew       145.75583                    1.34925
#                   kurtosis     21475.66858                    0.83913
#           time correlation         0.00392                    0.00070
#
#               elapsed time        20.00581
#                   run time        17.58144
#          getnsecs overhead      1399
#
#          number of samples     22053
#         number of outliers      1521
#    number of final samples     20532
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             128 |*                                             -
#                 51             129 |*                                             -
#                356             130 |***                                           -
#               1305             131 |***********                                   -
#               2780             132 |*************************                     -
#               3492             133 |********************************              -
#               3329             134 |******************************                -
#               2455             135 |**********************                        -
#               1341             136 |************                                  -
#                903             137 |********                                      -
#                485             138 |****                                          -
#                262             139 |**                                            -
#                175             140 |*                                             -
#                217             141 |*                                             -
#                409             142 |***                                           -
#                544             143 |****                                          -
#                531             144 |****                                          -
#                514             145 |****                                          -
#                350             146 |***                                           -
#
#               1027           > 95% |*********                             148.00097
#
#        mean of 95%       135.14407
#          95th %ile             146
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
expl   1   1            8585        17488        0      109     expl
# bin/../bin-riscv64/exp -N expl -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f expl 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8384                       8384
#                        max    486552                       9640
#                       mean      8976.08750                 8724.26361
#                     median      8606                       8585*
#                     stddev      3900.36884                  305.18653
#             standard error        28.46378                    2.30778
#       99% confidence level        73.32270                    5.94485
#                       skew        99.53518                    1.30542
#                   kurtosis     11998.29252                    0.35737
#           time correlation         0.12068                    0.05256
#
#               elapsed time        20.00637
#                   run time        18.21125
#          getnsecs overhead      1399
#
#          number of samples     18777
#         number of outliers      1289
#    number of final samples     17488
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23            8384 |*                                    8403.86957
#                229            8415 |**                                   8434.47598
#               1001            8446 |***********                          8464.36563
#               2536            8477 |*****************************        8493.80836
#               2727            8508 |********************************     8522.71837
#               1771            8539 |********************                 8552.94918
#                945            8570 |***********                          8584.67513
#               1020            8601 |***********                          8616.46667
#               1128            8632 |*************                        8646.21454
#                816            8663 |*********                            8676.69118
#                474            8694 |*****                                8706.61814
#                252            8725 |**                                   8739.14683
#                194            8756 |**                                   8769.47938
#                104            8787 |*                                    8800.07692
#                115            8818 |*                                    8833.38261
#                 84            8849 |*                                    8863.67857
#                 79            8880 |*                                    8895.67089
#                 65            8911 |*                                    8925.80000
#                 67            8942 |*                                    8955.29851
#                 44            8973 |*                                    8986.45455
#                 53            9004 |*                                    9019.81132
#                114            9035 |*                                    9052.37719
#                217            9066 |**                                   9082.82028
#                315            9097 |***                                  9112.49206
#                439            9128 |*****                                9144.15262
#                401            9159 |****                                 9174.45636
#                279            9190 |***                                  9205.57706
#                256            9221 |***                                  9236.34766
#                294            9252 |***                                  9267.21769
#                245            9283 |**                                   9297.55918
#                204            9314 |**                                   9328.43137
#                122            9345 |*                                    9354.41803
#
#                875           > 95% |**********                           9485.95086
#
#        mean of 95%      8684.14585
#          95th %ile            9366
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
             prc thr      nsecs/call      samples   errors cnt/samp 
fcntl_ndelay   1   1            1999        13832        0      434 
# bin/../bin-riscv64/fcntl_ndelay -N fcntl_ndelay -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1919                       1919
#                        max    180726                       2094
#                       mean      2162.07134                 2002.64958
#                     median      2017                       1999*
#                     stddev      1419.88384                   30.33865
#             standard error        10.15369                    0.25796
#       99% confidence level        26.15591                    0.66451
#                       skew       105.78897                    0.53062
#                   kurtosis     12941.23373                   -0.05887
#           time correlation         0.04374                    0.00739
#
#               elapsed time        20.00404
#                   run time        18.09145
#          getnsecs overhead      1399
#
#          number of samples     19555
#         number of outliers      5723
#    number of final samples     13832
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            1919 |*                                    1920.66667
#                  4            1924 |*                                    1926.25000
#                  8            1929 |*                                    1931.25000
#                 24            1934 |*                                    1936.20833
#                 37            1939 |*                                    1941.10811
#                 96            1944 |***                                  1946.25000
#                167            1949 |*****                                1951.17365
#                261            1954 |********                             1956.17241
#                412            1959 |*************                        1961.21845
#                572            1964 |******************                   1966.23252
#                726            1969 |***********************              1971.20661
#                872            1974 |****************************         1976.12156
#                936            1979 |******************************       1980.93803
#                987            1984 |********************************     1986.04559
#                902            1989 |*****************************        1990.94013
#                850            1994 |***************************          1996.15765
#                787            1999 |*************************            2001.00762
#                820            2004 |**************************           2006.00976
#                780            2009 |*************************            2011.02051
#                726            2014 |***********************              2015.96970
#                615            2019 |*******************                  2021.01138
#                547            2024 |*****************                    2025.90311
#                470            2029 |***************                      2030.89574
#                438            2034 |**************                       2035.86986
#                352            2039 |***********                          2041.04261
#                283            2044 |*********                            2045.88339
#                220            2049 |*******                              2050.96818
#                203            2054 |******                               2055.94581
#                 39            2059 |*                                    2059.33333
#
#                692           > 95% |**********************               2073.63439
#
#        mean of 95%      1998.91126
#          95th %ile            2060
#
# Usage: fcntl_ndelay
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fcntl_ndelay')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures F_GETFL/F_SETFL O_NDELAY on socket
          prc thr      nsecs/call      samples   errors cnt/samp 
fcntl_tmp   1   1            1952        18668        0      448 
# bin/../bin-riscv64/fcntl -N fcntl_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1816                       1816
#                        max    184951                       2476
#                       mean      2096.80529                 2024.41467
#                     median      1956                       1952*
#                     stddev      1460.69333                  150.41624
#             standard error        10.40542                    1.10089
#       99% confidence level        26.80437                    2.83590
#                       skew       106.10042                    1.39960
#                   kurtosis     12778.28039                    0.54701
#           time correlation         0.04152                    0.02356
#
#               elapsed time        20.00459
#                   run time        18.26087
#          getnsecs overhead      1399
#
#          number of samples     19706
#         number of outliers      1038
#    number of final samples     18668
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            1816 |*                                    1816.00000
#                  2            1833 |*                                    1842.50000
#                 10            1850 |*                                    1859.10000
#                 93            1867 |*                                    1876.90323
#                470            1884 |****                                 1894.63617
#               1800            1901 |***************                      1910.52944
#               3753            1918 |********************************     1926.53664
#               3135            1935 |**************************           1942.05231
#               2014            1952 |*****************                    1959.62463
#               1335            1969 |***********                          1976.04719
#                666            1986 |*****                                1992.99550
#                404            2003 |***                                  2010.24257
#                227            2020 |*                                    2027.49339
#                148            2037 |*                                    2045.14865
#                118            2054 |*                                    2061.23729
#                 79            2071 |*                                    2079.78481
#                 93            2088 |*                                    2095.92473
#                 85            2105 |*                                    2112.78824
#                 85            2122 |*                                    2130.75294
#                 94            2139 |*                                    2147.46809
#                127            2156 |*                                    2164.98425
#                249            2173 |**                                   2181.87952
#                358            2190 |***                                  2197.76536
#                329            2207 |**                                   2215.23708
#                305            2224 |**                                   2231.97705
#                247            2241 |**                                   2248.60324
#                245            2258 |**                                   2266.28163
#                260            2275 |**                                   2283.53077
#                268            2292 |**                                   2299.82836
#                281            2309 |**                                   2317.10676
#                249            2326 |**                                   2334.20884
#                204            2343 |*                                    2349.32843
#
#                934           > 95% |*******                              2404.75803
#
#        mean of 95%      2004.38305
#          95th %ile            2357
#
# Usage: fcntl
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fcntl')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-fcntl (default /dev/null)]
# notes: measures fcntl()
          prc thr      nsecs/call      samples   errors cnt/samp 
file_lock   1   1          131951        19590        0        3 
# bin/../bin-riscv64/file_lock -N file_lock -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    124676                     124676
#                        max   3445190                     586678
#                       mean    213176.58211               207460.96922
#                     median    132076                     131951*
#                     stddev    139195.70098               126639.84603
#             standard error       988.99603                  904.80117
#       99% confidence level      2547.65376                 2330.76783
#                       skew         2.14594                    1.28594
#                   kurtosis        16.80250                   -0.00939
#           time correlation        19.18064                   18.05805
#
#               elapsed time        20.00472
#                   run time        16.77037
#          getnsecs overhead      1399
#
#          number of samples     19809
#         number of outliers       219
#    number of final samples     19590
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#              11722          124676 |********************************   129565.97347
#                901          135330 |**                                 138457.59378
#                360          145984 |*                                  152655.16944
#                484          156638 |*                                  161413.84504
#                293          167292 |*                                  172208.53584
#                283          177946 |*                                  183898.02473
#                268          188600 |*                                  193826.83955
#                153          199254 |*                                  204583.95425
#                 92          209908 |*                                  214807.82609
#                 63          220562 |*                                  225541.07937
#                 52          231216 |*                                  236402.07692
#                 66          241870 |*                                  247509.63636
#                 54          252524 |*                                  258063.94444
#                 30          263178 |*                                  268437.60000
#                 19          273832 |*                                  278959.42105
#                 48          284486 |*                                  289842.27083
#                 37          295140 |*                                  300084.43243
#                 30          305794 |*                                  311038.70000
#                 66          316448 |*                                  322579.15152
#                 76          327102 |*                                  331167.77632
#                 34          337756 |*                                  341774.05882
#                 28          348410 |*                                  352757.39286
#                 25          359064 |*                                  363625.00000
#                 41          369718 |*                                  375568.46341
#                633          380372 |*                                  387703.15482
#               1300          391026 |***                                395763.32462
#                395          401680 |*                                  405671.85570
#                 81          412334 |*                                  416844.32099
#                 78          422988 |*                                  428146.28205
#                258          433642 |*                                  439844.66667
#                353          444296 |*                                  449601.08782
#                287          454950 |*                                  460098.04878
#
#                980           > 95% |**                                 503656.78980
#
#        mean of 95%    191863.33869
#          95th %ile          465602
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: file_lock
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'file_lock')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
# 
         prc thr      nsecs/call      samples   errors cnt/samp 
fork_100   1   1         2438844          328        0       15 
# bin/../bin-riscv64/fork -N fork_100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 15 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2199710                    2199710
#                        max   4587827                    2945940
#                       mean   2581351.52151              2475156.52744
#                     median   2461151                    2438844*
#                     stddev    357974.40798               161652.55917
#             standard error     18560.10845                 8925.76940
#       99% confidence level     47810.83937                22992.78198
#                       skew         2.52115                    1.04528
#                   kurtosis         7.90043                    0.56607
#           time correlation      2653.00552                 1596.81208
#
#               elapsed time        20.05742
#                   run time        14.40446
#          getnsecs overhead      1399
#
#          number of samples       372
#         number of outliers        44
#    number of final samples       328
#             ops per sample        15.00000 (-B 15)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         2199710 |**                                2206190.00000
#                  2         2218803 |**                                2232396.50000
#                  2         2237896 |**                                2252110.00000
#                  7         2256989 |**********                        2264265.14286
#                  9         2276082 |*************                     2284668.55556
#                 17         2295175 |************************          2305738.00000
#                 16         2314268 |***********************           2323102.81250
#                 20         2333361 |*****************************     2343183.65000
#                 22         2352454 |********************************  2361627.18182
#                 22         2371547 |********************************  2381921.13636
#                 19         2390640 |***************************       2397968.21053
#                 15         2409733 |*********************             2423206.60000
#                 21         2428826 |******************************    2438125.57143
#                 19         2447919 |***************************       2457906.47368
#                 18         2467012 |**************************        2475960.66667
#                 15         2486105 |*********************             2497859.93333
#                 11         2505198 |****************                  2514524.90909
#                  7         2524291 |**********                        2533758.71429
#                  7         2543384 |**********                        2551709.28571
#                 10         2562477 |**************                    2572954.60000
#                  2         2581570 |**                                2589384.50000
#                  3         2600663 |****                              2612415.66667
#                 12         2619756 |*****************                 2626351.66667
#                  3         2638849 |****                              2649838.33333
#                  3         2657942 |****                              2668005.00000
#                  3         2677035 |****                              2685942.66667
#                  6         2696128 |********                          2710574.16667
#                  6         2715221 |********                          2723626.50000
#                  2         2734314 |**                                2744229.00000
#                  4         2753407 |*****                             2768683.50000
#                  2         2772500 |**                                2786439.00000
#                  4         2791593 |*****                             2801912.25000
#
#                 17           > 95% |************************          2890793.47059
#
#        mean of 95%   2452436.82315
#          95th %ile         2810672
#
# WARNINGS
#     Actual benchmark run time only accounts for 71.8% of elapsed time.
#
# Usage: fork
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fork')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures fork()
           prc thr      nsecs/call      samples   errors cnt/samp 
getcontext   1   1           13200        17083        0       72 
# bin/../bin-riscv64/getcontext -N getcontext -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     12681                      12681
#                        max    167341                      16558
#                       mean     14047.14266                13714.51326
#                     median     13212                      13200*
#                     stddev      3040.79716                  947.99266
#             standard error        22.76171                    7.25309
#       99% confidence level        58.63416                   18.68395
#                       skew        17.70717                    1.29176
#                   kurtosis       533.35140                    0.19156
#           time correlation         0.25076                    0.16125
#
#               elapsed time        20.00426
#                   run time        18.15016
#          getnsecs overhead      1399
#
#          number of samples     17847
#         number of outliers       764
#    number of final samples     17083
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19           12681 |*                                   12741.63158
#                 24           12776 |*                                   12823.45833
#                 39           12871 |*                                   12926.74359
#               2077           12966 |*************                       13036.64757
#               4998           13061 |********************************    13099.14086
#               2793           13156 |*****************                   13201.25600
#               1311           13251 |********                            13291.72464
#                520           13346 |***                                 13388.45385
#                229           13441 |*                                   13481.42795
#                153           13536 |*                                   13580.71895
#                133           13631 |*                                   13671.84962
#                 95           13726 |*                                   13773.01053
#                 79           13821 |*                                   13866.64557
#                 65           13916 |*                                   13966.96923
#                 73           14011 |*                                   14063.67123
#                 68           14106 |*                                   14152.01471
#                 55           14201 |*                                   14243.78182
#                 72           14296 |*                                   14344.73611
#                 80           14391 |*                                   14440.10000
#                108           14486 |*                                   14540.28704
#                209           14581 |*                                   14631.70813
#                302           14676 |*                                   14723.21192
#                299           14771 |*                                   14821.69565
#                366           14866 |**                                  14914.31967
#                376           14961 |**                                  15007.45745
#                360           15056 |**                                  15104.07500
#                319           15151 |**                                  15197.13793
#                253           15246 |*                                   15294.00000
#                217           15341 |*                                   15391.34101
#                207           15436 |*                                   15482.20290
#                183           15531 |*                                   15580.08743
#                146           15626 |*                                   15663.84247
#
#                855           > 95% |*****                               16052.34620
#
#        mean of 95%     13591.34052
#          95th %ile           15702
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: getcontext
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getcontext')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getcontext()
       prc thr      nsecs/call      samples   errors cnt/samp 
getenv   1   1             326        19417        0     2651 
# bin/../bin-riscv64/getenv -N getenv -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       311                        311
#                        max     65820                        377
#                       mean       345.17610                  332.56348
#                     median       327                        326*
#                     stddev       487.74685                   14.80030
#             standard error         3.42847                    0.10621
#       99% confidence level         8.83173                    0.27361
#                       skew       123.13994                    0.81508
#                   kurtosis     16189.50294                   -0.22785
#           time correlation         0.00591                    0.00250
#
#               elapsed time        20.00476
#                   run time        18.06631
#          getnsecs overhead      1399
#
#          number of samples     20239
#         number of outliers       822
#    number of final samples     19417
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10             311 |*                                     311.90000
#                194             313 |**                                    313.76289
#               1149             315 |***************                       315.62315
#               1445             317 |*******************                   317.50727
#               1830             319 |*************************             319.54590
#               2342             321 |********************************      321.49957
#               1786             323 |************************              323.43169
#               1245             325 |*****************                     325.47390
#                849             327 |***********                           327.46643
#                441             329 |******                                329.38776
#                190             331 |**                                    331.40000
#                 90             333 |*                                     333.44444
#                 91             335 |*                                     335.56044
#                250             337 |***                                   337.64400
#                610             339 |********                              339.57869
#               1100             341 |***************                       341.57091
#               1237             343 |****************                      343.49798
#               1014             345 |*************                         345.49507
#                814             347 |***********                           347.49631
#                619             349 |********                              349.41519
#                364             351 |****                                  351.40934
#                238             353 |***                                   353.46639
#                162             355 |**                                    355.46296
#                127             357 |*                                     357.52756
#                103             359 |*                                     359.44660
#                139             361 |*                                     361.41007
#                  7             363 |*                                     363.00000
#
#                971           > 95% |*************                         368.76519
#
#        mean of 95%       330.65781
#          95th %ile             363
#
# Usage: getenv
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getenv')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s search-size (default = 100)]
# notes: measures time to search env for missing string
            prc thr      nsecs/call      samples   errors cnt/samp 
getpeername   1   1           45732         5386        0       18 
# bin/../bin-riscv64/getpeername -N getpeername -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     42759                      42759
#                        max    389652                      56265
#                       mean     48882.93268                47133.40382
#                     median     45810                      45732*
#                     stddev     11771.18716                 3043.78520
#             standard error       155.85851                   41.47447
#       99% confidence level       401.49151                  106.83823
#                       skew        10.53801                    1.40233
#                   kurtosis       180.66545                    0.50302
#           time correlation         3.17344                    1.64385
#
#               elapsed time        20.00896
#                   run time         5.18531
#          getnsecs overhead      1399
#
#          number of samples      5704
#         number of outliers       318
#    number of final samples      5386
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           42759 |*                                   42759.00000
#                  0           43102 |                                              -
#                  1           43445 |*                                   43524.00000
#                  2           43788 |*                                   43970.50000
#                106           44131 |***                                 44392.68868
#                558           44474 |*****************                   44660.64337
#                403           44817 |************                        44986.83375
#                832           45160 |*************************           45369.41827
#               1033           45503 |********************************    45652.40658
#                554           45846 |*****************                   46008.98736
#                398           46189 |************                        46338.71357
#                127           46532 |***                                 46671.24409
#                 56           46875 |*                                   47040.19643
#                 36           47218 |*                                   47392.05556
#                 26           47561 |*                                   47683.46154
#                 19           47904 |*                                   48080.84211
#                 21           48247 |*                                   48422.66667
#                 17           48590 |*                                   48732.17647
#                 18           48933 |*                                   49124.50000
#                 21           49276 |*                                   49443.57143
#                 21           49619 |*                                   49795.71429
#                 31           49962 |*                                   50105.12903
#                 45           50305 |*                                   50477.37778
#                 61           50648 |*                                   50811.40984
#                 63           50991 |*                                   51176.19048
#                 96           51334 |**                                  51506.01042
#                101           51677 |***                                 51850.19802
#                106           52020 |***                                 52181.89623
#                112           52363 |***                                 52511.41964
#                108           52706 |***                                 52866.17593
#                 76           53049 |**                                  53210.92105
#                 67           53392 |**                                  53537.74627
#
#                270           > 95% |********                            54721.45926
#
#        mean of 95%     46732.93960
#          95th %ile           53711
#
# WARNINGS
#     Actual benchmark run time only accounts for 25.9% of elapsed time.
#
# Usage: getpeername
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpeername')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getpeername()
       prc thr      nsecs/call      samples   errors cnt/samp   method
getpid   1   1            1684        18303        0      524     libc
# bin/../bin-riscv64/getpid -N getpid -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1592                       1592
#                        max    107601                       2153
#                       mean      1804.20693                 1745.60848
#                     median      1687                       1684*
#                     stddev       869.98019                  135.74041
#             standard error         6.25190                    1.00334
#       99% confidence level        16.10489                    2.58460
#                       skew        95.70536                    1.42368
#                   kurtosis     11365.96348                    0.67333
#           time correlation         0.03604                    0.02177
#
#               elapsed time        20.00317
#                   run time        18.10243
#          getnsecs overhead      1399
#
#          number of samples     19364
#         number of outliers      1061
#    number of final samples     18303
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            1592 |*                                    1600.50000
#                190            1607 |**                                   1616.37368
#                945            1622 |**********                           1630.15556
#               1986            1637 |*********************                1644.69839
#               2925            1652 |********************************     1659.40342
#               2753            1667 |******************************       1673.82746
#               2074            1682 |**********************               1688.50820
#               1438            1697 |***************                      1703.45410
#                771            1712 |********                             1717.83268
#                368            1727 |****                                 1733.36141
#                222            1742 |**                                   1748.79279
#                149            1757 |*                                    1763.23490
#                114            1772 |*                                    1778.32456
#                 82            1787 |*                                    1792.69512
#                 77            1802 |*                                    1809.27273
#                 99            1817 |*                                    1823.68687
#                 84            1832 |*                                    1839.21429
#                 75            1847 |*                                    1853.86667
#                121            1862 |*                                    1870.03306
#                218            1877 |**                                   1884.67890
#                331            1892 |***                                  1900.09668
#                334            1907 |***                                  1913.50299
#                297            1922 |***                                  1928.79798
#                283            1937 |***                                  1943.77032
#                217            1952 |**                                   1958.91705
#                201            1967 |**                                   1974.45274
#                234            1982 |**                                   1988.75641
#                236            1997 |**                                   2003.87712
#                231            2012 |**                                   2018.92208
#                190            2027 |**                                   2033.69474
#                132            2042 |*                                    2046.35606
#
#                916           > 95% |**********                           2094.87773
#
#        mean of 95%      1727.20791
#          95th %ile            2051
#
# Usage: getpid
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpid')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (skip libc making system call directly)
# note: measures getpid()
         prc thr      nsecs/call      samples   errors cnt/samp   method
getpid_s   1   1            1615        18462        0      538  syscall
# bin/../bin-riscv64/getpid -N getpid_s -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1547                       1547
#                        max    239402                       2025
#                       mean      1737.80697                 1670.03857
#                     median      1618                       1615*
#                     stddev      1768.33912                  118.17566
#             standard error        12.60818                    0.86974
#       99% confidence level        32.47867                    2.24045
#                       skew       124.77392                    1.44477
#                   kurtosis     16622.06711                    0.70496
#           time correlation         0.03549                    0.01862
#
#               elapsed time        20.00624
#                   run time        18.07482
#          getnsecs overhead      1399
#
#          number of samples     19671
#         number of outliers      1209
#    number of final samples     18462
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 50            1547 |*                                    1555.52000
#                505            1560 |*****                                1567.79208
#               1753            1573 |******************                   1579.89561
#               3082            1586 |********************************     1592.22356
#               3075            1599 |*******************************      1604.87024
#               2526            1612 |**************************           1617.76247
#               1477            1625 |***************                      1630.34326
#                723            1638 |*******                              1643.25173
#                351            1651 |***                                  1656.76638
#                209            1664 |**                                   1669.92823
#                192            1677 |*                                    1683.01562
#                101            1690 |*                                    1696.04950
#                105            1703 |*                                    1709.50476
#                102            1716 |*                                    1722.26471
#                 80            1729 |*                                    1734.76250
#                 83            1742 |*                                    1747.95181
#                 95            1755 |*                                    1760.96842
#                134            1768 |*                                    1774.35821
#                160            1781 |*                                    1787.58750
#                202            1794 |**                                   1800.24752
#                328            1807 |***                                  1812.86585
#                318            1820 |***                                  1825.74843
#                285            1833 |**                                   1838.88421
#                265            1846 |**                                   1851.80377
#                244            1859 |**                                   1864.60656
#                225            1872 |**                                   1877.56000
#                220            1885 |**                                   1891.47273
#                224            1898 |**                                   1903.72321
#                231            1911 |**                                   1916.84416
#                193            1924 |**                                   1929.72539
#
#                924           > 95% |*********                            1974.53463
#
#        mean of 95%      1653.99601
#          95th %ile            1935
#
# Usage: getpid
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpid')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (skip libc making system call directly)
# note: measures getpid()
          prc thr      nsecs/call      samples   errors cnt/samp 
getrusage   1   1           28228        15561        0       39 
# bin/../bin-riscv64/getrusage -N getrusage -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     26754                      26754
#                        max    185673                      34308
#                       mean     29433.09519                28978.19356
#                     median     28333                      28228*
#                     stddev      4225.96791                 1776.91464
#             standard error        33.32185                   14.24452
#       99% confidence level        85.83710                   36.69388
#                       skew        12.67601                    1.07992
#                   kurtosis       281.41993                   -0.02065
#           time correlation         0.49287                    0.36025
#
#               elapsed time        20.00587
#                   run time        18.59444
#          getnsecs overhead      1399
#
#          number of samples     16084
#         number of outliers       523
#    number of final samples     15561
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           26754 |*                                   26829.57143
#                 23           26938 |*                                   27069.04348
#                154           27122 |*                                   27227.50649
#               1722           27306 |****************                    27421.47213
#               3304           27490 |********************************    27561.11471
#               1700           27674 |****************                    27772.90588
#                553           27858 |*****                               27926.41953
#                314           28042 |***                                 28141.18471
#                455           28226 |****                                28317.40659
#                606           28410 |*****                               28518.04290
#               1026           28594 |*********                           28677.89864
#                521           28778 |*****                               28866.29942
#                384           28962 |***                                 29037.42448
#                101           29146 |*                                   29226.05941
#                 69           29330 |*                                   29410.33333
#                 69           29514 |*                                   29602.30435
#                 91           29698 |*                                   29797.65934
#                163           29882 |*                                   29981.06748
#                241           30066 |**                                  30159.69295
#                291           30250 |**                                  30347.46392
#                371           30434 |***                                 30523.74124
#                336           30618 |***                                 30708.74405
#                309           30802 |**                                  30890.90291
#                255           30986 |**                                  31074.09804
#                279           31170 |**                                  31258.18280
#                264           31354 |**                                  31447.01894
#                268           31538 |**                                  31620.72388
#                252           31722 |**                                  31814.40476
#                209           31906 |**                                  31997.60766
#                194           32090 |*                                   32178.42784
#                140           32274 |*                                   32364.65714
#                111           32458 |*                                   32530.45045
#
#                779           > 95% |*******                             33313.55327
#
#        mean of 95%     28749.72345
#          95th %ile           32615
#
# Usage: getrusage
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getrusage')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getrusage(RUSAGE_SELF)
            prc thr      nsecs/call      samples   errors cnt/samp 
getsockname   1   1           35381        18339        0       25 
# bin/../bin-riscv64/getsockname -N getsockname -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     34185                      34185
#                        max    397302                      42950
#                       mean     37021.10600                36479.54916
#                     median     35412                      35381*
#                     stddev      5594.09675                 2156.89171
#             standard error        40.55291                   15.92724
#       99% confidence level       104.46429                   41.02857
#                       skew        27.47205                    1.40549
#                   kurtosis      1345.43465                    0.40063
#           time correlation         0.46443                    0.33217
#
#               elapsed time        20.00415
#                   run time        18.25398
#          getnsecs overhead      1399
#
#          number of samples     19029
#         number of outliers       690
#    number of final samples     18339
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15           34185 |*                                   34307.13333
#                 24           34402 |*                                   34520.12500
#                 31           34619 |*                                   34722.25806
#               2061           34836 |************                        34988.71131
#               5466           35053 |********************************    35148.85968
#               2800           35270 |****************                    35369.82571
#               1965           35487 |***********                         35582.35573
#                847           35704 |****                                35790.48406
#                279           35921 |*                                   36015.34050
#                165           36138 |*                                   36239.04242
#                153           36355 |*                                   36467.62092
#                109           36572 |*                                   36664.17431
#                 61           36789 |*                                   36894.24590
#                 53           37006 |*                                   37105.64151
#                 44           37223 |*                                   37323.77273
#                 38           37440 |*                                   37553.50000
#                 30           37657 |*                                   37749.00000
#                 33           37874 |*                                   37983.51515
#                 32           38091 |*                                   38193.96875
#                 86           38308 |*                                   38425.74419
#                134           38525 |*                                   38637.06716
#                167           38742 |*                                   38848.45509
#                231           38959 |*                                   39072.12121
#                240           39176 |*                                   39288.17917
#                277           39393 |*                                   39507.20217
#                304           39610 |*                                   39717.37171
#                335           39827 |*                                   39937.25075
#                371           40044 |**                                  40150.79515
#                374           40261 |**                                  40367.89305
#                271           40478 |*                                   40589.32103
#                231           40695 |*                                   40797.25541
#                195           40912 |*                                   41011.31795
#
#                917           > 95% |*****                               41810.57797
#
#        mean of 95%     36198.95259
#          95th %ile           41108
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: getsockname
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getsockname')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getsockname()()
             prc thr      nsecs/call      samples   errors cnt/samp 
gettimeofday   1   1            1441        18261        0      652 
# bin/../bin-riscv64/gettimeofday -N gettimeofday -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1405                       1405
#                        max     36570                       1620
#                       mean      1484.17715                 1459.32945
#                     median      1444                       1441*
#                     stddev       351.37081                   53.48775
#             standard error         2.54530                    0.39581
#       99% confidence level         6.55668                    1.01962
#                       skew        69.62427                    1.12288
#                   kurtosis      6232.33433                    0.10260
#           time correlation         0.01582                    0.00927
#
#               elapsed time        20.00441
#                   run time        18.37541
#          getnsecs overhead      1399
#
#          number of samples     19057
#         number of outliers       796
#    number of final samples     18261
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1223            1405 |**********                           1407.65495
#               3770            1411 |********************************     1413.32095
#               1064            1417 |*********                            1419.18797
#                942            1423 |*******                              1425.56263
#               1322            1429 |***********                          1431.47277
#                789            1435 |******                               1437.31432
#                760            1441 |******                               1443.78553
#               1380            1447 |***********                          1449.70797
#                728            1453 |******                               1455.35714
#                606            1459 |*****                                1461.26733
#                593            1465 |*****                                1467.37099
#                447            1471 |***                                  1473.37584
#                219            1477 |*                                    1479.08676
#                129            1483 |*                                    1485.32558
#                 93            1489 |*                                    1491.69892
#                108            1495 |*                                    1498.07407
#                126            1501 |*                                    1503.50000
#                159            1507 |*                                    1509.71069
#                233            1513 |*                                    1515.99142
#                351            1519 |**                                   1521.40171
#                323            1525 |**                                   1527.57585
#                329            1531 |**                                   1533.48632
#                360            1537 |***                                  1539.62500
#                346            1543 |**                                   1545.38439
#                282            1549 |**                                   1551.38652
#                272            1555 |**                                   1557.45221
#                258            1561 |**                                   1563.43023
#                135            1567 |*                                    1568.00000
#
#                914           > 95% |*******                              1588.85339
#
#        mean of 95%      1452.50493
#          95th %ile            1570
#
# Usage: gettimeofday
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'gettimeofday')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures gettimeofday()
          prc thr      nsecs/call      samples   errors cnt/samp 
isatty_no   1   1            1866        18955        0      446 
# bin/../bin-riscv64/isatty -N isatty_no -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.6465/ifile 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1782                       1782
#                        max    419453                       2316
#                       mean      2038.60005                 1924.50330
#                     median      1870                       1866*
#                     stddev      3261.83217                  130.40009
#             standard error        22.78440                    0.94714
#       99% confidence level        58.69262                    2.43984
#                       skew       113.07710                    1.54358
#                   kurtosis     13735.42615                    1.00664
#           time correlation         0.04798                    0.01966
#
#               elapsed time        20.00499
#                   run time        18.12867
#          getnsecs overhead      1399
#
#          number of samples     20495
#         number of outliers      1540
#    number of final samples     18955
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 49            1782 |*                                    1792.89796
#                484            1797 |****                                 1806.02893
#                918            1812 |*******                              1819.40087
#               1993            1827 |****************                     1835.28700
#               3810            1842 |********************************     1849.33360
#               3296            1857 |***************************          1863.46541
#               1975            1872 |****************                     1878.39190
#               1125            1887 |*********                            1893.10489
#                476            1902 |***                                  1908.30252
#                262            1917 |**                                   1923.45420
#                205            1932 |*                                    1938.51707
#                158            1947 |*                                    1953.55696
#                127            1962 |*                                    1968.56693
#                111            1977 |*                                    1983.97297
#                 86            1992 |*                                    1998.02326
#                 94            2007 |*                                    2014.01064
#                100            2022 |*                                    2028.58000
#                112            2037 |*                                    2044.31250
#                122            2052 |*                                    2059.13115
#                100            2067 |*                                    2073.54000
#                149            2082 |*                                    2089.62416
#                307            2097 |**                                   2104.72638
#                369            2112 |***                                  2119.06233
#                343            2127 |**                                   2134.09913
#                253            2142 |**                                   2148.98419
#                215            2157 |*                                    2163.68837
#                204            2172 |*                                    2178.32843
#                169            2187 |*                                    2193.69822
#                203            2202 |*                                    2208.73892
#                192            2217 |*                                    2223.79167
#
#                948           > 95% |*******                              2268.61392
#
#        mean of 95%      1906.38718
#          95th %ile            2230
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
                prc thr      nsecs/call      samples   errors cnt/samp 
isatty_no_badfd   1   1            1757        18700        0      496 
# bin/../bin-riscv64/isatty -N isatty_no_badfd -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -b 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1664                       1664
#                        max    180752                       2197
#                       mean      1887.09850                 1816.72818
#                     median      1760                       1757*
#                     stddev      1419.66242                  126.69904
#             standard error        10.08706                    0.92652
#       99% confidence level        25.98428                    2.38670
#                       skew       106.54868                    1.40727
#                   kurtosis     12966.56937                    0.57211
#           time correlation         0.03744                    0.01979
#
#               elapsed time        20.00385
#                   run time        18.24933
#          getnsecs overhead      1399
#
#          number of samples     19808
#         number of outliers      1108
#    number of final samples     18700
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9            1664 |*                                    1672.55556
#                 87            1678 |*                                    1687.12644
#                323            1692 |**                                   1699.46440
#                893            1706 |*******                              1713.67525
#               2395            1720 |********************                 1727.38789
#               3650            1734 |********************************     1740.56740
#               2864            1748 |*************************            1754.08275
#               1911            1762 |****************                     1767.95343
#                931            1776 |********                             1781.61762
#                442            1790 |***                                  1795.96380
#                278            1804 |**                                   1810.23381
#                202            1818 |*                                    1824.13366
#                147            1832 |*                                    1838.59864
#                124            1846 |*                                    1851.45968
#                 93            1860 |*                                    1866.60215
#                 83            1874 |*                                    1880.06024
#                115            1888 |*                                    1895.02609
#                106            1902 |*                                    1908.35849
#                130            1916 |*                                    1923.12308
#                123            1930 |*                                    1937.20325
#                138            1944 |*                                    1950.53623
#                185            1958 |*                                    1964.63243
#                335            1972 |**                                   1978.86866
#                345            1986 |***                                  1992.49855
#                340            2000 |**                                   2006.70000
#                284            2014 |**                                   2020.14437
#                291            2028 |**                                   2034.37457
#                247            2042 |**                                   2048.68421
#                234            2056 |**                                   2062.43162
#                229            2070 |**                                   2076.34934
#                224            2084 |*                                    2090.25446
#                  7            2098 |*                                    2098.00000
#
#                935           > 95% |********                             2138.10588
#
#        mean of 95%      1799.81357
#          95th %ile            2098
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
           prc thr      nsecs/call      samples   errors cnt/samp 
isatty_yes   1   1           22938        18444        0       38 
# bin/../bin-riscv64/isatty -N isatty_yes -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     22120                      22120
#                        max    807154                      28182
#                       mean     24338.86096                23675.30617
#                     median     22965                      22938*
#                     stddev      8958.68836                 1502.90959
#             standard error        64.30141                   11.06637
#       99% confidence level       165.64042                   28.50698
#                       skew        68.01824                    1.45051
#                   kurtosis      5799.56621                    0.55719
#           time correlation         0.39749                    0.23003
#
#               elapsed time        20.00413
#                   run time        18.03438
#          getnsecs overhead      1399
#
#          number of samples     19411
#         number of outliers       967
#    number of final samples     18444
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12           22120 |*                                   22238.33333
#                 29           22271 |*                                   22350.68966
#                245           22422 |*                                   22530.24898
#               3699           22573 |****************************        22661.34198
#               4168           22724 |********************************    22792.12812
#               2579           22875 |*******************                 22949.40016
#               1657           23026 |************                        23094.21123
#                805           23177 |******                              23240.51925
#                473           23328 |***                                 23394.98732
#                258           23479 |*                                   23546.50000
#                148           23630 |*                                   23702.71622
#                 94           23781 |*                                   23851.88298
#                 62           23932 |*                                   24016.22581
#                 61           24083 |*                                   24152.59016
#                 59           24234 |*                                   24309.62712
#                 47           24385 |*                                   24464.42553
#                 37           24536 |*                                   24609.67568
#                 28           24687 |*                                   24756.32143
#                 42           24838 |*                                   24919.73810
#                 44           24989 |*                                   25061.18182
#                 54           25140 |*                                   25227.81481
#                 97           25291 |*                                   25364.05155
#                159           25442 |*                                   25521.39623
#                239           25593 |*                                   25669.41841
#                349           25744 |**                                  25824.62178
#                385           25895 |**                                  25971.76623
#                378           26046 |**                                  26122.74603
#                379           26197 |**                                  26270.67018
#                339           26348 |**                                  26424.52507
#                217           26499 |*                                   26574.09217
#                212           26650 |*                                   26720.96698
#                166           26801 |*                                   26863.74699
#
#                923           > 95% |*******                             27465.63380
#
#        mean of 95%     23475.63307
#          95th %ile           26932
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
       prc thr      nsecs/call      samples   errors cnt/samp 
listen   1   1            3063        18398        0      289 
# bin/../bin-riscv64/listen -N listen -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2946                       2946
#                        max    186652                       3914
#                       mean      3286.01318                 3183.02446
#                     median      3069                       3063*
#                     stddev      1494.57018                  243.61184
#             standard error        10.72293                    1.79603
#       99% confidence level        27.62227                    4.62657
#                       skew        97.24210                    1.43815
#                   kurtosis     11710.78406                    0.65306
#           time correlation         0.06342                    0.03824
#
#               elapsed time        20.00469
#                   run time        18.29296
#          getnsecs overhead      1399
#
#          number of samples     19427
#         number of outliers      1029
#    number of final samples     18398
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 82            2946 |*                                    2963.13415
#                681            2971 |*****                                2986.44053
#               2358            2996 |******************                   3010.45335
#               4030            3021 |********************************     3032.49851
#               2738            3046 |*********************                3057.04711
#               1870            3071 |**************                       3082.15294
#                916            3096 |*******                              3106.17686
#                455            3121 |***                                  3131.63736
#                301            3146 |**                                   3157.13621
#                216            3171 |*                                    3181.73148
#                169            3196 |*                                    3206.08284
#                105            3221 |*                                    3232.36190
#                116            3246 |*                                    3258.00862
#                 74            3271 |*                                    3283.55405
#                 86            3296 |*                                    3306.97674
#                 84            3321 |*                                    3332.97619
#                 71            3346 |*                                    3357.32394
#                 72            3371 |*                                    3383.41667
#                 83            3396 |*                                    3408.08434
#                196            3421 |*                                    3435.26531
#                321            3446 |**                                   3458.96262
#                349            3471 |**                                   3482.64756
#                287            3496 |**                                   3507.73868
#                251            3521 |*                                    3533.01594
#                213            3546 |*                                    3558.80751
#                222            3571 |*                                    3582.62162
#                228            3596 |*                                    3608.49561
#                254            3621 |**                                   3633.75984
#                194            3646 |*                                    3658.25258
#                213            3671 |*                                    3682.65258
#                189            3696 |*                                    3708.00000
#                 54            3721 |*                                    3723.88889
#
#                920           > 95% |*******                              3809.09022
#
#        mean of 95%      3150.06986
#          95th %ile            3728
#
# Usage: listen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'listen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures listen()()
            prc thr      nsecs/call      samples   errors cnt/samp 
localtime_r   1   1             826        17682        0      895 
# bin/../bin-riscv64/localtime_r -N localtime_r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       796                        796
#                        max   1297886                        861
#                       mean       938.67391                  828.48004
#                     median       831                        826*
#                     stddev      8645.16749                   10.76034
#             standard error        57.10768                    0.08092
#       99% confidence level       147.10939                    0.20845
#                       skew       147.67288                    0.65261
#                   kurtosis     22106.94547                    0.06058
#           time correlation         0.02873                    0.00203
#
#               elapsed time        20.00454
#                   run time        17.63826
#          getnsecs overhead      1399
#
#          number of samples     22917
#         number of outliers      5235
#    number of final samples     17682
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             796 |*                                     796.00000
#                  2             798 |*                                     798.50000
#                  6             800 |*                                     800.50000
#                 22             802 |*                                     802.59091
#                 55             804 |*                                     804.50909
#                 80             806 |*                                     806.48750
#                 99             808 |*                                     808.55556
#                170             810 |**                                    810.55294
#                303             812 |*****                                 812.55776
#                459             814 |********                              814.54684
#                840             816 |**************                        816.53810
#               1274             818 |**********************                818.53846
#               1642             820 |****************************          820.51705
#               1814             822 |********************************      822.50551
#               1689             824 |*****************************         824.47602
#               1389             826 |************************              826.46220
#               1040             828 |******************                    828.48077
#                906             830 |***************                       830.49007
#                787             832 |*************                         832.49301
#                751             834 |*************                         834.48602
#                697             836 |************                          836.49641
#                669             838 |***********                           838.48729
#                589             840 |**********                            840.48217
#                520             842 |*********                             842.47308
#                405             844 |*******                               844.50617
#                321             846 |*****                                 846.44548
#                267             848 |****                                  848.43071
#
#                885           > 95% |***************                       854.03955
#
#        mean of 95%       827.13336
#          95th %ile             849
#
# Usage: localtime_r
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'localtime_r')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures localtime_r()
    prc thr      nsecs/call      samples   errors cnt/samp     func
log   1   1             145        20193        0     5592      log
# bin/../bin-riscv64/log -N log -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       136                        136
#                        max     92451                        164
#                       mean       157.25193                  146.95523
#                     median       146                        145*
#                     stddev       641.74389                    5.59267
#             standard error         4.39798                    0.03936
#       99% confidence level        11.32920                    0.10138
#                       skew       140.26680                    1.16795
#                   kurtosis     20102.47950                    0.60490
#           time correlation         0.00362                    0.00088
#
#               elapsed time        20.00383
#                   run time        17.79488
#          getnsecs overhead      1399
#
#          number of samples     21292
#         number of outliers      1099
#    number of final samples     20193
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             136 |*                                             -
#                 16             137 |*                                             -
#                 58             138 |*                                             -
#                231             139 |**                                            -
#                535             140 |******                                        -
#               1269             141 |***************                               -
#               1768             142 |********************                          -
#               1612             143 |*******************                           -
#               2295             144 |***************************                   -
#               2696             145 |********************************              -
#               2143             146 |*************************                     -
#               1512             147 |*****************                             -
#               1044             148 |************                                  -
#                629             149 |*******                                       -
#                343             150 |****                                          -
#                218             151 |**                                            -
#                220             152 |**                                            -
#                269             153 |***                                           -
#                364             154 |****                                          -
#                468             155 |*****                                         -
#                470             156 |*****                                         -
#                450             157 |*****                                         -
#                398             158 |****                                          -
#                173             159 |**                                            -
#
#               1010           > 95% |***********                           161.18020
#
#        mean of 95%       146.20628
#          95th %ile             159
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log10   1   1             338        19255        0     2514    log10
# bin/../bin-riscv64/log -N log10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       322                        322
#                        max    144821                        378
#                       mean       359.95418                  342.16375
#                     median       338                        338*
#                     stddev      1021.61245                   11.80852
#             standard error         7.13682                    0.08510
#       99% confidence level        18.38444                    0.21921
#                       skew       138.36695                    1.32979
#                   kurtosis     19516.93640                    0.67964
#           time correlation         0.00670                    0.00188
#
#               elapsed time        20.00405
#                   run time        17.89358
#          getnsecs overhead      1399
#
#          number of samples     20491
#         number of outliers      1236
#    number of final samples     19255
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8             322 |*                                     322.62500
#                 13             324 |*                                     324.53846
#                 81             326 |*                                     326.71605
#                403             328 |****                                  328.66253
#               1120             330 |***********                           330.60982
#               1927             332 |********************                  332.55319
#               2792             334 |*****************************         334.54549
#               3044             336 |********************************      336.47503
#               2125             338 |**********************                338.41506
#               1473             340 |***************                       340.45214
#               1115             342 |***********                           342.43229
#                667             344 |*******                               344.40330
#                374             346 |***                                   346.39572
#                232             348 |**                                    348.38793
#                148             350 |*                                     350.45270
#                146             352 |*                                     352.45205
#                184             354 |*                                     354.58696
#                245             356 |**                                    356.58367
#                384             358 |****                                  358.54427
#                454             360 |****                                  360.52423
#                452             362 |****                                  362.44912
#                411             364 |****                                  364.51338
#                383             366 |****                                  366.48825
#                111             368 |*                                     368.00000
#
#                963           > 95% |**********                            372.36033
#
#        mean of 95%       340.57402
#          95th %ile             368
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
log10f   1   1             361        18643        0     2367   log10f
# bin/../bin-riscv64/log -N log10f -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log10f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       341                        341
#                        max    124591                        413
#                       mean       386.76799                  366.80314
#                     median       363                        361*
#                     stddev       887.18714                   15.30361
#             standard error         6.24594                    0.11208
#       99% confidence level        16.08954                    0.28872
#                       skew       136.38982                    1.10148
#                   kurtosis     19044.44255                    0.35923
#           time correlation         0.00788                    0.00263
#
#               elapsed time        20.00480
#                   run time        17.94433
#          getnsecs overhead      1399
#
#          number of samples     20176
#         number of outliers      1533
#    number of final samples     18643
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             341 |*                                     341.83333
#                 31             343 |*                                     343.61290
#                110             345 |*                                     345.74545
#                356             347 |******                                347.61236
#                656             349 |***********                           349.54573
#                938             351 |****************                      351.57036
#               1356             353 |***********************               353.53245
#               1667             355 |*****************************         355.49910
#               1832             357 |********************************      357.50000
#               1738             359 |******************************        359.46490
#               1382             361 |************************              361.45514
#               1133             363 |*******************                   363.48367
#                853             365 |**************                        365.47128
#                625             367 |**********                            367.46720
#                477             369 |********                              369.47379
#                402             371 |*******                               371.46269
#                344             373 |******                                373.52616
#                276             375 |****                                  375.48188
#                309             377 |*****                                 377.46926
#                349             379 |******                                379.51576
#                371             381 |******                                381.49057
#                386             383 |******                                383.52850
#                413             385 |*******                               385.48426
#                387             387 |******                                387.45736
#                339             389 |*****                                 389.48378
#                272             391 |****                                  391.44485
#                224             393 |***                                   393.43304
#                222             395 |***                                   395.50000
#                202             397 |***                                   397.53465
#                 54             399 |*                                     399.00000
#
#                933           > 95% |****************                      405.66774
#
#        mean of 95%       364.75567
#          95th %ile             399
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
log10l   1   1           10625        17924        0       89   log10l
# bin/../bin-riscv64/log -N log10l -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log10l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     10148                      10148
#                        max    506412                      11923
#                       mean     10977.20448                10781.16023
#                     median     10637                      10625*
#                     stddev      4019.38415                  380.76949
#             standard error        29.36910                    2.84410
#       99% confidence level        75.65480                    7.32640
#                       skew       102.23882                    1.24438
#                   kurtosis     12373.14417                    0.23986
#           time correlation         0.11857                    0.06481
#
#               elapsed time        20.00486
#                   run time        18.28582
#          getnsecs overhead      1399
#
#          number of samples     18730
#         number of outliers       806
#    number of final samples     17924
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           10148 |*                                   10170.33333
#                 21           10193 |*                                   10222.28571
#                 47           10238 |*                                   10263.34043
#                120           10283 |*                                   10306.96667
#                131           10328 |*                                   10351.41985
#                311           10373 |***                                 10400.05788
#                901           10418 |***********                         10444.09545
#               1925           10463 |************************            10486.63377
#               2533           10508 |********************************    10529.55626
#               2005           10553 |*************************           10574.27731
#               1635           10598 |********************                10619.60673
#               1337           10643 |****************                    10665.01645
#               1196           10688 |***************                     10709.06355
#                778           10733 |*********                           10753.74036
#                453           10778 |*****                               10796.61810
#                233           10823 |**                                  10841.68670
#                154           10868 |*                                   10888.82468
#                 72           10913 |*                                   10933.77778
#                 55           10958 |*                                   10975.16364
#                 21           11003 |*                                   11027.09524
#                 20           11048 |*                                   11061.70000
#                 28           11093 |*                                   11116.78571
#                 65           11138 |*                                   11166.09231
#                159           11183 |**                                  11207.05660
#                324           11228 |****                                11252.65432
#                449           11273 |*****                               11295.44321
#                442           11318 |*****                               11340.89819
#                416           11363 |*****                               11384.24519
#                426           11408 |*****                               11430.07981
#                322           11453 |****                                11474.31366
#                286           11498 |***                                 11518.38462
#                159           11543 |**                                  11556.61635
#
#                897           > 95% |***********                         11708.01226
#
#        mean of 95%     10732.33271
#          95th %ile           11573
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
log2   1   1             171        19293        0     4961     log2
# bin/../bin-riscv64/log -N log2 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log2 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       161                        161
#                        max     70320                        193
#                       mean       182.99511                  173.60167
#                     median       172                        171*
#                     stddev       497.51091                    6.39762
#             standard error         3.48037                    0.04606
#       99% confidence level         8.96544                    0.11865
#                       skew       137.51702                    1.29916
#                   kurtosis     19335.23518                    0.64721
#           time correlation         0.00357                    0.00101
#
#               elapsed time        20.00417
#                   run time        17.92784
#          getnsecs overhead      1399
#
#          number of samples     20434
#         number of outliers      1141
#    number of final samples     19293
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             161 |*                                             -
#                 10             162 |*                                             -
#                  7             163 |*                                             -
#                 47             164 |*                                             -
#                286             165 |***                                           -
#                333             166 |***                                           -
#                457             167 |****                                          -
#               1102             168 |***********                                   -
#               2465             169 |**************************                    -
#               2988             170 |********************************              -
#               2452             171 |**************************                    -
#               1920             172 |********************                          -
#               1498             173 |****************                              -
#                890             174 |*********                                     -
#                521             175 |*****                                         -
#                275             176 |**                                            -
#                152             177 |*                                             -
#                118             178 |*                                             -
#                 93             179 |*                                             -
#                 91             180 |*                                             -
#                187             181 |**                                            -
#                326             182 |***                                           -
#                409             183 |****                                          -
#                481             184 |*****                                         -
#                455             185 |****                                          -
#                455             186 |****                                          -
#                304             187 |***                                           -
#
#                965           > 95% |**********                            189.79793
#
#        mean of 95%       172.74891
#          95th %ile             187
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log2f   1   1             124        19979        0     6586    log2f
# bin/../bin-riscv64/log -N log2f -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log2f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       119                        119
#                        max     72300                        142
#                       mean       134.86495                  126.23395
#                     median       124                        124*
#                     stddev       501.51343                    5.15266
#             standard error         3.44620                    0.03645
#       99% confidence level         8.87740                    0.09391
#                       skew       141.01664                    1.25737
#                   kurtosis     20247.87070                    0.52031
#           time correlation         0.00308                    0.00080
#
#               elapsed time        20.00651
#                   run time        17.98676
#          getnsecs overhead      1399
#
#          number of samples     21178
#         number of outliers      1199
#    number of final samples     19979
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12             119 |*                                             -
#                135             120 |*                                             -
#               1060             121 |********                                      -
#               3257             122 |***************************                   -
#               3818             123 |********************************              -
#               2803             124 |***********************                       -
#               1741             125 |**************                                -
#               1178             126 |*********                                     -
#                683             127 |*****                                         -
#                326             128 |**                                            -
#                182             129 |*                                             -
#                262             130 |**                                            -
#                597             131 |*****                                         -
#                701             132 |*****                                         -
#                649             133 |*****                                         -
#                529             134 |****                                          -
#                433             135 |***                                           -
#                342             136 |**                                            -
#                272             137 |**                                            -
#
#                999           > 95% |********                              139.50651
#
#        mean of 95%       125.53535
#          95th %ile             137
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log2l   1   1           90170         7222        0       10    log2l
# bin/../bin-riscv64/log -N log2l -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f log2l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     85800                      85800
#                        max    776694                     101071
#                       mean     92693.95736                91256.38840
#                     median     90311                      90170*
#                     stddev     13549.50176                 3271.71434
#             standard error       155.44390                   38.49875
#       99% confidence level       400.42348                   99.17278
#                       skew        24.36667                    1.17097
#                   kurtosis       959.19498                    0.36685
#           time correlation         2.33374                    1.42822
#
#               elapsed time        20.00776
#                   run time         7.05348
#          getnsecs overhead      1399
#
#          number of samples      7598
#         number of outliers       376
#    number of final samples      7222
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           85800 |*                                   86038.00000
#                 15           86187 |*                                   86452.86667
#                 36           86574 |*                                   86795.72222
#                112           86961 |*****                               87169.91071
#                187           87348 |*********                           87552.66310
#                322           87735 |****************                    87938.69876
#                401           88122 |********************                88324.30923
#                546           88509 |****************************        88715.86996
#                564           88896 |*****************************       89089.89007
#                616           89283 |*******************************     89472.14773
#                622           89670 |********************************    89860.22186
#                556           90057 |****************************        90243.32374
#                494           90444 |*************************           90638.07085
#                381           90831 |*******************                 91011.27034
#                290           91218 |**************                      91400.92759
#                230           91605 |***********                         91780.30435
#                151           91992 |*******                             92165.56954
#                 85           92379 |****                                92572.05882
#                 72           92766 |***                                 92951.55556
#                 44           93153 |**                                  93342.59091
#                 39           93540 |**                                  93727.15385
#                 29           93927 |*                                   94113.75862
#                 50           94314 |**                                  94517.00000
#                 77           94701 |***                                 94899.96104
#                 95           95088 |****                                95285.10526
#                103           95475 |*****                               95667.60194
#                139           95862 |*******                             96036.17986
#                121           96249 |******                              96437.52893
#                147           96636 |*******                             96837.93878
#                114           97023 |*****                               97207.22807
#                121           97410 |******                              97598.27273
#                 94           97797 |****                                97963.87234
#
#                362           > 95% |******************                  99347.02210
#
#        mean of 95%     90829.44825
#          95th %ile           98171
#
# WARNINGS
#     Actual benchmark run time only accounts for 35.3% of elapsed time.
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
logf   1   1             146        19522        0     5618     logf
# bin/../bin-riscv64/log -N logf -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f logf 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       136                        136
#                        max     90581                        163
#                       mean       158.11594                  147.38833
#                     median       146                        146*
#                     stddev       625.70285                    5.10034
#             standard error         4.30599                    0.03650
#       99% confidence level        11.09222                    0.09403
#                       skew       143.03137                    1.39119
#                   kurtosis     20655.21773                    1.05748
#           time correlation         0.00362                    0.00079
#
#               elapsed time        20.00593
#                   run time        17.91520
#          getnsecs overhead      1399
#
#          number of samples     21115
#         number of outliers      1593
#    number of final samples     19522
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7             136 |*                                             -
#                 33             137 |*                                             -
#                 14             138 |*                                             -
#                 10             139 |*                                             -
#                  7             140 |*                                             -
#                183             141 |*                                             -
#                999             142 |*********                                     -
#               1803             143 |****************                              -
#               2861             144 |*************************                     -
#               3535             145 |********************************              -
#               2575             146 |***********************                       -
#               1699             147 |***************                               -
#               1087             148 |*********                                     -
#                622             149 |*****                                         -
#                388             150 |***                                           -
#                235             151 |**                                            -
#                247             152 |**                                            -
#                182             153 |*                                             -
#                220             154 |*                                             -
#                358             155 |***                                           -
#                462             156 |****                                          -
#                455             157 |****                                          -
#                411             158 |***                                           -
#                152             159 |*                                             -
#
#                977           > 95% |********                              160.87615
#
#        mean of 95%       146.67776
#          95th %ile             159
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
logl   1   1            9555        17883        0       98     logl
# bin/../bin-riscv64/log -N logl -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f logl 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8803                       8803
#                        max    437702                      10754
#                       mean      9909.07487                 9702.85120
#                     median      9571                       9555*
#                     stddev      3383.41574                  350.42093
#             standard error        24.55105                    2.62041
#       99% confidence level        63.24350                    6.75019
#                       skew       107.26230                    1.16666
#                   kurtosis     13460.85463                    0.25570
#           time correlation         0.11438                    0.06106
#
#               elapsed time        20.00521
#                   run time        18.38037
#          getnsecs overhead      1399
#
#          number of samples     18992
#         number of outliers      1109
#    number of final samples     17883
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            8803 |*                                    8803.00000
#                 21            8854 |*                                    8881.90476
#                  1            8905 |*                                    8905.00000
#                  8            8956 |*                                    8971.25000
#                  4            9007 |*                                    9033.50000
#                 10            9058 |*                                    9090.60000
#                 14            9109 |*                                    9135.57143
#                 20            9160 |*                                    9188.65000
#                 33            9211 |*                                    9238.45455
#                 44            9262 |*                                    9296.86364
#                483            9313 |******                               9343.17598
#               1806            9364 |***********************              9391.14729
#               2250            9415 |*****************************        9439.36622
#               2474            9466 |********************************     9491.11722
#               2198            9517 |****************************         9539.79026
#               1313            9568 |****************                     9590.27266
#               1057            9619 |*************                        9643.25828
#                863            9670 |***********                          9693.80070
#                460            9721 |*****                                9743.15870
#                302            9772 |***                                  9794.88411
#                252            9823 |***                                  9847.24603
#                157            9874 |**                                   9896.26752
#                 91            9925 |*                                    9949.38462
#                119            9976 |*                                   10003.77311
#                248           10027 |***                                 10056.70968
#                374           10078 |****                                10103.95187
#                500           10129 |******                              10155.61800
#                480           10180 |******                              10203.42500
#                431           10231 |*****                               10254.48028
#                397           10282 |*****                               10305.99748
#                328           10333 |****                                10356.58232
#                249           10384 |***                                 10406.52610
#
#                895           > 95% |***********                         10566.26927
#
#        mean of 95%      9657.36267
#          95th %ile           10433
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
        prc thr      nsecs/call      samples   errors cnt/samp 
longjmp   1   1             135        20698        0     5828 
# bin/../bin-riscv64/longjmp -N longjmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       107                        115
#                        max    132152                        156
#                       mean       147.50578                  135.61040
#                     median       135                        135*
#                     stddev       969.21173                    6.76055
#             standard error         6.56463                    0.04699
#       99% confidence level        16.91049                    0.12105
#                       skew       124.33564                    0.54171
#                   kurtosis     16262.47809                    0.52574
#           time correlation         0.00424                    0.00107
#
#               elapsed time        20.00436
#                   run time        17.45182
#          getnsecs overhead      1399
#
#          number of samples     21798
#         number of outliers      1100
#    number of final samples     20698
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 60             115 |*                                     115.51667
#                 67             117 |*                                     117.32836
#                 83             119 |*                                     119.63855
#                128             121 |*                                     121.47656
#                215             123 |*                                     123.69302
#                411             125 |***                                   125.49878
#               1527             127 |**************                        127.65881
#               2007             129 |******************                    129.48082
#               2004             131 |******************                    131.57784
#               3478             133 |********************************      133.53220
#               3074             135 |****************************          135.45218
#               2308             137 |*********************                 137.46360
#               1383             139 |************                          139.42155
#                763             141 |*******                               141.43906
#                646             143 |*****                                 143.52941
#                703             145 |******                                145.49360
#                690             147 |******                                147.50580
#                116             149 |*                                     149.00000
#
#               1035           > 95% |*********                             151.74879
#
#        mean of 95%       134.76092
#          95th %ile             149
#
# Usage: longjmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'longjmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures longjmp()
        prc thr      nsecs/call      samples   errors cnt/samp 
lrand48   1   1             156        20605        0     5001 
# bin/../bin-riscv64/lrand48 -N lrand48 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       149                        149
#                        max    138021                        177
#                       mean       172.49558                  157.87149
#                     median       156                        156*
#                     stddev       959.27330                    6.24491
#             standard error         6.45964                    0.04351
#       99% confidence level        16.64004                    0.11207
#                       skew       136.78863                    1.22503
#                   kurtosis     19415.26462                    0.52018
#           time correlation         0.00470                    0.00095
#
#               elapsed time        20.00560
#                   run time        17.76514
#          getnsecs overhead      1399
#
#          number of samples     22053
#         number of outliers      1448
#    number of final samples     20605
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8             149 |*                                             -
#                110             150 |*                                             -
#                798             151 |*********                                     -
#               2196             152 |**************************                    -
#               2668             153 |********************************              -
#               1835             154 |**********************                        -
#               1719             155 |********************                          -
#               2104             156 |*************************                     -
#               1937             157 |***********************                       -
#               1179             158 |**************                                -
#                896             159 |**********                                    -
#                563             160 |******                                        -
#                295             161 |***                                           -
#                144             162 |*                                             -
#                148             163 |*                                             -
#                208             164 |**                                            -
#                295             165 |***                                           -
#                352             166 |****                                          -
#                491             167 |*****                                         -
#                570             168 |******                                        -
#                461             169 |*****                                         -
#                395             170 |****                                          -
#                202             171 |**                                            -
#
#               1031           > 95% |************                          173.65470
#
#        mean of 95%       157.04016
#          95th %ile             171
#
# Usage: lrand48
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'lrand48')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures lrand48()
          prc thr      nsecs/call      samples   errors cnt/samp     size
lseek_t8k   1   1            1846        18376        0      478     8192
# bin/../bin-riscv64/lseek -N lseek_t8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 8k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1745                       1745
#                        max    151802                       2350
#                       mean      1983.47824                 1913.49086
#                     median      1850                       1846*
#                     stddev      1187.23917                  145.54832
#             standard error         8.51051                    1.07370
#       99% confidence level        21.92308                    2.76584
#                       skew       105.78779                    1.39124
#                   kurtosis     13101.45381                    0.56722
#           time correlation         0.04069                    0.02340
#
#               elapsed time        20.00370
#                   run time        18.23088
#          getnsecs overhead      1399
#
#          number of samples     19461
#         number of outliers      1085
#    number of final samples     18376
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            1745 |*                                    1754.62500
#                169            1761 |*                                    1771.10651
#                701            1777 |*******                              1785.92011
#               1792            1793 |*******************                  1801.64286
#               2868            1809 |********************************     1816.63703
#               2758            1825 |******************************       1832.29442
#               2194            1841 |************************             1848.11486
#               1367            1857 |***************                      1864.01390
#                909            1873 |**********                           1880.12101
#                497            1889 |*****                                1895.96378
#                314            1905 |***                                  1911.78981
#                231            1921 |**                                   1927.75325
#                178            1937 |*                                    1944.61236
#                110            1953 |*                                    1959.70000
#                 93            1969 |*                                    1976.36559
#                 71            1985 |*                                    1992.88732
#                 65            2001 |*                                    2006.83077
#                 66            2017 |*                                    2024.04545
#                 76            2033 |*                                    2040.60526
#                137            2049 |*                                    2057.27007
#                277            2065 |***                                  2073.02527
#                346            2081 |***                                  2088.82948
#                313            2097 |***                                  2104.67732
#                296            2113 |***                                  2120.63851
#                244            2129 |**                                   2136.65164
#                225            2145 |**                                   2152.25778
#                260            2161 |**                                   2168.92692
#                276            2177 |***                                  2184.42029
#                239            2193 |**                                   2200.76569
#                224            2209 |**                                   2216.01339
#                153            2225 |*                                    2229.92810
#
#                919           > 95% |**********                           2282.60501
#
#        mean of 95%      1894.05935
#          95th %ile            2235
#
# Usage: lseek
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'lseek')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
# notes: measures lseek()
          prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_10   1   1             225         2120        0    38858     10 10 
# bin/../bin-riscv64/malloc -N malloc_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       219                        219
#                        max     17415                        233
#                       mean       234.48258                  225.01132
#                     median       225                        225*
#                     stddev       361.33595                    2.71761
#             standard error         7.58902                    0.05902
#       99% confidence level        19.54930                    0.15204
#                       skew        47.43897                    0.70869
#                   kurtosis      2252.49074                    0.00004
#           time correlation         0.02838                    0.00427
#
#               elapsed time        20.01006
#                   run time        19.95944
#          getnsecs overhead      1399
#
#          number of samples      2267
#         number of outliers       147
#    number of final samples      2120
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             219 |*                                             -
#                  3             220 |*                                             -
#                 95             221 |*********                                     -
#                320             222 |********************************              -
#                298             223 |*****************************                 -
#                320             224 |********************************              -
#                286             225 |****************************                  -
#                230             226 |***********************                       -
#                191             227 |*******************                           -
#                114             228 |***********                                   -
#                106             229 |**********                                    -
#                 48             230 |****                                          -
#
#                106           > 95% |**********                            231.55660
#
#        mean of 95%       224.66683
#          95th %ile             230
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
           prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_100   1   1             227         2465        0    32958     10 100 
# bin/../bin-riscv64/malloc -N malloc_100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100 -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       211                        219
#                        max     44370                        234
#                       mean       252.50019                  226.66450
#                     median       227                        227*
#                     stddev       866.62947                    2.51227
#             standard error        16.86995                    0.05060
#       99% confidence level        43.45699                    0.13035
#                       skew        50.09231                   -0.01207
#                   kurtosis      2543.34427                    0.67475
#           time correlation         0.06174                    0.00335
#
#               elapsed time        20.01293
#                   run time        19.94534
#          getnsecs overhead      1399
#
#          number of samples      2639
#         number of outliers       174
#    number of final samples      2465
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9             219 |*                                             -
#                 25             220 |*                                             -
#                 40             221 |**                                            -
#                 65             222 |****                                          -
#                102             223 |*******                                       -
#                142             224 |*********                                     -
#                335             225 |***********************                       -
#                429             226 |*****************************                 -
#                463             227 |********************************              -
#                357             228 |************************                      -
#                241             229 |****************                              -
#                107             230 |*******                                       -
#                 26             231 |*                                             -
#
#                124           > 95% |********                              232.27419
#
#        mean of 95%       226.36736
#          95th %ile             231
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
            prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_100k   1   1          157171         1831        0       57     10 102400 
# bin/../bin-riscv64/malloc -N malloc_100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     96056                     112599
#                        max   1099885                     201444
#                       mean    168774.43127               156547.50464
#                     median    158181                     157171*
#                     stddev     57651.04095                15105.73522
#             standard error      1268.35842                  353.01869
#       99% confidence level      3267.29128                  909.37614
#                       skew         4.96924                    0.11609
#                   kurtosis        44.17531                    0.20113
#           time correlation        61.10165                   27.61184
#
#               elapsed time        20.00882
#                   run time        19.90500
#          getnsecs overhead      1399
#
#          number of samples      2066
#         number of outliers       235
#    number of final samples      1831
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          112599 |*                                  113371.50000
#                  3          114779 |*                                  115453.66667
#                  1          116959 |*                                  117872.00000
#                  2          119139 |*                                  121028.00000
#                  4          121319 |*                                  122913.75000
#                  9          123499 |*                                  124532.55556
#                 11          125679 |**                                 126810.18182
#                 25          127859 |*****                              129291.52000
#                 38          130039 |*******                            131033.73684
#                 53          132219 |**********                         133393.67925
#                 65          134399 |*************                      135514.18462
#                 51          136579 |**********                         137820.86275
#                 53          138759 |**********                         139789.41509
#                 35          140939 |*******                            141992.08571
#                 42          143119 |********                           144146.52381
#                 57          145299 |***********                        146350.61404
#                 62          147479 |************                       148513.32258
#                 96          149659 |*******************                150813.85417
#                123          151839 |************************           152960.41463
#                123          154019 |************************           155082.71545
#                136          156199 |***************************        157394.85294
#                158          158379 |********************************   159422.37975
#                117          160559 |***********************            161667.64957
#                102          162739 |********************               163727.15686
#                 67          164919 |*************                      166057.65672
#                 72          167099 |**************                     168273.54167
#                 57          169279 |***********                        170474.68421
#                 47          171459 |*********                          172425.55319
#                 42          173639 |********                           174668.45238
#                 35          175819 |*******                            177062.11429
#                 30          177999 |******                             179092.30000
#                 17          180179 |***                                181400.70588
#
#                 92           > 95% |******************                 190366.88043
#
#        mean of 95%    154758.32547
#          95th %ile          182336
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
           prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_10k   1   1             423         2532        0    17529     10 10240 
# bin/../bin-riscv64/malloc -N malloc_10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       394                        404
#                        max     86650                        442
#                       mean       470.09776                  422.21406
#                     median       423                        423*
#                     stddev      1677.10489                    6.44271
#             standard error        32.39611                    0.12804
#       99% confidence level        83.45237                    0.32982
#                       skew        50.70552                    0.35197
#                   kurtosis      2599.91297                   -0.29901
#           time correlation         0.11408                    0.00862
#
#               elapsed time        20.01031
#                   run time        19.93927
#          getnsecs overhead      1399
#
#          number of samples      2680
#         number of outliers       148
#    number of final samples      2532
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             404 |*                                             -
#                  3             405 |*                                             -
#                  0             406 |                                              -
#                  1             407 |*                                             -
#                  0             408 |                                              -
#                  0             409 |                                              -
#                  5             410 |*                                             -
#                 17             411 |**                                            -
#                 32             412 |*****                                         -
#                 95             413 |***************                               -
#                153             414 |*************************                     -
#                190             415 |*******************************               -
#                160             416 |**************************                    -
#                137             417 |**********************                        -
#                 86             418 |**************                                -
#                 80             419 |*************                                 -
#                 65             420 |**********                                    -
#                 89             421 |**************                                -
#                123             422 |********************                          -
#                131             423 |*********************                         -
#                194             424 |********************************              -
#                175             425 |****************************                  -
#                188             426 |*******************************               -
#                135             427 |**********************                        -
#                 98             428 |****************                              -
#                 71             429 |***********                                   -
#                 52             430 |********                                      -
#                 52             431 |********                                      -
#                 42             432 |******                                        -
#                 30             433 |****                                          -
#
#                127           > 95% |********************                  436.64567
#
#        mean of 95%       421.45198
#          95th %ile             433
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
          prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_1k   1   1            1596         2138        0     5375     10 1024 
# bin/../bin-riscv64/malloc -N malloc_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1515                       1515
#                        max     79595                       1686
#                       mean      1679.67177                 1600.13517
#                     median      1599                       1596*
#                     stddev      1684.77962                   28.60291
#             standard error        35.22209                    0.61859
#       99% confidence level        90.73210                    1.59350
#                       skew        43.58727                    0.45398
#                   kurtosis      1999.68082                    0.21085
#           time correlation         0.24258                    0.04470
#
#               elapsed time        20.00873
#                   run time        19.92329
#          getnsecs overhead      1399
#
#          number of samples      2288
#         number of outliers       150
#    number of final samples      2138
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            1515 |*                                    1517.00000
#                  1            1520 |*                                    1522.00000
#                  4            1525 |*                                    1527.75000
#                  3            1530 |*                                    1531.33333
#                  4            1535 |*                                    1537.50000
#                 11            1540 |*                                    1542.54545
#                 29            1545 |****                                 1547.06897
#                 38            1550 |******                               1552.36842
#                 41            1555 |******                               1556.87805
#                 55            1560 |********                             1562.05455
#                 62            1565 |*********                            1567.32258
#                 81            1570 |************                         1571.88889
#                131            1575 |********************                 1577.30534
#                182            1580 |****************************         1582.06044
#                201            1585 |********************************     1586.92040
#                170            1590 |***************************          1592.10588
#                160            1595 |*************************            1597.16250
#                138            1600 |*********************                1602.00000
#                130            1605 |********************                 1606.93846
#                 89            1610 |**************                       1611.97753
#                116            1615 |******************                   1616.71552
#                 72            1620 |***********                          1622.05556
#                 78            1625 |************                         1626.70513
#                 74            1630 |***********                          1632.01351
#                 60            1635 |*********                            1636.70000
#                 42            1640 |******                               1641.83333
#                 32            1645 |*****                                1647.03125
#                 24            1650 |***                                  1651.41667
#
#                107           > 95% |*****************                    1667.64486
#
#        mean of 95%      1596.57853
#          95th %ile            1653
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10   1   1              71        21895        0    10324       10
# bin/../bin-riscv64/memcpy -N memcpy_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        66                         66
#                        max    103851                         80
#                       mean        80.32384                   71.67486
#                     median        71                         71*
#                     stddev       709.30447                    2.62445
#             standard error         4.64541                    0.01774
#       99% confidence level        11.96658                    0.04569
#                       skew       137.82127                    1.58476
#                   kurtosis     19799.34550                    1.53364
#           time correlation         0.00249                    0.00035
#
#               elapsed time        20.00479
#                   run time        17.52984
#          getnsecs overhead      1399
#
#          number of samples     23314
#         number of outliers      1419
#    number of final samples     21895
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1              66 |*                                             -
#                 10              67 |*                                             -
#                110              68 |*                                             -
#               1537              69 |******                                        -
#               7372              70 |********************************              -
#               6245              71 |***************************                   -
#               2394              72 |**********                                    -
#                561              73 |**                                            -
#                154              74 |*                                             -
#                368              75 |*                                             -
#                934              76 |****                                          -
#                916              77 |***                                           -
#                198              78 |*                                             -
#
#               1095           > 95% |****                                   78.84932
#
#        mean of 95%        71.29716
#          95th %ile              78
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10k   1   1            2191        18473        0      386    10240
# bin/../bin-riscv64/memcpy -N memcpy_10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2048                       2048
#                        max    557803                       2421
#                       mean      2338.31827                 2214.71824
#                     median      2196                       2191*
#                     stddev      4851.95307                   68.68057
#             standard error        33.97213                    0.50532
#       99% confidence level        87.51221                    1.30170
#                       skew       103.01417                    1.40064
#                   kurtosis     10902.88283                    0.91811
#           time correlation         0.04377                    0.01127
#
#               elapsed time        20.00475
#                   run time        17.81624
#          getnsecs overhead      1399
#
#          number of samples     20398
#         number of outliers      1925
#    number of final samples     18473
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            2048 |*                                    2051.00000
#                  1            2059 |*                                    2061.00000
#                  5            2070 |*                                    2072.40000
#                  8            2081 |*                                    2087.00000
#                  9            2092 |*                                    2096.44444
#                 18            2103 |*                                    2109.11111
#                 51            2114 |*                                    2120.07843
#                152            2125 |*                                    2131.10526
#                539            2136 |******                               2142.02412
#               1291            2147 |****************                     2152.67932
#               2109            2158 |**************************           2163.28070
#               2532            2169 |********************************     2174.14771
#               2433            2180 |******************************       2184.98068
#               2033            2191 |*************************            2195.80472
#               1582            2202 |*******************                  2206.75664
#                973            2213 |************                         2217.47893
#                682            2224 |********                             2228.62757
#                403            2235 |*****                                2239.44913
#                270            2246 |***                                  2250.70741
#                142            2257 |*                                    2261.35915
#                 73            2268 |*                                    2272.17808
#                 73            2279 |*                                    2284.10959
#                111            2290 |*                                    2295.42342
#                193            2301 |**                                   2306.38342
#                301            2312 |***                                  2317.55482
#                344            2323 |****                                 2328.22093
#                335            2334 |****                                 2339.02090
#                378            2345 |****                                 2349.74074
#                346            2356 |****                                 2360.67919
#                160            2367 |**                                   2368.96875
#
#                924           > 95% |***********                          2392.58009
#
#        mean of 95%      2205.35335
#          95th %ile            2371
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10m   1   1         2833513         6200        0        1 10485760
# bin/../bin-riscv64/memcpy -N memcpy_10m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2560312                    2560312
#                        max 163200214                    4371320
#                       mean   3100454.78359              3021873.87355
#                     median   2835613                    2833513*
#                     stddev   2140018.92913               454129.11941
#             standard error     26985.27309                 5767.44558
#       99% confidence level     69514.06348                14856.93982
#                       skew        66.81835                    1.49361
#                   kurtosis      4979.61350                    0.75412
#           time correlation       276.90883                  211.24965
#
#               elapsed time        20.01370
#                   run time        19.67076
#          getnsecs overhead      1399
#
#          number of samples      6289
#         number of outliers        89
#    number of final samples      6200
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 43         2560312 |*                                 2595435.58140
#                675         2606447 |**************                    2635992.65778
#                485         2652582 |**********                        2668226.90928
#                120         2698717 |**                                2721257.92500
#                396         2744852 |********                          2776414.65404
#               1469         2790987 |********************************  2812859.17291
#                779         2837122 |****************                  2857478.19769
#                364         2883257 |*******                           2904308.22253
#                203         2929392 |****                              2951403.04926
#                126         2975527 |**                                2997429.16667
#                 79         3021662 |*                                 3042756.03797
#                 63         3067797 |*                                 3091600.26984
#                 59         3113932 |*                                 3134958.74576
#                 37         3160067 |*                                 3180782.48649
#                 25         3206202 |*                                 3229167.16000
#                 72         3252337 |*                                 3279984.76389
#                 80         3298472 |*                                 3318379.35000
#                 72         3344607 |*                                 3366222.75000
#                 40         3390742 |*                                 3414313.42500
#                 13         3436877 |*                                 3452470.07692
#                 10         3483012 |*                                 3506146.40000
#                  9         3529147 |*                                 3550739.00000
#                  6         3575282 |*                                 3590050.16667
#                 15         3621417 |*                                 3645083.60000
#                  5         3667552 |*                                 3699417.00000
#                 12         3713687 |*                                 3741450.66667
#                  8         3759822 |*                                 3788004.87500
#                 15         3805957 |*                                 3830377.73333
#                 53         3852092 |*                                 3878317.90566
#                122         3898227 |**                                3921701.71311
#                192         3944362 |****                              3969813.63542
#                243         3990497 |*****                             4012208.25103
#
#                310           > 95% |******                            4106561.23226
#
#        mean of 95%   2964785.06520
#          95th %ile         4036618
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_1k   1   1             310        17905        0     2745     1024
# bin/../bin-riscv64/memcpy -N memcpy_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       295                        295
#                        max    148701                        349
#                       mean       333.08044                  314.30980
#                     median       311                        310*
#                     stddev      1101.70181                   11.48648
#             standard error         7.71100                    0.08584
#       99% confidence level        19.86353                    0.22113
#                       skew       124.83454                    1.26746
#                   kurtosis     16355.98983                    0.56544
#           time correlation         0.00662                    0.00199
#
#               elapsed time        20.00476
#                   run time        18.11815
#          getnsecs overhead      1399
#
#          number of samples     20413
#         number of outliers      2508
#    number of final samples     17905
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             295 |*                                     295.66667
#                 17             297 |*                                     297.70588
#                134             299 |*                                     299.67910
#                557             301 |******                                301.66427
#               1317             303 |***************                       303.60744
#               2394             305 |***************************           305.53718
#               2775             307 |********************************      307.46991
#               2445             309 |****************************          309.46830
#               1698             311 |*******************                   311.45347
#               1171             313 |*************                         313.44833
#                660             315 |*******                               315.42727
#                386             317 |****                                  317.43005
#                237             319 |**                                    319.43882
#                211             321 |**                                    321.44550
#                215             323 |**                                    323.55349
#                307             325 |***                                   325.56026
#                415             327 |****                                  327.49880
#                499             329 |*****                                 329.49699
#                459             331 |*****                                 331.45969
#                384             333 |****                                  333.48958
#                360             335 |****                                  335.46111
#                268             337 |***                                   337.44776
#                 97             339 |*                                     339.00000
#
#                896           > 95% |**********                            343.89955
#
#        mean of 95%       312.75107
#          95th %ile             339
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_1m   1   1          219051        18838        0        3  1048576
# bin/../bin-riscv64/memcpy -N memcpy_1m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    207276                     207276
#                        max  26452466                     248577
#                       mean    231026.29333               221672.46576
#                     median    219735                     219051*
#                     stddev    186987.20695                 8972.82971
#             standard error      1294.43989                   65.37505
#       99% confidence level      3334.47715                  168.40613
#                       skew       132.48876                    1.21093
#                   kurtosis     18533.72301                    0.60544
#           time correlation         3.65616                    1.50169
#
#               elapsed time        20.00392
#                   run time        17.97799
#          getnsecs overhead      1399
#
#          number of samples     20867
#         number of outliers      2029
#    number of final samples     18838
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          207276 |*                                  207793.75000
#                 45          208340 |*                                  208939.22222
#                155          209404 |**                                 210061.47742
#                500          210468 |********                           211116.56400
#               1048          211532 |******************                 212117.88454
#               1201          212596 |********************               213120.32057
#               1018          213660 |*****************                  214163.12868
#                929          214724 |****************                   215260.61356
#               1053          215788 |******************                 216395.57930
#               1506          216852 |**************************         217433.84529
#               1834          217916 |********************************   218436.65703
#               1563          218980 |***************************        219499.07102
#               1245          220044 |*********************              220544.33092
#                960          221108 |****************                   221613.25000
#                778          222172 |*************                      222686.31105
#                513          223236 |********                           223706.63158
#                320          224300 |*****                              224768.61250
#                227          225364 |***                                225875.43612
#                150          226428 |**                                 226960.62667
#                136          227492 |**                                 228026.53676
#                157          228556 |**                                 229121.03185
#                172          229620 |***                                230183.03488
#                182          230684 |***                                231176.29670
#                170          231748 |**                                 232332.84118
#                168          232812 |**                                 233347.07143
#                251          233876 |****                               234384.37052
#                287          234940 |*****                              235484.62369
#                344          236004 |******                             236533.81105
#                286          237068 |****                               237595.14685
#                259          238132 |****                               238636.33591
#                226          239196 |***                                239711.36283
#                205          240260 |***                                240741.68780
#
#                942           > 95% |****************                   244611.17622
#
#        mean of 95%    220465.03029
#          95th %ile          241301
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10   1   1              71        25034        0     8460       10
# bin/../bin-riscv64/memmove -N memmove_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        66                         66
#                        max    143702                        125
#                       mean        90.69493                   80.24451
#                     median        71                         71*
#                     stddev       947.04527                   14.79728
#             standard error         5.92355                    0.09352
#       99% confidence level        15.25906                    0.24091
#                       skew       141.42685                    0.96697
#                   kurtosis     20936.61018                   -0.55980
#           time correlation         0.00415                    0.00182
#
#               elapsed time        20.00433
#                   run time        16.99947
#          getnsecs overhead      1399
#
#          number of samples     25561
#         number of outliers       527
#    number of final samples     25034
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                114              66 |*                                      66.92982
#               8804              68 |********************************       68.76806
#               4274              70 |***************                        70.33552
#                980              72 |***                                    72.30612
#                828              74 |***                                    74.74879
#               1156              76 |****                                   76.38495
#                488              78 |*                                      78.38730
#                296              80 |*                                      80.41216
#                281              82 |*                                      82.69395
#                218              84 |*                                      84.43119
#                110              86 |*                                      86.48182
#                 90              88 |*                                      88.45556
#                 68              90 |*                                      90.52941
#                 89              92 |*                                      92.68539
#                389              94 |*                                      94.70951
#               2044              96 |*******                                96.58366
#               1224              98 |****                                   98.34722
#                359             100 |*                                     100.42897
#                395             102 |*                                     102.69367
#               1017             104 |***                                   104.45133
#                558             106 |**                                    106.25269
#
#               1252           > 95% |****                                  113.22923
#
#        mean of 95%        78.50803
#          95th %ile             107
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
            prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10k   1   1            2181        18566        0      387    10240
# bin/../bin-riscv64/memmove -N memmove_10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2064                       2064
#                        max    589303                       2419
#                       mean      2337.98067                 2207.28994
#                     median      2186                       2181*
#                     stddev      5102.87416                   70.55549
#             standard error        35.56204                    0.51781
#       99% confidence level        91.60782                    1.33388
#                       skew       103.43408                    1.42991
#                   kurtosis     10998.31935                    0.89029
#           time correlation         0.04531                    0.01136
#
#               elapsed time        20.00486
#                   run time        18.01334
#          getnsecs overhead      1399
#
#          number of samples     20590
#         number of outliers      2024
#    number of final samples     18566
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            2064 |*                                    2069.30000
#                  3            2074 |*                                    2078.00000
#                 10            2084 |*                                    2089.00000
#                 33            2094 |*                                    2098.90909
#                 51            2104 |*                                    2109.09804
#                106            2114 |*                                    2119.40566
#                222            2124 |**                                   2129.21622
#                580            2134 |******                               2139.27759
#               1372            2144 |***************                      2148.95991
#               2392            2154 |***************************          2158.81187
#               2787            2164 |********************************     2168.49444
#               2252            2174 |*************************            2178.33393
#               1708            2184 |*******************                  2188.28220
#               1355            2194 |***************                      2198.36458
#                959            2204 |***********                          2208.26799
#                700            2214 |********                             2218.10714
#                363            2224 |****                                 2227.80165
#                208            2234 |**                                   2238.01923
#                109            2244 |*                                    2247.70642
#                 52            2254 |*                                    2257.94231
#                 36            2264 |*                                    2268.22222
#                 35            2274 |*                                    2278.05714
#                 52            2284 |*                                    2289.59615
#                123            2294 |*                                    2299.03252
#                198            2304 |**                                   2308.88384
#                360            2314 |****                                 2318.72222
#                396            2324 |****                                 2328.45707
#                406            2334 |****                                 2338.52463
#                338            2344 |***                                  2348.13018
#                332            2354 |***                                  2358.41265
#                 89            2364 |*                                    2365.02247
#
#                929           > 95% |**********                           2388.75242
#
#        mean of 95%      2197.73170
#          95th %ile            2367
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
            prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10m   1   1         2820012         5537        0        1 10485760
# bin/../bin-riscv64/memmove -N memmove_10m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2566811                    2566811
#                        max  97711779                    3138513
#                       mean   2976956.06669              2805768.15153
#                     median   2837812                    2820012*
#                     stddev   1238394.02065               111035.43403
#             standard error     15280.66569                 1492.19071
#       99% confidence level     39362.99482                 3843.88328
#                       skew        68.24469                    0.08001
#                   kurtosis      5211.87213                   -0.13880
#           time correlation       178.66949                   67.02561
#
#               elapsed time        20.01219
#                   run time        19.65955
#          getnsecs overhead      1399
#
#          number of samples      6568
#         number of outliers      1031
#    number of final samples      5537
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6         2566811 |*                                 2575711.00000
#                 19         2580190 |*                                 2589605.78947
#                 77         2593569 |******                            2600774.74026
#                118         2606948 |*********                         2613766.15254
#                161         2620327 |*************                     2627399.93789
#                260         2633706 |*********************             2640379.65385
#                216         2647085 |*****************                 2653520.06019
#                145         2660464 |***********                       2666878.84828
#                172         2673843 |**************                    2680913.07558
#                135         2687222 |**********                        2693394.34074
#                 97         2700601 |*******                           2706446.57732
#                 53         2713980 |****                              2720249.39623
#                 40         2727359 |***                               2733596.47500
#                 38         2740738 |***                               2748253.68421
#                 69         2754117 |*****                             2760866.82609
#                138         2767496 |***********                       2774806.63768
#                315         2780875 |*************************         2788007.04127
#                376         2794254 |******************************    2801083.92021
#                362         2807633 |*****************************     2814677.09392
#                393         2821012 |********************************  2827552.65903
#                393         2834391 |********************************  2841252.45293
#                393         2847770 |********************************  2854602.62087
#                316         2861149 |*************************         2867880.14557
#                253         2874528 |********************              2880827.18972
#                160         2887907 |*************                     2894165.97500
#                128         2901286 |**********                        2907613.06250
#                115         2914665 |*********                         2920823.64348
#                 84         2928044 |******                            2935205.17857
#                 72         2941423 |*****                             2947519.43056
#                 65         2954802 |*****                             2961615.47692
#                 59         2968181 |****                              2975543.11864
#                 32         2981560 |**                                2988768.81250
#
#                277           > 95% |**********************            3052153.60289
#
#        mean of 95%   2792793.10019
#          95th %ile         2994913
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_1k   1   1             314        22450        0     2119     1024
# bin/../bin-riscv64/memmove -N memmove_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       299                        299
#                        max    578003                        351
#                       mean       374.42011                  317.76869
#                     median       315                        314*
#                     stddev      4564.16925                   10.97472
#             standard error        29.03935                    0.07325
#       99% confidence level        74.80537                    0.18868
#                       skew       114.75125                    1.38546
#                   kurtosis     13426.56005                    1.05287
#           time correlation         0.01475                    0.00151
#
#               elapsed time        20.00494
#                   run time        16.99581
#          getnsecs overhead      1399
#
#          number of samples     24703
#         number of outliers      2253
#    number of final samples     22450
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4             299 |*                                     299.50000
#                  7             301 |*                                     302.00000
#                 62             303 |*                                     303.72581
#                447             305 |***                                   305.65996
#               2005             307 |***************                       307.64788
#               4221             309 |********************************      309.54016
#               3325             311 |*************************             311.42045
#               2013             313 |***************                       313.43865
#               1538             315 |***********                           315.48895
#               1292             317 |*********                             317.46827
#               1170             319 |********                              319.50342
#               1170             321 |********                              321.47094
#                836             323 |******                                323.42584
#                574             325 |****                                  325.39547
#                395             327 |**                                    327.46582
#                250             329 |*                                     329.50000
#                205             331 |*                                     331.50732
#                272             333 |**                                    333.52574
#                355             335 |**                                    335.52113
#                345             337 |**                                    337.53913
#                334             339 |**                                    339.44611
#                319             341 |**                                    341.52038
#                188             343 |*                                     343.19149
#
#               1123           > 95% |********                              347.29386
#
#        mean of 95%       316.21400
#          95th %ile             344
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_1m   1   1          220176        15622        0        3  1048576
# bin/../bin-riscv64/memmove -N memmove_1m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    206401                     212101
#                        max  36270491                     228976
#                       mean    238498.41241               220508.95494
#                     median    221668                     220176*
#                     stddev    252593.73568                 2828.72676
#             standard error      1714.55999                   22.63199
#       99% confidence level      4416.70654                   58.30000
#                       skew       133.89718                    0.48003
#                   kurtosis     19075.92096                    0.03927
#           time correlation         4.65559                    0.60853
#
#               elapsed time        20.00671
#                   run time        17.77758
#          getnsecs overhead      1399
#
#          number of samples     21704
#         number of outliers      6082
#    number of final samples     15622
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          212101 |*                                  212276.00000
#                 10          212531 |*                                  212811.10000
#                 14          212961 |*                                  213173.64286
#                 20          213391 |*                                  213636.80000
#                 25          213821 |*                                  214079.08000
#                 38          214251 |*                                  214450.42105
#                 63          214681 |*                                  214965.04762
#                155          215111 |****                               215374.98710
#                186          215541 |*****                              215755.36559
#                268          215971 |*******                            216186.89552
#                384          216401 |***********                        216634.01302
#                512          216831 |***************                    217059.65820
#                665          217261 |*******************                217469.18195
#                692          217691 |********************               217918.60549
#                892          218121 |**************************         218334.85987
#               1011          218551 |*****************************      218770.19486
#               1080          218981 |********************************   219199.30556
#               1058          219411 |*******************************    219625.61342
#                978          219841 |****************************       220059.09305
#                944          220271 |***************************        220466.59534
#                913          220701 |***************************        220898.96166
#                731          221131 |*********************              221342.13680
#                671          221561 |*******************                221774.65872
#                642          221991 |*******************                222187.55452
#                541          222421 |****************                   222619.81701
#                538          222851 |***************                    223064.64312
#                439          223281 |*************                      223508.76082
#                360          223711 |**********                         223916.67778
#                318          224141 |*********                          224359.26415
#                260          224571 |*******                            224780.60769
#                247          225001 |*******                            225201.46964
#                181          225431 |*****                              225606.43094
#
#                782           > 95% |***********************            227098.74041
#
#        mean of 95%    220161.70344
#          95th %ile          225851
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
        prc thr      nsecs/call      samples   errors cnt/samp     size
memrand   1   1        49896694          190        0        2 134217728 
# bin/../bin-riscv64/memrand -N memrand -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 128m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  49367642                   49367642
#                        max  55226464                   51892501
#                       mean  50243839.61000             50107644.05789
#                     median  49913844                   49896694*
#                     stddev    858546.04372               598994.83098
#             standard error     60708.37295                43455.65238
#       99% confidence level    156384.76871               111941.76053
#                       skew         2.34070                    1.76968
#                   kurtosis         6.67439                    2.20005
#           time correlation     11695.33997                 9074.20684
#
#               elapsed time        21.76150
#                   run time        20.09782
#          getnsecs overhead      1399
#
#          number of samples       200
#         number of outliers        10
#    number of final samples       190
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        49367642 |*                                49367642.00000
#                  4        49440176 |*****                            49496692.00000
#                  5        49512710 |******                           49545982.40000
#                 12        49585244 |****************                 49637838.75000
#                 24        49657778 |******************************** 49691107.58333
#                 21        49730312 |****************************     49770609.76190
#                 22        49802846 |*****************************    49846811.81818
#                 20        49875380 |**************************       49908549.00000
#                 14        49947914 |******************               49982997.57143
#                 10        50020448 |*************                    50046439.40000
#                  6        50092982 |********                         50141636.66667
#                  5        50165516 |******                           50205485.00000
#                  8        50238050 |**********                       50274707.62500
#                  4        50310584 |*****                            50361257.75000
#                  3        50383118 |****                             50411112.66667
#                  2        50455652 |**                               50472821.00000
#                  2        50528186 |**                               50579921.50000
#                  3        50600720 |****                             50644246.33333
#                  0        50673254 |                                              -
#                  2        50745788 |**                               50773422.00000
#                  2        50818322 |**                               50851172.50000
#                  0        50890856 |                                              -
#                  0        50963390 |                                              -
#                  0        51035924 |                                              -
#                  1        51108458 |*                                51137548.00000
#                  1        51180992 |*                                51213349.00000
#                  0        51253526 |                                              -
#                  0        51326060 |                                              -
#                  2        51398594 |**                               51440625.00000
#                  1        51471128 |*                                51512600.00000
#                  3        51543662 |****                             51599967.00000
#                  2        51616196 |**                               51686951.00000
#
#                 10           > 95% |*************                    51795815.90000
#
#        mean of 95%  50013856.73333
#          95th %ile        51688700
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_128k   1   1         5130271         1693        0        2   131072 
# bin/../bin-riscv64/memrand -N memrand_128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 128k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   4984220                    4984220
#                        max   9898789                    5507622
#                       mean   5196228.21999              5173333.09392
#                     median   5138371                    5130271*
#                     stddev    216654.67331               115890.25762
#             standard error      5192.40639                 2816.55638
#       99% confidence level     13375.63886                 7255.44924
#                       skew         8.80303                    0.45944
#                   kurtosis       148.51963                   -0.99949
#           time correlation       290.28543                  231.37763
#
#               elapsed time        20.01386
#                   run time        18.09570
#          getnsecs overhead      1399
#
#          number of samples      1741
#         number of outliers        48
#    number of final samples      1693
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3         4984220 |*                                 4989570.00000
#                 13         4996063 |***                               5002970.00000
#                 22         5007906 |*****                             5014435.90909
#                 47         5019749 |***********                       5026433.82979
#                 81         5031592 |*******************               5037408.28395
#                 76         5043435 |******************                5048891.75000
#                115         5055278 |****************************      5060680.15652
#                131         5067121 |********************************  5072969.54962
#                105         5078964 |*************************         5084711.29524
#                 97         5090807 |***********************           5096668.86598
#                 80         5102650 |*******************               5107989.83750
#                 60         5114493 |**************                    5120661.38333
#                 38         5126336 |*********                         5131611.57895
#                 38         5138179 |*********                         5143826.05263
#                 23         5150022 |*****                             5155760.08696
#                 20         5161865 |****                              5168370.95000
#                 16         5173708 |***                               5180717.87500
#                 15         5185551 |***                               5190704.33333
#                 22         5197394 |*****                             5203636.90909
#                 37         5209237 |*********                         5216083.16216
#                 38         5221080 |*********                         5227255.21053
#                 45         5232923 |**********                        5239314.33333
#                 47         5244766 |***********                       5251309.29787
#                 57         5256609 |*************                     5262769.24561
#                 52         5268452 |************                      5273898.88462
#                 56         5280295 |*************                     5286246.89286
#                 75         5292138 |******************                5297687.66667
#                 65         5303981 |***************                   5309975.75385
#                 42         5315824 |**********                        5321006.85714
#                 37         5327667 |*********                         5333365.94595
#                 33         5339510 |********                          5345516.75758
#                 22         5351353 |*****                             5358019.04545
#
#                 85           > 95% |********************              5409074.75294
#
#        mean of 95%   5160871.62562
#          95th %ile         5363172
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_16k   1   1            5232        18019        0      177    16384 
# bin/../bin-riscv64/memrand -N memrand_16k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 16k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5076                       5076
#                        max    156202                       5913
#                       mean      5459.45253                 5315.33165
#                     median      5243                       5232*
#                     stddev      1621.25107                  199.09972
#             standard error        11.75159                    1.48322
#       99% confidence level        30.27210                    3.82077
#                       skew        50.41720                    1.11962
#                   kurtosis      4150.23400                    0.08829
#           time correlation         0.07406                    0.03481
#
#               elapsed time        20.00581
#                   run time        18.31146
#          getnsecs overhead      1399
#
#          number of samples     19033
#         number of outliers      1014
#    number of final samples     18019
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 17            5076 |*                                    5085.88235
#                286            5097 |***                                  5109.54545
#               1549            5118 |********************                 5132.05036
#               2442            5139 |********************************     5151.48771
#               1860            5160 |************************             5170.02527
#               1243            5181 |****************                     5189.76830
#               1098            5202 |**************                       5212.84882
#               1079            5223 |**************                       5232.83689
#               1125            5244 |**************                       5252.74667
#                799            5265 |**********                           5274.40300
#                481            5286 |******                               5294.76507
#                423            5307 |*****                                5315.89125
#                261            5328 |***                                  5337.50192
#                175            5349 |**                                   5358.85143
#                156            5370 |**                                   5379.14103
#                119            5391 |*                                    5400.92437
#                104            5412 |*                                    5421.45192
#                112            5433 |*                                    5442.58929
#                139            5454 |*                                    5463.84173
#                282            5475 |***                                  5485.34397
#                465            5496 |******                               5506.04301
#                464            5517 |******                               5526.82328
#                367            5538 |****                                 5547.93733
#                388            5559 |*****                                5569.47165
#                361            5580 |****                                 5589.58726
#                317            5601 |****                                 5610.82019
#                285            5622 |***                                  5631.71579
#                221            5643 |**                                   5652.52941
#                195            5664 |**                                   5673.59487
#                168            5685 |**                                   5695.24405
#                137            5706 |*                                    5715.37226
#
#                901           > 95% |***********                          5807.39845
#
#        mean of 95%      5289.43188
#          95th %ile            5724
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_16m   1   1       240173130           50        0        2 16777216 
# bin/../bin-riscv64/memrand -N memrand_16m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 16m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 233620205                  233620205
#                        max 244123295                  244123295
#                       mean 239866656.58000            239866656.58000
#                     median 240173130                  240173130*
#                     stddev   2522555.05937              2522555.05937
#             standard error    356743.15768               356743.15768
#       99% confidence level    918970.37418               918970.37418
#                       skew        -0.63357                   -0.63357
#                   kurtosis         0.30989                    0.30989
#           time correlation    164338.55429               164338.55429
#
#               elapsed time        25.25056
#                   run time        23.98674
#          getnsecs overhead      1399
#
#          number of samples        50
#         number of outliers         0
#    number of final samples        50
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3       233620205 |*******************             233706771.66667
#                  0       233944961 |                                              -
#                  0       234269717 |                                              -
#                  0       234594473 |                                              -
#                  0       234919229 |                                              -
#                  0       235243985 |                                              -
#                  1       235568741 |******                          235649162.00000
#                  0       235893497 |                                              -
#                  1       236218253 |******                          236527766.00000
#                  1       236543009 |******                          236730316.00000
#                  2       236867765 |************                    236976792.50000
#                  0       237192521 |                                              -
#                  0       237517277 |                                              -
#                  1       237842033 |******                          238055522.00000
#                  4       238166789 |*************************       238362747.75000
#                  2       238491545 |************                    238628698.50000
#                  0       238816301 |                                              -
#                  3       239141057 |*******************             239370810.00000
#                  1       239465813 |******                          239693728.00000
#                  5       239790569 |********************************239979679.00000
#                  4       240115325 |*************************       240183417.50000
#                  4       240440081 |*************************       240601243.75000
#                  5       240764837 |********************************240938112.60000
#                  1       241089593 |******                          241105383.00000
#                  2       241414349 |************                    241520010.00000
#                  2       241739105 |************                    241967912.00000
#                  1       242063861 |******                          242223788.00000
#                  1       242388617 |******                          242551839.00000
#                  0       242713373 |                                              -
#                  2       243038129 |************                    243188641.00000
#                  1       243362885 |******                          243593993.00000
#
#                  3           > 95% |*******************             244075295.00000
#
#        mean of 95% 239598020.08511
#          95th %ile       244012395
#
# WARNINGS
#     Too few samples, 50 < 100, consider running test longer, or for a least 100 samples
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_1k   1   1           18722         6601        0       48     1024 
# bin/../bin-riscv64/memrand -N memrand_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     17345                      17345
#                        max    318102                      21160
#                       mean     19587.18440                18922.25163
#                     median     18758                      18722*
#                     stddev      5557.42358                  747.22744
#             standard error        66.41917                    9.19704
#       99% confidence level       171.09579                   23.69157
#                       skew        26.11803                    0.95648
#                   kurtosis      1218.39232                    0.26838
#           time correlation         0.86454                    0.36748
#
#               elapsed time        20.00762
#                   run time         6.52230
#          getnsecs overhead      1399
#
#          number of samples      7001
#         number of outliers       400
#    number of final samples      6601
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           17345 |*                                   17390.50000
#                  4           17443 |*                                   17502.25000
#                 18           17541 |*                                   17608.83333
#                 46           17639 |**                                  17689.84783
#                 86           17737 |*****                               17787.70930
#                105           17835 |******                              17886.20952
#                162           17933 |*********                           17983.89506
#                183           18031 |**********                          18084.02732
#                255           18129 |**************                      18180.30980
#                324           18227 |******************                  18279.58642
#                450           18325 |**************************          18379.63778
#                548           18423 |*******************************     18471.85766
#                546           18521 |*******************************     18568.78938
#                549           18619 |********************************    18666.05100
#                475           18717 |***************************         18763.05263
#                410           18815 |***********************             18861.51951
#                322           18913 |******************                  18958.42236
#                245           19011 |**************                      19056.62041
#                198           19109 |***********                         19155.41414
#                134           19207 |*******                             19251.37313
#                 86           19305 |*****                               19351.24419
#                 97           19403 |*****                               19446.37113
#                 86           19501 |*****                               19552.51163
#                 91           19599 |*****                               19652.13187
#                 99           19697 |*****                               19747.02020
#                106           19795 |******                              19844.77358
#                130           19893 |*******                             19943.38462
#                131           19991 |*******                             20042.25191
#                115           20089 |******                              20136.89565
#                108           20187 |******                              20236.02778
#                 88           20285 |*****                               20337.22727
#                 71           20383 |****                                20425.22535
#
#                331           > 95% |*******************                 20760.67069
#
#        mean of 95%     18825.19952
#          95th %ile           20472
#
# WARNINGS
#     Actual benchmark run time only accounts for 32.6% of elapsed time.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_1m   1   1          349152        18949        0        2  1048576 
# bin/../bin-riscv64/memrand -N memrand_1m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    338402                     338402
#                        max   3475164                     363102
#                       mean    360430.10482               349914.16423
#                     median    350752                     349152*
#                     stddev     38476.52253                 4397.05385
#             standard error       248.44254                   31.94248
#       99% confidence level       639.98797                   82.28383
#                       skew        43.24354                    0.55718
#                   kurtosis      3281.34164                   -0.12092
#           time correlation         2.63186                    0.78025
#
#               elapsed time        20.00437
#                   run time        17.32338
#          getnsecs overhead      1399
#
#          number of samples     23985
#         number of outliers      5036
#    number of final samples     18949
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          338402 |*                                  338468.66667
#                  0          339021 |                                              -
#                 19          339640 |*                                  340023.05263
#                 51          340259 |*                                  340621.60784
#                 46          340878 |*                                  341124.82609
#                 80          341497 |*                                  341870.12500
#                269          342116 |*****                              342473.56134
#                393          342735 |********                           343033.04326
#                292          343354 |******                             343691.89726
#                575          343973 |************                       344323.73913
#                855          344592 |******************                 344896.26901
#                541          345211 |***********                        345502.09242
#                760          345830 |****************                   346152.46053
#               1499          346449 |********************************   346766.24283
#               1100          347068 |***********************            347359.18182
#               1018          347687 |*********************              348011.03733
#               1447          348306 |******************************     348641.97927
#               1263          348925 |**************************         349197.72447
#                963          349544 |********************               349833.51610
#                841          350163 |*****************                  350500.69203
#                950          350782 |********************               351046.36842
#                711          351401 |***************                    351685.89592
#                531          352020 |***********                        352340.88889
#                625          352639 |*************                      352926.96000
#                448          353258 |*********                          353546.41964
#                430          353877 |*********                          354163.16279
#                531          354496 |***********                        354813.01695
#                405          355115 |********                           355402.37037
#                352          355734 |*******                            356029.13068
#                396          356353 |********                           356681.92424
#                342          356972 |*******                            357272.32164
#                265          357591 |*****                              357859.35849
#
#                948           > 95% |********************               360013.70886
#
#        mean of 95%    349382.28443
#          95th %ile          358202
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_256k   1   1           84217        17349        0       11   262144 
# bin/../bin-riscv64/memrand -N memrand_256k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 256k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     81976                      81976
#                        max    430253                      93492
#                       mean     86654.01401                85460.85532
#                     median     84342                      84217*
#                     stddev     11010.40570                 2683.88013
#             standard error        81.60783                   20.37633
#       99% confidence level       210.22177                   52.48942
#                       skew        15.89048                    1.25101
#                   kurtosis       315.33428                    0.20299
#           time correlation         0.79171                    0.47032
#
#               elapsed time        20.00479
#                   run time        18.47245
#          getnsecs overhead      1399
#
#          number of samples     18203
#         number of outliers       854
#    number of final samples     17349
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           81976 |*                                   82114.66667
#                  4           82259 |*                                   82451.50000
#                 63           82542 |*                                   82746.19048
#                589           82825 |*****                               82971.51952
#               1341           83108 |*************                       83265.00820
#               3175           83391 |********************************    83505.82740
#               2625           83674 |**************************          83794.66362
#                975           83957 |*********                           84083.07385
#                800           84240 |********                            84370.55125
#                775           84523 |*******                             84673.21806
#                952           84806 |*********                           84945.29412
#                906           85089 |*********                           85211.69095
#                555           85372 |*****                               85485.50631
#                273           85655 |**                                  85768.96703
#                142           85938 |*                                   86078.78169
#                 67           86221 |*                                   86351.22388
#                 44           86504 |*                                   86647.31818
#                 39           86787 |*                                   86909.10256
#                 25           87070 |*                                   87182.32000
#                 27           87353 |*                                   87502.66667
#                 43           87636 |*                                   87803.62791
#                112           87919 |*                                   88077.80357
#                149           88202 |*                                   88363.36242
#                224           88485 |**                                  88649.51339
#                457           88768 |****                                88912.16411
#                425           89051 |****                                89181.25882
#                308           89334 |***                                 89464.01623
#                312           89617 |***                                 89751.80769
#                276           89900 |**                                  90029.62319
#                311           90183 |***                                 90307.63023
#                281           90466 |**                                  90593.44128
#                203           90749 |**                                  90882.89655
#
#                868           > 95% |********                            92020.10253
#
#        mean of 95%     85115.40137
#          95th %ile           91025
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_2k   1   1             646        18896        0     1376     2048 
# bin/../bin-riscv64/memrand -N memrand_2k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 2k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       631                        631
#                        max    131751                        718
#                       mean       676.99458                  655.59415
#                     median       647                        646*
#                     stddev       965.14715                   20.65854
#             standard error         6.83968                    0.15028
#       99% confidence level        17.61903                    0.38713
#                       skew       127.89259                    1.40124
#                   kurtosis     17153.10543                    0.59865
#           time correlation         0.00914                    0.00325
#
#               elapsed time        20.00499
#                   run time        18.18743
#          getnsecs overhead      1399
#
#          number of samples     19912
#         number of outliers      1016
#    number of final samples     18896
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23             631 |*                                     632.60870
#                255             634 |**                                    635.69020
#               1805             637 |*****************                     638.58338
#               3219             640 |******************************        641.01305
#               3355             643 |********************************      643.74605
#               2096             646 |*******************                   646.67700
#               1200             649 |***********                           650.05833
#               1152             652 |**********                            652.99740
#               1024             655 |*********                             655.94336
#                648             658 |******                                658.83025
#                228             661 |**                                    661.72368
#                107             664 |*                                     664.85981
#                 31             667 |*                                     667.93548
#                 20             670 |*                                     670.95000
#                 16             673 |*                                     674.12500
#                 18             676 |*                                     677.33333
#                119             679 |*                                     680.13445
#                377             682 |***                                   683.11406
#                426             685 |****                                  685.98826
#                434             688 |****                                  688.95853
#                490             691 |****                                  692.04490
#                446             694 |****                                  695.00897
#                325             697 |***                                   697.96000
#                137             700 |*                                     700.24818
#
#                945           > 95% |*********                             707.49841
#
#        mean of 95%       652.86173
#          95th %ile             701
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_2m   1   1          697553        12896        0        2  2097152 
# bin/../bin-riscv64/memrand -N memrand_2m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 2m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    672053                     672053
#                        max   2595261                     798154
#                       mean    715788.11423               710869.61670
#                     median    698554                     697553*
#                     stddev     47379.07456                29099.53818
#             standard error       411.26181                  256.24688
#       99% confidence level      1059.41043                  660.09196
#                       skew         8.92156                    0.80850
#                   kurtosis       233.43836                   -0.47518
#           time correlation         8.97717                    7.40903
#
#               elapsed time        20.00537
#                   run time        19.01844
#          getnsecs overhead      1399
#
#          number of samples     13272
#         number of outliers       376
#    number of final samples     12896
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22          672053 |*                                  674016.90909
#                231          674988 |******                             676944.16017
#                748          677923 |*********************              679538.65642
#                970          680858 |***************************        682343.74330
#                990          683793 |****************************       685244.67475
#               1085          686728 |******************************     688265.09401
#               1128          689663 |********************************   691109.46986
#                822          692598 |***********************            693979.88443
#                623          695533 |*****************                  696898.80257
#                457          698468 |************                       699911.72867
#                336          701403 |*********                          702741.52381
#                266          704338 |*******                            705790.46992
#                202          707273 |*****                              708681.17822
#                 97          710208 |**                                 711587.53608
#                 94          713143 |**                                 714485.96809
#                 84          716078 |**                                 717651.83333
#                138          719013 |***                                720689.45652
#                203          721948 |*****                              723462.67980
#                300          724883 |********                           726384.15333
#                343          727818 |*********                          729341.25073
#                390          730753 |***********                        732154.72821
#                420          733688 |***********                        735166.09524
#                389          736623 |***********                        738069.00000
#                307          739558 |********                           741013.14332
#                282          742493 |********                           744002.89007
#                280          745428 |*******                            746875.56429
#                224          748363 |******                             749875.46875
#                201          751298 |*****                              752783.65672
#                189          754233 |*****                              755674.23280
#                169          757168 |****                               758627.83432
#                148          760103 |****                               761502.51351
#                113          763038 |***                                764398.17699
#
#                645           > 95% |******************                 777793.89767
#
#        mean of 95%    707346.13607
#          95th %ile          765954
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_32k   1   1           10401        18108        0       89    32768 
# bin/../bin-riscv64/memrand -N memrand_32k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 32k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     10163                      10163
#                        max    168701                      11510
#                       mean     10732.12067                10538.58168
#                     median     10416                      10401*
#                     stddev      2113.46911                  323.73295
#             standard error        15.25861                    2.40576
#       99% confidence level        39.30618                    6.19723
#                       skew        40.07818                    1.30196
#                   kurtosis      2542.72320                    0.38863
#           time correlation         0.10483                    0.05440
#
#               elapsed time        20.00501
#                   run time        18.36350
#          getnsecs overhead      1399
#
#          number of samples     19185
#         number of outliers      1077
#    number of final samples     18108
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 58           10163 |*                                   10178.24138
#                458           10197 |*****                               10219.39520
#                800           10231 |**********                          10249.13750
#               2531           10265 |********************************    10284.68589
#               2011           10299 |*************************           10318.45102
#               1765           10333 |**********************              10350.71558
#               1418           10367 |*****************                   10386.60649
#               1099           10401 |*************                       10416.50500
#                946           10435 |***********                         10452.08245
#                895           10469 |***********                         10484.72067
#                776           10503 |*********                           10518.70747
#                541           10537 |******                              10552.77449
#                421           10571 |*****                               10586.31829
#                268           10605 |***                                 10620.77239
#                188           10639 |**                                  10653.66489
#                 80           10673 |*                                   10686.27500
#                 49           10707 |*                                   10723.08163
#                 32           10741 |*                                   10756.53125
#                 25           10775 |*                                   10787.80000
#                 26           10809 |*                                   10824.15385
#                 35           10843 |*                                   10860.42857
#                 95           10877 |*                                   10895.47368
#                150           10911 |*                                   10928.55333
#                256           10945 |***                                 10964.22656
#                371           10979 |****                                10994.18059
#                360           11013 |****                                11028.58889
#                348           11047 |****                                11063.44828
#                323           11081 |****                                11096.29412
#                303           11115 |***                                 11131.21122
#                266           11149 |***                                 11164.60902
#                240           11183 |***                                 11197.75417
#                 68           11217 |*                                   11222.58824
#
#                906           > 95% |***********                         11339.96799
#
#        mean of 95%     10496.37403
#          95th %ile           11229
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_32m   1   1        11782047          644        0        2 33554432 
# bin/../bin-riscv64/memrand -N memrand_32m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 32m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  11642346                   11660446
#                        max  13999605                   11913847
#                       mean  11941155.65568             11785771.47826
#                     median  11794396                   11782047*
#                     stddev    356612.25584                45057.00205
#             standard error     12461.04068                 1775.49461
#       99% confidence level     32099.64079                 4573.67411
#                       skew         2.25312                    0.32282
#                   kurtosis         4.65317                    0.28031
#           time correlation      1087.73993                  233.34828
#
#               elapsed time        20.04394
#                   run time        19.56076
#          getnsecs overhead      1399
#
#          number of samples       819
#         number of outliers       175
#    number of final samples       644
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        11660446 |*                                11660446.00000
#                  2        11666859 |*                                11669646.00000
#                  3        11673272 |*                                11676512.66667
#                  2        11679685 |*                                11683871.00000
#                  1        11686098 |*                                11687346.00000
#                  8        11692511 |****                             11696377.25000
#                  3        11698924 |*                                11703012.66667
#                  9        11705337 |*****                            11708201.55556
#                  9        11711750 |*****                            11715090.44444
#                  9        11718163 |*****                            11722034.88889
#                 13        11724576 |********                         11727922.92308
#                 22        11730989 |*************                    11735011.90909
#                 14        11737402 |********                         11740038.85714
#                 32        11743815 |*******************              11746831.93750
#                 25        11750228 |***************                  11753266.00000
#                 35        11756641 |*********************            11759937.42857
#                 52        11763054 |******************************** 11766690.25000
#                 45        11769467 |***************************      11772719.44444
#                 39        11775880 |************************         11779803.94872
#                 46        11782293 |****************************     11785621.17391
#                 42        11788706 |*************************        11792129.57143
#                 30        11795119 |******************               11798523.13333
#                 23        11801532 |**************                   11804215.82609
#                 23        11807945 |**************                   11810437.52174
#                 27        11814358 |****************                 11817207.70370
#                 13        11820771 |********                         11823630.92308
#                 24        11827184 |**************                   11830508.87500
#                 14        11833597 |********                         11836889.57143
#                 17        11840010 |**********                       11842273.00000
#                  8        11846423 |****                             11849890.25000
#                 11        11852836 |******                           11855683.09091
#                  9        11859249 |*****                            11862702.33333
#
#                 33           > 95% |********************             11890125.75758
#
#        mean of 95%  11780135.32242
#          95th %ile        11865647
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_4k   1   1            1554        19470        0      568     4096 
# bin/../bin-riscv64/memrand -N memrand_4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1260                       1272
#                        max    342252                       1852
#                       mean      1626.69243                 1561.96127
#                     median      1555                       1554*
#                     stddev      2600.11820                   96.61879
#             standard error        18.35352                    0.69243
#       99% confidence level        47.27867                    1.78371
#                       skew       118.45577                   -0.71186
#                   kurtosis     14995.93587                    2.33401
#           time correlation         0.03281                    0.01488
#
#               elapsed time        20.00487
#                   run time        18.12404
#          getnsecs overhead      1399
#
#          number of samples     20070
#         number of outliers       600
#    number of final samples     19470
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                195            1272 |*                                    1281.29231
#                751            1286 |******                               1291.45406
#                152            1300 |*                                    1306.11184
#                132            1314 |*                                    1319.74242
#                 50            1328 |*                                    1333.04000
#                 12            1342 |*                                    1347.16667
#                  9            1356 |*                                    1362.33333
#                 11            1370 |*                                    1377.27273
#                 30            1384 |*                                    1391.13333
#                 21            1398 |*                                    1406.19048
#                 41            1412 |*                                    1418.43902
#                 36            1426 |*                                    1432.02778
#                 20            1440 |*                                    1446.95000
#                 20            1454 |*                                    1459.45000
#                 20            1468 |*                                    1476.85000
#                 75            1482 |*                                    1491.26667
#                563            1496 |*****                                1504.36767
#               1344            1510 |************                         1516.71503
#               1911            1524 |*****************                    1531.51701
#               3527            1538 |********************************     1544.61100
#               2725            1552 |************************             1557.17982
#               1799            1566 |****************                     1572.35631
#               1039            1580 |*********                            1585.52454
#                447            1594 |****                                 1599.62192
#                330            1608 |**                                   1614.71212
#                415            1622 |***                                  1628.43373
#                491            1636 |****                                 1643.04481
#                736            1650 |******                               1656.81114
#                662            1664 |******                               1670.17674
#                500            1678 |****                                 1683.86800
#                332            1692 |***                                  1698.16566
#                100            1706 |*                                    1708.15000
#
#                974           > 95% |********                             1762.66324
#
#        mean of 95%      1551.39230
#          95th %ile            1711
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_4m   1   1         1573757         5839        0        2  4194304 
# bin/../bin-riscv64/memrand -N memrand_4m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1476157                    1476157
#                        max   3500114                    1690407
#                       mean   1584115.03413              1571573.69532
#                     median   1575457                    1573757*
#                     stddev     76927.88404                39656.57297
#             standard error       978.32728                  518.97441
#       99% confidence level      2520.17107                 1336.87808
#                       skew         7.04961                    0.11004
#                   kurtosis       111.69498                    0.32860
#           time correlation        30.50133                   22.34351
#
#               elapsed time        20.00644
#                   run time        19.59781
#          getnsecs overhead      1399
#
#          number of samples      6183
#         number of outliers       344
#    number of final samples      5839
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6         1476157 |*                                 1478981.50000
#                 12         1481340 |*                                 1483289.75000
#                 51         1486523 |***                               1489396.70588
#                 84         1491706 |*****                             1494688.72619
#                115         1496889 |******                            1499514.42609
#                185         1502072 |***********                       1504726.61081
#                195         1507255 |***********                       1509938.73333
#                172         1512438 |**********                        1514736.05233
#                127         1517621 |*******                           1520059.96063
#                 92         1522804 |*****                             1525072.59783
#                 56         1527987 |***                               1530493.39286
#                 42         1533170 |**                                1535683.04762
#                 37         1538353 |**                                1540835.35135
#                 76         1543536 |****                              1546541.14474
#                141         1548719 |********                          1551700.60993
#                270         1553902 |****************                  1556805.70370
#                373         1559085 |**********************            1561927.50938
#                449         1564268 |***************************       1566944.08241
#                528         1569451 |********************************  1571968.36364
#                519         1574634 |*******************************   1577248.32948
#                453         1579817 |***************************       1582327.97130
#                334         1585000 |********************              1587534.39521
#                259         1590183 |***************                   1592553.91120
#                224         1595366 |*************                     1597813.02679
#                173         1600549 |**********                        1603056.13295
#                145         1605732 |********                          1608347.34483
#                 95         1610915 |*****                             1613401.21053
#                 91         1616098 |*****                             1618510.29670
#                 82         1621281 |****                              1623839.31707
#                 57         1626464 |***                               1628930.68421
#                 56         1631647 |***                               1634038.25000
#                 48         1636830 |**                                1639621.58333
#
#                292           > 95% |*****************                 1663479.43493
#
#        mean of 95%   1566735.67911
#          95th %ile         1642007
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_512k   1   1          174234        16643        0        5   524288 
# bin/../bin-riscv64/memrand -N memrand_512k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 512k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    170168                     170168
#                        max    771404                     193834
#                       mean    179465.55450               176794.06051
#                     median    174501                     174234*
#                     stddev     22156.53001                 5683.75762
#             standard error       166.85951                   44.05749
#       99% confidence level       429.83009                  113.49209
#                       skew        14.98077                    1.29298
#                   kurtosis       273.82985                    0.34060
#           time correlation         1.75019                    1.03147
#
#               elapsed time        20.00477
#                   run time        18.57804
#          getnsecs overhead      1399
#
#          number of samples     17632
#         number of outliers       989
#    number of final samples     16643
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13          170168 |*                                  170518.30769
#                125          170751 |*                                  171149.11200
#                634          171334 |********                           171690.39590
#               1731          171917 |**********************             172225.40092
#               2412          172500 |********************************   172785.14055
#               2104          173083 |***************************        173343.38973
#               1311          173666 |*****************                  173922.02212
#               1062          174249 |**************                     174539.95574
#               1047          174832 |*************                      175130.97803
#                905          175415 |************                       175682.61436
#                687          175998 |*********                          176255.30277
#                312          176581 |****                               176845.11859
#                154          177164 |**                                 177410.95455
#                 94          177747 |*                                  177992.29787
#                 38          178330 |*                                  178552.76316
#                 16          178913 |*                                  179211.37500
#                 23          179496 |*                                  179805.73913
#                 23          180079 |*                                  180416.60870
#                 32          180662 |*                                  180981.43750
#                 64          181245 |*                                  181511.18750
#                115          181828 |*                                  182145.46957
#                208          182411 |**                                 182728.90865
#                392          182994 |*****                              183294.08673
#                345          183577 |****                               183875.02319
#                307          184160 |****                               184459.15309
#                288          184743 |***                                185023.35764
#                279          185326 |***                                185619.45520
#                256          185909 |***                                186209.50000
#                269          186492 |***                                186794.97026
#                236          187075 |***                                187372.33475
#                170          187658 |**                                 187919.28235
#                158          188241 |**                                 188537.70886
#
#                833           > 95% |***********                        191019.29532
#
#        mean of 95%    176044.55889
#          95th %ile          188818
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_64k   1   1           28712        17384        0       33    65536 
# bin/../bin-riscv64/memrand -N memrand_64k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 64k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     20588                      25815
#                        max    382769                      32271
#                       mean     29389.12197                28971.88938
#                     median     28740                      28712*
#                     stddev      5979.30893                 1099.74405
#             standard error        43.52417                    8.34097
#       99% confidence level       112.11827                   21.48635
#                       skew        24.91692                    0.88038
#                   kurtosis      1086.87282                    0.19431
#           time correlation         0.41424                    0.20739
#
#               elapsed time        20.00483
#                   run time        18.31898
#          getnsecs overhead      1399
#
#          number of samples     18873
#         number of outliers      1489
#    number of final samples     17384
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5           25815 |*                                   25916.60000
#                  2           25985 |*                                   26077.00000
#                  6           26155 |*                                   26257.00000
#                  5           26325 |*                                   26421.40000
#                  0           26495 |                                              -
#                  4           26665 |*                                   26752.50000
#                 13           26835 |*                                   26949.92308
#                108           27005 |**                                  27111.29630
#                226           27175 |****                                27272.07965
#                338           27345 |*******                             27434.57692
#                489           27515 |**********                          27603.39468
#                783           27685 |****************                    27777.07535
#               1050           27855 |**********************              27943.34190
#               1266           28025 |**************************          28108.74092
#               1355           28195 |****************************        28281.76605
#               1486           28365 |*******************************     28447.44684
#               1501           28535 |********************************    28617.49833
#               1293           28705 |***************************         28788.71848
#               1116           28875 |***********************             28959.50179
#               1038           29045 |**********************              29126.08092
#                763           29215 |****************                    29292.49017
#                530           29385 |***********                         29463.86604
#                308           29555 |******                              29629.44481
#                300           29725 |******                              29812.50667
#                266           29895 |*****                               29980.98872
#                316           30065 |******                              30152.81646
#                350           30235 |*******                             30320.03429
#                356           30405 |*******                             30496.06742
#                341           30575 |*******                             30656.76833
#                366           30745 |*******                             30825.85246
#                312           30915 |******                              30998.09295
#                222           31085 |****                                31155.77027
#
#                870           > 95% |******************                  31636.49885
#
#        mean of 95%     28831.51090
#          95th %ile           31227
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_64m   1   1        24373995          284        0        2 67108864 
# bin/../bin-riscv64/memrand -N memrand_64m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 64m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  24032194                   24032194
#                        max  32759977                   25056897
#                       mean  25306528.07916             24420766.72535
#                     median  24470095                   24373995*
#                     stddev   1880840.83344               216889.60561
#             standard error     96612.30414                12870.03029
#       99% confidence level    248873.29546                33153.19803
#                       skew         2.05208                    0.88943
#                   kurtosis         3.03495                    0.34591
#           time correlation     12774.68814                 2514.19136
#
#               elapsed time        20.09042
#                   run time        19.18288
#          getnsecs overhead      1399
#
#          number of samples       379
#         number of outliers        95
#    number of final samples       284
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        24032194 |***                              24045169.00000
#                  1        24058466 |*                                24062994.00000
#                  3        24084738 |****                             24098227.33333
#                  4        24111010 |******                           24121481.50000
#                  8        24137282 |************                     24147694.00000
#                 15        24163554 |**********************           24178457.40000
#                 11        24189826 |****************                 24201039.54545
#                 16        24216098 |************************         24231691.43750
#                 14        24242370 |*********************            24255884.07143
#                 17        24268642 |*************************        24283533.11765
#                 19        24294914 |****************************     24308329.21053
#                 21        24321186 |******************************** 24333580.71429
#                 11        24347458 |****************                 24358663.18182
#                 13        24373730 |*******************              24383645.00000
#                 15        24400002 |**********************           24409158.33333
#                 12        24426274 |******************               24439420.16667
#                  8        24452546 |************                     24463689.00000
#                 11        24478818 |****************                 24491659.18182
#                  8        24505090 |************                     24516202.25000
#                  8        24531362 |************                     24543977.12500
#                  5        24557634 |*******                          24572386.00000
#                  9        24583906 |*************                    24594246.00000
#                  8        24610178 |************                     24627946.00000
#                  6        24636450 |*********                        24647004.33333
#                  4        24662722 |******                           24679708.50000
#                  3        24688994 |****                             24700479.33333
#                  3        24715266 |****                             24731280.00000
#                  6        24741538 |*********                        24750730.16667
#                  3        24767810 |****                             24779013.33333
#                  3        24794082 |****                             24805063.66667
#                  2        24820354 |***                              24841322.00000
#
#                 15           > 95% |**********************           24967307.20000
#
#        mean of 95%  24390290.49071
#          95th %ile        24872897
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_8k   1   1            2587        18470        0      354     8192 
# bin/../bin-riscv64/memrand -N memrand_8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 8k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2525                       2525
#                        max    139851                       2874
#                       mean      2684.87885                 2625.48230
#                     median      2591                       2587*
#                     stddev      1155.14765                   82.83707
#             standard error         8.28686                    0.60952
#       99% confidence level        21.34695                    1.57014
#                       skew        91.00217                    1.34672
#                   kurtosis     10359.69864                    0.44559
#           time correlation         0.02959                    0.01345
#
#               elapsed time        20.00498
#                   run time        18.31887
#          getnsecs overhead      1399
#
#          number of samples     19431
#         number of outliers       961
#    number of final samples     18470
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            2525 |*                                    2528.00000
#                111            2534 |*                                    2540.56757
#                242            2543 |**                                   2548.22727
#               1566            2552 |*****************                    2554.99234
#               2865            2561 |********************************     2565.95462
#               2503            2570 |***************************          2574.38514
#               1958            2579 |*********************                2582.55924
#               1167            2588 |*************                        2591.85518
#                877            2597 |*********                            2600.93729
#                816            2606 |*********                            2609.99877
#                873            2615 |*********                            2618.92211
#                716            2624 |*******                              2627.59637
#                457            2633 |*****                                2636.76368
#                246            2642 |**                                   2645.47561
#                146            2651 |*                                    2654.76027
#                 81            2660 |*                                    2663.56790
#                 33            2669 |*                                    2672.78788
#                 22            2678 |*                                    2680.59091
#                 15            2687 |*                                    2691.46667
#                 10            2696 |*                                    2699.70000
#                 17            2705 |*                                    2710.94118
#                 69            2714 |*                                    2718.18841
#                183            2723 |**                                   2727.75410
#                295            2732 |***                                  2736.37627
#                364            2741 |****                                 2745.07692
#                370            2750 |****                                 2754.07027
#                340            2759 |***                                  2763.00882
#                336            2768 |***                                  2771.94643
#                331            2777 |***                                  2780.93656
#                313            2786 |***                                  2789.86901
#                221            2795 |**                                   2798.23529
#
#                924           > 95% |**********                           2830.58874
#
#        mean of 95%      2614.68107
#          95th %ile            2802
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_8m   1   1       149586929           81        0        2  8388608 
# bin/../bin-riscv64/memrand -N memrand_8m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 8m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 146544067                  146544067
#                        max 154499849                  154499849
#                       mean 149665983.44444            149665983.44444
#                     median 149586929                  149586929*
#                     stddev   1719676.43529              1719676.43529
#             standard error    191075.15948               191075.15948
#       99% confidence level    492209.61081               492209.61081
#                       skew         0.50548                    0.50548
#                   kurtosis        -0.24536                   -0.24536
#           time correlation     71253.58234                71253.58234
#
#               elapsed time        25.04772
#                   run time        24.24600
#          getnsecs overhead      1399
#
#          number of samples        81
#         number of outliers         0
#    number of final samples        81
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       146544067 |****                            146544067.00000
#                  2       146742587 |********                        146795544.00000
#                  1       146941107 |****                            147004220.00000
#                  0       147139627 |                                              -
#                  4       147338147 |****************                147433358.50000
#                  1       147536667 |****                            147569922.00000
#                  1       147735187 |****                            147933273.00000
#                  4       147933707 |****************                148033848.25000
#                  8       148132227 |********************************148235574.00000
#                  3       148330747 |************                    148434225.00000
#                  4       148529267 |****************                148598601.00000
#                  1       148727787 |****                            148775576.00000
#                  4       148926307 |****************                148974502.00000
#                  3       149124827 |************                    149218195.00000
#                  3       149323347 |************                    149395511.66667
#                  4       149521867 |****************                149673917.25000
#                  4       149720387 |****************                149849330.75000
#                  2       149918907 |********                        150017906.00000
#                  6       150117427 |************************        150193640.16667
#                  4       150315947 |****************                150388057.75000
#                  2       150514467 |********                        150639708.00000
#                  1       150712987 |****                            150725984.00000
#                  1       150911507 |****                            151097635.00000
#                  1       151110027 |****                            151150785.00000
#                  2       151308547 |********                        151426961.50000
#                  2       151507067 |********                        151688737.50000
#                  3       151705587 |************                    151786621.33333
#                  2       151904107 |********                        152017339.00000
#                  2       152102627 |********                        152198964.50000
#
#                  5           > 95% |********************            153443264.40000
#
#        mean of 95% 149417478.11842
#          95th %ile       152896692
#
# WARNINGS
#     Too few samples, 81 < 100, consider running test longer, or for a least 100 samples
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10   1   1              50        19362        0    17494       10          4k
# bin/../bin-riscv64/memset -N memset_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        46                         46
#                        max     25000                         58
#                       mean        52.78641                   50.86288
#                     median        50                         50*
#                     stddev       177.51043                    2.42082
#             standard error         1.25253                    0.01740
#       99% confidence level         3.22652                    0.04482
#                       skew       138.49790                    1.18465
#                   kurtosis     19426.29929                    0.76566
#           time correlation         0.00092                    0.00039
#
#               elapsed time        20.00414
#                   run time        18.06074
#          getnsecs overhead      1399
#
#          number of samples     20085
#         number of outliers       723
#    number of final samples     19362
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2              46 |*                                             -
#                192              47 |*                                             -
#               1925              48 |********                                      -
#               2992              49 |*************                                 -
#               7164              50 |********************************              -
#               2240              51 |**********                                    -
#                486              52 |**                                            -
#               1010              53 |****                                          -
#               1379              54 |******                                        -
#                686              55 |***                                           -
#                317              56 |*                                             -
#
#                969           > 95% |****                                   57.26832
#
#        mean of 95%        50.52542
#          95th %ile              56
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10k   1   1            1276         4684        0      651    10240          4k
# bin/../bin-riscv64/memset -N memset_10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1191                       1191
#                        max    103071                       1431
#                       mean      1368.19843                 1290.18382
#                     median      1279                       1276*
#                     stddev      1600.24052                   46.86610
#             standard error        22.70130                    0.68478
#       99% confidence level        58.47855                    1.76399
#                       skew        55.25044                    1.06441
#                   kurtosis      3370.43035                    0.39526
#           time correlation         0.11989                    0.03225
#
#               elapsed time        20.00816
#                   run time         4.24031
#          getnsecs overhead      1399
#
#          number of samples      4969
#         number of outliers       285
#    number of final samples      4684
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            1191 |*                                    1192.50000
#                  1            1198 |*                                    1203.00000
#                  4            1205 |*                                    1208.75000
#                 17            1212 |*                                    1214.64706
#                 39            1219 |**                                   1222.38462
#                 87            1226 |******                               1229.48276
#                177            1233 |************                         1236.23729
#                294            1240 |*********************                1243.22449
#                341            1247 |************************             1250.09971
#                382            1254 |***************************          1257.20681
#                444            1261 |*******************************      1263.80856
#                446            1268 |********************************     1270.86996
#                362            1275 |*************************            1277.83425
#                315            1282 |**********************               1285.01905
#                263            1289 |******************                   1291.70722
#                195            1296 |*************                        1298.80000
#                148            1303 |**********                           1305.86486
#                115            1310 |********                             1312.63478
#                 91            1317 |******                               1319.74725
#                 61            1324 |****                                 1326.93443
#                 55            1331 |***                                  1333.80000
#                 90            1338 |******                               1341.34444
#                 90            1345 |******                               1348.31111
#                 83            1352 |*****                                1355.09639
#                 97            1359 |******                               1362.04124
#                 80            1366 |*****                                1368.82500
#                 85            1373 |******                               1375.87059
#                 57            1380 |****                                 1382.87719
#                 28            1387 |**                                   1388.25000
#
#                235           > 95% |****************                     1408.25957
#
#        mean of 95%      1283.94695
#          95th %ile            1390
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.2% of elapsed time.
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10m   1   1         2137838          869        0       10 10485760          4k
# bin/../bin-riscv64/memset -N memset_10m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2082838                    2082838
#                        max   3175482                    2815771
#                       mean   2237183.21764              2233879.93441
#                     median   2138108                    2137838*
#                     stddev    200141.96486               194357.66536
#             standard error      6773.77922                 6593.13222
#       99% confidence level     17449.25526                16983.90860
#                       skew         1.63519                    1.58741
#                   kurtosis         1.41122                    1.03361
#           time correlation       644.47429                  630.49221
#
#               elapsed time        20.02325
#                   run time        19.53183
#          getnsecs overhead      1399
#
#          number of samples       873
#         number of outliers         4
#    number of final samples       869
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 89         2082838 |**************                    2094958.11236
#                201         2101300 |********************************  2110392.62687
#                149         2119762 |***********************           2128096.05369
#                 75         2138224 |***********                       2145559.12000
#                 38         2156686 |******                            2166264.60526
#                 26         2175148 |****                              2183423.23077
#                 25         2193610 |***                               2203447.40000
#                 22         2212072 |***                               2222120.81818
#                 25         2230534 |***                               2240115.00000
#                 15         2248996 |**                                2255725.66667
#                  6         2267458 |*                                 2275842.33333
#                 11         2285920 |*                                 2296541.72727
#                  9         2304382 |*                                 2313639.00000
#                 14         2322844 |**                                2332174.00000
#                  8         2341306 |*                                 2348715.25000
#                  9         2359768 |*                                 2366236.77778
#                  5         2378230 |*                                 2388235.00000
#                  6         2396692 |*                                 2408459.16667
#                  4         2415154 |*                                 2421677.25000
#                  2         2433616 |*                                 2443040.00000
#                  2         2452078 |*                                 2460840.00000
#                  2         2470540 |*                                 2482675.00000
#                  1         2489002 |*                                 2491300.00000
#                  1         2507464 |*                                 2508800.00000
#                  1         2525926 |*                                 2528500.00000
#                  0         2544388 |                                              -
#                  0         2562850 |                                              -
#                  0         2581312 |                                              -
#                  1         2599774 |*                                 2600400.00000
#                 12         2618236 |*                                 2630073.33333
#                 36         2636698 |*****                             2647574.72222
#                 30         2655160 |****                              2663931.06667
#
#                 44           > 95% |*******                           2714801.38636
#
#        mean of 95%   2208230.79030
#          95th %ile         2673600
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_1k   1   1             154        19939        0     5354     1024          4k
# bin/../bin-riscv64/memset -N memset_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       138                        138
#                        max     70220                        185
#                       mean       166.75266                  156.74076
#                     median       155                        154*
#                     stddev       506.40339                    9.43367
#             standard error         3.50706                    0.06681
#       99% confidence level         9.03419                    0.17210
#                       skew       129.97385                    0.97847
#                   kurtosis     17680.62048                    0.39612
#           time correlation         0.00420                    0.00155
#
#               elapsed time        20.00656
#                   run time        17.83369
#          getnsecs overhead      1399
#
#          number of samples     20850
#         number of outliers       911
#    number of final samples     19939
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             138 |*                                     138.50000
#                 30             140 |*                                     140.76667
#                175             142 |**                                    142.74286
#                657             144 |*******                               144.64992
#               1626             146 |*******************                   146.57196
#               2666             148 |********************************      148.52438
#               2359             150 |****************************          150.47859
#               1886             152 |**********************                152.45122
#               1377             154 |****************                      154.46260
#               1217             156 |**************                        156.49795
#               1266             158 |***************                       158.53239
#               1427             160 |*****************                     160.52067
#               1200             162 |**************                        162.45417
#                771             164 |*********                             164.43450
#                597             166 |*******                               166.46064
#                512             168 |******                                168.48047
#                380             170 |****                                  170.50526
#                333             172 |***                                   172.48348
#                250             174 |***                                   174.49600
#                211             176 |**                                    176.51185
#
#                997           > 95% |***********                           181.11033
#
#        mean of 95%       155.45808
#          95th %ile             177
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_1m   1   1          135171        13225        0       10  1048576          4k
# bin/../bin-riscv64/memset -N memset_1m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    128071                     128071
#                        max    873384                     150021
#                       mean    138287.67432               137141.91267
#                     median    135281                     135171*
#                     stddev     13734.66461                 4311.32813
#             standard error       117.64409                   37.48981
#       99% confidence level       303.05119                   96.57375
#                       skew        23.02570                    0.84135
#                   kurtosis       829.11669                   -0.40641
#           time correlation         1.46588                    1.06061
#
#               elapsed time        20.00676
#                   run time        18.86763
#          getnsecs overhead      1399
#
#          number of samples     13630
#         number of outliers       405
#    number of final samples     13225
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          128071 |*                                  128071.00000
#                 14          128610 |*                                  128960.28571
#                 11          129149 |*                                  129435.54545
#                 21          129688 |*                                  129920.04762
#                 30          130227 |*                                  130502.00000
#                 39          130766 |*                                  131036.38462
#                123          131305 |**                                 131632.95122
#                265          131844 |*****                              132170.58491
#                599          132383 |*************                      132678.84641
#               1068          132922 |***********************            133210.38202
#               1443          133461 |*******************************    133730.54955
#               1449          134000 |********************************   134266.07246
#               1354          134539 |*****************************      134793.36337
#               1016          135078 |**********************             135337.79134
#                561          135617 |************                       135871.33868
#                311          136156 |******                             136398.36334
#                174          136695 |***                                136954.96552
#                122          137234 |**                                 137479.11475
#                 96          137773 |**                                 138042.45833
#                 92          138312 |**                                 138597.63043
#                152          138851 |***                                139155.67105
#                220          139390 |****                               139685.59091
#                347          139929 |*******                            140210.45245
#                461          140468 |**********                         140739.09111
#                505          141007 |***********                        141282.42574
#                502          141546 |***********                        141828.07171
#                452          142085 |*********                          142354.45133
#                335          142624 |*******                            142907.68657
#                273          143163 |******                             143429.68132
#                231          143702 |*****                              143955.76190
#                157          144241 |***                                144506.60510
#                139          144780 |***                                145028.84173
#
#                662           > 95% |**************                     147140.96979
#
#        mean of 95%    136615.01815
#          95th %ile          145291
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_256   1   1              70        20428        0    11100      256          4k
# bin/../bin-riscv64/memset -N memset_256 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        65                         65
#                        max     70540                         79
#                       mean        77.28411                   70.50059
#                     median        70                         70*
#                     stddev       483.72600                    2.82341
#             standard error         3.26113                    0.01975
#       99% confidence level         8.40068                    0.05089
#                       skew       141.34590                    1.21888
#                   kurtosis     20483.77830                    0.84839
#           time correlation         0.00217                    0.00043
#
#               elapsed time        20.00427
#                   run time        17.56376
#          getnsecs overhead      1399
#
#          number of samples     22002
#         number of outliers      1574
#    number of final samples     20428
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23              65 |*                                             -
#                262              66 |*                                             -
#               1257              67 |********                                      -
#               2448              68 |***************                               -
#               4815              69 |*******************************               -
#               4900              70 |********************************              -
#               2454              71 |****************                              -
#                691              72 |****                                          -
#                208              73 |*                                             -
#                425              74 |**                                            -
#                896              75 |*****                                         -
#                899              76 |*****                                         -
#                128              77 |*                                             -
#
#               1022           > 95% |******                                 77.77006
#
#        mean of 95%        70.11775
#          95th %ile              77
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
             prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_256_u   1   1              86        20473        0     9109      256           1
# bin/../bin-riscv64/memset -N memset_256_u -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 256 -a 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        80                         80
#                        max     72780                         97
#                       mean        94.68613                   87.20920
#                     median        86                         86*
#                     stddev       511.10631                    3.14981
#             standard error         3.45871                    0.02201
#       99% confidence level         8.90965                    0.05671
#                       skew       134.56587                    1.32025
#                   kurtosis     18841.29583                    1.05529
#           time correlation         0.00242                    0.00047
#
#               elapsed time        20.00471
#                   run time        17.65024
#          getnsecs overhead      1399
#
#          number of samples     21837
#         number of outliers      1364
#    number of final samples     20473
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1              80 |*                                             -
#                 17              81 |*                                             -
#                 94              82 |*                                             -
#                543              83 |***                                           -
#               1783              84 |***********                                   -
#               3919              85 |************************                      -
#               5051              86 |********************************              -
#               3243              87 |********************                          -
#               1511              88 |*********                                     -
#                635              89 |****                                          -
#                398              90 |**                                            -
#                441              91 |**                                            -
#                597              92 |***                                           -
#                716              93 |****                                          -
#                500              94 |***                                           -
#
#               1024           > 95% |******                                 95.54688
#
#        mean of 95%        86.77022
#          95th %ile              94
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_4k   1   1             547        18749        0     1685     4096          4k
# bin/../bin-riscv64/memset -N memset_4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       486                        486
#                        max     59390                        631
#                       mean       565.13430                  550.69678
#                     median       548                        547*
#                     stddev       444.00847                   26.75664
#             standard error         3.18558                    0.19541
#       99% confidence level         8.20605                    0.50337
#                       skew       121.41508                    0.48519
#                   kurtosis     15906.46101                   -0.09481
#           time correlation         0.00871                    0.00480
#
#               elapsed time        20.00517
#                   run time        18.25594
#          getnsecs overhead      1399
#
#          number of samples     19427
#         number of outliers       678
#    number of final samples     18749
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4             486 |*                                     487.25000
#                  2             490 |*                                     491.50000
#                 12             494 |*                                     495.91667
#                 36             498 |*                                     500.11111
#                198             502 |***                                   504.00000
#                507             506 |*******                               507.65089
#                727             510 |***********                           511.56671
#                968             514 |***************                       515.41116
#                609             518 |*********                             519.45156
#                534             522 |********                              523.49625
#                446             526 |*******                               527.51121
#                517             530 |********                              531.53385
#                767             534 |************                          535.59713
#               1267             538 |*******************                   539.67798
#               2032             542 |********************************      543.59843
#               1580             546 |************************              547.49304
#               1267             550 |*******************                   551.51302
#               1061             554 |****************                      555.39397
#                759             558 |***********                           559.40053
#                710             562 |***********                           563.54366
#                573             566 |*********                             567.40838
#                454             570 |*******                               571.43833
#                467             574 |*******                               575.49036
#                487             578 |*******                               579.50513
#                497             582 |*******                               583.48893
#                432             586 |******                                587.48843
#                408             590 |******                                591.39461
#                312             594 |****                                  595.40064
#                178             598 |**                                    598.95506
#
#                938           > 95% |**************                        612.18337
#
#        mean of 95%       547.45865
#          95th %ile             600
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
             prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_4k_uc   1   1             762        17273        0     1120     4096          4k
# bin/../bin-riscv64/memset -N memset_4k_uc -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -u 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       621                        621
#                        max    120451                       1050
#                       mean       828.28904                  802.86308
#                     median       765                        762*
#                     stddev       908.40445                   82.37197
#             standard error         6.76221                    0.62675
#       99% confidence level        17.41946                    1.61451
#                       skew       126.82142                    0.93452
#                   kurtosis     16665.12843                   -0.42541
#           time correlation         0.02163                    0.01524
#
#               elapsed time        20.04927
#                   run time        16.53019
#          getnsecs overhead      1399
#
#          number of samples     18046
#         number of outliers       773
#    number of final samples     17273
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             621 |*                                     621.00000
#                  2             632 |*                                     635.50000
#                  0             643 |                                              -
#                  0             654 |                                              -
#                  1             665 |*                                     671.00000
#                  0             676 |                                              -
#                 17             687 |*                                     694.94118
#                161             698 |*                                     704.00000
#                579             709 |******                                714.68912
#               1112             720 |************                          725.63669
#               2366             731 |**************************            736.66484
#               2890             742 |********************************      746.51834
#               1702             753 |******************                    757.67391
#               1219             764 |*************                         768.55947
#                755             775 |********                              779.41457
#                385             786 |****                                  790.54805
#                249             797 |**                                    801.50201
#                186             808 |**                                    813.17204
#                158             819 |*                                     823.91139
#                109             830 |*                                     834.98165
#                137             841 |*                                     846.83212
#                312             852 |***                                   857.85256
#                553             863 |******                                868.11392
#                559             874 |******                                879.10018
#                494             885 |*****                                 889.59514
#                412             896 |****                                  900.91019
#                469             907 |*****                                 912.43070
#                559             918 |******                                922.75671
#                457             929 |*****                                 933.69365
#                369             940 |****                                  944.75881
#                196             951 |**                                    954.28571
#
#                864           > 95% |*********                             990.59491
#
#        mean of 95%       792.97824
#          95th %ile             959
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
       prc thr      nsecs/call      samples   errors cnt/samp 
mktime   1   1           97520        11827        0       10 
# bin/../bin-riscv64/mktime -N mktime -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     94050                      94050
#                        max    783963                     102261
#                       mean    106992.01971                97719.17959
#                     median     98501                      97520*
#                     stddev     28907.98268                 1513.91721
#             standard error       221.38228                   13.92082
#       99% confidence level       570.28076                   35.86003
#                       skew         6.80296                    0.61606
#                   kurtosis        61.62530                   -0.10725
#           time correlation         2.90603                    0.43127
#
#               elapsed time        20.00382
#                   run time        18.26701
#          getnsecs overhead      1399
#
#          number of samples     17051
#         number of outliers      5224
#    number of final samples     11827
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           94050 |*                                   94050.00000
#                  1           94256 |*                                   94441.00000
#                  3           94462 |*                                   94550.66667
#                 14           94668 |*                                   94809.92857
#                 36           94874 |*                                   94961.66667
#                 85           95080 |****                                95198.96471
#                233           95286 |***********                         95399.54506
#                314           95492 |***************                     95598.96178
#                495           95698 |***********************             95802.42020
#                492           95904 |***********************             96005.41463
#                617           96110 |*****************************       96211.81361
#                586           96316 |****************************        96419.04608
#                598           96522 |****************************        96617.23411
#                640           96728 |******************************      96831.02812
#                597           96934 |****************************        97038.94305
#                665           97140 |********************************    97241.51880
#                648           97346 |*******************************     97450.69136
#                616           97552 |*****************************       97653.34740
#                633           97758 |******************************      97860.66983
#                500           97964 |************************            98064.43600
#                486           98170 |***********************             98274.49588
#                405           98376 |*******************                 98474.89383
#                432           98582 |********************                98677.62731
#                391           98788 |******************                  98894.75703
#                322           98994 |***************                     99091.05901
#                304           99200 |**************                      99300.82566
#                271           99406 |*************                       99510.64207
#                211           99612 |**********                          99717.03318
#                228           99818 |**********                          99916.23246
#                151          100024 |*******                            100122.43046
#                133          100230 |******                             100328.89474
#                127          100436 |******                             100524.94488
#
#                592           > 95% |****************************       101296.48142
#
#        mean of 95%     97530.68269
#          95th %ile          100641
#
# Usage: mktime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mktime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures mktime()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_a128k   1   1           67563         3467        0        7   131072   a---
# bin/../bin-riscv64/mmap -N mmap_a128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     45313                      45313
#                        max    934181                     296216
#                       mean    114516.34487               109251.16037
#                     median     70513                      67563*
#                     stddev     76889.48951                63401.49612
#             standard error      1294.86897                 1076.76910
#       99% confidence level      3335.58247                 2773.75721
#                       skew         2.10205                    0.56561
#                   kurtosis        11.28562                   -0.98204
#           time correlation        65.06590                   59.14204
#
#               elapsed time        20.01842
#                   run time         3.19910
#          getnsecs overhead      1399
#
#          number of samples      3526
#         number of outliers        59
#    number of final samples      3467
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                566           45313 |*********************               48902.06184
#                825           50670 |********************************    53013.54788
#                243           56027 |*********                           58172.81070
#                 93           61384 |***                                 63856.77419
#                 53           66741 |**                                  69521.43396
#                 30           72098 |*                                   74917.86667
#                 22           77455 |*                                   80172.50000
#                 24           82812 |*                                   85515.37500
#                 14           88169 |*                                   90119.21429
#                  5           93526 |*                                   95660.80000
#                  7           98883 |*                                  102142.42857
#                 11          104240 |*                                  107278.27273
#                 12          109597 |*                                  113247.33333
#                 20          114954 |*                                  117488.00000
#                 22          120311 |*                                  123122.81818
#                 29          125668 |*                                  128660.93103
#                 31          131025 |*                                  133842.29032
#                 23          136382 |*                                  139260.95652
#                 69          141739 |**                                 144759.56522
#                 99          147096 |***                                149974.53535
#                205          152453 |*******                            155386.82927
#                217          157810 |********                           160394.56221
#                147          163167 |*****                              165687.94558
#                112          168524 |****                               170944.81250
#                 88          173881 |***                                176746.87500
#                 83          179238 |***                                181924.53012
#                 69          184595 |**                                 187455.94203
#                 48          189952 |*                                  192434.10417
#                 36          195309 |*                                  197550.30556
#                 40          200666 |*                                  202958.80000
#                 27          206023 |*                                  208664.14815
#                 23          211380 |*                                  214055.17391
#
#                174           > 95% |******                             245921.84483
#
#        mean of 95%    102029.56939
#          95th %ile          216730
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 16.0% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_a8k   1   1           55478         3674        0        9     8192   a---
# bin/../bin-riscv64/mmap -N mmap_a8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     44556                      44556
#                        max   1582473                     249468
#                       mean     96614.26716                88665.89575
#                     median     56089                      55478*
#                     stddev     77913.65932                53993.53597
#             standard error      1268.44079                  890.78356
#       99% confidence level      3267.50347                 2294.65845
#                       skew         4.48107                    1.08138
#                   kurtosis        49.44968                   -0.34127
#           time correlation        53.20530                   44.20045
#
#               elapsed time        20.00812
#                   run time         3.41433
#          getnsecs overhead      1399
#
#          number of samples      3773
#         number of outliers        99
#    number of final samples      3674
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                575           44556 |****************                    47802.51304
#               1084           49118 |********************************    51090.99539
#                346           53680 |**********                          55563.63295
#                177           58242 |*****                               60399.03955
#                107           62804 |***                                 65141.62617
#                 73           67366 |**                                  69385.02740
#                 59           71928 |*                                   74456.83051
#                 41           76490 |*                                   78620.17073
#                 27           81052 |*                                   83357.25926
#                 22           85614 |*                                   88053.27273
#                 32           90176 |*                                   92342.93750
#                 25           94738 |*                                   97049.92000
#                 22           99300 |*                                  101123.00000
#                 14          103862 |*                                  106244.00000
#                 26          108424 |*                                  110850.46154
#                 12          112986 |*                                  115309.50000
#                 17          117548 |*                                  119814.58824
#                 21          122110 |*                                  124461.19048
#                 19          126672 |*                                  128955.10526
#                 12          131234 |*                                  133181.08333
#                  7          135796 |*                                  138642.14286
#                 24          140358 |*                                  142998.33333
#                 64          144920 |*                                  147388.59375
#                 97          149482 |**                                 151888.47423
#                119          154044 |***                                156378.29412
#                 99          158606 |**                                 160640.97980
#                 70          163168 |**                                 165158.57143
#                 66          167730 |*                                  170230.43939
#                 70          172292 |**                                 174320.30000
#                 66          176854 |*                                  178915.24242
#                 62          181416 |*                                  183577.56452
#                 35          185978 |*                                  187739.02857
#
#                184           > 95% |*****                              213236.39130
#
#        mean of 95%     82098.28223
#          95th %ile          190512
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 17.1% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_ra128k   1   1          662403         5591        0        1   131072   ar--
# bin/../bin-riscv64/mmap -N mmap_ra128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    621304                     621304
#                        max   2869812                     734004
#                       mean    728885.51896               667039.05097
#                     median    672704                     662403*
#                     stddev    161583.76565                22342.06423
#             standard error      1863.69762                  298.79859
#       99% confidence level      4800.88506                  769.70518
#                       skew         5.58906                    0.81957
#                   kurtosis        45.06143                    0.21814
#           time correlation        46.81690                   13.23467
#
#               elapsed time        20.00476
#                   run time         5.49194
#          getnsecs overhead      1399
#
#          number of samples      7517
#         number of outliers      1926
#    number of final samples      5591
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          621304 |*                                  622828.75000
#                 16          624176 |*                                  625753.37500
#                 22          627048 |*                                  628376.50000
#                 46          629920 |***                                631503.47826
#                102          632792 |********                           634396.53922
#                128          635664 |**********                         637168.26562
#                194          638536 |****************                   640001.91237
#                240          641408 |*******************                642877.24583
#                272          644280 |**********************             645624.43750
#                282          647152 |***********************            648563.82624
#                279          650024 |***********************            651485.96774
#                350          652896 |****************************       654329.28000
#                374          655768 |******************************     657217.74599
#                387          658640 |********************************   660149.52972
#                330          661512 |***************************        662896.33030
#                260          664384 |*********************              665662.01923
#                246          667256 |********************               668546.70732
#                241          670128 |*******************                671537.23651
#                230          673000 |*******************                674440.17826
#                168          675872 |*************                      677145.93452
#                172          678744 |**************                     680154.86628
#                129          681616 |**********                         683050.23256
#                139          684488 |***********                        685976.38129
#                125          687360 |**********                         688821.28800
#                 87          690232 |*******                            691678.39080
#                 76          693104 |******                             694501.02632
#                 92          695976 |*******                            697321.18478
#                 69          698848 |*****                              700405.10145
#                 63          701720 |*****                              703248.28571
#                 71          704592 |*****                              705992.47887
#                 56          707464 |****                               708616.26786
#                 61          710336 |*****                              711826.72131
#
#                280           > 95% |***********************            722213.80000
#
#        mean of 95%    664130.19582
#          95th %ile          713204
#
# WARNINGS
#     Actual benchmark run time only accounts for 27.5% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_ra8k   1   1          123201         4199        0        4     8192   ar--
# bin/../bin-riscv64/mmap -N mmap_ra8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    107921                     107921
#                        max   1446586                     158541
#                       mean    178967.87782               125748.83258
#                     median    127681                     123201*
#                     stddev    116817.15561                10947.11925
#             standard error      1556.73204                  168.93783
#       99% confidence level      4010.14173                  435.18385
#                       skew         3.10105                    1.07736
#                   kurtosis        16.35499                    0.69574
#           time correlation        50.73137                    8.44393
#
#               elapsed time        20.00749
#                   run time         4.92095
#          getnsecs overhead      1399
#
#          number of samples      5631
#         number of outliers      1432
#    number of final samples      4199
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          107921 |*                                  108802.66667
#                 54          109247 |******                             110123.62963
#                104          110573 |***********                        111264.25000
#                133          111899 |***************                    112558.72180
#                160          113225 |******************                 113904.30625
#                215          114551 |************************           115203.23256
#                243          115877 |***************************        116469.03704
#                260          117203 |*****************************      117884.69615
#                249          118529 |****************************       119207.40562
#                240          119855 |***************************        120509.23333
#                280          121181 |********************************   121855.13571
#                265          122507 |******************************     123153.35849
#                224          123833 |*************************          124455.24554
#                208          125159 |***********************            125768.08173
#                186          126485 |*********************              127134.68280
#                154          127811 |*****************                  128436.06494
#                141          129137 |****************                   129810.48936
#                141          130463 |****************                   131154.47518
#                 97          131789 |***********                        132473.78351
#                 91          133115 |**********                         133759.90110
#                 71          134441 |********                           135036.91549
#                 61          135767 |******                             136462.22951
#                 44          137093 |*****                              137665.20455
#                 47          138419 |*****                              138875.89362
#                 51          139745 |*****                              140468.25490
#                 43          141071 |****                               141689.37209
#                 43          142397 |****                               143109.02326
#                 30          143723 |***                                144323.83333
#                 45          145049 |*****                              145686.55556
#                 36          146375 |****                               147079.75000
#                 34          147701 |***                                148477.61765
#                 27          149027 |***                                149614.33333
#
#                210           > 95% |************************           154585.94286
#
#        mean of 95%    124230.70945
#          95th %ile          150341
#
# WARNINGS
#     Actual benchmark run time only accounts for 24.6% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rt128k   1   1         1058005         5645        0        1   131072   -r--
# bin/../bin-riscv64/mmap -N mmap_rt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    985504                     985504
#                        max   3246514                    1352507
#                       mean   1120575.30047              1096593.55306
#                     median   1062605                    1058005*
#                     stddev    144652.38886                85343.50462
#             standard error      1876.23058                 1135.89582
#       99% confidence level      4833.16997                 2926.06762
#                       skew         3.54466                    1.05019
#                   kurtosis        22.44865                    0.01985
#           time correlation        64.75343                   48.39151
#
#               elapsed time        20.00932
#                   run time         6.67046
#          getnsecs overhead      1399
#
#          number of samples      5944
#         number of outliers       299
#    number of final samples      5645
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 16          985504 |*                                  991998.50000
#                 81          994439 |****                              1000056.69136
#                243         1003374 |************                      1008240.70370
#                378         1012309 |*******************               1017458.65079
#                512         1021244 |**************************        1025774.31055
#                624         1030179 |********************************  1034623.43109
#                561         1039114 |****************************      1043438.19073
#                365         1048049 |******************                1052290.03288
#                295         1056984 |***************                   1061278.97627
#                198         1065919 |**********                        1070277.34343
#                173         1074854 |********                          1079107.45087
#                142         1083789 |*******                           1088384.10563
#                107         1092724 |*****                             1096895.02804
#                 90         1101659 |****                              1106125.33333
#                 74         1110594 |***                               1115166.06757
#                 84         1119529 |****                              1124204.17857
#                 69         1128464 |***                               1133298.15942
#                101         1137399 |*****                             1141800.41584
#                103         1146334 |*****                             1151268.46602
#                116         1155269 |*****                             1160099.42241
#                109         1164204 |*****                             1169002.78899
#                106         1173139 |*****                             1177334.81132
#                 98         1182074 |*****                             1186309.70408
#                114         1191009 |*****                             1195188.11404
#                 95         1199944 |****                              1205299.38947
#                 99         1208879 |*****                             1213499.64646
#                 91         1217814 |****                              1222525.56044
#                 77         1226749 |***                               1231085.01299
#                 74         1235684 |***                               1240393.59459
#                 52         1244619 |**                                1249102.03846
#                 54         1253554 |**                                1257650.22222
#                 61         1262489 |***                               1266858.40984
#
#                283           > 95% |**************                    1305356.23675
#
#        mean of 95%   1085575.30623
#          95th %ile         1271406
#
# WARNINGS
#     Actual benchmark run time only accounts for 33.3% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rt8k   1   1          202934         3652        0        3     8192   -r--
# bin/../bin-riscv64/mmap -N mmap_rt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    158751                     158751
#                        max   1430873                     265568
#                       mean    245700.66051               206432.77191
#                     median    206368                     202934*
#                     stddev    115112.15206                19728.04971
#             standard error      1737.55429                  326.45158
#       99% confidence level      4475.93985                  840.93926
#                       skew         3.60781                    0.81701
#                   kurtosis        16.03457                    0.58770
#           time correlation        58.40398                   17.61141
#
#               elapsed time        20.00570
#                   run time         3.33816
#          getnsecs overhead      1399
#
#          number of samples      4389
#         number of outliers       737
#    number of final samples      3652
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          158751 |*                                  159801.00000
#                  6          161543 |*                                  163218.00000
#                 12          164335 |*                                  165791.66667
#                 22          167127 |**                                 168302.95455
#                 28          169919 |**                                 171382.89286
#                 34          172711 |***                                174260.38235
#                 68          175503 |******                             177040.14706
#                 72          178295 |*******                            179760.09722
#                 90          181087 |********                           182547.14444
#                105          183879 |**********                         185285.02857
#                136          186671 |*************                      187989.88235
#                173          189463 |*****************                  190948.21387
#                216          192255 |*********************              193768.26852
#                300          195047 |*****************************      196447.83333
#                325          197839 |********************************   199269.00923
#                285          200631 |****************************       202030.15088
#                306          203423 |******************************     204765.08170
#                243          206215 |***********************            207666.15638
#                153          209007 |***************                    210290.30065
#                151          211799 |**************                     213141.95364
#                111          214591 |**********                         215905.64865
#                 85          217383 |********                           218731.90588
#                 76          220175 |*******                            221560.92105
#                 73          222967 |*******                            224448.78082
#                 66          225759 |******                             227056.24242
#                 64          228551 |******                             229991.68750
#                 41          231343 |****                               232636.09756
#                 46          234135 |****                               235520.76087
#                 48          236927 |****                               238173.31250
#                 53          239719 |*****                              241108.00000
#                 37          242511 |***                                243845.83784
#                 39          245303 |***                                246749.56410
#
#                183           > 95% |******************                 256328.20765
#
#        mean of 95%    203800.64024
#          95th %ile          248068
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.7% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rz128k   1   1          659203        13590        0        1   131072   -r--
# bin/../bin-riscv64/mmap -N mmap_rz128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    608503                     611603
#                        max   9952740                     709804
#                       mean    743004.64523               659529.45982
#                     median    665404                     659203*
#                     stddev    252733.75924                16795.11216
#             standard error      1892.35386                  144.06988
#       99% confidence level      4874.70355                  371.12400
#                       skew         7.01861                    0.28375
#                   kurtosis       121.75658                   -0.10242
#           time correlation        26.43451                    4.18482
#
#               elapsed time        20.00440
#                   run time        13.28052
#          getnsecs overhead      1399
#
#          number of samples     17837
#         number of outliers      4247
#    number of final samples     13590
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          611603 |*                                  612646.28571
#                  6          614035 |*                                  615237.00000
#                 10          616467 |*                                  617893.30000
#                 28          618899 |*                                  620060.53571
#                 42          621331 |*                                  622743.80952
#                 76          623763 |**                                 624915.13158
#                125          626195 |****                               627624.97600
#                153          628627 |*****                              629904.69281
#                236          631059 |********                           632283.09322
#                314          633491 |***********                        634752.85669
#                367          635923 |*************                      637223.38147
#                462          638355 |*****************                  639548.68182
#                547          640787 |********************               641993.98903
#                551          643219 |********************               644423.64610
#                624          645651 |***********************            646824.80609
#                692          648083 |*************************          649349.28035
#                707          650515 |**************************         651758.83734
#                691          652947 |*************************          654179.49493
#                740          655379 |***************************        656613.93243
#                811          657811 |******************************     659125.24291
#                762          660243 |****************************       661468.94357
#                865          662675 |********************************   663872.70636
#                722          665107 |**************************         666319.37812
#                626          667539 |***********************            668758.68850
#                547          669971 |********************               671098.10969
#                505          672403 |******************                 673494.07723
#                427          674835 |***************                    676035.73536
#                340          677267 |************                       678467.17647
#                310          679699 |***********                        680893.61935
#                246          682131 |*********                          683343.88211
#                205          684563 |*******                            685765.62439
#                166          686995 |******                             688208.51205
#
#                680           > 95% |*************************          697177.39706
#
#        mean of 95%    657546.45461
#          95th %ile          689404
#
# WARNINGS
#     Actual benchmark run time only accounts for 66.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rz8k   1   1          175276         3049        0        3     8192   -r--
# bin/../bin-riscv64/mmap -N mmap_rz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    135051                     135051
#                        max   1694282                     224151
#                       mean    230321.34831               178506.63562
#                     median    180376                     175276*
#                     stddev    123977.95763                15223.23010
#             standard error      1969.64175                  275.69450
#       99% confidence level      5073.79716                  710.18903
#                       skew         2.76309                    0.80392
#                   kurtosis         9.60914                    0.52791
#           time correlation        75.00814                   16.33111
#
#               elapsed time        20.01090
#                   run time         3.45634
#          getnsecs overhead      1399
#
#          number of samples      3962
#         number of outliers       913
#    number of final samples      3049
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          135051 |*                                  136101.00000
#                  2          137416 |*                                  137701.00000
#                  3          139781 |*                                  141467.66667
#                  6          142146 |*                                  143318.00000
#                  3          144511 |*                                  146034.33333
#                  9          146876 |*                                  148217.55556
#                  9          149241 |*                                  150292.00000
#                 26          151606 |***                                152894.57692
#                 31          153971 |***                                155256.64516
#                 53          156336 |******                             157682.43396
#                 83          158701 |*********                          160015.51807
#                121          161066 |**************                     162358.69421
#                170          163431 |********************               164641.83529
#                221          165796 |**************************         167029.32127
#                256          168161 |******************************     169351.29297
#                266          170526 |********************************   171646.07519
#                260          172891 |*******************************    174031.48846
#                225          175256 |***************************        176479.90667
#                204          177621 |************************           178750.25490
#                144          179986 |*****************                  181071.54861
#                124          182351 |**************                     183556.24194
#                103          184716 |************                       185810.79612
#                 91          187081 |**********                         188313.26374
#                 93          189446 |***********                        190546.60215
#                 77          191811 |*********                          193142.14286
#                 64          194176 |*******                            195343.71875
#                 48          196541 |*****                              197675.83333
#                 54          198906 |******                             200073.24074
#                 39          201271 |****                               202614.69231
#                 47          203636 |*****                              204946.06383
#                 32          206001 |***                                207150.71875
#                 27          208366 |***                                209603.77778
#
#                153           > 95% |******************                 216824.33333
#
#        mean of 95%    176482.25449
#          95th %ile          210726
#
# WARNINGS
#     Actual benchmark run time only accounts for 17.3% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_t128k   1   1           82586        10723        0        6   131072   ----
# bin/../bin-riscv64/mmap -N mmap_t128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     67076                      67076
#                        max   1906965                     380130
#                       mean    144255.27018               134420.65886
#                     median     83000                      82586*
#                     stddev    115537.72121                82051.41092
#             standard error      1105.33316                  792.36977
#       99% confidence level      2847.33822                 2041.14454
#                       skew         3.99404                    0.98601
#                   kurtosis        31.77852                   -0.65877
#           time correlation        26.99439                   22.91860
#
#               elapsed time        20.00574
#                   run time        10.71408
#          getnsecs overhead      1399
#
#          number of samples     10926
#         number of outliers       203
#    number of final samples     10723
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1330           67076 |***********                         72028.62556
#               3552           73850 |********************************    76971.17314
#               1179           80624 |**********                          83389.05344
#                508           87398 |****                                90409.70866
#                356           94172 |***                                 97085.58146
#                159          100946 |*                                  103834.41509
#                 89          107720 |*                                  110457.02247
#                 67          114494 |*                                  117114.46269
#                 61          121268 |*                                  124412.55738
#                 28          128042 |*                                  131081.64286
#                 28          134816 |*                                  137887.39286
#                 21          141590 |*                                  144919.19048
#                 20          148364 |*                                  151646.35000
#                 24          155138 |*                                  158230.87500
#                 31          161912 |*                                  165213.87097
#                 27          168686 |*                                  171928.85185
#                 42          175460 |*                                  178598.14286
#                 37          182234 |*                                  185230.29730
#                 33          189008 |*                                  192684.57576
#                 31          195782 |*                                  198918.06452
#                 38          202556 |*                                  206075.94737
#                 82          209330 |*                                  213636.36585
#                172          216104 |*                                  220105.66279
#                317          222878 |**                                 226166.86435
#                277          229652 |**                                 233048.96751
#                304          236426 |**                                 239943.79934
#                299          243200 |**                                 246500.96990
#                303          249974 |**                                 253420.49505
#                251          256748 |**                                 260131.06375
#                223          263522 |**                                 266749.49776
#                147          270296 |*                                  273708.21769
#                150          277070 |*                                  280516.39333
#
#                537           > 95% |****                               312070.47486
#
#        mean of 95%    125055.06381
#          95th %ile          283835
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 53.6% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_t8k   1   1           81272        10739        0        7     8192   ----
# bin/../bin-riscv64/mmap -N mmap_t8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     67434                      67434
#                        max   1691807                     355989
#                       mean    133183.44268               124795.21380
#                     median     81650                      81272*
#                     stddev    104254.74459                77082.16533
#             standard error       996.84324                  743.82708
#       99% confidence level      2567.86819                 1916.09856
#                       skew         3.76480                    1.29915
#                   kurtosis        27.55187                    0.05067
#           time correlation        23.80985                   20.35906
#
#               elapsed time        20.00455
#                   run time        10.84641
#          getnsecs overhead      1399
#
#          number of samples     10938
#         number of outliers       199
#    number of final samples     10739
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1400           67434 |***********                         72571.47143
#               3831           74138 |********************************    77099.70086
#               1273           80842 |**********                          83633.50982
#                626           87546 |*****                               90593.63099
#                331           94250 |**                                  97233.79154
#                205          100954 |*                                  104068.06341
#                115          107658 |*                                  110849.26087
#                106          114362 |*                                  117716.63208
#                 66          121066 |*                                  124061.37879
#                 52          127770 |*                                  130855.17308
#                 34          134474 |*                                  137720.52941
#                 20          141178 |*                                  144566.90000
#                 15          147882 |*                                  150943.26667
#                 15          154586 |*                                  158199.60000
#                 31          161290 |*                                  165203.93548
#                 17          167994 |*                                  171534.94118
#                 29          174698 |*                                  177728.82759
#                 43          181402 |*                                  184386.04651
#                 37          188106 |*                                  191446.64865
#                 33          194810 |*                                  198292.72727
#                 33          201514 |*                                  205149.27273
#                 37          208218 |*                                  211915.35135
#                 75          214922 |*                                  218310.05333
#                209          221626 |*                                  225362.40670
#                228          228330 |*                                  231811.89035
#                226          235034 |*                                  238005.43363
#                194          241738 |*                                  245065.82990
#                252          248442 |**                                 251734.84524
#                206          255146 |*                                  258525.77670
#                183          261850 |*                                  265451.71038
#                142          268554 |*                                  271795.28873
#                138          275258 |*                                  278714.41304
#
#                537           > 95% |****                               306771.57914
#
#        mean of 95%    115216.57155
#          95th %ile          281939
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 54.2% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wa128k   1   1         1460007        10172        0        1   131072   a-w-
# bin/../bin-riscv64/mmap -N mmap_wa128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1314606                    1314606
#                        max  13860355                    1884109
#                       mean   1530238.31834              1491719.66319
#                     median   1476506                    1460007*
#                     stddev    303703.35818               131007.63533
#             standard error      2955.26937                 1298.95298
#       99% confidence level      7612.77390                 3346.10289
#                       skew        11.70846                    0.77471
#                   kurtosis       310.40182                   -0.33018
#           time correlation        59.54516                   42.70019
#
#               elapsed time        20.00454
#                   run time        16.18014
#          getnsecs overhead      1399
#
#          number of samples     10561
#         number of outliers       389
#    number of final samples     10172
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         1314606 |*                                 1324363.21429
#                204         1328066 |******                            1336706.63235
#                688         1341526 |*********************             1348996.35174
#               1036         1354986 |********************************  1361881.78185
#                948         1368446 |*****************************     1374926.04219
#                763         1381906 |***********************           1388138.17693
#                579         1395366 |*****************                 1401933.20725
#                341         1408826 |**********                        1414986.83284
#                234         1422286 |*******                           1428797.08120
#                163         1435746 |*****                             1441978.36810
#                143         1449206 |****                              1455669.58042
#                159         1462666 |****                              1470267.66038
#                205         1476126 |******                            1483017.93659
#                224         1489586 |******                            1496416.62500
#                248         1503046 |*******                           1509931.43548
#                319         1516506 |*********                         1523394.66144
#                419         1529966 |************                      1537039.15990
#                479         1543426 |**************                    1550091.34447
#                408         1556886 |************                      1563305.10049
#                296         1570346 |*********                         1576538.52703
#                251         1583806 |*******                           1590036.60558
#                196         1597266 |******                            1603422.02041
#                158         1610726 |****                              1617168.07595
#                122         1624186 |***                               1630886.01639
#                131         1637646 |****                              1644102.06107
#                134         1651106 |****                              1657819.37313
#                122         1664566 |***                               1670963.22131
#                160         1678026 |****                              1684804.40000
#                158         1691486 |****                              1698004.42405
#                132         1704946 |****                              1711534.86364
#                123         1718406 |***                               1724976.80488
#                106         1731866 |***                               1738828.52830
#
#                509           > 95% |***************                   1798162.19450
#
#        mean of 95%   1475577.75608
#          95th %ile         1745308
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wa8k   1   1          179001         5251        0        2     8192   a-w-
# bin/../bin-riscv64/mmap -N mmap_wa8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    154934                     154934
#                        max   4871619                     216668
#                       mean    261349.82690               180848.04799
#                     median    186634                     179001*
#                     stddev    172403.40087                11950.22592
#             standard error      1982.56526                  164.91308
#       99% confidence level      5107.08811                  424.81610
#                       skew         4.90137                    0.72979
#                   kurtosis        77.21657                    0.11552
#           time correlation        54.78498                    7.60719
#
#               elapsed time        20.00556
#                   run time         5.83811
#          getnsecs overhead      1399
#
#          number of samples      7562
#         number of outliers      2311
#    number of final samples      5251
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          154934 |*                                  155878.33333
#                  2          156488 |*                                  157842.50000
#                  5          158042 |*                                  159080.80000
#                 28          159596 |***                                160499.78571
#                 60          161150 |******                             161938.20000
#                109          162704 |***********                        163541.36697
#                157          164258 |*****************                  165048.91720
#                205          165812 |**********************             166651.64390
#                267          167366 |*****************************      168217.45693
#                263          168920 |****************************       169701.87833
#                268          170474 |*****************************      171219.08582
#                283          172028 |*******************************    172766.94346
#                291          173582 |********************************   174357.52921
#                278          175136 |******************************     175955.07914
#                276          176690 |******************************     177500.30435
#                255          178244 |****************************       179015.93333
#                286          179798 |*******************************    180588.52098
#                237          181352 |**************************         182168.01688
#                229          182906 |*************************          183686.05240
#                199          184460 |*********************              185239.15075
#                189          186014 |********************               186746.40741
#                190          187568 |********************               188310.93158
#                144          189122 |***************                    189921.93750
#                139          190676 |***************                    191371.32374
#                127          192230 |*************                      192996.37795
#                115          193784 |************                       194615.57391
#                 81          195338 |********                           196166.39506
#                 86          196892 |*********                          197640.04651
#                 66          198446 |*******                            199194.00000
#                 58          200000 |******                             200698.81034
#                 47          201554 |*****                              202430.19149
#                 45          203108 |****                               203765.57778
#
#                263           > 95% |****************************       210275.61217
#
#        mean of 95%    179296.43424
#          95th %ile          204634
#
# WARNINGS
#     Actual benchmark run time only accounts for 29.2% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wt128k   1   1         1534907         8708        0        1   131072   --w-
# bin/../bin-riscv64/mmap -N mmap_wt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1381906                    1381906
#                        max  22565288                    1890309
#                       mean   1672308.14618              1565836.87816
#                     median   1550207                    1534907*
#                     stddev    597530.73626               108366.17559
#             standard error      6183.48505                 1161.27356
#       99% confidence level     15928.65748                 2991.44068
#                       skew        12.67883                    0.74718
#                   kurtosis       331.45320                   -0.23752
#           time correlation        99.63933                   41.57618
#
#               elapsed time        20.00721
#                   run time        15.63533
#          getnsecs overhead      1399
#
#          number of samples      9338
#         number of outliers       630
#    number of final samples      8708
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4         1381906 |*                                 1389606.75000
#                 21         1394141 |*                                 1400844.47619
#                 87         1406376 |****                              1413265.14943
#                217         1418611 |**********                        1425240.58986
#                324         1430846 |***************                   1437427.87037
#                478         1443081 |***********************           1449898.66109
#                574         1455316 |****************************      1461678.98606
#                634         1467551 |*******************************   1473625.00473
#                649         1479786 |********************************  1485770.38059
#                482         1492021 |***********************           1498179.40041
#                430         1504256 |*********************             1510231.49767
#                316         1516491 |***************                   1522301.53481
#                269         1528726 |*************                     1534685.38662
#                228         1540961 |***********                       1546460.49561
#                196         1553196 |*********                         1559597.87245
#                211         1565431 |**********                        1572206.13270
#                224         1577666 |***********                       1584066.96875
#                226         1589901 |***********                       1596169.11062
#                286         1602136 |**************                    1607855.49301
#                304         1614371 |**************                    1620379.62171
#                278         1626606 |*************                     1632558.45683
#                289         1638841 |**************                    1644951.32526
#                255         1651076 |************                      1657203.09020
#                231         1663311 |***********                       1668876.34632
#                222         1675546 |**********                        1681410.63964
#                187         1687781 |*********                         1693600.06417
#                158         1700016 |*******                           1706065.79747
#                117         1712251 |*****                             1717806.84615
#                106         1724486 |*****                             1730756.75472
#                103         1736721 |*****                             1743276.75728
#                 81         1748956 |***                               1755046.09877
#                 85         1761191 |****                              1767531.27059
#
#                436           > 95% |*********************             1823587.41284
#
#        mean of 95%   1552251.38092
#          95th %ile         1773408
#
# WARNINGS
#     Actual benchmark run time only accounts for 78.1% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wt8k   1   1          244068         8299        0        2     8192   --w-
# bin/../bin-riscv64/mmap -N mmap_wt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    188502                     188502
#                        max   2077659                     345335
#                       mean    327071.04267               251519.28509
#                     median    254152                     244068*
#                     stddev    187949.30810                31287.62535
#             standard error      1857.24650                  343.44699
#       99% confidence level      4784.26698                  884.71946
#                       skew         2.74818                    0.93899
#                   kurtosis         8.98366                    0.21686
#           time correlation        45.10496                   12.40797
#
#               elapsed time        20.00687
#                   run time         7.88353
#          getnsecs overhead      1399
#
#          number of samples     10241
#         number of outliers      1942
#    number of final samples      8299
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          188502 |*                                  188502.00000
#                  1          192523 |*                                  195002.00000
#                  1          196544 |*                                  199301.00000
#                  9          200565 |*                                  203440.66667
#                 49          204586 |**                                 207346.40816
#                196          208607 |**********                         210950.16327
#                408          212628 |**********************             214780.54167
#                502          216649 |***************************        218605.42231
#                574          220670 |********************************   222744.62369
#                572          224691 |*******************************    226676.81469
#                536          228712 |*****************************      230722.11007
#                498          232733 |***************************        234710.69478
#                442          236754 |************************           238695.83937
#                448          240775 |************************           242809.95089
#                390          244796 |*********************              246836.26667
#                383          248817 |*********************              250796.19321
#                355          252838 |*******************                254881.69577
#                329          256859 |******************                 258743.82067
#                292          260880 |****************                   262909.67123
#                237          264901 |*************                      266795.06329
#                251          268922 |*************                      270884.37849
#                207          272943 |***********                        274918.27053
#                176          276964 |*********                          278764.89773
#                165          280985 |*********                          282888.87879
#                137          285006 |*******                            287040.42336
#                115          289027 |******                             291141.78261
#                127          293048 |*******                            295106.81102
#                118          297069 |******                             298935.47458
#                113          301090 |******                             303188.12389
#                 89          305111 |****                               307217.31461
#                 91          309132 |*****                              311147.15385
#                 72          313153 |****                               314984.38889
#
#                415           > 95% |***********************            330104.51084
#
#        mean of 95%    247382.69597
#          95th %ile          317168
#
# WARNINGS
#     Actual benchmark run time only accounts for 39.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wz128k   1   1         1327606         9314        0        1   131072   --w-
# bin/../bin-riscv64/mmap -N mmap_wz128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1210405                    1210405
#                        max   5720623                    1673807
#                       mean   1419006.02492              1370182.57655
#                     median   1333807                    1327606*
#                     stddev    277468.04394               101301.64311
#             standard error      2786.82963                 1049.65934
#       99% confidence level      7178.87313                 2703.92245
#                       skew         6.63989                    0.98593
#                   kurtosis        60.48281                   -0.00040
#           time correlation        57.69812                   35.24052
#
#               elapsed time        20.00646
#                   run time        14.08492
#          getnsecs overhead      1399
#
#          number of samples      9913
#         number of outliers       599
#    number of final samples      9314
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7         1210405 |*                                 1217719.85714
#                 30         1221796 |*                                 1228475.90000
#                 77         1233187 |**                                1239272.02597
#                209         1244578 |*******                           1251011.58373
#                368         1255969 |*************                     1262263.23641
#                567         1267360 |********************              1273341.03527
#                714         1278751 |*************************         1284612.14006
#                882         1290142 |********************************  1296072.46599
#                874         1301533 |*******************************   1307111.33295
#                746         1312924 |***************************       1318279.71180
#                559         1324315 |********************              1329719.72987
#                397         1335706 |**************                    1340856.31738
#                280         1347097 |**********                        1352452.31786
#                187         1358488 |******                            1363883.27273
#                164         1369879 |*****                             1375585.03659
#                141         1381270 |*****                             1386972.27660
#                134         1392661 |****                              1398493.75373
#                169         1404052 |******                            1409655.62130
#                177         1415443 |******                            1421628.55932
#                216         1426834 |*******                           1432378.80093
#                210         1438225 |*******                           1444232.75714
#                216         1449616 |*******                           1454872.82870
#                209         1461007 |*******                           1466520.57895
#                226         1472398 |********                          1478027.10619
#                214         1483789 |*******                           1489916.15421
#                166         1495180 |******                            1500793.57229
#                157         1506571 |*****                             1512358.49682
#                127         1517962 |****                              1523587.20472
#                134         1529353 |****                              1535015.88060
#                123         1540744 |****                              1546333.00000
#                 87         1552135 |***                               1558010.49425
#                 81         1563526 |**                                1569186.12346
#
#                466           > 95% |****************                  1618479.39485
#
#        mean of 95%   1357105.46112
#          95th %ile         1574907
#
# WARNINGS
#     Actual benchmark run time only accounts for 70.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wz8k   1   1          228652         7035        0        2     8192   --w-
# bin/../bin-riscv64/mmap -N mmap_wz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    178002                     178002
#                        max   2019142                     314835
#                       mean    304089.58182               234838.91457
#                     median    236501                     228652*
#                     stddev    172212.74081                26691.74311
#             standard error      1843.56169                  318.23276
#       99% confidence level      4749.01491                  819.76759
#                       skew         2.96130                    0.90799
#                   kurtosis        11.72139                    0.28267
#           time correlation        47.87216                   12.47520
#
#               elapsed time        20.00746
#                   run time         7.24783
#          getnsecs overhead      1399
#
#          number of samples      8726
#         number of outliers      1691
#    number of final samples      7035
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          178002 |*                                  178002.00000
#                  8          181540 |*                                  182926.75000
#                 10          185078 |*                                  186981.60000
#                 19          188616 |*                                  191035.73684
#                 81          192154 |*****                              194144.04938
#                135          195692 |********                           197545.35556
#                203          199230 |*************                      201195.71921
#                252          202768 |****************                   204590.81349
#                367          206306 |***********************            208076.53951
#                391          209844 |*************************          211620.08951
#                490          213382 |********************************   215147.12245
#                467          216920 |******************************     218636.83084
#                475          220458 |*******************************    222225.84000
#                459          223996 |*****************************      225721.30065
#                442          227534 |****************************       229201.92986
#                369          231072 |************************           232833.33062
#                346          234610 |**********************             236275.17919
#                286          238148 |******************                 239890.53846
#                255          241686 |****************                   243430.31373
#                247          245224 |****************                   247027.76113
#                217          248762 |**************                     250494.96313
#                154          252300 |**********                         254029.39610
#                149          255838 |*********                          257588.52349
#                126          259376 |********                           261011.27778
#                109          262914 |*******                            264838.73394
#                 88          266452 |*****                              268305.76136
#                 93          269990 |******                             271750.55914
#                 95          273528 |******                             275233.00000
#                112          277066 |*******                            278767.19643
#                 78          280604 |*****                              282347.60256
#                 73          284142 |****                               285807.58904
#                 86          287680 |*****                              289512.38372
#
#                352           > 95% |**********************             301238.48295
#
#        mean of 95%    231341.58581
#          95th %ile          291201
#
# WARNINGS
#     Actual benchmark run time only accounts for 36.2% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_z128k   1   1           80643        10884        0        7   131072   ----
# bin/../bin-riscv64/mmap -N mmap_z128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     66400                      66400
#                        max   1632919                     358427
#                       mean    135090.47493               126898.18578
#                     median     80986                      80643*
#                     stddev    105534.48402                77195.06515
#             standard error      1003.09068                  739.93790
#       99% confidence level      2583.96160                 1906.08003
#                       skew         3.98153                    1.12237
#                   kurtosis        31.69816                   -0.40251
#           time correlation        24.11930                   20.75413
#
#               elapsed time        20.01032
#                   run time        10.61893
#          getnsecs overhead      1399
#
#          number of samples     11069
#         number of outliers       185
#    number of final samples     10884
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1448           66400 |************                        71197.07320
#               3617           72949 |********************************    75928.25574
#               1308           79498 |***********                         82136.46407
#                558           86047 |****                                89130.66667
#                332           92596 |**                                  95517.47590
#                198           99145 |*                                  102350.83333
#                140          105694 |*                                  108976.72857
#                 88          112243 |*                                  115291.81818
#                 58          118792 |*                                  122233.87931
#                 39          125341 |*                                  127851.28205
#                 32          131890 |*                                  134896.06250
#                 15          138439 |*                                  142445.60000
#                 13          144988 |*                                  147376.15385
#                 16          151537 |*                                  154606.62500
#                 21          158086 |*                                  161639.23810
#                 25          164635 |*                                  168130.24000
#                 29          171184 |*                                  174799.00000
#                 46          177733 |*                                  181034.60870
#                 57          184282 |*                                  188170.01754
#                 52          190831 |*                                  194376.48077
#                 38          197380 |*                                  200385.34211
#                 56          203929 |*                                  207932.33929
#                115          210478 |*                                  214215.61739
#                210          217027 |*                                  220690.05238
#                320          223576 |**                                 226738.24063
#                243          230125 |**                                 233389.97119
#                262          236674 |**                                 240040.16794
#                245          243223 |**                                 246623.43673
#                223          249772 |*                                  252948.39013
#                212          256321 |*                                  259474.82547
#                172          262870 |*                                  266017.53488
#                151          269419 |*                                  272883.27815
#
#                545           > 95% |****                               298972.64771
#
#        mean of 95%    117827.61979
#          95th %ile          275958
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 53.1% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_z8k   1   1           82201        10619        0        6     8192   ----
# bin/../bin-riscv64/mmap -N mmap_z8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     66361                      66361
#                        max   1953524                     386245
#                       mean    144327.53738               136728.49750
#                     median     82651                      82201*
#                     stddev    111711.47757                83405.19363
#             standard error      1076.59024                  809.37779
#       99% confidence level      2773.29647                 2084.95720
#                       skew         4.16323                    0.90752
#                   kurtosis        39.48360                   -0.76220
#           time correlation        27.12793                   23.90635
#
#               elapsed time        20.00965
#                   run time        10.57488
#          getnsecs overhead      1399
#
#          number of samples     10767
#         number of outliers       148
#    number of final samples     10619
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1580           66361 |***************                     71262.98038
#               3229           73220 |********************************    76298.35739
#               1129           80079 |***********                         82872.55093
#                461           86938 |****                                89998.21258
#                230           93797 |**                                  97052.41739
#                145          100656 |*                                  103457.64828
#                107          107515 |*                                  110876.56075
#                 58          114374 |*                                  117704.94828
#                 65          121233 |*                                  124195.76923
#                 35          128092 |*                                  131399.02857
#                 17          134951 |*                                  137864.76471
#                  9          141810 |*                                  145267.33333
#                 17          148669 |*                                  152403.76471
#                 40          155528 |*                                  159160.50000
#                 30          162387 |*                                  165838.93333
#                 47          169246 |*                                  172415.08511
#                 37          176105 |*                                  179178.21622
#                 52          182964 |*                                  186548.57692
#                 42          189823 |*                                  192858.07143
#                 54          196682 |*                                  200661.74074
#                 53          203541 |*                                  207139.45283
#                136          210400 |*                                  214454.72794
#                246          217259 |**                                 221065.63008
#                342          224118 |***                                227398.55556
#                332          230977 |***                                234251.19578
#                332          237836 |***                                241133.13855
#                288          244695 |**                                 247930.10069
#                275          251554 |**                                 254740.89818
#                241          258413 |**                                 261781.21992
#                193          265272 |*                                  268699.79275
#                153          272131 |*                                  275266.50327
#                113          278990 |*                                  282461.29204
#
#                531           > 95% |*****                              315822.67985
#
#        mean of 95%    127301.55353
#          95th %ile          285830
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 52.8% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
             prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_tw128k   1   1          450212          114        0      500   131072 --w-t
# bin/../bin-riscv64/mprotect -N mprot_tw128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -t -f /dev/zero -B 500 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    296308                     296308
#                        max    595183                     595183
#                       mean    442608.20175               442608.20175
#                     median    450212                     450212*
#                     stddev     62247.50710                62247.50710
#             standard error      5830.01320                 5830.01320
#       99% confidence level     15018.11399                15018.11399
#                       skew         0.08181                    0.08181
#                   kurtosis        -0.28322                   -0.28322
#           time correlation      1841.18583                 1841.18583
#
#               elapsed time        25.29798
#                   run time        25.22882
#          getnsecs overhead      1399
#
#          number of samples       114
#         number of outliers         0
#    number of final samples       114
#             ops per sample       500.00000 (-B 500)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          296308 |***                                296308.00000
#                  1          304684 |***                                309654.00000
#                  1          313060 |***                                318349.00000
#                  0          321436 |                                              -
#                  2          329812 |******                             331731.50000
#                  3          338188 |*********                          344772.33333
#                  3          346564 |*********                          352138.00000
#                  0          354940 |                                              -
#                  3          363316 |*********                          366895.33333
#                  3          371692 |*********                          377808.00000
#                  4          380068 |************                       384299.25000
#                  7          388444 |**********************             394497.42857
#                  5          396820 |****************                   399729.40000
#                  8          405196 |*************************          408085.00000
#                  7          413572 |**********************             416917.85714
#                  3          421948 |*********                          426766.00000
#                  2          430324 |******                             432688.00000
#                  3          438700 |*********                          443895.66667
#                  6          447076 |*******************                451243.66667
#                  5          455452 |****************                   457080.80000
#                  6          463828 |*******************                468188.00000
#                  7          472204 |**********************             478331.42857
#                 10          480580 |********************************   483415.80000
#                  7          488956 |**********************             493843.14286
#                  3          497332 |*********                          500912.66667
#                  3          505708 |*********                          509816.33333
#                  0          514084 |                                              -
#                  3          522460 |*********                          525050.33333
#                  2          530836 |******                             535686.00000
#
#                  6           > 95% |*******************                577807.33333
#
#        mean of 95%    435097.13889
#          95th %ile          564319
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
           prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_tw4m   1   1          853231          582        0       40  4194304 --w-t
# bin/../bin-riscv64/mprotect -N mprot_tw4m -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 4m -w -t -f /dev/zero -B 40 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    720078                     720078
#                        max   1797544                     944466
#                       mean    842750.73818               836543.02577
#                     median    853413                     853231*
#                     stddev     73278.96502                45819.97498
#             standard error      3011.74691                 1899.29907
#       99% confidence level      7758.26004                 4892.59440
#                       skew         5.47960                   -0.96665
#                   kurtosis        61.32027                   -0.19979
#           time correlation       294.62264                  244.58832
#
#               elapsed time        20.03443
#                   run time        19.95717
#          getnsecs overhead      1399
#
#          number of samples       592
#         number of outliers        10
#    number of final samples       582
#             ops per sample        40.00000 (-B 40)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          720078 |*                                  720078.00000
#                  0          725195 |                                              -
#                  4          730312 |*                                  734068.75000
#                  8          735429 |***                                737483.25000
#                 13          740546 |******                             743472.53846
#                 22          745663 |**********                         748497.31818
#                 19          750780 |*********                          753560.84211
#                 21          755897 |**********                         758404.23810
#                 13          761014 |******                             763845.38462
#                 10          766131 |****                               768600.70000
#                  5          771248 |**                                 773494.20000
#                  3          776365 |*                                  778365.00000
#                  5          781482 |**                                 783473.80000
#                  1          786599 |*                                  790883.00000
#                  3          791716 |*                                  796031.00000
#                  1          796833 |*                                  797121.00000
#                  1          801950 |*                                  806216.00000
#                  2          807067 |*                                  810547.00000
#                  2          812184 |*                                  815732.00000
#                  4          817301 |*                                  819805.75000
#                  4          822418 |*                                  825272.50000
#                  8          827535 |***                                829849.25000
#                 15          832652 |*******                            835254.46667
#                 28          837769 |*************                      840736.89286
#                 38          842886 |******************                 845341.57895
#                 59          848003 |****************************       850474.96610
#                 66          853120 |********************************   855771.62121
#                 56          858237 |***************************        860929.60714
#                 62          863354 |******************************     865765.83871
#                 38          868471 |******************                 870655.50000
#                 27          873588 |*************                      876026.92593
#                 13          878705 |******                             881190.15385
#
#                 30           > 95% |**************                     900388.50000
#
#        mean of 95%    833073.16304
#          95th %ile          883796
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
            prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_twz8k   1   1          412322           68        0      900     8192 --w-t
# bin/../bin-riscv64/mprotect -N mprot_twz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -t -f /dev/zero -B 900 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    294914                     294914
#                        max    507007                     507007
#                       mean    412097.02941               412097.02941
#                     median    412322                     412322*
#                     stddev     44557.70078                44557.70078
#             standard error      5403.41490                 5403.41490
#       99% confidence level     13919.19679                13919.19679
#                       skew        -0.19302                   -0.19302
#                   kurtosis         0.17215                    0.17215
#           time correlation      2170.21770                 2170.21770
#
#               elapsed time        25.24975
#                   run time        25.22043
#          getnsecs overhead      1399
#
#          number of samples        68
#         number of outliers         0
#    number of final samples        68
#             ops per sample       900.00000 (-B 900)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          294914 |*********                          295934.50000
#                  0          300767 |                                              -
#                  0          306620 |                                              -
#                  1          312473 |****                               315416.00000
#                  0          318326 |                                              -
#                  0          324179 |                                              -
#                  0          330032 |                                              -
#                  1          335885 |****                               339508.00000
#                  0          341738 |                                              -
#                  0          347591 |                                              -
#                  0          353444 |                                              -
#                  3          359297 |*************                      361779.33333
#                  2          365150 |*********                          368391.00000
#                  4          371003 |******************                 373329.50000
#                  4          376856 |******************                 379338.50000
#                  4          382709 |******************                 385452.50000
#                  3          388562 |*************                      390430.66667
#                  2          394415 |*********                          397584.50000
#                  3          400268 |*************                      403439.66667
#                  4          406121 |******************                 409406.25000
#                  4          411974 |******************                 413447.75000
#                  6          417827 |***************************        421618.83333
#                  7          423680 |********************************   426663.85714
#                  0          429533 |                                              -
#                  1          435386 |****                               438574.00000
#                  4          441239 |******************                 445088.00000
#                  2          447092 |*********                          449355.50000
#                  0          452945 |                                              -
#                  0          458798 |                                              -
#                  1          464651 |****                               467109.00000
#                  3          470504 |*************                      474216.66667
#                  3          476357 |*************                      478854.00000
#
#                  4           > 95% |******************                 493172.25000
#
#        mean of 95%    407029.82812
#          95th %ile          482197
#
# WARNINGS
#     Too few samples, 68 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
             prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_wz128k   1   1          445303           70        0      800   131072 --w--
# bin/../bin-riscv64/mprotect -N mprot_wz128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero -B 800 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    232217                     375152
#                        max    506738                     506738
#                       mean    438090.63889               442979.62857
#                     median    444258                     445303*
#                     stddev     47324.88463                37370.99612
#             standard error      5577.29114                 4466.68837
#       99% confidence level     14367.10198                11506.18925
#                       skew        -1.36010                   -0.10992
#                   kurtosis         3.80041                   -0.96660
#           time correlation      2072.49977                 1822.95810
#
#               elapsed time        25.29368
#                   run time        25.23412
#          getnsecs overhead      1399
#
#          number of samples        72
#         number of outliers         2
#    number of final samples        70
#             ops per sample       800.00000 (-B 800)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          375152 |*******************                376942.00000
#                  3          379059 |*******************                380513.33333
#                  1          382966 |******                             385434.00000
#                  2          386873 |************                       388893.00000
#                  1          390780 |******                             394329.00000
#                  1          394687 |******                             396723.00000
#                  2          398594 |************                       401027.00000
#                  1          402501 |******                             404759.00000
#                  2          406408 |************                       408613.00000
#                  1          410315 |******                             411216.00000
#                  0          414222 |                                              -
#                  1          418129 |******                             421429.00000
#                  3          422036 |*******************                424243.33333
#                  4          425943 |*************************          427243.00000
#                  3          429850 |*******************                430826.33333
#                  2          433757 |************                       435834.50000
#                  2          437664 |************                       440447.00000
#                  4          441571 |*************************          444109.50000
#                  5          445478 |********************************   446245.80000
#                  2          449385 |************                       451724.00000
#                  2          453292 |************                       455720.00000
#                  2          457199 |************                       458434.00000
#                  3          461106 |*******************                462833.33333
#                  2          465013 |************                       468291.50000
#                  1          468920 |******                             468961.00000
#                  2          472827 |************                       474830.50000
#                  0          476734 |                                              -
#                  1          480641 |******                             483846.00000
#                  3          484548 |*******************                486845.33333
#                  3          488455 |*******************                490257.66667
#                  1          492362 |******                             496237.00000
#                  3          496269 |*******************                497699.33333
#
#                  4           > 95% |*************************          502722.50000
#
#        mean of 95%    439358.84848
#          95th %ile          500173
#
# WARNINGS
#     Too few samples, 72 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
           prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_wz8k   1   1          400344           61        0     1024     8192 --w--
# bin/../bin-riscv64/mprotect -N mprot_wz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    272319                     272319
#                        max    512283                     512283
#                       mean    401406.54098               401406.54098
#                     median    400344                     400344*
#                     stddev     51651.15570                51651.15570
#             standard error      6613.25282                 6613.25282
#       99% confidence level     17035.73927                17035.73927
#                       skew         0.11258                    0.11258
#                   kurtosis        -0.43892                   -0.43892
#           time correlation      2851.75182                 2851.75182
#
#               elapsed time        25.10467
#                   run time        25.07354
#          getnsecs overhead      1399
#
#          number of samples        61
#         number of outliers         0
#    number of final samples        61
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          272319 |******                             272319.00000
#                  0          278887 |                                              -
#                  0          285455 |                                              -
#                  0          292023 |                                              -
#                  0          298591 |                                              -
#                  0          305159 |                                              -
#                  1          311727 |******                             312722.00000
#                  1          318295 |******                             321597.00000
#                  0          324863 |                                              -
#                  2          331431 |************                       333883.50000
#                  2          337999 |************                       340993.00000
#                  5          344567 |********************************   348234.00000
#                  2          351135 |************                       354192.50000
#                  2          357703 |************                       363590.00000
#                  3          364271 |*******************                366921.66667
#                  3          370839 |*******************                371465.33333
#                  3          377407 |*******************                380597.00000
#                  1          383975 |******                             390347.00000
#                  3          390543 |*******************                394104.66667
#                  2          397111 |************                       399527.00000
#                  2          403679 |************                       408032.50000
#                  4          410247 |*************************          413541.00000
#                  3          416815 |*******************                419929.33333
#                  5          423383 |********************************   426589.20000
#                  4          429951 |*************************          433926.75000
#                  2          436519 |************                       439214.00000
#                  0          443087 |                                              -
#                  0          449655 |                                              -
#                  0          456223 |                                              -
#                  1          462791 |******                             465106.00000
#                  1          469359 |******                             472378.00000
#                  4          475927 |*************************          478204.50000
#
#                  4           > 95% |*************************          499151.50000
#
#        mean of 95%    394547.24561
#          95th %ile          482472
#
# WARNINGS
#     Too few samples, 61 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
            prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_z128k   1   1          117009          187        0     1024   131072 -----
# bin/../bin-riscv64/mprotect -N mprot_z128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     88207                      88207
#                        max    231638                     231638
#                       mean    130765.61497               130765.61497
#                     median    117009                     117009*
#                     stddev     35019.81178                35019.81178
#             standard error      2560.90227                 2560.90227
#       99% confidence level      6596.88423                 6596.88423
#                       skew         0.68192                    0.68192
#                   kurtosis        -0.49903                   -0.49903
#           time correlation       623.14805                  623.14805
#
#               elapsed time        25.06649
#                   run time        25.04031
#          getnsecs overhead      1399
#
#          number of samples       187
#         number of outliers         0
#    number of final samples       187
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         8
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12           88207 |*********************               90145.33333
#                 18           91553 |********************************    93398.88889
#                 11           94899 |*******************                 96628.81818
#                 12           98245 |*********************               99933.58333
#                  8          101591 |**************                     102733.37500
#                  5          104937 |********                           106671.00000
#                 15          108283 |**************************         110049.60000
#                  8          111629 |**************                     112552.37500
#                  6          114975 |**********                         116389.00000
#                  3          118321 |*****                              119719.66667
#                  3          121667 |*****                              123141.33333
#                  0          125013 |                                              -
#                  4          128359 |*******                            129874.75000
#                  2          131705 |***                                133106.50000
#                  3          135051 |*****                              135860.66667
#                  2          138397 |***                                138558.50000
#                  8          141743 |**************                     143101.50000
#                  4          145089 |*******                            146493.00000
#                  0          148435 |                                              -
#                  5          151781 |********                           153025.40000
#                 13          155127 |***********************            156421.76923
#                  5          158473 |********                           159607.40000
#                  6          161819 |**********                         163698.16667
#                  8          165165 |**************                     166938.50000
#                  4          168511 |*******                            169369.50000
#                  1          171857 |*                                  172867.00000
#                  2          175203 |***                                176993.00000
#                  4          178549 |*******                            180005.00000
#                  0          181895 |                                              -
#                  2          185241 |***                                187123.00000
#                  2          188587 |***                                190976.00000
#                  1          191933 |*                                  195183.00000
#
#                 10           > 95% |*****************                  210355.30000
#
#        mean of 95%    126269.02260
#          95th %ile          195247
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
          prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_z8k   1   1          112340          193        0     1024     8192 -----
# bin/../bin-riscv64/mprotect -N mprot_z8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     88127                      88127
#                        max    223093                     223093
#                       mean    126918.78238               126918.78238
#                     median    112340                     112340*
#                     stddev     35172.70135                35172.70135
#             standard error      2531.78644                 2531.78644
#       99% confidence level      6521.88188                 6521.88188
#                       skew         0.86608                    0.86608
#                   kurtosis        -0.26062                   -0.26062
#           time correlation       595.78996                  595.78996
#
#               elapsed time        25.10618
#                   run time        25.08348
#          getnsecs overhead      1399
#
#          number of samples       193
#         number of outliers         0
#    number of final samples       193
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         8
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23           88127 |********************************    90226.34783
#                 18           91764 |*************************           93692.11111
#                 16           95401 |**********************              97256.93750
#                 11           99038 |***************                    100918.18182
#                  7          102675 |*********                          104455.42857
#                 13          106312 |******************                 107972.46154
#                 12          109949 |****************                   111478.33333
#                  7          113586 |*********                          114973.71429
#                  3          117223 |****                               119151.33333
#                  2          120860 |**                                 121832.00000
#                  2          124497 |**                                 125880.00000
#                  4          128134 |*****                              129780.00000
#                  2          131771 |**                                 131911.50000
#                  3          135408 |****                               136882.33333
#                  2          139045 |**                                 140923.00000
#                  7          142682 |*********                          144440.14286
#                  5          146319 |******                             148178.40000
#                 11          149956 |***************                    151896.00000
#                  4          153593 |*****                              155277.25000
#                 12          157230 |****************                   158883.58333
#                  1          160867 |*                                  163762.00000
#                  2          164504 |**                                 164642.50000
#                  5          168141 |******                             169798.20000
#                  2          171778 |**                                 174719.50000
#                  1          175415 |*                                  176700.00000
#                  1          179052 |*                                  180836.00000
#                  1          182689 |*                                  182977.00000
#                  1          186326 |*                                  187211.00000
#                  0          189963 |                                              -
#                  3          193600 |****                               195688.33333
#                  2          197237 |**                                 199132.50000
#
#                 10           > 95% |*************                      210667.80000
#
#        mean of 95%    122342.33333
#          95th %ile          204499
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
               prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rait128k   1   1            2770        15956        0      282   131072  air--
# bin/../bin-riscv64/msync -N msync_rait128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2584                       2626
#                        max   1808358                       2915
#                       mean      3097.78532                 2770.72963
#                     median      2787                       2770*
#                     stddev     12628.44333                   48.11572
#             standard error        86.25173                    0.38091
#       99% confidence level       222.18446                    0.98123
#                       skew       137.51434                   -0.06592
#                   kurtosis     19514.66795                    0.51416
#           time correlation         0.08699                    0.01001
#
#               elapsed time        20.00421
#                   run time        17.78619
#          getnsecs overhead      1399
#
#          number of samples     21437
#         number of outliers      5481
#    number of final samples     15956
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 37            2626 |*                                    2629.59459
#                 80            2634 |*                                    2638.48750
#                106            2642 |**                                   2645.59434
#                132            2650 |***                                  2653.43182
#                131            2658 |***                                  2661.22901
#                 94            2666 |**                                   2669.23404
#                108            2674 |**                                   2677.69444
#                107            2682 |**                                   2685.94393
#                211            2690 |****                                 2693.88626
#                280            2698 |******                               2701.81071
#                412            2706 |*********                            2709.31068
#                437            2714 |**********                           2717.61785
#                552            2722 |************                         2725.79167
#                634            2730 |**************                       2733.66088
#                820            2738 |******************                   2741.73415
#               1041            2746 |***********************              2749.62824
#               1331            2754 |******************************       2757.58527
#               1342            2762 |******************************       2765.41952
#               1393            2770 |********************************     2773.48672
#               1224            2778 |****************************         2781.40033
#                968            2786 |**********************               2789.33161
#                794            2794 |******************                   2797.46222
#                621            2802 |**************                       2805.46860
#                599            2810 |*************                        2813.34224
#                518            2818 |***********                          2821.42278
#                500            2826 |***********                          2829.41000
#                354            2834 |********                             2837.31073
#                280            2842 |******                               2845.58214
#                 52            2850 |*                                    2850.40385
#
#                798           > 95% |******************                   2874.42481
#
#        mean of 95%      2765.27055
#          95th %ile            2851
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rait8k   1   1            2310        14156        0      370     8192  air--
# bin/../bin-riscv64/msync -N msync_rait8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2185                       2205
#                        max    305502                       2418
#                       mean      2507.51988                 2311.72817
#                     median      2328                       2310*
#                     stddev      2372.24087                   35.48918
#             standard error        16.88225                    0.29828
#       99% confidence level        43.48866                    0.76837
#                       skew       111.90698                    0.19559
#                   kurtosis     13790.10231                    0.19282
#           time correlation         0.05379                    0.00841
#
#               elapsed time        20.00452
#                   run time        18.00336
#          getnsecs overhead      1399
#
#          number of samples     19745
#         number of outliers      5589
#    number of final samples     14156
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            2205 |*                                    2207.30000
#                 14            2211 |*                                    2213.57143
#                 36            2217 |*                                    2219.66667
#                 68            2223 |*                                    2225.61765
#                 78            2229 |**                                   2231.62821
#                118            2235 |***                                  2237.61864
#                167            2241 |****                                 2243.32335
#                191            2247 |*****                                2249.87958
#                244            2253 |******                               2255.45902
#                272            2259 |*******                              2261.46691
#                308            2265 |********                             2267.61039
#                448            2271 |************                         2273.63170
#                645            2277 |******************                   2279.52868
#                802            2283 |**********************               2285.61970
#                996            2289 |****************************         2291.61044
#               1119            2295 |********************************     2297.53441
#               1060            2301 |******************************       2303.43208
#                969            2307 |***************************          2309.45511
#                961            2313 |***************************          2315.53278
#                936            2319 |**************************           2321.47115
#                775            2325 |**********************               2327.40000
#                727            2331 |********************                 2333.51719
#                648            2337 |******************                   2339.40432
#                525            2343 |***************                      2345.50476
#                417            2349 |***********                          2351.42686
#                363            2355 |**********                           2357.40771
#                281            2361 |********                             2363.44128
#                201            2367 |*****                                2369.56219
#                 69            2373 |*                                    2373.75362
#
#                708           > 95% |********************                 2391.52684
#
#        mean of 95%      2307.52699
#          95th %ile            2375
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rat128k   1   1            2795        19756        0      284   131072  a-r--
# bin/../bin-riscv64/msync -N msync_rat128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2604                       2604
#                        max   1773607                       3587
#                       mean      3128.47043                 2896.45859
#                     median      2804                       2795*
#                     stddev     12461.51050                  230.02792
#             standard error        85.77638                    1.63656
#       99% confidence level       220.95996                    4.21577
#                       skew       136.99854                    1.39726
#                   kurtosis     19334.77048                    0.69529
#           time correlation         0.09335                    0.03495
#
#               elapsed time        20.00598
#                   run time        17.93597
#          getnsecs overhead      1399
#
#          number of samples     21106
#         number of outliers      1350
#    number of final samples     19756
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            2604 |*                                    2617.33333
#                 31            2630 |*                                    2643.67742
#                262            2656 |**                                   2674.15649
#               1678            2682 |******************                   2696.79201
#               1919            2708 |*********************                2719.83533
#               2289            2734 |*************************            2747.80821
#               2884            2760 |********************************     2772.20146
#               1991            2786 |**********************               2797.72275
#               1313            2812 |**************                       2823.48743
#                888            2838 |*********                            2849.12275
#                622            2864 |******                               2875.81190
#                482            2890 |*****                                2902.27593
#                372            2916 |****                                 2927.69086
#                319            2942 |***                                  2954.05956
#                226            2968 |**                                   2980.10177
#                189            2994 |**                                   3005.47090
#                154            3020 |*                                    3032.13636
#                120            3046 |*                                    3059.39167
#                161            3072 |*                                    3084.07453
#                138            3098 |*                                    3110.68841
#                145            3124 |*                                    3137.40000
#                201            3150 |**                                   3162.70647
#                272            3176 |***                                  3188.69853
#                312            3202 |***                                  3214.14423
#                260            3228 |**                                   3240.65769
#                225            3254 |**                                   3266.54222
#                240            3280 |**                                   3292.87500
#                236            3306 |**                                   3318.57203
#                247            3332 |**                                   3344.69231
#                259            3358 |**                                   3370.11969
#                285            3384 |***                                  3396.72982
#                 42            3410 |*                                    3413.19048
#
#                988           > 95% |**********                           3486.39069
#
#        mean of 95%      2865.40292
#          95th %ile            3416
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rat8k   1   1            2331        18502        0      361     8192  a-r--
# bin/../bin-riscv64/msync -N msync_rat8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2196                       2196
#                        max    295702                       2841
#                       mean      2528.29618                 2387.97460
#                     median      2339                       2331*
#                     stddev      2785.72421                  150.85090
#             standard error        19.55436                    1.10902
#       99% confidence level        50.37203                    2.85683
#                       skew        93.05856                    1.50915
#                   kurtosis      9207.79734                    1.02727
#           time correlation         0.05808                    0.02397
#
#               elapsed time        20.00402
#                   run time        18.09823
#          getnsecs overhead      1399
#
#          number of samples     20295
#         number of outliers      1793
#    number of final samples     18502
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 21            2196 |*                                    2206.80952
#                104            2213 |*                                    2222.69231
#                465            2230 |******                               2239.74194
#                878            2247 |************                         2255.22210
#               1538            2264 |**********************               2272.92653
#               2224            2281 |********************************     2289.28732
#               2133            2298 |******************************       2305.89498
#               1935            2315 |***************************          2322.84755
#               1871            2332 |**************************           2340.00534
#               1491            2349 |*********************                2356.50905
#                896            2366 |************                         2372.78013
#                593            2383 |********                             2390.43845
#                357            2400 |*****                                2406.93277
#                188            2417 |**                                   2424.60106
#                111            2434 |*                                    2440.93694
#                 77            2451 |*                                    2458.06494
#                 68            2468 |*                                    2475.63235
#                 64            2485 |*                                    2493.46875
#                 49            2502 |*                                    2509.91837
#                 47            2519 |*                                    2527.04255
#                 76            2536 |*                                    2545.84211
#                122            2553 |*                                    2561.96721
#                185            2570 |**                                   2578.84324
#                197            2587 |**                                   2595.38071
#                267            2604 |***                                  2612.25094
#                278            2621 |****                                 2629.05036
#                247            2638 |***                                  2646.22267
#                241            2655 |***                                  2662.85892
#                245            2672 |***                                  2679.63673
#                212            2689 |***                                  2696.68396
#                225            2706 |***                                  2713.84444
#                171            2723 |**                                   2729.04094
#
#                926           > 95% |*************                        2785.15443
#
#        mean of 95%      2367.04899
#          95th %ile            2736
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rit128k   1   1            2679        15915        0      289   131072  -ir--
# bin/../bin-riscv64/msync -N msync_rit128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2559                       2559
#                        max   1743057                       2865
#                       mean      3023.09795                 2691.88916
#                     median      2714                       2679*
#                     stddev     12142.90545                   57.69978
#             standard error        82.81393                    0.45737
#       99% confidence level       213.32868                    1.17819
#                       skew       138.03143                    0.73526
#                   kurtosis     19642.99834                   -0.26480
#           time correlation         0.08843                    0.01213
#
#               elapsed time        20.00477
#                   run time        17.90270
#          getnsecs overhead      1399
#
#          number of samples     21500
#         number of outliers      5585
#    number of final samples     15915
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            2559 |*                                    2559.00000
#                  4            2567 |*                                    2568.50000
#                  5            2575 |*                                    2580.20000
#                 15            2583 |*                                    2586.60000
#                 24            2591 |*                                    2595.08333
#                 72            2599 |*                                    2603.25000
#                177            2607 |***                                  2610.81356
#                455            2615 |*********                            2619.07912
#                867            2623 |******************                   2626.81200
#               1308            2631 |***************************          2634.66131
#               1508            2639 |********************************     2642.39987
#               1247            2647 |**************************           2650.28388
#                891            2655 |******************                   2658.35466
#                666            2663 |**************                       2666.46997
#                663            2671 |**************                       2674.38462
#                704            2679 |**************                       2682.51562
#                680            2687 |**************                       2690.70147
#                660            2695 |**************                       2698.41667
#                555            2703 |***********                          2706.40901
#                532            2711 |***********                          2714.44361
#                537            2719 |***********                          2722.44320
#                525            2727 |***********                          2730.49714
#                559            2735 |***********                          2738.38998
#                463            2743 |*********                            2746.34557
#                414            2751 |********                             2754.34783
#                372            2759 |*******                              2762.34677
#                338            2767 |*******                              2770.48521
#                288            2775 |******                               2778.23611
#                249            2783 |*****                                2786.50201
#                220            2791 |****                                 2794.45909
#                120            2799 |**                                   2800.81667
#
#                796           > 95% |****************                     2827.07789
#
#        mean of 95%      2684.77161
#          95th %ile            2803
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rit8k   1   1            2288        18623        0      376     8192  -ir--
# bin/../bin-riscv64/msync -N msync_rit8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2145                       2145
#                        max    299352                       2819
#                       mean      2467.10734                 2353.23331
#                     median      2293                       2288*
#                     stddev      2353.98440                  155.22890
#             standard error        16.65643                    1.13749
#       99% confidence level        42.90696                    2.93018
#                       skew       107.45117                    1.41837
#                   kurtosis     13004.92470                    0.65375
#           time correlation         0.05314                    0.02458
#
#               elapsed time        20.00433
#                   run time        18.17494
#          getnsecs overhead      1399
#
#          number of samples     19973
#         number of outliers      1350
#    number of final samples     18623
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13            2145 |*                                    2157.30769
#                 34            2163 |*                                    2175.23529
#                200            2181 |**                                   2191.60000
#                602            2199 |*******                              2209.15449
#               1277            2217 |***************                      2226.66092
#               1977            2235 |***********************              2244.12393
#               2676            2253 |********************************     2261.84641
#               2647            2271 |*******************************      2279.12051
#               2044            2289 |************************             2297.10714
#               1376            2307 |****************                     2314.77326
#                801            2325 |*********                            2332.53433
#                433            2343 |*****                                2350.12009
#                236            2361 |**                                   2368.97881
#                123            2379 |*                                    2386.68293
#                 99            2397 |*                                    2405.03030
#                 75            2415 |*                                    2422.88000
#                 68            2433 |*                                    2441.61765
#                 64            2451 |*                                    2460.07812
#                 52            2469 |*                                    2478.50000
#                 69            2487 |*                                    2497.02899
#                122            2505 |*                                    2514.98361
#                188            2523 |**                                   2531.89894
#                304            2541 |***                                  2549.90461
#                293            2559 |***                                  2567.64164
#                276            2577 |***                                  2585.93841
#                350            2595 |****                                 2603.07429
#                303            2613 |***                                  2621.29043
#                272            2631 |***                                  2638.98162
#                273            2649 |***                                  2657.14286
#                264            2667 |***                                  2676.63636
#                180            2685 |**                                   2692.52778
#
#                932           > 95% |***********                          2747.94313
#
#        mean of 95%      2332.43915
#          95th %ile            2700
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rt128k   1   1            2776        19338        0      296   131072  --r--
# bin/../bin-riscv64/msync -N msync_rt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2589                       2589
#                        max   1553007                       3363
#                       mean      3033.19805                 2838.18601
#                     median      2782                       2776*
#                     stddev     11039.55268                  174.82106
#             standard error        76.41156                    1.25715
#       99% confidence level       196.83617                    3.23842
#                       skew       134.24710                    1.47585
#                   kurtosis     18667.45132                    0.97029
#           time correlation         0.07612                    0.02674
#
#               elapsed time        20.00446
#                   run time        18.00011
#          getnsecs overhead      1399
#
#          number of samples     20873
#         number of outliers      1535
#    number of final samples     19338
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 20            2589 |*                                    2598.80000
#                 62            2610 |*                                    2623.95161
#                319            2631 |***                                  2643.41693
#                638            2652 |*******                              2662.92006
#                831            2673 |**********                           2683.85439
#               1391            2694 |*****************                    2704.87994
#               1948            2715 |***********************              2725.06982
#               2088            2736 |*************************            2746.40421
#               2603            2757 |********************************     2767.23665
#               2215            2778 |***************************          2787.40587
#               1482            2799 |******************                   2808.35290
#                986            2820 |************                         2829.33164
#                510            2841 |******                               2849.70000
#                243            2862 |**                                   2870.98354
#                142            2883 |*                                    2891.66901
#                100            2904 |*                                    2914.19000
#                 70            2925 |*                                    2934.52857
#                 59            2946 |*                                    2954.59322
#                 76            2967 |*                                    2976.11842
#                 61            2988 |*                                    2998.47541
#                 84            3009 |*                                    3019.80952
#                114            3030 |*                                    3039.98246
#                174            3051 |**                                   3060.24713
#                229            3072 |**                                   3083.05677
#                255            3093 |***                                  3103.30980
#                260            3114 |***                                  3123.91538
#                303            3135 |***                                  3145.68647
#                311            3156 |***                                  3166.07074
#                262            3177 |***                                  3187.18321
#                280            3198 |***                                  3207.53214
#                219            3219 |**                                   3228.59817
#                 36            3240 |*                                    3241.25000
#
#                967           > 95% |***********                          3293.20372
#
#        mean of 95%      2814.23510
#          95th %ile            3243
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rt8k   1   1            2275        18145        0      405     8192  --r--
# bin/../bin-riscv64/msync -N msync_rt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2134                       2134
#                        max    105051                       2887
#                       mean      2402.76472                 2359.09330
#                     median      2278                       2275*
#                     stddev       828.90746                  176.05724
#             standard error         6.04077                    1.30700
#       99% confidence level        15.56103                    3.36683
#                       skew       102.00866                    1.31717
#                   kurtosis     12502.23363                    0.32355
#           time correlation         0.03942                    0.02881
#
#               elapsed time        20.00536
#                   run time        18.26516
#          getnsecs overhead      1399
#
#          number of samples     18829
#         number of outliers       684
#    number of final samples     18145
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2134 |*                                    2142.75000
#                 21            2153 |*                                    2164.00000
#                160            2172 |*                                    2184.06875
#                600            2191 |******                               2201.18500
#               1315            2210 |*************                        2220.70875
#               2910            2229 |******************************       2238.80722
#               3021            2248 |********************************     2256.68918
#               2176            2267 |***********************              2275.43704
#               1525            2286 |****************                     2293.98689
#                836            2305 |********                             2313.12081
#                470            2324 |****                                 2332.17872
#                256            2343 |**                                   2351.12500
#                151            2362 |*                                    2370.02649
#                103            2381 |*                                    2389.08738
#                 84            2400 |*                                    2407.95238
#                 72            2419 |*                                    2427.70833
#                 90            2438 |*                                    2446.71111
#                 64            2457 |*                                    2465.62500
#                 66            2476 |*                                    2483.46970
#                 77            2495 |*                                    2505.67532
#                117            2514 |*                                    2524.24786
#                250            2533 |**                                   2543.69600
#                349            2552 |***                                  2561.12034
#                336            2571 |***                                  2579.97024
#                346            2590 |***                                  2598.78324
#                309            2609 |***                                  2618.23948
#                317            2628 |***                                  2636.72240
#                303            2647 |***                                  2655.27723
#                273            2666 |**                                   2674.59707
#                268            2685 |**                                   2693.60821
#                233            2704 |**                                   2713.02575
#                135            2723 |*                                    2729.61481
#
#                908           > 95% |*********                            2795.56718
#
#        mean of 95%      2336.10100
#          95th %ile            2737
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_t128k   1   1            2234        14100        0      384   131072  -----
# bin/../bin-riscv64/msync -N msync_t128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2101                       2108
#                        max    150451                       2368
#                       mean      2423.56909                 2237.32929
#                     median      2258                       2234*
#                     stddev      1260.20243                   43.46420
#             standard error         8.97743                    0.36603
#       99% confidence level        23.12586                    0.94291
#                       skew        86.76484                    0.43906
#                   kurtosis      9793.78759                   -0.19966
#           time correlation         0.05192                    0.01045
#
#               elapsed time        20.00637
#                   run time        18.05703
#          getnsecs overhead      1399
#
#          number of samples     19705
#         number of outliers      5605
#    number of final samples     14100
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            2108 |*                                    2110.33333
#                  1            2115 |*                                    2120.00000
#                  7            2122 |*                                    2123.85714
#                  9            2129 |*                                    2131.22222
#                 10            2136 |*                                    2139.10000
#                  7            2143 |*                                    2146.42857
#                 37            2150 |*                                    2153.83784
#                118            2157 |****                                 2160.42373
#                251            2164 |********                             2167.36255
#                483            2171 |****************                     2174.32505
#                691            2178 |************************             2181.03184
#                714            2185 |************************             2187.98459
#                600            2192 |********************                 2194.81500
#                676            2199 |***********************              2202.05621
#                777            2206 |***************************          2209.11326
#                859            2213 |*****************************        2216.09197
#                920            2220 |********************************     2223.06413
#                849            2227 |*****************************        2230.07774
#                869            2234 |******************************       2236.90794
#                845            2241 |*****************************        2243.96450
#                763            2248 |**************************           2250.96068
#                713            2255 |************************             2258.10098
#                604            2262 |*********************                2264.79801
#                586            2269 |********************                 2271.86689
#                525            2276 |******************                   2278.99429
#                420            2283 |**************                       2285.89048
#                344            2290 |***********                          2292.83430
#                310            2297 |**********                           2299.92903
#                234            2304 |********                             2306.73077
#                170            2311 |*****                                2313.01176
#
#                705           > 95% |************************             2336.33617
#
#        mean of 95%      2232.11840
#          95th %ile            2316
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_t8k   1   1            2269        18166        0      390     8192  -----
# bin/../bin-riscv64/msync -N msync_t8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2103                       2103
#                        max    144601                       2813
#                       mean      2426.30739                 2330.94732
#                     median      2275                       2269*
#                     stddev      1199.82816                  160.56612
#             standard error         8.59656                    1.19131
#       99% confidence level        22.14473                    3.06881
#                       skew        89.79391                    1.43440
#                   kurtosis     10265.88062                    0.87946
#           time correlation         0.04980                    0.02640
#
#               elapsed time        20.00469
#                   run time        18.24042
#          getnsecs overhead      1399
#
#          number of samples     19480
#         number of outliers      1314
#    number of final samples     18166
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            2103 |*                                    2115.00000
#                 20            2122 |*                                    2135.65000
#                174            2141 |**                                   2152.60920
#                700            2160 |*********                            2170.06429
#                950            2179 |*************                        2187.79368
#               1229            2198 |****************                     2207.64524
#               1875            2217 |*************************            2226.53333
#               2312            2236 |*******************************      2245.16912
#               2336            2255 |********************************     2263.97303
#               1890            2274 |*************************            2282.87249
#               1262            2293 |*****************                    2301.19731
#                724            2312 |*********                            2320.24033
#                346            2331 |****                                 2339.31792
#                157            2350 |**                                   2357.73885
#                140            2369 |*                                    2377.47857
#                105            2388 |*                                    2397.38095
#                100            2407 |*                                    2416.15000
#                 80            2426 |*                                    2435.01250
#                111            2445 |*                                    2454.00000
#                138            2464 |*                                    2473.55072
#                164            2483 |**                                   2492.81707
#                239            2502 |***                                  2511.69874
#                268            2521 |***                                  2530.14552
#                264            2540 |***                                  2548.67424
#                249            2559 |***                                  2567.82329
#                244            2578 |***                                  2587.02459
#                228            2597 |***                                  2605.89912
#                238            2616 |***                                  2624.64286
#                225            2635 |***                                  2644.16889
#                200            2654 |**                                   2663.49500
#                207            2673 |**                                   2681.70531
#                 72            2692 |*                                    2695.79167
#
#                909           > 95% |************                         2751.90759
#
#        mean of 95%      2308.77354
#          95th %ile            2700
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ta128k   1   1            2278        18362        0      384   131072  a----
# bin/../bin-riscv64/msync -N msync_ta128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2094                       2094
#                        max    146651                       2893
#                       mean      2441.69226                 2358.83172
#                     median      2282                       2278*
#                     stddev      1395.17109                  177.90286
#             standard error        10.00592                    1.31287
#       99% confidence level        25.77525                    3.38196
#                       skew        81.28413                    1.47551
#                   kurtosis      7648.62980                    0.79784
#           time correlation         0.04846                    0.02798
#
#               elapsed time        20.00495
#                   run time        17.98196
#          getnsecs overhead      1399
#
#          number of samples     19442
#         number of outliers      1080
#    number of final samples     18362
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            2094 |*                                    2103.50000
#                  9            2115 |*                                    2127.22222
#                 14            2136 |*                                    2146.92857
#                 56            2157 |*                                    2169.14286
#                213            2178 |**                                   2190.07042
#                663            2199 |******                               2211.15686
#               2264            2220 |**********************               2231.27871
#               3291            2241 |********************************     2251.15011
#               3243            2262 |*******************************      2271.77521
#               2175            2283 |*********************                2292.13931
#               1210            2304 |***********                          2312.94959
#                552            2325 |*****                                2333.41123
#                227            2346 |**                                   2354.79736
#                113            2367 |*                                    2375.68142
#                 88            2388 |*                                    2396.94318
#                 59            2409 |*                                    2419.18644
#                 65            2430 |*                                    2440.33846
#                 82            2451 |*                                    2461.26829
#                 98            2472 |*                                    2482.73469
#                100            2493 |*                                    2503.03000
#                126            2514 |*                                    2525.22222
#                214            2535 |**                                   2545.99065
#                295            2556 |**                                   2566.34237
#                324            2577 |***                                  2587.29321
#                294            2598 |**                                   2608.49320
#                269            2619 |**                                   2628.80669
#                289            2640 |**                                   2649.57093
#                231            2661 |**                                   2670.74892
#                211            2682 |**                                   2692.07109
#                228            2703 |**                                   2712.39035
#                230            2724 |**                                   2733.48261
#                208            2745 |**                                   2755.03846
#
#                919           > 95% |********                             2820.31774
#
#        mean of 95%      2334.51792
#          95th %ile            2765
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ta8k   1   1            2231        18513        0      394     8192  a----
# bin/../bin-riscv64/msync -N msync_ta8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2113                       2113
#                        max    143152                       2775
#                       mean      2383.79172                 2293.39102
#                     median      2236                       2231*
#                     stddev      1196.60043                  160.55364
#             standard error         8.54214                    1.18000
#       99% confidence level        22.00454                    3.03968
#                       skew        88.02608                    1.33791
#                   kurtosis      9949.89272                    0.58266
#           time correlation         0.04910                    0.02643
#
#               elapsed time        20.00445
#                   run time        18.17669
#          getnsecs overhead      1399
#
#          number of samples     19623
#         number of outliers      1110
#    number of final samples     18513
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 60            2113 |*                                    2124.28333
#                796            2130 |************                         2140.50879
#               2054            2147 |********************************     2155.21860
#               1572            2164 |************************             2171.32952
#               1418            2181 |**********************               2189.47250
#               1590            2198 |************************             2206.24906
#               1822            2215 |****************************         2223.11251
#               1570            2232 |************************             2239.45669
#               1166            2249 |******************                   2256.64237
#                851            2266 |*************                        2273.40658
#                531            2283 |********                             2290.12994
#                344            2300 |*****                                2307.35174
#                245            2317 |***                                  2324.91429
#                158            2334 |**                                   2341.63924
#                120            2351 |*                                    2358.47500
#                 91            2368 |*                                    2375.24176
#                105            2385 |*                                    2393.46667
#                148            2402 |**                                   2410.35811
#                151            2419 |**                                   2427.28477
#                154            2436 |**                                   2443.90909
#                186            2453 |**                                   2460.77419
#                194            2470 |***                                  2478.07732
#                210            2487 |***                                  2494.55714
#                203            2504 |***                                  2512.11823
#                274            2521 |****                                 2529.56204
#                309            2538 |****                                 2546.13592
#                267            2555 |****                                 2562.94757
#                252            2572 |***                                  2580.30159
#                228            2589 |***                                  2597.46491
#                234            2606 |***                                  2613.83333
#                185            2623 |**                                   2630.58919
#                 99            2640 |*                                    2643.36364
#
#                926           > 95% |**************                       2702.78078
#
#        mean of 95%      2271.83562
#          95th %ile            2647
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_tai128k   1   1            2264        18358        0      393   131072  ai---
# bin/../bin-riscv64/msync -N msync_tai128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2113                       2113
#                        max    146901                       2920
#                       mean      2421.79873                 2353.84143
#                     median      2268                       2264*
#                     stddev      1170.97634                  188.66341
#             standard error         8.43149                    1.39244
#       99% confidence level        21.71953                    3.58691
#                       skew       101.13421                    1.42487
#                   kurtosis     12149.86220                    0.61548
#           time correlation         0.04631                    0.02982
#
#               elapsed time        20.00477
#                   run time        18.21960
#          getnsecs overhead      1399
#
#          number of samples     19288
#         number of outliers       930
#    number of final samples     18358
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9            2113 |*                                    2124.22222
#                 17            2134 |*                                    2144.47059
#                131            2155 |*                                    2167.69466
#                441            2176 |***                                  2187.47166
#               1187            2197 |**********                           2208.82561
#               3088            2218 |***************************          2229.34067
#               3640            2239 |********************************     2248.33516
#               2475            2260 |*********************                2269.38909
#               1507            2281 |*************                        2289.81752
#                726            2302 |******                               2310.12810
#                316            2323 |**                                   2331.68354
#                205            2344 |*                                    2353.20488
#                140            2365 |*                                    2374.32857
#                 90            2386 |*                                    2394.85556
#                 77            2407 |*                                    2416.16883
#                 79            2428 |*                                    2437.75949
#                 67            2449 |*                                    2460.31343
#                 64            2470 |*                                    2480.26562
#                 99            2491 |*                                    2501.37374
#                114            2512 |*                                    2523.34211
#                191            2533 |*                                    2543.50262
#                287            2554 |**                                   2563.98258
#                294            2575 |**                                   2585.26531
#                291            2596 |**                                   2605.90034
#                285            2617 |**                                   2626.79298
#                277            2638 |**                                   2647.75090
#                291            2659 |**                                   2668.64261
#                266            2680 |**                                   2689.57895
#                229            2701 |**                                   2710.62009
#                223            2722 |*                                    2732.11211
#                223            2743 |*                                    2753.34978
#                111            2764 |*                                    2769.10811
#
#                918           > 95% |********                             2835.28214
#
#        mean of 95%      2328.49954
#          95th %ile            2775
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_tai8k   1   1            2213        18580        0      388     8192  ai---
# bin/../bin-riscv64/msync -N msync_tai8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2104                       2104
#                        max    144102                       2826
#                       mean      2394.95637                 2298.41243
#                     median      2219                       2213*
#                     stddev      1235.63067                  175.75267
#             standard error         8.78036                    1.28937
#       99% confidence level        22.61820                    3.32143
#                       skew        81.71970                    1.37706
#                   kurtosis      8896.98192                    0.54857
#           time correlation         0.05153                    0.02805
#
#               elapsed time        20.00531
#                   run time        18.13430
#          getnsecs overhead      1399
#
#          number of samples     19804
#         number of outliers      1224
#    number of final samples     18580
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2104 |*                                    2112.75000
#                106            2123 |*                                    2136.56604
#                978            2142 |*********                            2153.43354
#               3352            2161 |********************************     2171.05877
#               3095            2180 |*****************************        2187.99095
#               2174            2199 |********************                 2207.75621
#               1525            2218 |**************                       2226.09836
#                899            2237 |********                             2245.66630
#                701            2256 |******                               2264.43937
#                435            2275 |****                                 2283.36782
#                326            2294 |***                                  2302.33129
#                220            2313 |**                                   2321.66818
#                175            2332 |*                                    2340.30857
#                120            2351 |*                                    2360.31667
#                111            2370 |*                                    2378.81081
#                111            2389 |*                                    2397.49550
#                103            2408 |*                                    2416.49515
#                 83            2427 |*                                    2436.55422
#                109            2446 |*                                    2455.86239
#                237            2465 |**                                   2474.86920
#                406            2484 |***                                  2492.85468
#                349            2503 |***                                  2511.86819
#                275            2522 |**                                   2530.37818
#                208            2541 |*                                    2550.13462
#                211            2560 |**                                   2569.23697
#                210            2579 |**                                   2588.19048
#                239            2598 |**                                   2607.22176
#                254            2617 |**                                   2625.63386
#                248            2636 |**                                   2644.32661
#                211            2655 |**                                   2663.28910
#                176            2674 |*                                    2680.67614
#
#                929           > 95% |********                             2745.37567
#
#        mean of 95%      2274.88805
#          95th %ile            2689
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ti128k   1   1            2277        18588        0      379   131072  -i---
# bin/../bin-riscv64/msync -N msync_ti128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2145                       2145
#                        max    320852                       2910
#                       mean      2458.16847                 2360.54896
#                     median      2282                       2277*
#                     stddev      2403.54361                  183.05351
#             standard error        17.07004                    1.34265
#       99% confidence level        43.97241                    3.45866
#                       skew       120.14310                    1.55003
#                   kurtosis     15636.89025                    0.99438
#           time correlation         0.05171                    0.02795
#
#               elapsed time        20.00406
#                   run time        18.17450
#          getnsecs overhead      1399
#
#          number of samples     19826
#         number of outliers      1238
#    number of final samples     18588
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            2145 |*                                    2151.87500
#                 31            2166 |*                                    2179.22581
#                257            2187 |**                                   2200.58366
#               1174            2208 |**********                           2220.24446
#               3075            2229 |**************************           2240.06146
#               3715            2250 |********************************     2259.94805
#               2841            2271 |************************             2280.31538
#               1801            2292 |***************                      2300.47585
#                792            2313 |******                               2321.33460
#                327            2334 |**                                   2342.59021
#                200            2355 |*                                    2364.30000
#                118            2376 |*                                    2385.72034
#                 98            2397 |*                                    2406.60204
#                 67            2418 |*                                    2428.52239
#                 62            2439 |*                                    2448.88710
#                 85            2460 |*                                    2469.90588
#                112            2481 |*                                    2491.41964
#                133            2502 |*                                    2511.53383
#                136            2523 |*                                    2533.98529
#                199            2544 |*                                    2554.28141
#                289            2565 |**                                   2575.02076
#                271            2586 |**                                   2596.40221
#                219            2607 |*                                    2616.47945
#                212            2628 |*                                    2637.61792
#                162            2649 |*                                    2658.63580
#                220            2670 |*                                    2679.65000
#                223            2691 |*                                    2700.98206
#                211            2712 |*                                    2722.40758
#                240            2733 |**                                   2742.64167
#                213            2754 |*                                    2763.85915
#                167            2775 |*                                    2780.88623
#
#                930           > 95% |********                             2840.90000
#
#        mean of 95%      2335.25014
#          95th %ile            2787
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ti8k   1   1            2362        17989        0      373     8192  -i---
# bin/../bin-riscv64/msync -N msync_ti8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2211                       2211
#                        max    144602                       2957
#                       mean      2527.37408                 2430.24676
#                     median      2369                       2362*
#                     stddev      1191.15509                  175.53500
#             standard error         8.52458                    1.30876
#       99% confidence level        21.95931                    3.37137
#                       skew        92.05807                    1.51281
#                   kurtosis     10565.45144                    1.05031
#           time correlation         0.05095                    0.02866
#
#               elapsed time        20.00350
#                   run time        18.22238
#          getnsecs overhead      1399
#
#          number of samples     19525
#         number of outliers      1536
#    number of final samples     17989
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            2211 |*                                    2222.50000
#                 95            2231 |*                                    2244.63158
#                574            2251 |********                             2262.58537
#               1047            2271 |***************                      2280.96848
#               1698            2291 |************************             2301.38575
#               2211            2311 |********************************     2320.40706
#               2129            2331 |******************************       2340.34241
#               2104            2351 |******************************       2360.19202
#               1847            2371 |**************************           2379.91879
#               1121            2391 |****************                     2399.52007
#                653            2411 |*********                            2419.27565
#                326            2431 |****                                 2439.17485
#                176            2451 |**                                   2459.25000
#                102            2471 |*                                    2480.12745
#                 84            2491 |*                                    2501.23810
#                103            2511 |*                                    2522.28155
#                135            2531 |*                                    2541.57778
#                118            2551 |*                                    2559.87288
#                122            2571 |*                                    2580.72951
#                137            2591 |*                                    2600.24088
#                133            2611 |*                                    2620.70677
#                135            2631 |*                                    2640.80741
#                192            2651 |**                                   2661.57812
#                200            2671 |**                                   2680.72000
#                290            2691 |****                                 2700.81034
#                270            2711 |***                                  2720.23704
#                218            2731 |***                                  2740.00000
#                208            2751 |***                                  2760.65865
#                185            2771 |**                                   2780.30270
#                181            2791 |**                                   2800.72376
#                182            2811 |**                                   2821.01648
#                105            2831 |*                                    2836.23810
#
#                900           > 95% |*************                        2896.34667
#
#        mean of 95%      2405.69940
#          95th %ile            2843
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
               prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wait128k   1   1            2637        16148        0      290   131072  ai-w-
# bin/../bin-riscv64/msync -N msync_wait128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2475                       2523
#                        max   2475910                       2763
#                       mean      2981.42179                 2642.25551
#                     median      2658                       2637*
#                     stddev     16885.18801                   40.23872
#             standard error       114.05787                    0.31665
#       99% confidence level       293.81307                    0.81570
#                       skew       143.73493                    0.49043
#                   kurtosis     20998.31113                    0.03767
#           time correlation         0.08822                    0.00837
#
#               elapsed time        20.00398
#                   run time        17.80691
#          getnsecs overhead      1399
#
#          number of samples     21916
#         number of outliers      5768
#    number of final samples     16148
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5            2523 |*                                    2525.60000
#                  6            2530 |*                                    2534.16667
#                 17            2537 |*                                    2540.70588
#                 35            2544 |*                                    2546.82857
#                 45            2551 |*                                    2553.93333
#                 92            2558 |**                                   2561.11957
#                136            2565 |***                                  2568.21324
#                189            2572 |****                                 2575.11111
#                313            2579 |*******                              2582.15016
#                486            2586 |************                         2589.29630
#                702            2593 |*****************                    2596.25641
#                868            2600 |**********************               2603.15323
#               1118            2607 |****************************         2610.07871
#               1261            2614 |********************************     2617.06582
#               1217            2621 |******************************       2624.00082
#               1208            2628 |******************************       2631.01904
#               1146            2635 |*****************************        2637.88045
#                979            2642 |************************             2644.85189
#                858            2649 |*********************                2651.95455
#                881            2656 |**********************               2658.96254
#                749            2663 |*******************                  2665.90120
#                654            2670 |****************                     2672.87003
#                631            2677 |****************                     2679.85261
#                497            2684 |************                         2686.94567
#                426            2691 |**********                           2693.86854
#                349            2698 |********                             2701.04011
#                283            2705 |*******                              2707.94346
#                189            2712 |****                                 2714.30159
#
#                808           > 95% |********************                 2736.14480
#
#        mean of 95%      2637.31010
#          95th %ile            2717
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wait8k   1   1            2447        17595        0      384     8192  ai-w-
# bin/../bin-riscv64/msync -N msync_wait8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2282                       2282
#                        max    151552                       3071
#                       mean      2577.27379                 2527.34214
#                     median      2451                       2447*
#                     stddev      1141.68504                  181.05409
#             standard error         8.41136                    1.36494
#       99% confidence level        21.66766                    3.51609
#                       skew       120.94736                    1.32412
#                   kurtosis     15739.46030                    0.40250
#           time correlation         0.04268                    0.03086
#
#               elapsed time        20.00541
#                   run time        18.22827
#          getnsecs overhead      1399
#
#          number of samples     18423
#         number of outliers       828
#    number of final samples     17595
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13            2282 |*                                    2293.61538
#                 14            2302 |*                                    2309.78571
#                 45            2322 |*                                    2334.35556
#                367            2342 |****                                 2354.64033
#               1287            2362 |*****************                    2372.91686
#               1902            2382 |*************************            2391.36225
#               2248            2402 |******************************       2411.97464
#               2366            2422 |********************************     2431.39941
#               1958            2442 |**************************           2450.96527
#               1314            2462 |*****************                    2470.99848
#                813            2482 |**********                           2490.54244
#                469            2502 |******                               2510.07676
#                230            2522 |***                                  2530.17826
#                155            2542 |**                                   2550.71613
#                 83            2562 |*                                    2570.46988
#                 60            2582 |*                                    2591.03333
#                 61            2602 |*                                    2611.16393
#                 83            2622 |*                                    2632.02410
#                128            2642 |*                                    2650.91406
#                144            2662 |*                                    2671.04167
#                161            2682 |**                                   2691.32919
#                167            2702 |**                                   2711.53293
#                213            2722 |**                                   2731.22066
#                265            2742 |***                                  2751.81887
#                337            2762 |****                                 2771.36795
#                358            2782 |****                                 2791.41341
#                273            2802 |***                                  2811.31502
#                278            2822 |***                                  2831.30935
#                242            2842 |***                                  2851.13223
#                259            2862 |***                                  2871.15830
#                235            2882 |***                                  2891.32766
#                187            2902 |**                                   2910.04813
#
#                880           > 95% |***********                          2979.72955
#
#        mean of 95%      2503.52516
#          95th %ile            2921
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wat128k   1   1            2597        18385        0      343   131072  a--w-
# bin/../bin-riscv64/msync -N msync_wat128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2447                       2447
#                        max    765453                       3217
#                       mean      2768.42352                 2669.83008
#                     median      2602                       2597*
#                     stddev      5539.45690                  182.34154
#             standard error        39.66074                    1.34479
#       99% confidence level       102.16607                    3.46417
#                       skew       134.32200                    1.37700
#                   kurtosis     18429.57540                    0.64059
#           time correlation         0.05460                    0.02986
#
#               elapsed time        20.00477
#                   run time        18.26048
#          getnsecs overhead      1399
#
#          number of samples     19508
#         number of outliers      1123
#    number of final samples     18385
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            2447 |*                                    2453.00000
#                 29            2467 |*                                    2480.06897
#                590            2487 |********                             2499.71356
#               1990            2507 |******************************       2517.38844
#               2119            2527 |********************************     2536.43605
#               1869            2547 |****************************         2556.17603
#               1631            2567 |************************             2576.66708
#               1910            2587 |****************************         2596.48743
#               1436            2607 |*********************                2616.04248
#               1003            2627 |***************                      2636.30907
#                707            2647 |**********                           2655.46252
#                432            2667 |******                               2676.24306
#                216            2687 |***                                  2695.52778
#                161            2707 |**                                   2715.31677
#                 92            2727 |*                                    2737.21739
#                 80            2747 |*                                    2753.76250
#                 89            2767 |*                                    2777.21348
#                116            2787 |*                                    2797.54310
#                132            2807 |*                                    2816.80303
#                120            2827 |*                                    2836.51667
#                178            2847 |**                                   2856.95506
#                237            2867 |***                                  2876.79747
#                280            2887 |****                                 2895.87857
#                222            2907 |***                                  2916.03153
#                248            2927 |***                                  2936.85887
#                252            2947 |***                                  2956.61111
#                310            2967 |****                                 2976.91290
#                287            2987 |****                                 2996.49129
#                249            3007 |***                                  3015.83133
#                229            3027 |***                                  3036.99127
#                191            3047 |**                                   3056.52880
#                 58            3067 |*                                    3070.03448
#
#                920           > 95% |*************                        3137.66630
#
#        mean of 95%      2645.18597
#          95th %ile            3073
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wat8k   1   1            4999         6125        0      161     8192  a--w-
# bin/../bin-riscv64/msync -N msync_wat8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4768                       4768
#                        max    432652                       6115
#                       mean      5477.07572                 5132.98465
#                     median      5014                       4999*
#                     stddev      6095.93945                  327.64522
#             standard error        75.09274                    4.18650
#       99% confidence level       193.43889                   10.78442
#                       skew        59.49530                    1.38198
#                   kurtosis      3915.91425                    0.55310
#           time correlation         0.43353                    0.15953
#
#               elapsed time        20.00592
#                   run time         5.60572
#          getnsecs overhead      1399
#
#          number of samples      6590
#         number of outliers       465
#    number of final samples      6125
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 21            4768 |*                                    4792.42857
#                183            4802 |********                             4822.62295
#                479            4836 |**********************               4854.53236
#                558            4870 |**************************           4885.82796
#                640            4904 |*****************************        4920.29375
#                684            4938 |********************************     4954.74561
#                609            4972 |****************************         4988.47455
#                515            5006 |************************             5022.12233
#                419            5040 |*******************                  5055.60621
#                239            5074 |***********                          5089.79498
#                195            5108 |*********                            5123.88718
#                122            5142 |*****                                5155.95902
#                 90            5176 |****                                 5191.00000
#                 39            5210 |*                                    5225.97436
#                 31            5244 |*                                    5258.19355
#                 22            5278 |*                                    5293.68182
#                 17            5312 |*                                    5324.29412
#                 18            5346 |*                                    5362.16667
#                 24            5380 |*                                    5399.00000
#                 16            5414 |*                                    5429.93750
#                 12            5448 |*                                    5464.25000
#                 19            5482 |*                                    5503.36842
#                 24            5516 |*                                    5534.50000
#                 55            5550 |**                                   5567.58182
#                 75            5584 |***                                  5600.68000
#                134            5618 |******                               5633.73134
#                144            5652 |******                               5668.15278
#                125            5686 |*****                                5701.55200
#                 99            5720 |****                                 5735.75758
#                 98            5754 |****                                 5770.65306
#                 75            5788 |***                                  5804.62667
#                 37            5822 |*                                    5828.94595
#
#                307           > 95% |**************                       5954.35831
#
#        mean of 95%      5089.64300
#          95th %ile            5839
#
# WARNINGS
#     Actual benchmark run time only accounts for 28.0% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wit128k   1   1            2603        15835        0      295   131072  -i-w-
# bin/../bin-riscv64/msync -N msync_wit128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2453                       2484
#                        max   2282060                       2734
#                       mean      2945.78461                 2608.12011
#                     median      2624                       2603*
#                     stddev     15654.47133                   41.79453
#             standard error       106.69316                    0.33213
#       99% confidence level       274.84157                    0.85557
#                       skew       143.57658                    0.43811
#                   kurtosis     20871.04216                    0.08696
#           time correlation         0.08887                    0.00886
#
#               elapsed time        20.00480
#                   run time        17.68618
#          getnsecs overhead      1399
#
#          number of samples     21528
#         number of outliers      5693
#    number of final samples     15835
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7            2484 |*                                    2486.57143
#                 18            2491 |*                                    2493.83333
#                 19            2498 |*                                    2502.15789
#                 38            2505 |*                                    2508.55263
#                 51            2512 |*                                    2515.50980
#                 71            2519 |*                                    2522.05634
#                128            2526 |***                                  2529.03906
#                174            2533 |****                                 2536.10920
#                265            2540 |******                               2543.43396
#                369            2547 |*********                            2550.11653
#                550            2554 |**************                       2557.26182
#                681            2561 |*****************                    2564.20264
#                881            2568 |***********************              2571.06016
#               1016            2575 |**************************           2578.07480
#               1216            2582 |********************************     2584.96957
#               1175            2589 |******************************       2592.04000
#               1214            2596 |*******************************      2598.96046
#               1083            2603 |****************************         2605.96122
#                951            2610 |*************************            2613.05047
#                843            2617 |**********************               2619.87426
#                761            2624 |********************                 2626.80420
#                716            2631 |******************                   2634.03911
#                599            2638 |***************                      2640.89816
#                546            2645 |**************                       2647.89377
#                452            2652 |***********                          2654.88938
#                419            2659 |***********                          2661.87112
#                331            2666 |********                             2668.83384
#                264            2673 |******                               2675.98106
#                205            2680 |*****                                2682.67805
#
#                792           > 95% |********************                 2704.85354
#
#        mean of 95%      2603.02719
#          95th %ile            2686
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wit8k   1   1            2250        18713        0      374     8192  -i-w-
# bin/../bin-riscv64/msync -N msync_wit8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2134                       2134
#                        max    407702                       2822
#                       mean      2443.78127                 2322.56089
#                     median      2256                       2250*
#                     stddev      3255.01741                  166.41474
#             standard error        22.92152                    1.21652
#       99% confidence level        59.04584                    3.13376
#                       skew       109.02693                    1.42929
#                   kurtosis     12769.48365                    0.73485
#           time correlation         0.05599                    0.02633
#
#               elapsed time        20.00410
#                   run time        18.01495
#          getnsecs overhead      1399
#
#          number of samples     20166
#         number of outliers      1453
#    number of final samples     18713
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 26            2134 |*                                    2146.88462
#                291            2152 |***                                  2164.07560
#                960            2170 |**********                           2179.57292
#               2014            2188 |*********************                2197.74876
#               2970            2206 |********************************     2214.44310
#               2140            2224 |***********************              2232.27710
#               2013            2242 |*********************                2250.22901
#               1388            2260 |**************                       2267.88905
#                924            2278 |*********                            2285.68290
#                703            2296 |*******                              2304.17212
#                449            2314 |****                                 2321.59688
#                271            2332 |**                                   2339.90775
#                183            2350 |*                                    2357.85246
#                149            2368 |*                                    2375.69128
#                127            2386 |*                                    2393.93701
#                102            2404 |*                                    2411.97059
#                105            2422 |*                                    2429.92381
#                 80            2440 |*                                    2448.90000
#                 73            2458 |*                                    2467.34247
#                 83            2476 |*                                    2486.18072
#                145            2494 |*                                    2504.25517
#                241            2512 |**                                   2521.30705
#                310            2530 |***                                  2539.04194
#                323            2548 |***                                  2556.46749
#                261            2566 |**                                   2573.97701
#                266            2584 |**                                   2592.57895
#                258            2602 |**                                   2610.44186
#                217            2620 |**                                   2628.34101
#                221            2638 |**                                   2645.59276
#                213            2656 |**                                   2664.76526
#                211            2674 |**                                   2682.05213
#                 60            2692 |*                                    2694.03333
#
#                936           > 95% |**********                           2752.45513
#
#        mean of 95%      2299.92597
#          95th %ile            2697
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wt128k   1   1            2684        16633        0      275   131072  ---w-
# bin/../bin-riscv64/msync -N msync_wt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2517                       2554
#                        max   2717761                       2825
#                       mean      3082.16384                 2688.98870
#                     median      2706                       2684*
#                     stddev     18339.26363                   45.27650
#             standard error       122.58362                    0.35107
#       99% confidence level       315.77541                    0.90434
#                       skew       145.23980                    0.39191
#                   kurtosis     21454.69579                    0.03432
#           time correlation         0.10067                    0.00917
#
#               elapsed time        20.00501
#                   run time        17.65154
#          getnsecs overhead      1399
#
#          number of samples     22382
#         number of outliers      5749
#    number of final samples     16633
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2554 |*                                    2555.50000
#                 10            2561 |*                                    2564.10000
#                 21            2568 |*                                    2571.28571
#                 31            2575 |*                                    2578.03226
#                 28            2582 |*                                    2585.32143
#                 55            2589 |*                                    2591.98182
#                103            2596 |**                                   2599.49515
#                153            2603 |****                                 2606.13725
#                252            2610 |******                               2613.17063
#                324            2617 |********                             2620.14815
#                412            2624 |***********                          2627.05340
#                500            2631 |*************                        2634.11800
#                615            2638 |****************                     2641.05854
#                781            2645 |*********************                2648.07170
#                922            2652 |************************             2655.08026
#               1109            2659 |******************************       2662.09017
#               1182            2666 |********************************     2669.01100
#               1146            2673 |*******************************      2675.97295
#               1061            2680 |****************************         2683.06598
#                956            2687 |*************************            2689.90272
#                877            2694 |***********************              2696.92588
#                808            2701 |*********************                2703.95792
#                789            2708 |*********************                2710.99747
#                698            2715 |******************                   2717.98138
#                647            2722 |*****************                    2724.99073
#                536            2729 |**************                       2731.98507
#                496            2736 |*************                        2738.71169
#                406            2743 |**********                           2745.87438
#                338            2750 |*********                            2752.88757
#                314            2757 |********                             2759.83758
#                218            2764 |*****                                2766.76606
#                  9            2771 |*                                    2771.00000
#
#                832           > 95% |**********************               2792.79087
#
#        mean of 95%      2683.52300
#          95th %ile            2771
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wt8k   1   1            2286        19151        0      362     8192  ---w-
# bin/../bin-riscv64/msync -N msync_wt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2140                       2140
#                        max    684504                       2893
#                       mean      2506.54538                 2365.58362
#                     median      2291                       2286*
#                     stddev      5347.63646                  175.81990
#             standard error        37.36501                    1.27049
#       99% confidence level        96.25226                    3.27279
#                       skew       113.40460                    1.57611
#                   kurtosis     13673.46097                    1.03168
#           time correlation         0.06145                    0.02582
#
#               elapsed time        20.00444
#                   run time        17.97188
#          getnsecs overhead      1399
#
#          number of samples     20483
#         number of outliers      1332
#    number of final samples     19151
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5            2140 |*                                    2149.40000
#                  7            2160 |*                                    2173.28571
#                 41            2180 |*                                    2191.43902
#                168            2200 |*                                    2211.79762
#               1007            2220 |********                             2232.09335
#               3463            2240 |****************************         2250.59370
#               3884            2260 |********************************     2269.01777
#               2724            2280 |**********************               2289.13069
#               1890            2300 |***************                      2308.83228
#                939            2320 |*******                              2328.28647
#                457            2340 |***                                  2348.61488
#                275            2360 |**                                   2368.15273
#                151            2380 |*                                    2387.54305
#                 92            2400 |*                                    2409.34783
#                 76            2420 |*                                    2429.72368
#                 53            2440 |*                                    2449.98113
#                 56            2460 |*                                    2470.67857
#                 70            2480 |*                                    2489.70000
#                 62            2500 |*                                    2508.67742
#                 63            2520 |*                                    2530.38095
#                 61            2540 |*                                    2550.24590
#                157            2560 |*                                    2570.54140
#                281            2580 |**                                   2590.54093
#                321            2600 |**                                   2609.47664
#                317            2620 |**                                   2628.85174
#                251            2640 |**                                   2648.99602
#                202            2660 |*                                    2669.36634
#                216            2680 |*                                    2689.55556
#                225            2700 |*                                    2709.91111
#                235            2720 |*                                    2729.88511
#                246            2740 |**                                   2749.09350
#                198            2760 |*                                    2767.48990
#
#                958           > 95% |*******                              2827.25887
#
#        mean of 95%      2341.27291
#          95th %ile            2775
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
         prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_mt   1   1             124        20893        0     6273        0
# bin/../bin-riscv64/mutex -N mutex_mt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       111                        111
#                        max    154851                        139
#                       mean       136.37187                  124.59350
#                     median       124                        124*
#                     stddev      1041.48432                    4.77923
#             standard error         6.99188                    0.03306
#       99% confidence level        18.01107                    0.08517
#                       skew       147.79722                    0.90786
#                   kurtosis     21946.49146                    0.55693
#           time correlation         0.00377                    0.00074
#
#               elapsed time        20.00824
#                   run time        17.70949
#          getnsecs overhead      1399
#
#          number of samples     22188
#         number of outliers      1295
#    number of final samples     20893
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             111 |*                                             -
#                  3             112 |*                                             -
#                 20             113 |*                                             -
#                 22             114 |*                                             -
#                 78             115 |*                                             -
#                117             116 |*                                             -
#                337             117 |****                                          -
#                567             118 |******                                        -
#                911             119 |***********                                   -
#               1381             120 |****************                              -
#               1783             121 |*********************                         -
#               2285             122 |***************************                   -
#               2628             123 |********************************              -
#               2314             124 |****************************                  -
#               1961             125 |***********************                       -
#               1447             126 |*****************                             -
#                842             127 |**********                                    -
#                505             128 |******                                        -
#                362             129 |****                                          -
#                366             130 |****                                          -
#                422             131 |*****                                         -
#                528             132 |******                                        -
#                478             133 |*****                                         -
#                454             134 |*****                                         -
#                 34             135 |*                                             -
#
#               1045           > 95% |************                          136.57321
#
#        mean of 95%       123.96277
#          95th %ile             135
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_mts   1   1             122        20759        0     6433        0
# bin/../bin-riscv64/mutex -N mutex_mts -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -t -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       110                        110
#                        max    121651                        138
#                       mean       133.71329                  123.21326
#                     median       122                        122*
#                     stddev       828.68404                    4.92706
#             standard error         5.58597                    0.03420
#       99% confidence level        14.38946                    0.08809
#                       skew       143.75444                    1.05324
#                   kurtosis     21017.80981                    0.58599
#           time correlation         0.00347                    0.00076
#
#               elapsed time        20.00730
#                   run time        17.69799
#          getnsecs overhead      1399
#
#          number of samples     22008
#         number of outliers      1249
#    number of final samples     20759
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             110 |*                                             -
#                  1             111 |*                                             -
#                  7             112 |*                                             -
#                 22             113 |*                                             -
#                 47             114 |*                                             -
#                137             115 |*                                             -
#                294             116 |***                                           -
#                729             117 |*******                                       -
#               1250             118 |*************                                 -
#               1616             119 |*****************                             -
#               2428             120 |**************************                    -
#               2967             121 |********************************              -
#               2197             122 |***********************                       -
#               1889             123 |********************                          -
#               1315             124 |**************                                -
#               1062             125 |***********                                   -
#                704             126 |*******                                       -
#                410             127 |****                                          -
#                374             128 |****                                          -
#                396             129 |****                                          -
#                460             130 |****                                          -
#                440             131 |****                                          -
#                445             132 |****                                          -
#                410             133 |****                                          -
#                119             134 |*                                             -
#
#               1038           > 95% |***********                           135.76590
#
#        mean of 95%       122.55256
#          95th %ile             134
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
         prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_st   1   1             150        21700        0     5288        0
# bin/../bin-riscv64/mutex -N mutex_st -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        90                         90
#                        max    195402                        208
#                       mean       161.83098                  147.48926
#                     median       150                        150*
#                     stddev      1339.42861                   20.22087
#             standard error         8.97915                    0.13727
#       99% confidence level        23.13028                    0.35360
#                       skew       140.57896                   -1.19038
#                   kurtosis     20329.14021                    1.85807
#           time correlation         0.00647                    0.00282
#
#               elapsed time        20.00572
#                   run time        17.65584
#          getnsecs overhead      1399
#
#          number of samples     22252
#         number of outliers       552
#    number of final samples     21700
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 70              90 |*                                      91.40000
#                942              93 |**********                             94.61571
#                813              96 |*********                              96.50800
#                150              99 |*                                      99.69333
#                 30             102 |*                                     103.13333
#                105             105 |*                                     105.96190
#                 43             108 |*                                     108.67442
#                 18             111 |*                                     112.05556
#                 11             114 |*                                     114.81818
#                 13             117 |*                                     118.23077
#                 16             120 |*                                     120.75000
#                 11             123 |*                                     123.45455
#                  9             126 |*                                     126.44444
#                 15             129 |*                                     129.93333
#                 24             132 |*                                     133.33333
#                326             135 |***                                   136.54601
#               1384             138 |****************                      139.16763
#               2743             141 |*******************************       142.14510
#               2759             144 |********************************      144.85756
#               1317             147 |***************                       147.86560
#               1248             150 |**************                        151.09535
#               1695             153 |*******************                   154.03186
#               2306             156 |**************************            157.05204
#               1863             159 |*********************                 159.83629
#                932             162 |**********                            162.95601
#                751             165 |********                              165.97736
#                680             168 |*******                               168.96471
#                341             171 |***                                   171.59238
#
#               1085           > 95% |************                          181.88111
#
#        mean of 95%       145.67917
#          95th %ile             173
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_sts   1   1            3330         4851        0      257        0
# bin/../bin-riscv64/mutex -N mutex_sts -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      3147                       3147
#                        max    107801                       3740
#                       mean      3541.53673                 3375.01525
#                     median      3341                       3330*
#                     stddev      1724.47811                  121.86873
#             standard error        23.85008                    1.74975
#       99% confidence level        61.43781                    4.50736
#                       skew        43.94369                    1.12736
#                   kurtosis      2566.96640                    0.32857
#           time correlation         0.25017                    0.08009
#
#               elapsed time        20.00558
#                   run time         4.65617
#          getnsecs overhead      1399
#
#          number of samples      5228
#         number of outliers       377
#    number of final samples      4851
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            3147 |*                                    3155.66667
#                  7            3163 |*                                    3171.42857
#                  7            3179 |*                                    3184.14286
#                 20            3195 |*                                    3203.35000
#                 36            3211 |**                                   3219.22222
#                102            3227 |*****                                3235.12745
#                226            3243 |************                         3251.57522
#                389            3259 |*********************                3267.11054
#                519            3275 |*****************************        3282.69364
#                570            3291 |********************************     3297.91579
#                404            3307 |**********************               3314.07673
#                290            3323 |****************                     3330.10345
#                223            3339 |************                         3345.88341
#                212            3355 |***********                          3362.58019
#                205            3371 |***********                          3378.50244
#                223            3387 |************                         3394.43498
#                177            3403 |*********                            3409.57062
#                108            3419 |******                               3426.21296
#                 75            3435 |****                                 3441.77333
#                 53            3451 |**                                   3457.01887
#                 53            3467 |**                                   3475.13208
#                 64            3483 |***                                  3489.73438
#                 60            3499 |***                                  3507.18333
#                 94            3515 |*****                                3523.08511
#                 79            3531 |****                                 3538.41772
#                 88            3547 |****                                 3555.27273
#                 73            3563 |****                                 3570.09589
#                 69            3579 |***                                  3586.39130
#                 67            3595 |***                                  3602.55224
#                 64            3611 |***                                  3618.93750
#                 48            3627 |**                                   3633.04167
#
#                243           > 95% |*************                        3678.96708
#
#        mean of 95%      3358.98655
#          95th %ile            3639
#
# WARNINGS
#     Actual benchmark run time only accounts for 23.3% of elapsed time.
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep   1   1         3850815         4862        0        1        1        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1197806                    3001313
#                        max   6678127                    4720119
#                       mean   3863331.28491              3859856.77293
#                     median   3852116                    3850815*
#                     stddev    356676.08904               287483.58888
#             standard error      5045.17076                 4122.92639
#       99% confidence level     12996.35988                10620.65837
#                       skew        -0.00225                    0.16831
#                   kurtosis         7.35110                    0.63498
#           time correlation       219.73452                  195.61553
#
#               elapsed time        20.01200
#                   run time        19.31876
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       136
#    number of final samples      4862
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15         3001313 |*                                 3025299.20000
#                 19         3043773 |*                                 3064170.73684
#                 21         3086233 |*                                 3105508.23810
#                 15         3128693 |*                                 3149046.66667
#                 26         3171153 |**                                3194724.96154
#                 29         3213613 |**                                3234592.82759
#                 28         3256073 |**                                3276252.89286
#                 33         3298533 |**                                3322456.33333
#                 40         3340993 |***                               3365166.55000
#                 43         3383453 |***                               3405772.34884
#                 56         3425913 |****                              3446632.12500
#                107         3468373 |********                          3488296.66355
#                135         3510833 |**********                        3533802.88148
#                162         3553293 |************                      3576333.36420
#                231         3595753 |*****************                 3617891.18615
#                241         3638213 |******************                3659321.80913
#                239         3680673 |******************                3701794.76987
#                260         3723133 |********************              3744679.32308
#                389         3765593 |******************************    3788050.08226
#                340         3808053 |**************************        3828344.05000
#                413         3850513 |********************************  3871616.46973
#                350         3892973 |***************************       3914160.18000
#                274         3935433 |*********************             3955372.09489
#                209         3977893 |****************                  3997690.61244
#                155         4020353 |************                      4041495.92258
#                149         4062813 |***********                       4084436.22819
#                135         4105273 |**********                        4126987.34074
#                142         4147733 |***********                       4168624.14085
#                140         4190193 |**********                        4211644.42143
#                 97         4232653 |*******                           4250963.80412
#                 69         4275113 |*****                             4297249.50725
#                 56         4317573 |****                              4337266.08929
#
#                244           > 95% |******************                4523483.25820
#
#        mean of 95%   3824792.92226
#          95th %ile         4360018
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
              prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d10   1   1         3862216         4775        0        1       10        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1046005                    3112013
#                        max   7240929                    4596819
#                       mean   3868982.87010              3858770.99539
#                     median   3864316                    3862216*
#                     stddev    358915.05764               249430.87951
#             standard error      5077.85697                 3609.63700
#       99% confidence level     13080.55956                 9298.42492
#                       skew         0.08247                    0.00602
#                   kurtosis        12.42713                    0.52029
#           time correlation       210.39073                  173.01719
#
#               elapsed time        20.01174
#                   run time        19.33991
#          getnsecs overhead      1399
#
#          number of samples      4996
#         number of outliers       221
#    number of final samples      4775
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19         3112013 |*                                 3132139.47368
#                 14         3148629 |*                                 3169234.50000
#                 19         3185245 |*                                 3204534.36842
#                 16         3221861 |*                                 3239832.25000
#                 27         3258477 |**                                3276310.00000
#                 34         3295093 |**                                3317131.41176
#                 33         3331709 |**                                3350047.30303
#                 30         3368325 |**                                3386104.10000
#                 58         3404941 |****                              3426621.20690
#                 54         3441557 |****                              3462286.61111
#                 82         3478173 |******                            3497843.17073
#                116         3514789 |********                          3533681.95690
#                132         3551405 |*********                         3569816.43939
#                154         3588021 |***********                       3606183.80519
#                165         3624637 |************                      3643972.67273
#                156         3661253 |***********                       3679122.29487
#                150         3697869 |***********                       3714018.05333
#                209         3734485 |***************                   3754218.42584
#                332         3771101 |************************          3790629.52711
#                389         3807717 |*****************************     3827663.86375
#                414         3844333 |******************************    3862847.33333
#                428         3880949 |********************************  3898975.19159
#                300         3917565 |**********************            3934794.52000
#                247         3954181 |******************                3971599.30769
#                192         3990797 |**************                    4008459.75521
#                161         4027413 |************                      4044443.34161
#                137         4064029 |**********                        4081364.95620
#                117         4100645 |********                          4119863.95726
#                 98         4137261 |*******                           4154988.58163
#                 72         4173877 |*****                             4192040.75000
#                101         4210493 |*******                           4227377.80198
#                 80         4247109 |*****                             4263314.88750
#
#                239           > 95% |*****************                 4409460.73222
#
#        mean of 95%   3829755.37654
#          95th %ile         4283718
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
               prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d100   1   1         2790211         3899        0        1      100        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    283902                     283902
#                        max  14234356                    5614923
#                       mean   2738117.70510              2732648.10823
#                     median   2790312                    2790211*
#                     stddev   1068707.42070              1049333.58569
#             standard error     17106.43649                16804.93960
#       99% confidence level     44066.18040                43289.52440
#                       skew         0.25810                   -0.07228
#                   kurtosis         2.63801                   -0.69897
#           time correlation       929.13809                  923.57254
#
#               elapsed time        20.01532
#                   run time        10.69613
#          getnsecs overhead      1399
#
#          number of samples      3903
#         number of outliers         4
#    number of final samples      3899
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          283902 |*                                  336619.33333
#                 34          412375 |*****                              478585.26471
#                 44          540848 |******                             598535.22727
#                 44          669321 |******                             740197.09091
#                 36          797794 |*****                              852618.22222
#                 58          926267 |********                          1006977.31034
#                 92         1054740 |*************                     1110953.17391
#                 71         1183213 |**********                        1249710.08451
#                 92         1311686 |*************                     1382241.17391
#                120         1440159 |******************                1511165.99167
#                149         1568632 |**********************            1624221.38255
#                137         1697105 |********************              1762038.45255
#                144         1825578 |*********************             1891007.63194
#                132         1954051 |*******************               2022138.34848
#                154         2082524 |***********************           2141013.26623
#                142         2210997 |*********************             2269830.18310
#                173         2339470 |**************************        2403937.46243
#                125         2467943 |******************                2529374.02400
#                119         2596416 |*****************                 2664087.78992
#                136         2724889 |********************              2787170.65441
#                139         2853362 |********************              2922523.09353
#                129         2981835 |*******************               3054989.55039
#                172         3110308 |*************************         3175507.48256
#                206         3238781 |*******************************   3304265.29126
#                195         3367254 |*****************************     3432483.01026
#                212         3495727 |********************************  3560095.88208
#                198         3624200 |*****************************     3689642.04545
#                147         3752673 |**********************            3809121.15646
#                108         3881146 |****************                  3946748.70370
#                 82         4009619 |************                      4065560.64634
#                 57         4138092 |********                          4205705.10526
#                 51         4266565 |*******                           4321982.45098
#
#                195           > 95% |*****************************     4741174.21026
#
#        mean of 95%   2626907.66820
#          95th %ile         4395018
#
# WARNINGS
#     Actual benchmark run time only accounts for 53.4% of elapsed time.
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
                prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d1000   1   1         3842316         4790        0        1     1000        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    837404                    3087413
#                        max   8768335                    4647419
#                       mean   3870093.54356              3861547.44447
#                     median   3844016                    3842316*
#                     stddev    408627.97232               262005.63826
#             standard error      5782.92167                 3785.67111
#       99% confidence level     14896.80621                 9751.88877
#                       skew         0.85880                    0.21318
#                   kurtosis        22.71157                    0.56257
#           time correlation       226.32613                  180.85371
#
#               elapsed time        20.01015
#                   run time        19.33400
#          getnsecs overhead      1399
#
#          number of samples      4993
#         number of outliers       203
#    number of final samples      4790
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13         3087413 |*                                 3107959.15385
#                 19         3126251 |*                                 3148160.57895
#                 15         3165089 |*                                 3182166.40000
#                 30         3203927 |**                                3224953.40000
#                 21         3242765 |*                                 3263680.23810
#                 18         3281603 |*                                 3300919.33333
#                 38         3320441 |**                                3339324.44737
#                 40         3359279 |***                               3378961.55000
#                 37         3398117 |**                                3419435.83784
#                 59         3436955 |****                              3457707.54237
#                 77         3475793 |*****                             3497149.55844
#                 78         3514631 |******                            3534958.32051
#                118         3553469 |*********                         3574660.62712
#                170         3592307 |*************                     3611863.78235
#                235         3631145 |******************                3651698.30213
#                260         3669983 |********************              3689697.59615
#                274         3708821 |*********************             3729464.38321
#                304         3747659 |***********************           3768437.95395
#                414         3786497 |********************************  3805980.20773
#                386         3825335 |*****************************     3844607.32383
#                344         3864173 |**************************        3883285.51744
#                327         3903011 |*************************         3920698.73089
#                226         3941849 |*****************                 3959356.54425
#                181         3980687 |*************                     4000000.38122
#                137         4019525 |**********                        4038776.49635
#                143         4058363 |***********                       4079413.27273
#                130         4097201 |**********                        4116501.55385
#                103         4136039 |*******                           4158004.46602
#                 99         4174877 |*******                           4191760.63636
#                110         4213715 |********                          4233671.87273
#                 84         4252553 |******                            4269553.09524
#                 60         4291391 |****                              4313082.68333
#
#                240           > 95% |******************                4463199.47917
#
#        mean of 95%   3829811.95253
#          95th %ile         4330217
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_r   1   1         3845416         4737        0        1        1       yes     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    794104                    3069813
#                        max   8596734                    4667719
#                       mean   3870878.69852              3868180.54317
#                     median   3846316                    3845416*
#                     stddev    426646.28259               266635.18632
#             standard error      6038.52234                 3874.05487
#       99% confidence level     15555.23356                 9979.56535
#                       skew         0.37282                    0.30056
#                   kurtosis        17.44712                    0.76164
#           time correlation       237.13891                  184.40833
#
#               elapsed time        20.01297
#                   run time        19.33475
#          getnsecs overhead      1399
#
#          number of samples      4992
#         number of outliers       255
#    number of final samples      4737
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3069813 |*                                 3088012.92857
#                 10         3110201 |*                                 3125293.10000
#                 26         3150589 |**                                3171836.46154
#                 19         3190977 |*                                 3208060.78947
#                 23         3231365 |*                                 3252735.26087
#                 22         3271753 |*                                 3294531.95455
#                 29         3312141 |**                                3329024.24138
#                 42         3352529 |***                               3373185.50000
#                 40         3392917 |***                               3417616.77500
#                 47         3433305 |***                               3452667.68085
#                 55         3473693 |****                              3493669.01818
#                 85         3514081 |******                            3534965.22353
#                101         3554469 |********                          3577140.62376
#                141         3594857 |***********                       3616472.43262
#                219         3635245 |*****************                 3656923.35160
#                333         3675633 |**************************        3697114.74174
#                344         3716021 |***************************       3735361.38953
#                356         3756409 |****************************      3776872.90449
#                394         3796797 |*******************************   3816550.53807
#                399         3837185 |********************************  3858233.47619
#                381         3877573 |******************************    3898185.91076
#                283         3917961 |**********************            3937534.60071
#                194         3958349 |***************                   3976419.44845
#                157         3998737 |************                      4021357.87261
#                149         4039125 |***********                       4059293.26846
#                113         4079513 |*********                         4100891.21239
#                108         4119901 |********                          4138718.85185
#                 95         4160289 |*******                           4180512.92632
#                 91         4200677 |*******                           4220168.95604
#                 89         4241065 |*******                           4260382.62921
#                 87         4281453 |******                            4301427.89655
#                 54         4321841 |****                              4341723.40741
#
#                237           > 95% |*******************               4498247.54008
#
#        mean of 95%   3834997.01467
#          95th %ile         4362218
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
             prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_rs   1   1         3845716         4779        0        1        1       yes  syscall
# bin/../bin-riscv64/nanosleep -N nanosleep_rs -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    836405                    3048012
#                        max   7085229                    4670022
#                       mean   3861009.45207              3858213.66939
#                     median   3847016                    3845716*
#                     stddev    385448.16200               270786.88931
#             standard error      5452.69624                 3917.05003
#       99% confidence level     14046.14551                10090.32086
#                       skew        -0.06871                    0.16556
#                   kurtosis        12.04119                    0.72733
#           time correlation       225.92302                  186.70374
#
#               elapsed time        20.01410
#                   run time        19.30314
#          getnsecs overhead      1399
#
#          number of samples      4997
#         number of outliers       218
#    number of final samples      4779
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19         3048012 |*                                 3064102.52632
#                 16         3088266 |*                                 3109488.93750
#                 18         3128520 |*                                 3149552.61111
#                 15         3168774 |*                                 3191834.06667
#                 29         3209028 |**                                3227404.24138
#                 23         3249282 |*                                 3271105.69565
#                 37         3289536 |**                                3311479.64865
#                 39         3329790 |***                               3348327.51282
#                 35         3370044 |**                                3391080.42857
#                 45         3410298 |***                               3431199.26667
#                 58         3450552 |****                              3471944.51724
#                 99         3490806 |*******                           3512929.58586
#                143         3531060 |***********                       3553127.00000
#                167         3571314 |************                      3591007.25150
#                170         3611568 |*************                     3632062.80588
#                204         3651822 |***************                   3671594.85294
#                239         3692076 |******************                3712495.62343
#                313         3732330 |************************          3753515.63578
#                402         3772584 |*******************************   3792501.26866
#                386         3812838 |*****************************     3832238.85233
#                413         3853092 |********************************  3873139.89588
#                306         3893346 |***********************           3912613.26144
#                261         3933600 |********************              3951867.95402
#                191         3973854 |**************                    3994986.13089
#                191         4014108 |**************                    4035251.92670
#                149         4054362 |***********                       4072546.92617
#                127         4094616 |*********                         4114102.32283
#                122         4134870 |*********                         4154336.81148
#                115         4175124 |********                          4194257.72174
#                 93         4215378 |*******                           4235806.09677
#                 60         4255632 |****                              4275347.81667
#                 55         4295886 |****                              4318138.34545
#
#                239           > 95% |******************                4489391.52720
#
#        mean of 95%   3824986.46498
#          95th %ile         4336120
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_s   1   1         3859719         4780        0        1        1        no  syscall
# bin/../bin-riscv64/nanosleep -N nanosleep_s -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    809205                    3040915
#                        max   7545635                    4671822
#                       mean   3861864.78967              3859890.75565
#                     median   3860218                    3859719*
#                     stddev    383845.76288               273114.63669
#             standard error      5430.02809                 3950.30863
#       99% confidence level     13987.75236                10175.99502
#                       skew        -0.21436                    0.08532
#                   kurtosis        11.22977                    0.64707
#           time correlation       227.45450                  188.96128
#
#               elapsed time        20.01195
#                   run time        19.30849
#          getnsecs overhead      1399
#
#          number of samples      4997
#         number of outliers       217
#    number of final samples      4780
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19         3040915 |*                                 3059330.52632
#                 16         3081188 |*                                 3099346.31250
#                 18         3121461 |*                                 3139265.27778
#                 17         3161734 |*                                 3181938.76471
#                 17         3202007 |*                                 3219027.17647
#                 25         3242280 |*                                 3260463.68000
#                 35         3282553 |**                                3304755.97143
#                 34         3322826 |**                                3343230.73529
#                 59         3363099 |****                              3385629.81356
#                 64         3403372 |****                              3423503.93750
#                 60         3443645 |****                              3463318.33333
#                 86         3483918 |******                            3504428.44186
#                118         3524191 |********                          3546656.82203
#                190         3564464 |**************                    3584316.60526
#                210         3604737 |****************                  3623916.87143
#                190         3645010 |**************                    3665222.80526
#                181         3685283 |*************                     3705560.82873
#                209         3725556 |***************                   3748415.05263
#                304         3765829 |***********************           3786740.43092
#                394         3806102 |******************************    3826511.67513
#                420         3846375 |********************************  3866282.25000
#                399         3886648 |******************************    3905841.43609
#                301         3926921 |**********************            3946245.71429
#                201         3967194 |***************                   3985795.57214
#                176         4007467 |*************                     4028585.09659
#                180         4047740 |*************                     4066562.12222
#                168         4088013 |************                      4107792.66667
#                152         4128286 |***********                       4147769.75658
#                 96         4168559 |*******                           4187257.36458
#                 81         4208832 |******                            4229232.41975
#                 63         4249105 |****                              4266880.55556
#                 58         4289378 |****                              4309756.72414
#
#                239           > 95% |******************                4486747.62762
#
#        mean of 95%   3826898.28870
#          95th %ile         4329621
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
         prc thr      nsecs/call      samples   errors cnt/samp 
open_tmp   1   1          242552        21284        0        1 
# bin/../bin-riscv64/open -N open_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    218052                     218052
#                        max   3089164                     675804
#                       mean    345763.44006               317909.36361
#                     median    247552                     242552*
#                     stddev    170226.52751               119345.86512
#             standard error      1134.28911                  818.05170
#       99% confidence level      2921.92875                 2107.30118
#                       skew         2.53736                    1.47706
#                   kurtosis        13.60451                    1.25467
#           time correlation        21.04429                   16.55184
#
#               elapsed time        20.00992
#                   run time        15.41204
#          getnsecs overhead      1399
#
#          number of samples     22522
#         number of outliers      1238
#    number of final samples     21284
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               2282          218052 |********                           228843.80762
#               8485          230624 |********************************   234886.50348
#                846          243196 |***                                247467.92080
#                211          255768 |*                                  261871.18009
#                314          268340 |*                                  275553.90446
#                457          280912 |*                                  286414.78775
#                345          293484 |*                                  298992.00000
#                176          306056 |*                                  311932.11364
#                150          318628 |*                                  325048.00000
#                122          331200 |*                                  337025.39344
#                372          343772 |*                                  352939.23656
#               2660          356344 |**********                         363578.23308
#               1127          368916 |****                               373299.33807
#                246          381488 |*                                  386993.92683
#                173          394060 |*                                  400114.42775
#                137          406632 |*                                  412953.07299
#                168          419204 |*                                  426236.17262
#                259          431776 |*                                  437999.08494
#                180          444348 |*                                  450089.37778
#                172          456920 |*                                  463091.94186
#                130          469492 |*                                  475093.76923
#                107          482064 |*                                  488052.52336
#                 58          494636 |*                                  500721.98276
#                 58          507208 |*                                  513352.08621
#                 70          519780 |*                                  525784.44286
#                 55          532352 |*                                  537584.81818
#                 55          544924 |*                                  551514.81818
#                 34          557496 |*                                  563220.82353
#                 32          570068 |*                                  575456.25000
#                 70          582640 |*                                  590423.35714
#                134          595212 |*                                  601623.61940
#                534          607784 |**                                 614638.72285
#
#               1065           > 95% |****                               636740.50892
#
#        mean of 95%    301115.49795
#          95th %ile          620354
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 77.0% of elapsed time.
#
# Usage: open
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'open')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-open (default /dev/null)]
# notes: measures open()
          prc thr      nsecs/call      samples   errors cnt/samp 
open_zero   1   1          154126        18143        0        3 
# bin/../bin-riscv64/open -N open_zero -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    141101                     141101
#                        max   1542880                     547677
#                       mean    220397.28870               211673.61996
#                     median    154376                     154126*
#                     stddev    129240.32287               112047.78033
#             standard error       950.37357                  831.85706
#       99% confidence level      2448.16231                 2142.86379
#                       skew         2.07399                    1.65569
#                   kurtosis         5.26619                    1.11094
#           time correlation        18.18217                   16.30555
#
#               elapsed time        20.01066
#                   run time        16.12510
#          getnsecs overhead      1399
#
#          number of samples     18493
#         number of outliers       350
#    number of final samples     18143
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               6792          141101 |********************************   147850.71879
#               4915          151570 |***********************            154934.83540
#                632          162039 |**                                 166566.41297
#                722          172508 |***                                178044.66343
#                537          182977 |**                                 187546.45251
#                240          193446 |*                                  198130.02917
#                180          203915 |*                                  209082.06111
#                150          214384 |*                                  219680.51333
#                174          224853 |*                                  230476.00000
#                152          235322 |*                                  241151.54605
#                108          245791 |*                                  250773.45370
#                 72          256260 |*                                  261157.59722
#                 42          266729 |*                                  271499.80952
#                 38          277198 |*                                  281048.86842
#                 30          287667 |*                                  292512.13333
#                 44          298136 |*                                  303370.54545
#                 60          308605 |*                                  313672.71667
#                 59          319074 |*                                  324071.47458
#                 53          329543 |*                                  334595.52830
#                 90          340012 |*                                  345700.68889
#                 89          350481 |*                                  355680.22472
#                 59          360950 |*                                  365433.57627
#                 46          371419 |*                                  378085.60870
#                 43          381888 |*                                  386896.76744
#                 31          392357 |*                                  397780.22581
#                264          402826 |*                                  409624.68561
#                436          413295 |**                                 418388.61009
#                446          423764 |**                                 429110.55381
#                294          434233 |*                                  438963.86054
#                113          444702 |*                                  449261.31858
#                136          455171 |*                                  461008.25000
#                188          465640 |*                                  471190.51596
#
#                908           > 95% |****                               501938.54626
#
#        mean of 95%    196381.44978
#          95th %ile          476102
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: open
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'open')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-open (default /dev/null)]
# notes: measures open()
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmp1   1   1          831104         1076        0        1 mp fifo
# bin/../bin-riscv64/pipe -N pipe_fmp1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    216002                     216002
#                        max   2642010                    1681007
#                       mean    891849.68704               872966.27695
#                     median    832304                     831104*
#                     stddev    301939.66858               269397.98984
#             standard error      9120.42123                 8212.74267
#       99% confidence level     23494.20509                21156.02511
#                       skew         1.01081                    0.53117
#                   kurtosis         2.23463                    0.59494
#           time correlation       855.96111                  797.15180
#
#               elapsed time        20.02099
#                   run time         0.97988
#          getnsecs overhead      1399
#
#          number of samples      1096
#         number of outliers        20
#    number of final samples      1076
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          216002 |*                                  231731.90000
#                  5          253243 |*                                  269921.80000
#                  5          290484 |*                                  314882.20000
#                  5          327725 |*                                  344842.60000
#                 21          364966 |**                                 387064.23810
#                 15          402207 |**                                 426095.73333
#                 11          439448 |*                                  461830.00000
#                 24          476689 |***                                491931.79167
#                 18          513930 |**                                 528413.83333
#                 11          551171 |*                                  570039.36364
#                 11          588412 |*                                  610866.63636
#                 24          625653 |***                                648182.20833
#                 22          662894 |**                                 683517.00000
#                 43          700135 |*****                              718408.06977
#                 87          737376 |***********                        758258.65517
#                106          774617 |**************                     797537.58491
#                239          811858 |********************************   830192.00837
#                 96          849099 |************                       864052.26042
#                 41          886340 |*****                              903986.87805
#                 27          923581 |***                                940548.48148
#                  9          960822 |*                                  979326.22222
#                 12          998063 |*                                 1019396.08333
#                 12         1035304 |*                                 1054221.00000
#                 20         1072545 |**                                1095369.60000
#                 18         1109786 |**                                1127354.77778
#                 13         1147027 |*                                 1166973.92308
#                 28         1184268 |***                               1206015.67857
#                 24         1221509 |***                               1237946.70833
#                 20         1258750 |**                                1277090.20000
#                 18         1295991 |**                                1314305.22222
#                  9         1333232 |*                                 1351016.55556
#                 18         1370473 |**                                1392133.33333
#
#                 54           > 95% |*******                           1512198.57407
#
#        mean of 95%    839190.79354
#          95th %ile         1407706
#
# WARNINGS
#     Actual benchmark run time only accounts for 4.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmp4k   1   1          849404         1026        0        1 mp fifo
# bin/../bin-riscv64/pipe -N pipe_fmp4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    221301                     221301
#                        max   4492316                    1719607
#                       mean    943195.71985               914657.88109
#                     median    852804                     849404*
#                     stddev    329707.56558               268624.62179
#             standard error     10160.49174                 8386.33365
#       99% confidence level     26173.42672                21603.19547
#                       skew         2.17410                    0.65487
#                   kurtosis        14.32343                    0.64730
#           time correlation       925.32762                  828.29781
#
#               elapsed time        20.02409
#                   run time         0.99538
#          getnsecs overhead      1399
#
#          number of samples      1053
#         number of outliers        27
#    number of final samples      1026
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          221301 |*                                  226101.50000
#                  6          259652 |*                                  284668.66667
#                  6          298003 |*                                  311352.00000
#                  6          336354 |*                                  354335.33333
#                 17          374705 |***                                397861.17647
#                 10          413056 |*                                  428962.30000
#                  2          451407 |*                                  484602.50000
#                 10          489758 |*                                  508052.80000
#                 11          528109 |*                                  550102.72727
#                  9          566460 |*                                  586947.33333
#                  7          604811 |*                                  625331.57143
#                 17          643162 |***                                666503.05882
#                 20          681513 |***                                705063.00000
#                 78          719864 |*************                      740294.42308
#                109          758215 |*******************                778857.68807
#                145          796566 |*************************          819489.77931
#                181          834917 |********************************   855041.98343
#                 69          873268 |************                       890648.82609
#                 32          911619 |*****                              926632.12500
#                 14          949970 |**                                 967604.21429
#                 14          988321 |**                                1013289.85714
#                 12         1026672 |**                                1041438.00000
#                 15         1065023 |**                                1084704.60000
#                 28         1103374 |****                              1123004.57143
#                 26         1141725 |****                              1162150.96154
#                 18         1180076 |***                               1202416.11111
#                 24         1218427 |****                              1236721.79167
#                 20         1256778 |***                               1272245.15000
#                 19         1295129 |***                               1317131.57895
#                 13         1333480 |**                                1357259.61538
#                 21         1371831 |***                               1393938.90476
#                 13         1410182 |**                                1425674.84615
#
#                 52           > 95% |*********                         1563429.21154
#
#        mean of 95%    880021.21869
#          95th %ile         1448506
#
# WARNINGS
#     Actual benchmark run time only accounts for 5.0% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmt1   1   1          441703         3612        0        1 mt fifo
# bin/../bin-riscv64/pipe -N pipe_fmt1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    197201                     197201
#                        max   9912934                     982504
#                       mean    532162.39164               489397.55980
#                     median    447003                     441703*
#                     stddev    293398.52000               164395.47273
#             standard error      4758.30047                 2735.36939
#       99% confidence level     12257.38200                 7046.31155
#                       skew        10.35445                    1.01336
#                   kurtosis       281.86343                    0.17672
#           time correlation       189.48315                  145.27313
#
#               elapsed time        20.00636
#                   run time         2.02931
#          getnsecs overhead      1399
#
#          number of samples      3802
#         number of outliers       190
#    number of final samples      3612
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 53          197201 |****                               204541.30189
#                 10          216664 |*                                  223101.50000
#                 20          236127 |*                                  247321.85000
#                 10          255590 |*                                  262401.90000
#                 50          275053 |****                               288139.94000
#                 18          294516 |*                                  301979.77778
#                148          313979 |***********                        327869.60811
#                341          333442 |***************************        342504.19062
#                219          352905 |*****************                  361293.06849
#                263          372368 |*********************              383909.87833
#                146          391831 |***********                        400028.43836
#                293          411294 |***********************            421983.27645
#                395          430757 |********************************   440158.13671
#                358          450220 |*****************************      458714.83520
#                201          469683 |****************                   478521.46766
#                 85          489146 |******                             498780.32941
#                 51          508609 |****                               518820.27451
#                 32          528072 |**                                 538349.65625
#                 30          547535 |**                                 556972.80000
#                 33          566998 |**                                 577875.60606
#                 38          586461 |***                                596458.15789
#                 34          605924 |**                                 613988.29412
#                 39          625387 |***                                634805.69231
#                 49          644850 |***                                656339.97959
#                 48          664313 |***                                674328.18750
#                 61          683776 |****                               693388.54098
#                 59          703239 |****                               712529.57627
#                 56          722702 |****                               731849.80357
#                116          742165 |*********                          751440.52586
#                 61          761628 |****                               771187.19672
#                 66          781091 |*****                              790939.89394
#                 48          800554 |***                                811201.54167
#
#                181           > 95% |**************                     884754.70718
#
#        mean of 95%    468540.77062
#          95th %ile          820004
#
# WARNINGS
#     Actual benchmark run time only accounts for 10.1% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmt4k   1   1          472703         3040        0        1 mt fifo
# bin/../bin-riscv64/pipe -N pipe_fmt4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    211402                     211402
#                        max   2974011                     954404
#                       mean    551587.72320               505741.75888
#                     median    478802                     472703*
#                     stddev    244645.97468               150051.99410
#             standard error      4299.98286                 2721.47895
#       99% confidence level     11076.75585                 7010.52978
#                       skew         2.69940                    0.95682
#                   kurtosis        12.26175                    0.42960
#           time correlation       210.81403                  156.90073
#
#               elapsed time        20.01215
#                   run time         1.79086
#          getnsecs overhead      1399
#
#          number of samples      3237
#         number of outliers       197
#    number of final samples      3040
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 49          211402 |****                               218352.69388
#                 12          230587 |*                                  240201.91667
#                 13          249772 |*                                  258755.76923
#                 11          268957 |*                                  277092.81818
#                 63          288142 |*****                              300162.30159
#                 36          307327 |***                                314085.36111
#                 28          326512 |**                                 339273.57143
#                176          345697 |***************                    355494.19886
#                127          364882 |**********                         373957.31496
#                115          384067 |*********                          394891.04348
#                127          403252 |**********                         411207.85039
#                288          422437 |************************           435676.39931
#                326          441622 |****************************       449103.08589
#                270          460807 |***********************            471172.90000
#                371          479992 |********************************   489035.51213
#                210          499177 |******************                 507748.40952
#                 69          518362 |*****                              527494.13043
#                 47          537547 |****                               546621.97872
#                 31          556732 |**                                 568112.58065
#                 34          575917 |**                                 584582.29412
#                 21          595102 |*                                  604250.61905
#                 27          614287 |**                                 623703.00000
#                 39          633472 |***                                644159.53846
#                 29          652657 |**                                 662413.51724
#                 34          671842 |**                                 680167.94118
#                 29          691027 |**                                 702668.79310
#                 53          710212 |****                               722667.49057
#                 64          729397 |*****                              738679.93750
#                 50          748582 |****                               757149.46000
#                 68          767767 |*****                              775563.79412
#                 34          786952 |**                                 796135.94118
#                 37          806137 |***                                814290.24324
#
#                152           > 95% |*************                      872239.05263
#
#        mean of 95%    486452.42763
#          95th %ile          825304
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fst1   1   1           51347         6245        0       14 st fifo
# bin/../bin-riscv64/pipe -N pipe_fst1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     49507                      49507
#                        max    437128                      54047
#                       mean     63825.68313                51553.95789
#                     median     52047                      51347*
#                     stddev     29833.74935                  831.70962
#             standard error       307.17292                   10.52460
#       99% confidence level       791.27743                   27.11136
#                       skew         3.46855                    0.91196
#                   kurtosis        14.77618                    0.49495
#           time correlation         6.72672                    0.43558
#
#               elapsed time        20.01275
#                   run time         8.93998
#          getnsecs overhead      1399
#
#          number of samples      9433
#         number of outliers      3188
#    number of final samples      6245
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           49507 |*                                   49507.00000
#                  3           49628 |*                                   49678.33333
#                  8           49749 |*                                   49827.87500
#                 16           49870 |*                                   49947.68750
#                 33           49991 |*                                   50057.63636
#                 68           50112 |***                                 50175.29412
#                 62           50233 |***                                 50294.67742
#                 73           50354 |****                                50410.19178
#                145           50475 |********                            50548.22069
#                249           50596 |**************                      50657.76707
#                306           50717 |*****************                   50779.67647
#                547           50838 |********************************    50899.87934
#                527           50959 |******************************      51017.76091
#                517           51080 |******************************      51142.28046
#                522           51201 |******************************      51264.30843
#                391           51322 |**********************              51385.30179
#                356           51443 |********************                51501.44663
#                279           51564 |****************                    51619.13262
#                227           51685 |*************                       51745.68282
#                189           51806 |***********                         51861.82011
#                202           51927 |***********                         51984.84653
#                187           52048 |**********                          52108.08021
#                179           52169 |**********                          52227.88827
#                162           52290 |*********                           52352.36420
#                175           52411 |**********                          52470.48000
#                128           52532 |*******                             52588.85156
#                104           52653 |******                              52708.43269
#                 94           52774 |*****                               52834.51064
#                 64           52895 |***                                 52954.25000
#                 49           53016 |**                                  53073.57143
#                 38           53137 |**                                  53194.78947
#                 31           53258 |*                                   53301.93548
#
#                313           > 95% |******************                  53702.14696
#
#        mean of 95%     51440.60941
#          95th %ile           53354
#
# WARNINGS
#     Actual benchmark run time only accounts for 44.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fst4k   1   1           54534         8747        0       15 st fifo
# bin/../bin-riscv64/pipe -N pipe_fst4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     52440                      52440
#                        max    347135                      74600
#                       mean     63107.08016                57367.84520
#                     median     54814                      54534*
#                     stddev     23368.89060                 5745.77672
#             standard error       237.66749                   61.43547
#       99% confidence level       612.23145                  158.25777
#                       skew         4.49171                    1.53464
#                   kurtosis        23.66949                    0.80456
#           time correlation         4.70685                    1.81932
#
#               elapsed time        20.00699
#                   run time         9.14827
#          getnsecs overhead      1399
#
#          number of samples      9668
#         number of outliers       921
#    number of final samples      8747
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                124           52440 |*                                   52821.65323
#                387           52999 |****                                53331.37209
#               2628           53558 |********************************    53871.93227
#               1466           54117 |*****************                   54337.12005
#               1036           54676 |************                        54959.21042
#                586           55235 |*******                             55447.41980
#                236           55794 |**                                  56086.50424
#                162           56353 |*                                   56586.35185
#                 80           56912 |*                                   57164.11250
#                 55           57471 |*                                   57746.03636
#                 54           58030 |*                                   58270.57407
#                 43           58589 |*                                   58826.18605
#                 22           59148 |*                                   59413.50000
#                 19           59707 |*                                   59909.42105
#                 21           60266 |*                                   60555.28571
#                 19           60825 |*                                   61120.57895
#                 11           61384 |*                                   61665.18182
#                 23           61943 |*                                   62251.78261
#                 34           62502 |*                                   62812.94118
#                 30           63061 |*                                   63366.60000
#                 40           63620 |*                                   63989.77500
#                 56           64179 |*                                   64469.41071
#                 89           64738 |*                                   65047.61798
#                143           65297 |*                                   65561.11189
#                150           65856 |*                                   66129.68000
#                124           66415 |*                                   66695.12903
#                128           66974 |*                                   67258.40625
#                130           67533 |*                                   67831.65385
#                123           68092 |*                                   68367.08130
#                107           68651 |*                                   68935.32710
#                 96           69210 |*                                   69490.77083
#                 87           69769 |*                                   70018.74713
#
#                438           > 95% |*****                               72125.30594
#
#        mean of 95%     56589.92153
#          95th %ile           70307
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmp1   1   1          838803         1195        0        1 mp pipe
# bin/../bin-riscv64/pipe -N pipe_pmp1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    305802                     305802
#                        max   2638509                    1584606
#                       mean    925976.18967               893323.17908
#                     median    840303                     838803*
#                     stddev    285633.57082               230456.64192
#             standard error      8114.72107                 6666.61349
#       99% confidence level     20903.52146                17173.19635
#                       skew         1.34895                    0.63937
#                   kurtosis         3.08533                    0.88420
#           time correlation       691.08667                  599.59681
#
#               elapsed time        20.02716
#                   run time         1.15012
#          getnsecs overhead      1399
#
#          number of samples      1239
#         number of outliers        44
#    number of final samples      1195
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          305802 |*                                  321468.66667
#                  7          338787 |*                                  360059.42857
#                 28          371772 |***                                385855.71429
#                  6          404757 |*                                  422035.83333
#                  6          437742 |*                                  446569.00000
#                  7          470727 |*                                  488616.85714
#                  5          503712 |*                                  517763.00000
#                  4          536697 |*                                  554228.00000
#                  7          569682 |*                                  581817.28571
#                  8          602667 |*                                  621278.00000
#                 23          635652 |**                                 656737.91304
#                 23          668637 |**                                 685438.21739
#                 49          701622 |******                             722315.59184
#                 55          734607 |******                             753158.12727
#                 62          767592 |*******                            783347.12903
#                255          800577 |********************************   818337.06667
#                228          833562 |****************************       846364.27193
#                 74          866547 |*********                          881597.10811
#                 25          899532 |***                                911191.96000
#                 24          932517 |***                                947687.50000
#                 16          965502 |**                                 980310.31250
#                 23          998487 |**                                1017226.21739
#                 17         1031472 |**                                1043951.41176
#                 13         1064457 |*                                 1080296.61538
#                 28         1097442 |***                               1116150.96429
#                 22         1130427 |**                                1146200.00000
#                 19         1163412 |**                                1178715.42105
#                 18         1196397 |**                                1212888.33333
#                 29         1229382 |***                               1241670.62069
#                 16         1262367 |**                                1280598.81250
#                 15         1295352 |*                                 1316325.26667
#                 20         1328337 |**                                1342535.55000
#
#                 60           > 95% |*******                           1457092.43333
#
#        mean of 95%    863520.39912
#          95th %ile         1361305
#
# WARNINGS
#     Actual benchmark run time only accounts for 5.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmp4k   1   1          847004         1140        0        1 mp pipe
# bin/../bin-riscv64/pipe -N pipe_pmp4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    235602                     259201
#                        max   3172811                    1529006
#                       mean    939719.39735               891831.82281
#                     median    849903                     847004*
#                     stddev    294679.26763               212609.44166
#             standard error      8478.44319                 6296.94821
#       99% confidence level     21840.46967                16220.93858
#                       skew         1.70312                    0.69592
#                   kurtosis         5.40843                    1.08187
#           time correlation       713.50255                  573.33754
#
#               elapsed time        20.01870
#                   run time         1.13802
#          getnsecs overhead      1399
#
#          number of samples      1208
#         number of outliers        68
#    number of final samples      1140
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          259201 |*                                  259201.00000
#                  0          292617 |                                              -
#                  6          326033 |*                                  345902.16667
#                  4          359449 |*                                  380277.25000
#                  4          392865 |*                                  400977.25000
#                  5          426281 |*                                  438882.60000
#                 27          459697 |***                                481928.40741
#                 11          493113 |*                                  505557.27273
#                  5          526529 |*                                  542102.60000
#                  6          559945 |*                                  579269.66667
#                  5          593361 |*                                  605922.80000
#                 12          626777 |*                                  647486.33333
#                 20          660193 |**                                 676253.10000
#                 20          693609 |**                                 711438.40000
#                 48          727025 |*****                              745353.43750
#                 75          760441 |********                           775286.17333
#                157          793857 |*****************                  814494.78981
#                286          827273 |********************************   844470.90559
#                123          860689 |*************                      874176.24390
#                 40          894105 |****                               909573.97500
#                 26          927521 |**                                 940773.50000
#                 22          960937 |**                                 977704.09091
#                 18          994353 |**                                1014876.50000
#                 11         1027769 |*                                 1045013.63636
#                 13         1061185 |*                                 1084258.38462
#                 16         1094601 |*                                 1112054.62500
#                 17         1128017 |*                                 1142010.76471
#                 21         1161433 |**                                1177947.80952
#                 23         1194849 |**                                1212465.86957
#                 23         1228265 |**                                1242639.86957
#                 17         1261681 |*                                 1274740.41176
#                 21         1295097 |**                                1311562.33333
#
#                 57           > 95% |******                            1421833.73684
#
#        mean of 95%    863936.98523
#          95th %ile         1328505
#
# WARNINGS
#     Actual benchmark run time only accounts for 5.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmt1   1   1          644003         4124        0        1 mt pipe
# bin/../bin-riscv64/pipe -N pipe_pmt1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    158601                     158601
#                        max   9866134                    1368405
#                       mean    671607.74865               636346.01722
#                     median    662603                     644003*
#                     stddev    336454.91208               244152.73499
#             standard error      5151.89918                 3801.91379
#       99% confidence level     13271.29228                 9793.72993
#                       skew         6.00561                    0.64681
#                   kurtosis       133.70384                    0.00191
#           time correlation       226.97499                  197.66074
#
#               elapsed time        20.01271
#                   run time         2.87177
#          getnsecs overhead      1399
#
#          number of samples      4265
#         number of outliers       141
#    number of final samples      4124
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          158601 |*                                  158601.00000
#                 27          188799 |**                                 204131.22222
#                 20          218997 |*                                  236811.80000
#                 37          249195 |***                                262858.64865
#                 39          279393 |***                                295089.12821
#                200          309591 |******************                 331335.10500
#                199          339789 |******************                 352844.33668
#                279          369987 |**************************         388343.11470
#                207          400185 |*******************                415102.38164
#                290          430383 |***************************        444158.31034
#                338          460581 |********************************   474747.51775
#                109          490779 |**********                         503711.84404
#                 61          520977 |*****                              535187.93443
#                 65          551175 |******                             565379.73846
#                 87          581373 |********                           597543.19540
#                 94          611571 |********                           627570.06383
#                114          641769 |**********                         656744.42982
#                174          671967 |****************                   687337.18391
#                265          702165 |*************************          717228.27547
#                305          732363 |****************************       747380.13115
#                212          762561 |********************               778083.22642
#                275          792759 |**************************         807011.25455
#                173          822957 |****************                   835299.04046
#                 63          853155 |*****                              865081.65079
#                 49          883353 |****                               897297.77551
#                 35          913551 |***                                929581.17143
#                 30          943749 |**                                 956207.46667
#                 40          973947 |***                                988294.15000
#                 25         1004145 |**                                1020968.32000
#                 25         1034343 |**                                1048764.52000
#                 39         1064541 |***                               1081804.58974
#                 40         1094739 |***                               1112342.10000
#
#                207           > 95% |*******************               1235871.20290
#
#        mean of 95%    604663.16977
#          95th %ile         1124905
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.3% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmt4k   1   1          659003         4095        0        1 mt pipe
# bin/../bin-riscv64/pipe -N pipe_pmt4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    203602                     203602
#                        max  11607539                    1374105
#                       mean    680081.96104               643708.70989
#                     median    678903                     659003*
#                     stddev    352388.36746               244689.99236
#             standard error      5414.95506                 3823.74793
#       99% confidence level     13948.92422                 9849.97466
#                       skew         8.21699                    0.56181
#                   kurtosis       221.34110                   -0.17965
#           time correlation       231.57070                  200.63152
#
#               elapsed time        20.01355
#                   run time         2.88669
#          getnsecs overhead      1399
#
#          number of samples      4235
#         number of outliers       140
#    number of final samples      4095
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 34          203602 |***                                212510.55882
#                 25          232481 |**                                 247977.96000
#                 13          261360 |*                                  274601.92308
#                108          290239 |***********                        302341.80556
#                189          319118 |********************               338186.74603
#                212          347997 |**********************             360947.41981
#                230          376876 |************************           394144.02174
#                203          405755 |*********************              420681.14286
#                277          434634 |*****************************      447499.94585
#                247          463513 |**************************         478470.19028
#                154          492392 |****************                   505414.33766
#                 65          521271 |******                             531738.16923
#                 51          550150 |*****                              562479.17647
#                 64          579029 |******                             594002.90625
#                 83          607908 |********                           622539.77108
#                117          636787 |************                       649889.45299
#                151          665666 |****************                   682619.74172
#                205          694545 |*********************              711822.85854
#                246          723424 |**************************         736458.67480
#                299          752303 |********************************   767521.60535
#                233          781182 |************************           797313.94850
#                211          810061 |**********************             824643.00000
#                123          838940 |*************                      851502.21951
#                 71          867819 |*******                            879119.42254
#                 41          896698 |****                               909421.02439
#                 35          925577 |***                                940278.40000
#                 22          954456 |**                                 970936.09091
#                 27          983335 |**                                 994489.40741
#                 36         1012214 |***                               1028412.72222
#                 34         1041093 |***                               1055480.82353
#                 45         1069972 |****                              1084031.15556
#                 39         1098851 |****                              1112799.56410
#
#                205           > 95% |*********************             1223524.05366
#
#        mean of 95%    613152.88843
#          95th %ile         1127705
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.4% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pst1   1   1           52138         9827        0       15 st pipe
# bin/../bin-riscv64/pipe -N pipe_pst1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     50050                      50263
#                        max    352689                      54219
#                       mean     59764.39301                52237.85489
#                     median     52538                      52138*
#                     stddev     21653.83096                  660.43299
#             standard error       183.21123                    6.66221
#       99% confidence level       471.95212                   17.16185
#                       skew         4.60467                    0.47106
#                   kurtosis        24.36372                    0.10520
#           time correlation         2.87920                    0.22487
#
#               elapsed time        20.00482
#                   run time        13.19301
#          getnsecs overhead      1399
#
#          number of samples     13969
#         number of outliers      4142
#    number of final samples      9827
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           50263 |*                                   50313.57143
#                  6           50364 |*                                   50438.83333
#                  4           50465 |*                                   50523.75000
#                  7           50566 |*                                   50634.14286
#                  9           50667 |*                                   50727.00000
#                 42           50768 |*                                   50822.78571
#                 77           50869 |**                                  50921.41558
#                118           50970 |****                                51024.51695
#                154           51071 |*****                               51123.74026
#                167           51172 |******                              51217.11976
#                125           51273 |****                                51322.56800
#                172           51374 |******                              51425.01163
#                320           51475 |************                        51531.29063
#                446           51576 |****************                    51632.21076
#                658           51677 |************************            51730.25684
#                847           51778 |********************************    51827.23731
#                687           51879 |*************************           51927.71761
#                647           51980 |************************            52029.89335
#                699           52081 |**************************          52128.76252
#                601           52182 |**********************              52230.47587
#                480           52283 |******************                  52337.41250
#                483           52384 |******************                  52435.17391
#                396           52485 |**************                      52533.04040
#                393           52586 |**************                      52637.56489
#                351           52687 |*************                       52732.58689
#                307           52788 |***********                         52836.30619
#                259           52889 |*********                           52941.99228
#                246           52990 |*********                           53039.00813
#                161           53091 |******                              53140.98758
#                169           53192 |******                              53240.53846
#                166           53293 |******                              53337.83735
#                131           53394 |****                                53438.56489
#
#                492           > 95% |******************                  53770.04675
#
#        mean of 95%     52157.10091
#          95th %ile           53494
#
# WARNINGS
#     Actual benchmark run time only accounts for 65.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pst4k   1   1           54663        10066        0       15 st pipe
# bin/../bin-riscv64/pipe -N pipe_pst4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     52600                      52846
#                        max    616282                      56750
#                       mean     60422.80421                54778.61961
#                     median     55088                      54663*
#                     stddev     16341.84731                  657.83314
#             standard error       137.19088                    6.55673
#       99% confidence level       353.40372                   16.89014
#                       skew         8.04191                    0.50501
#                   kurtosis       134.40100                    0.00045
#           time correlation         2.09869                    0.21924
#
#               elapsed time        20.00424
#                   run time        13.33707
#          getnsecs overhead      1399
#
#          number of samples     14189
#         number of outliers      4123
#    number of final samples     10066
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           52846 |*                                   52888.33333
#                  8           52945 |*                                   52999.50000
#                  8           53044 |*                                   53090.87500
#                 11           53143 |*                                   53189.09091
#                 28           53242 |*                                   53295.39286
#                 37           53341 |*                                   53394.48649
#                 55           53440 |**                                  53486.27273
#                 74           53539 |**                                  53585.08108
#                111           53638 |****                                53689.23423
#                143           53737 |*****                               53785.33566
#                203           53836 |*******                             53887.49754
#                272           53935 |**********                          53984.88235
#                377           54034 |**************                      54088.94164
#                579           54133 |**********************              54186.41451
#                718           54232 |****************************        54278.16017
#                748           54331 |*****************************       54378.50267
#                813           54430 |********************************    54476.67036
#                641           54529 |*************************           54577.23713
#                598           54628 |***********************             54678.50836
#                515           54727 |********************                54778.87961
#                448           54826 |*****************                   54875.37500
#                426           54925 |****************                    54968.98122
#                404           55024 |***************                     55071.52228
#                393           55123 |***************                     55172.08651
#                344           55222 |*************                       55269.24128
#                343           55321 |*************                       55373.86589
#                288           55420 |***********                         55468.68403
#                265           55519 |**********                          55562.90566
#                251           55618 |*********                           55664.41036
#                175           55717 |******                              55763.34857
#                147           55816 |*****                               55864.39456
#                136           55915 |*****                               55963.01471
#
#                504           > 95% |*******************                 56299.12698
#
#        mean of 95%     54698.47574
#          95th %ile           56013
#
# WARNINGS
#     Actual benchmark run time only accounts for 66.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smp1   1   1         1425006         1118        0        1 mp sock
# bin/../bin-riscv64/pipe -N pipe_smp1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    373402                     609703
#                        max   3590213                    2456510
#                       mean   1537857.65581              1527557.20394
#                     median   1426306                    1425006*
#                     stddev    350800.20958               314074.35875
#             standard error     10408.08136                 9393.15697
#       99% confidence level     26811.21758                24196.77236
#                       skew         0.76148                    0.36935
#                   kurtosis         2.63432                    0.36055
#           time correlation       978.78767                  918.14101
#
#               elapsed time        20.02539
#                   run time         1.75066
#          getnsecs overhead      1399
#
#          number of samples      1136
#         number of outliers        18
#    number of final samples      1118
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          609703 |*                                  641531.57143
#                  4          656697 |*                                  678378.25000
#                  2          703691 |*                                  719603.00000
#                  6          750685 |*                                  781037.00000
#                  4          797679 |*                                  814703.75000
#                  3          844673 |*                                  868203.66667
#                  8          891667 |*                                  929391.62500
#                  7          938661 |*                                  968604.14286
#                  3          985655 |*                                 1006037.33333
#                  3         1032649 |*                                 1049304.66667
#                 11         1079643 |**                                1099722.90909
#                 10         1126637 |*                                 1156074.70000
#                 19         1173631 |***                               1195131.21053
#                 48         1220625 |*********                         1249505.06250
#                 77         1267619 |***************                   1291213.05195
#                141         1314613 |***************************       1340198.24823
#                163         1361607 |********************************  1381526.93252
#                 98         1408601 |*******************               1428483.21429
#                 43         1455595 |********                          1476991.90698
#                 32         1502589 |******                            1521852.90625
#                 35         1549583 |******                            1576066.22857
#                 33         1596577 |******                            1618536.69697
#                 32         1643571 |******                            1669487.68750
#                 37         1690565 |*******                           1714263.32432
#                 52         1737559 |**********                        1762072.19231
#                 38         1784553 |*******                           1807338.52632
#                 34         1831547 |******                            1854098.26471
#                 23         1878541 |****                              1900389.82609
#                 28         1925535 |*****                             1947707.46429
#                 29         1972529 |*****                             1995086.79310
#                 17         2019523 |***                               2041387.17647
#                 15         2066517 |**                                2090547.80000
#
#                 56           > 95% |**********                        2235286.91071
#
#        mean of 95%   1490238.12335
#          95th %ile         2113508
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smp4k   1   1         1673106         1052        0        1 mp sock
# bin/../bin-riscv64/pipe -N pipe_smp4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    436302                     879704
#                        max   3923114                    2686510
#                       mean   1781195.20276              1777503.00095
#                     median   1672606                    1673106*
#                     stddev    373719.79564               310454.59193
#             standard error     11345.69837                 9571.72512
#       99% confidence level     29226.51901                24656.76390
#                       skew         0.78498                    0.48475
#                   kurtosis         3.33265                   -0.12863
#           time correlation      1091.87932                  981.69593
#
#               elapsed time        20.02843
#                   run time         1.93529
#          getnsecs overhead      1399
#
#          number of samples      1085
#         number of outliers        33
#    number of final samples      1052
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          879704 |*                                  879704.00000
#                  1          925236 |*                                  941304.00000
#                  3          970768 |*                                 1004371.00000
#                  2         1016300 |*                                 1046105.00000
#                  5         1061832 |*                                 1085904.80000
#                  3         1107364 |*                                 1134637.66667
#                  9         1152896 |**                                1175393.66667
#                  3         1198428 |*                                 1231371.66667
#                  5         1243960 |*                                 1262385.00000
#                  4         1289492 |*                                 1327430.25000
#                  7         1335024 |*                                 1365405.14286
#                 17         1380556 |***                               1404911.47059
#                 34         1426088 |*******                           1452520.50000
#                 68         1471620 |***************                   1495639.73529
#                139         1517152 |********************************  1540335.51079
#                127         1562684 |*****************************     1584770.00000
#                 76         1608216 |*****************                 1626432.52632
#                 48         1653748 |***********                       1674739.68750
#                 25         1699280 |*****                             1720134.68000
#                 27         1744812 |******                            1769206.74074
#                 24         1790344 |*****                             1813236.08333
#                 41         1835876 |*********                         1862129.02439
#                 43         1881408 |*********                         1909702.58140
#                 43         1926940 |*********                         1951898.09302
#                 57         1972472 |*************                     1994461.92982
#                 39         2018004 |********                          2043117.82051
#                 34         2063536 |*******                           2086443.17647
#                 32         2109068 |*******                           2132817.34375
#                 20         2154600 |****                              2177958.10000
#                 23         2200132 |*****                             2222438.69565
#                 20         2245664 |****                              2268363.55000
#                 19         2291196 |****                              2319308.63158
#
#                 53           > 95% |************                      2472254.39623
#
#        mean of 95%   1740644.31832
#          95th %ile         2336708
#
# WARNINGS
#     Actual benchmark run time only accounts for 9.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smt1   1   1         1241705         3147        0        1 mt sock
# bin/../bin-riscv64/pipe -N pipe_smt1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    338702                     338702
#                        max   7184325                    2377408
#                       mean   1247690.64428              1235079.37051
#                     median   1244505                    1241705*
#                     stddev    418618.10286               385164.05273
#             standard error      7433.95425                 6865.89846
#       99% confidence level     19149.86615                17686.55443
#                       skew         1.35362                    0.18393
#                   kurtosis        13.41530                   -0.23359
#           time correlation       428.28963                  413.89612
#
#               elapsed time        20.01760
#                   run time         3.96248
#          getnsecs overhead      1399
#
#          number of samples      3171
#         number of outliers        24
#    number of final samples      3147
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22          338702 |**                                 356611.22727
#                  7          387390 |*                                  414659.71429
#                 10          436078 |*                                  456362.40000
#                 24          484766 |**                                 516327.75000
#                 41          533454 |****                               555722.21951
#                 69          582142 |*******                            612774.01449
#                109          630830 |************                       654098.51376
#                 79          679518 |********                           700414.64557
#                 70          728206 |*******                            753049.22857
#                 63          776894 |******                             799202.00000
#                114          825582 |************                       850740.63158
#                123          874270 |*************                      898505.56098
#                 95          922958 |**********                         946245.15789
#                 94          971646 |**********                         992855.31915
#                 64         1020334 |*******                           1047587.32812
#                 96         1069022 |**********                        1095514.05208
#                128         1117710 |**************                    1145636.82812
#                200         1166398 |**********************            1190292.36500
#                290         1215086 |********************************  1239656.75862
#                257         1263774 |****************************      1287203.64981
#                205         1312462 |**********************            1336522.95122
#                142         1361150 |***************                   1383387.89437
#                 70         1409838 |*******                           1430847.10000
#                 66         1458526 |*******                           1485013.42424
#                 55         1507214 |******                            1534018.74545
#                 71         1555902 |*******                           1580423.15493
#                 81         1604590 |********                          1628656.95062
#                 88         1653278 |*********                         1679070.18182
#                 86         1701966 |*********                         1726128.74419
#                 68         1750654 |*******                           1774264.19118
#                 62         1799342 |******                            1821923.09677
#                 40         1848030 |****                              1870792.10000
#
#                158           > 95% |*****************                 2054662.17722
#
#        mean of 95%   1191755.82302
#          95th %ile         1896707
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.8% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smt4k   1   1         1453206         2852        0        1 mt sock
# bin/../bin-riscv64/pipe -N pipe_smt4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    387302                     387302
#                        max   6032421                    2733410
#                       mean   1458548.66353              1447720.04663
#                     median   1455006                    1453206*
#                     stddev    469083.59418               443674.33644
#             standard error      8759.12392                 8307.86724
#       99% confidence level     22563.50322                21401.06601
#                       skew         0.58962                    0.01406
#                   kurtosis         3.73060                   -0.22395
#           time correlation       539.54693                  525.74693
#
#               elapsed time        20.01286
#                   run time         4.18840
#          getnsecs overhead      1399
#
#          number of samples      2868
#         number of outliers        16
#    number of final samples      2852
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19          387302 |**                                 404707.78947
#                 15          443453 |*                                  483222.53333
#                 26          499604 |***                                532083.53846
#                 37          555755 |****                               576929.83784
#                 17          611906 |**                                 640867.76471
#                 42          668057 |****                               699160.42857
#                 89          724208 |**********                         755729.33708
#                 76          780359 |*********                          807641.78947
#                 57          836510 |******                             861996.84211
#                 36          892661 |****                               925106.83333
#                 81          948812 |*********                          982557.23457
#                 93         1004963 |***********                       1037409.76344
#                 79         1061114 |*********                         1088279.12658
#                 64         1117265 |*******                           1148521.93750
#                 71         1173416 |********                          1200064.08451
#                 74         1229567 |********                          1260141.56757
#                111         1285718 |*************                     1314437.78378
#                203         1341869 |************************          1372697.16256
#                240         1398020 |****************************      1426776.11667
#                270         1454171 |********************************  1481713.99630
#                160         1510322 |******************                1535514.13750
#                122         1566473 |**************                    1592445.59836
#                 63         1622624 |*******                           1652579.41270
#                 79         1678775 |*********                         1704853.39241
#                 75         1734926 |********                          1764801.44000
#                 93         1791077 |***********                       1822112.34409
#                 93         1847228 |***********                       1870473.78495
#                 99         1903379 |***********                       1932419.47475
#                 78         1959530 |*********                         1986052.46154
#                 50         2015681 |*****                             2041843.64000
#                 52         2071832 |******                            2098830.92308
#                 45         2127983 |*****                             2158561.37778
#
#                143           > 95% |****************                  2358573.72028
#
#        mean of 95%   1399638.80805
#          95th %ile         2184108
#
# WARNINGS
#     Actual benchmark run time only accounts for 20.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_sst1   1   1          112534         7700        0        5 st sock
# bin/../bin-riscv64/pipe -N pipe_sst1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    107751                     107751
#                        max   1047904                     123134
#                       mean    155517.46058               113384.21234
#                     median    115084                     112534*
#                     stddev     93717.64067                 3257.73381
#             standard error       885.07445                   37.12532
#       99% confidence level      2279.95177                   95.63483
#                       skew         2.66425                    0.82205
#                   kurtosis         8.14500                   -0.11802
#           time correlation        19.41489                    1.40621
#
#               elapsed time        20.00664
#                   run time        10.35242
#          getnsecs overhead      1399
#
#          number of samples     11212
#         number of outliers      3512
#    number of final samples      7700
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          107751 |*                                  107751.00000
#                 17          108131 |*                                  108373.17647
#                 81          108511 |*****                              108735.83951
#                176          108891 |************                       109115.59659
#                323          109271 |**********************             109473.71517
#                388          109651 |**************************         109837.03093
#                453          110031 |******************************     110205.89183
#                434          110411 |*****************************      110592.08525
#                427          110791 |*****************************      110976.45667
#                418          111171 |****************************       111367.07895
#                468          111551 |********************************   111729.97650
#                428          111931 |*****************************      112111.39019
#                393          112311 |**************************         112493.78880
#                351          112691 |************************           112883.58689
#                276          113071 |******************                 113261.61594
#                250          113451 |*****************                  113633.09200
#                251          113831 |*****************                  114006.72908
#                245          114211 |****************                   114399.42449
#                178          114591 |************                       114776.75843
#                161          114971 |***********                        115164.05590
#                162          115351 |***********                        115527.27160
#                185          115731 |************                       115910.67027
#                170          116111 |***********                        116293.42353
#                158          116491 |**********                         116688.76582
#                149          116871 |**********                         117038.85235
#                137          117251 |*********                          117418.66423
#                137          117631 |*********                          117820.51825
#                130          118011 |********                           118214.79231
#                110          118391 |*******                            118577.98182
#                 83          118771 |*****                              118940.62651
#                 88          119151 |******                             119322.38636
#                 87          119531 |*****                              119695.68966
#
#                385           > 95% |**************************         121148.48052
#
#        mean of 95%    112975.56664
#          95th %ile          119884
#
# WARNINGS
#     Actual benchmark run time only accounts for 51.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_sst4k   1   1          142921         4563        0        4 st sock
# bin/../bin-riscv64/pipe -N pipe_sst4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    135426                     135426
#                        max   1335645                     155301
#                       mean    172637.24438               143696.73723
#                     median    145021                     142921*
#                     stddev     81632.25649                 3877.55917
#             standard error      1034.72993                   57.40282
#       99% confidence level      2665.46429                  147.86965
#                       skew         4.48371                    0.69497
#                   kurtosis        27.99633                   -0.06581
#           time correlation        25.54924                    2.83929
#
#               elapsed time        20.00883
#                   run time         5.01952
#          getnsecs overhead      1399
#
#          number of samples      6224
#         number of outliers      1661
#    number of final samples      4563
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          135426 |*                                  135721.62500
#                 14          135923 |*                                  136204.57143
#                 31          136420 |***                                136637.64516
#                 35          136917 |***                                137118.74286
#                 52          137414 |*****                              137665.86538
#                 49          137911 |****                               138176.10204
#                 61          138408 |*****                              138680.77049
#                136          138905 |*************                      139186.83088
#                211          139402 |********************               139684.34597
#                325          139899 |*******************************    140138.78154
#                329          140396 |********************************   140644.09422
#                310          140893 |******************************     141124.71613
#                249          141390 |************************           141639.07229
#                211          141887 |********************               142136.46445
#                244          142384 |***********************            142649.85656
#                199          142881 |*******************                143139.94472
#                216          143378 |*********************              143618.76852
#                211          143875 |********************               144097.84360
#                166          144372 |****************                   144609.70482
#                172          144869 |****************                   145118.03488
#                143          145366 |*************                      145618.02797
#                125          145863 |************                       146105.52000
#                107          146360 |**********                         146614.87850
#                125          146857 |************                       147076.48000
#                 95          147354 |*********                          147581.77895
#                113          147851 |**********                         148068.78761
#                 63          148348 |******                             148590.52381
#                 85          148845 |********                           149121.35294
#                 75          149342 |*******                            149562.06667
#                 62          149839 |******                             150077.53226
#                 61          150336 |*****                              150565.01639
#                 51          150833 |****                               151083.94118
#
#                229           > 95% |**********************             152847.39738
#
#        mean of 95%    143213.23443
#          95th %ile          151301
#
# WARNINGS
#     Actual benchmark run time only accounts for 25.1% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmp1   1   1         2464309          784        0        1 mp  tcp
# bin/../bin-riscv64/pipe -N pipe_tmp1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    587303                    1354705
#                        max   3963714                    3471612
#                       mean   2381149.25242              2419126.52041
#                     median   2451909                    2464309*
#                     stddev    468463.23697               355372.36668
#             standard error     16280.22289                12691.87024
#       99% confidence level     41937.85417                32694.25773
#                       skew        -0.69517                   -0.26900
#                   kurtosis         2.24489                    0.39262
#           time correlation      1793.26040                 1513.05496
#
#               elapsed time        20.03721
#                   run time         1.97553
#          getnsecs overhead      1399
#
#          number of samples       828
#         number of outliers        44
#    number of final samples       784
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6         1354705 |***                               1382855.33333
#                  2         1404874 |*                                 1420256.00000
#                  4         1455043 |**                                1484105.75000
#                  6         1505212 |***                               1528322.83333
#                  2         1555381 |*                                 1581756.00000
#                  6         1605550 |***                               1636356.33333
#                  2         1655719 |*                                 1675756.50000
#                  3         1705888 |*                                 1723773.00000
#                  5         1756057 |***                               1795247.00000
#                 12         1806226 |*******                           1830832.00000
#                 12         1856395 |*******                           1878815.50000
#                  5         1906564 |***                               1928147.00000
#                 17         1956733 |**********                        1983395.76471
#                 26         2006902 |***************                   2031927.00000
#                 31         2057071 |******************                2082075.51613
#                 37         2107240 |**********************            2131270.13514
#                 48         2157409 |****************************      2180595.62500
#                 29         2207578 |*****************                 2233656.62069
#                 39         2257747 |***********************           2282767.46154
#                 27         2307916 |****************                  2331349.29630
#                 30         2358085 |******************                2384388.96667
#                 42         2408254 |*************************         2437085.21429
#                 51         2458423 |******************************    2487460.15686
#                 48         2508592 |****************************      2535559.27083
#                 53         2558761 |********************************  2582977.35849
#                 50         2608930 |******************************    2633027.68000
#                 45         2659099 |***************************       2685440.97778
#                 33         2709268 |*******************               2735788.63636
#                 31         2759437 |******************                2785122.90323
#                 21         2809606 |************                      2829953.04762
#                 15         2859775 |*********                         2887417.00000
#                  6         2909944 |***                               2926493.83333
#
#                 40           > 95% |************************          3139403.75000
#
#        mean of 95%   2380401.93817
#          95th %ile         2960111
#
# WARNINGS
#     Actual benchmark run time only accounts for 9.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmp4k   1   1         2435909          812        0        1 mp  tcp
# bin/../bin-riscv64/pipe -N pipe_tmp4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    772104                     915404
#                        max   4459216                    3751813
#                       mean   2378486.06463              2365156.11823
#                     median   2439309                    2435909*
#                     stddev    529316.98006               502100.04848
#             standard error     18484.55075                17620.25741
#       99% confidence level     47616.20272                45389.78309
#                       skew        -0.19433                   -0.50270
#                   kurtosis         0.97387                    0.34062
#           time correlation      2109.06163                 2043.23480
#
#               elapsed time        20.03493
#                   run time         1.95321
#          getnsecs overhead      1399
#
#          number of samples       820
#         number of outliers         8
#    number of final samples       812
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          915404 |*                                  915404.00000
#                  1          982752 |*                                 1014004.00000
#                  4         1050100 |*                                 1084329.50000
#                 21         1117448 |**********                        1153695.33333
#                  7         1184796 |***                               1212733.42857
#                  4         1252144 |*                                 1281580.00000
#                  8         1319492 |***                               1369143.00000
#                  9         1386840 |****                              1422772.11111
#                 16         1454188 |*******                           1488712.18750
#                 11         1521536 |*****                             1544233.27273
#                  6         1588884 |**                                1621856.33333
#                 13         1656232 |******                            1685706.46154
#                  6         1723580 |**                                1763173.50000
#                  8         1790928 |***                               1842344.62500
#                 13         1858276 |******                            1892768.61538
#                  9         1925624 |****                              1951807.33333
#                 24         1992972 |***********                       2029336.79167
#                 41         2060320 |********************              2096010.36585
#                 60         2127668 |*****************************     2164171.38333
#                 65         2195016 |********************************  2234380.66154
#                 41         2262364 |********************              2295769.31707
#                 20         2329712 |*********                         2371343.70000
#                 40         2397060 |*******************               2436843.95000
#                 36         2464408 |*****************                 2498486.88889
#                 61         2531756 |******************************    2570956.81967
#                 63         2599104 |*******************************   2627660.31746
#                 49         2666452 |************************          2701052.69388
#                 45         2733800 |**********************            2764176.68889
#                 28         2801148 |*************                     2832017.42857
#                 31         2868496 |***************                   2895920.12903
#                 15         2935844 |*******                           2973177.33333
#                 15         3003192 |*******                           3033737.53333
#
#                 41           > 95% |********************              3310124.00000
#
#        mean of 95%   2314904.90791
#          95th %ile         3070512
#
# WARNINGS
#     Actual benchmark run time only accounts for 9.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmt1   1   1         2270309         1275        0        1 mt  tcp
# bin/../bin-riscv64/pipe -N pipe_tmt1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    600003                     600003
#                        max   8140727                    3659013
#                       mean   2235896.64957              2211617.01020
#                     median   2276008                    2270309*
#                     stddev    603601.98140               539865.89139
#             standard error     16825.24447                15119.26912
#       99% confidence level     43341.82976                38947.23724
#                       skew         0.83682                   -0.53292
#                   kurtosis         8.77266                   -0.17566
#           time correlation      1491.68679                 1418.64099
#
#               elapsed time        20.01622
#                   run time         2.88162
#          getnsecs overhead      1399
#
#          number of samples      1287
#         number of outliers        12
#    number of final samples      1275
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          600003 |*                                  630003.00000
#                  0          673691 |                                              -
#                  1          747379 |*                                  783203.00000
#                  2          821067 |*                                  875953.50000
#                 10          894755 |***                                939414.00000
#                 14          968443 |****                              1007018.50000
#                 29         1042131 |*********                         1072294.06897
#                 25         1115819 |********                          1162760.76000
#                 18         1189507 |*****                             1222499.38889
#                 23         1263195 |*******                           1301409.69565
#                 18         1336883 |*****                             1373644.33333
#                 29         1410571 |*********                         1452750.65517
#                 20         1484259 |******                            1517326.00000
#                 20         1557947 |******                            1598396.20000
#                 20         1631635 |******                            1666251.40000
#                 18         1705323 |*****                             1748701.27778
#                 37         1779011 |************                      1812379.86486
#                 31         1852699 |**********                        1895078.16129
#                 40         1926387 |*************                     1965582.40000
#                 65         2000075 |*********************             2041795.46154
#                 65         2073763 |*********************             2115191.00000
#                 98         2147451 |********************************  2184855.09184
#                 77         2221139 |*************************         2259753.81818
#                 52         2294827 |****************                  2329354.71154
#                 69         2368515 |**********************            2406647.94203
#                 85         2442203 |***************************       2480087.90588
#                 80         2515891 |**************************        2555245.63750
#                 80         2589579 |**************************        2626204.60000
#                 61         2663267 |*******************               2700980.36066
#                 55         2736955 |*****************                 2773442.80000
#                 36         2810643 |***********                       2845466.08333
#                 31         2884331 |**********                        2925155.48387
#
#                 64           > 95% |********************              3137119.00000
#
#        mean of 95%   2162705.26177
#          95th %ile         2958011
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.4% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmt4k   1   1         2306108         1395        0        1 mt  tcp
# bin/../bin-riscv64/pipe -N pipe_tmt4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    682103                     748404
#                        max   6694223                    3728713
#                       mean   2278806.16322              2266797.36416
#                     median   2310609                    2306108*
#                     stddev    557617.64259               520088.60077
#             standard error     14887.01653                13924.84056
#       99% confidence level     38348.95458                35870.38929
#                       skew         0.26961                   -0.57534
#                   kurtosis         5.17727                    0.38862
#           time correlation      1264.00326                 1224.02999
#
#               elapsed time        20.01389
#                   run time         3.20035
#          getnsecs overhead      1399
#
#          number of samples      1403
#         number of outliers         8
#    number of final samples      1395
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          748404 |*                                  765004.00000
#                  1          818820 |*                                  862804.00000
#                  8          889236 |**                                 931891.25000
#                 20          959652 |*****                              988119.15000
#                 18         1030068 |*****                             1068476.61111
#                 14         1100484 |****                              1127054.92857
#                 16         1170900 |****                              1203773.62500
#                 23         1241316 |******                            1277253.13043
#                 22         1311732 |******                            1345018.90909
#                 25         1382148 |*******                           1415057.48000
#                 17         1452564 |****                              1484552.76471
#                 13         1522980 |***                               1548236.76923
#                 11         1593396 |***                               1647079.09091
#                 15         1663812 |****                              1697126.60000
#                 22         1734228 |******                            1765211.22727
#                 15         1804644 |****                              1847093.66667
#                 12         1875060 |***                               1915607.41667
#                 54         1945476 |***************                   1982913.00000
#                 64         2015892 |******************                2050917.14062
#                111         2086308 |*******************************   2124324.17117
#                112         2156724 |********************************  2191182.32143
#                 93         2227140 |**************************        2261126.67742
#                 59         2297556 |****************                  2334344.18644
#                 69         2367972 |*******************               2405327.69565
#                 91         2438388 |**************************        2474721.17582
#                111         2508804 |*******************************   2548252.53153
#                 78         2579220 |**********************            2613213.37179
#                 86         2649636 |************************          2681377.17442
#                 59         2720052 |****************                  2751906.62712
#                 32         2790468 |*********                         2821735.18750
#                 30         2860884 |********                          2892307.20000
#                 21         2931300 |******                            2961710.66667
#
#                 70           > 95% |********************              3244128.74286
#
#        mean of 95%   2215164.76302
#          95th %ile         3001710
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.0% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tst1   1   1          968104         2452        0        1 st  tcp
# bin/../bin-riscv64/pipe -N pipe_tst1 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    287301                     287301
#                        max   3809514                    2074808
#                       mean   1031936.83495              1020806.84339
#                     median    969705                     968104*
#                     stddev    375150.70776               353903.94687
#             standard error      7545.38730                 7147.02289
#       99% confidence level     19436.91769                18410.73097
#                       skew         0.30988                   -0.15033
#                   kurtosis         2.25025                    0.38753
#           time correlation       482.47289                  466.88852
#
#               elapsed time        20.01778
#                   run time         2.57974
#          getnsecs overhead      1399
#
#          number of samples      2472
#         number of outliers        20
#    number of final samples      2452
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                216          287301 |**************                     304018.55556
#                 32          327233 |**                                 344354.09375
#                 16          367165 |*                                  384340.68750
#                  9          407097 |*                                  423015.22222
#                  8          447029 |*                                  463865.00000
#                  7          486961 |*                                  502045.57143
#                 10          526893 |*                                  544633.00000
#                  5          566825 |*                                  587002.80000
#                 14          606757 |*                                  629860.14286
#                 17          646689 |*                                  663914.88235
#                 10          686621 |*                                  703443.30000
#                  9          726553 |*                                  745825.44444
#                 14          766485 |*                                  783939.21429
#                 12          806417 |*                                  826924.58333
#                 14          846349 |*                                  876864.64286
#                478          886281 |********************************   906910.65063
#                338          926213 |**********************             944681.17751
#                191          966145 |************                       983107.90052
#                 98         1006077 |******                            1022955.90816
#                 70         1046009 |****                              1063480.90000
#                 41         1085941 |**                                1103733.90244
#                 39         1125873 |**                                1146520.23077
#                 75         1165805 |*****                             1186552.85333
#                 72         1205737 |****                              1226386.94444
#                 94         1245669 |******                            1268065.65957
#                 86         1285601 |*****                             1306408.70930
#                 91         1325533 |******                            1343295.61538
#                 82         1365465 |*****                             1384378.84146
#                 62         1405397 |****                              1425254.12903
#                 51         1445329 |***                               1462278.25490
#                 39         1485261 |**                                1504472.61538
#                 29         1525193 |*                                 1538609.48276
#
#                123           > 95% |********                          1769646.66667
#
#        mean of 95%    981258.84070
#          95th %ile         1565106
#
# WARNINGS
#     Actual benchmark run time only accounts for 12.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tst4k   1   1          978504         2498        0        1 st  tcp
# bin/../bin-riscv64/pipe -N pipe_tst4k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    292702                     292702
#                        max   3273312                    2141208
#                       mean   1022068.99523              1011573.49800
#                     median    979304                     978504*
#                     stddev    399660.68717               377580.45936
#             standard error      7970.92631                 7554.63164
#       99% confidence level     20533.10617                19460.73112
#                       skew         0.28489                   -0.17986
#                   kurtosis         1.77946                    0.04020
#           time correlation       509.71776                  494.18368
#
#               elapsed time        20.01331
#                   run time         2.59291
#          getnsecs overhead      1399
#
#          number of samples      2514
#         number of outliers        16
#    number of final samples      2498
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                263          292702 |*****************                  309031.86692
#                 73          333643 |****                               350652.08219
#                 15          374584 |*                                  389932.20000
#                  8          415525 |*                                  439420.87500
#                  8          456466 |*                                  467790.00000
#                  9          497407 |*                                  513608.33333
#                 12          538348 |*                                  558694.58333
#                 11          579289 |*                                  604584.81818
#                  8          620230 |*                                  651940.87500
#                 18          661171 |*                                  680975.38889
#                 17          702112 |*                                  719873.88235
#                 10          743053 |*                                  761283.60000
#                  8          783994 |*                                  811491.25000
#                  4          824935 |*                                  836703.25000
#                 56          865876 |***                                899612.82143
#                487          906817 |********************************   926388.02669
#                322          947758 |*********************              967222.78261
#                148          988699 |*********                         1005527.84459
#                 86         1029640 |*****                             1047682.34884
#                 56         1070581 |***                               1086233.17857
#                 37         1111522 |**                                1132899.27027
#                 55         1152463 |***                               1171644.80000
#                 73         1193404 |****                              1213220.00000
#                 80         1234345 |*****                             1253857.62500
#                106         1275286 |******                            1294313.69811
#                105         1316227 |******                            1338350.13333
#                 69         1357168 |****                              1380147.63768
#                 82         1398109 |*****                             1417704.40244
#                 45         1439050 |**                                1462321.37778
#                 46         1479991 |***                               1500092.82609
#                 36         1520932 |**                                1543619.91667
#                 20         1561873 |*                                 1581226.20000
#
#                125           > 95% |********                          1781018.84000
#
#        mean of 95%    971042.24315
#          95th %ile         1602806
#
# WARNINGS
#     Actual benchmark run time only accounts for 13.0% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
        prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_10   1   1           91550        18079        0        9       10   ---
# bin/../bin-riscv64/poll -N poll_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     86275                      86275
#                        max    918583                     107001
#                       mean     96825.24296                93541.45805
#                     median     91650                      91550*
#                     stddev     20961.43987                 4486.84046
#             standard error       150.67700                   33.36979
#       99% confidence level       388.14395                   85.96057
#                       skew        11.73616                    1.48906
#                   kurtosis       243.99064                    0.73095
#           time correlation         1.56127                    0.70567
#
#               elapsed time        20.00458
#                   run time        18.12378
#          getnsecs overhead      1399
#
#          number of samples     19353
#         number of outliers      1274
#    number of final samples     18079
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6           86275 |*                                   86627.33333
#                  6           86814 |*                                   87074.83333
#                  7           87353 |*                                   87588.14286
#                  8           87892 |*                                   88144.87500
#                 19           88431 |*                                   88728.21053
#                 25           88970 |*                                   89358.24000
#                276           89509 |**                                  89880.43116
#               2745           90048 |*********************               90389.35738
#               4121           90587 |********************************    90814.06989
#               2539           91126 |*******************                 91442.08192
#               2505           91665 |*******************                 91885.71577
#                833           92204 |******                              92481.66987
#                573           92743 |****                                92976.53927
#                210           93282 |*                                   93525.21429
#                 84           93821 |*                                   94060.40476
#                 61           94360 |*                                   94631.55738
#                162           94899 |*                                   95230.63580
#                123           95438 |*                                   95676.92683
#                 63           95977 |*                                   96260.06349
#                 40           96516 |*                                   96751.92500
#                 28           97055 |*                                   97322.67857
#                 34           97594 |*                                   97888.85294
#                 63           98133 |*                                   98445.01587
#                152           98672 |*                                   98988.42105
#                297           99211 |**                                  99499.69024
#                334           99750 |**                                 100027.55988
#                387          100289 |***                                100569.12920
#                337          100828 |**                                 101095.05935
#                305          101367 |**                                 101629.40984
#                314          101906 |**                                 102175.55096
#                269          102445 |**                                 102699.65428
#                249          102984 |*                                  103263.37349
#
#                904           > 95% |*******                            104992.17588
#
#        mean of 95%     92938.75360
#          95th %ile          103520
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
         prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_100   1   1          700003        18062        0        1      100   ---
# bin/../bin-riscv64/poll -N poll_100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    658103                     678603
#                        max   2360308                     724204
#                       mean    730659.07711               701196.43007
#                     median    702604                     700003*
#                     stddev     80090.75734                 7694.53188
#             standard error       522.17681                   57.25314
#       99% confidence level      1345.12747                  147.48408
#                       skew         7.51363                    0.38117
#                   kurtosis        98.45083                    0.34452
#           time correlation         7.03154                    1.41102
#
#               elapsed time        20.00480
#                   run time        17.22380
#          getnsecs overhead      1399
#
#          number of samples     23525
#         number of outliers      5463
#    number of final samples     18062
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          678603 |*                                  678886.50000
#                 24          679760 |*                                  680432.37500
#                 41          680917 |*                                  681529.97561
#                 65          682074 |*                                  682687.92308
#                 98          683231 |*                                  683857.26531
#                124          684388 |**                                 684956.49194
#                147          685545 |**                                 686095.09524
#                215          686702 |***                                687280.48837
#                262          687859 |****                               688452.13359
#                237          689016 |****                               689582.54430
#                301          690173 |*****                              690757.43854
#                278          691330 |****                               691934.23381
#                384          692487 |******                             693113.95052
#                495          693644 |********                           694267.10505
#               1042          694801 |******************                 695355.87428
#               1206          695958 |*********************              696570.36816
#               1647          697115 |*****************************      697710.50759
#               1793          698272 |********************************   698850.87619
#               1326          699429 |***********************            699986.55505
#               1287          700586 |**********************             701129.97980
#                870          701743 |***************                    702303.28621
#                846          702900 |***************                    703463.96690
#                669          704057 |***********                        704634.54260
#                551          705214 |*********                          705779.32849
#                565          706371 |**********                         706939.26372
#                488          707528 |********                           708102.90779
#                551          708685 |*********                          709250.34664
#                415          709842 |*******                            710363.80723
#                409          710999 |*******                            711566.17848
#                334          712156 |*****                              712725.78144
#                273          713313 |****                               713883.52015
#                209          714470 |***                                714964.09569
#
#                904           > 95% |****************                   719131.54425
#
#        mean of 95%    700251.48642
#          95th %ile          715603
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
          prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_1000   1   1         6897724         2639        0        1     1000   ---
# bin/../bin-riscv64/poll -N poll_1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   6678523                    6678523
#                        max  18119360                    7238724
#                       mean   6979463.01228              6912989.26942
#                     median   6908724                    6897724*
#                     stddev    448658.14109               108892.43671
#             standard error      8404.13698                 2119.71767
#       99% confidence level     21649.05687                 5460.39273
#                       skew        15.56375                    0.62566
#                   kurtosis       335.61811                    0.17063
#           time correlation       243.59271                  137.64796
#
#               elapsed time        20.00731
#                   run time        19.91211
#          getnsecs overhead      1399
#
#          number of samples      2850
#         number of outliers       211
#    number of final samples      2639
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4         6678523 |*                                 6687823.00000
#                 10         6692639 |*                                 6700202.70000
#                 19         6706755 |***                               6712849.21053
#                 47         6720871 |********                          6728665.57447
#                 52         6734987 |*********                         6741944.19231
#                 57         6749103 |**********                        6755258.15789
#                 50         6763219 |*********                         6770821.14000
#                 52         6777335 |*********                         6784571.25000
#                 74         6791451 |*************                     6798798.90541
#                 94         6805567 |*****************                 6812259.43617
#                150         6819683 |***************************       6827239.34000
#                156         6833799 |****************************      6841208.01282
#                161         6847915 |*****************************     6854904.18634
#                147         6862031 |**************************        6869530.91837
#                175         6876147 |********************************  6883351.46286
#                136         6890263 |************************          6897573.58824
#                152         6904379 |***************************       6911662.37500
#                135         6918495 |************************          6925533.27407
#                119         6932611 |*********************             6939269.84034
#                106         6946727 |*******************               6953885.09434
#                 98         6960843 |*****************                 6968226.84694
#                 81         6974959 |**************                    6982105.25926
#                 89         6989075 |****************                  6995635.08989
#                 46         7003191 |********                          7009934.86957
#                 47         7017307 |********                          7024409.06383
#                 47         7031423 |********                          7038896.34043
#                 52         7045539 |*********                         7051825.94231
#                 36         7059655 |******                            7066918.63889
#                 19         7073771 |***                               7080366.26316
#                 44         7087887 |********                          7094856.00000
#                 29         7102003 |*****                             7110096.75862
#                 23         7116119 |****                              7123189.47826
#
#                132           > 95% |************************          7176161.60606
#
#        mean of 95%   6899132.56881
#          95th %ile         7130225
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
         prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w10   1   1           91310        18590        0        9       10   -w-
# bin/../bin-riscv64/poll -N poll_w10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 10 -w 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     85130                      85130
#                        max    442102                     108000
#                       mean     95580.44706                93676.49532
#                     median     91410                      91310*
#                     stddev     14520.15641                 4778.40039
#             standard error       103.74717                   35.04635
#       99% confidence level       267.25270                   90.27941
#                       skew        11.43667                    1.46172
#                   kurtosis       177.05997                    0.62530
#           time correlation         1.18708                    0.72506
#
#               elapsed time        20.00432
#                   run time        18.08130
#          getnsecs overhead      1399
#
#          number of samples     19588
#         number of outliers       998
#    number of final samples     18590
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           85130 |*                                   85130.00000
#                  2           85724 |*                                   86110.00000
#                  2           86318 |*                                   86565.00000
#                  6           86912 |*                                   87251.66667
#                 18           87506 |*                                   87800.50000
#                 84           88100 |*                                   88529.86905
#                284           88694 |*                                   88969.95423
#                158           89288 |*                                   89587.52532
#                772           89882 |****                                90283.59715
#               5967           90476 |********************************    90819.81766
#               3376           91070 |******************                  91290.24319
#               2080           91664 |***********                         91954.65240
#               1000           92258 |*****                               92501.64700
#                378           92852 |**                                  93105.84392
#                185           93446 |*                                   93694.02162
#                105           94040 |*                                   94287.09524
#                 59           94634 |*                                   94923.76271
#                 49           95228 |*                                   95508.93878
#                 48           95822 |*                                   96195.10417
#                 39           96416 |*                                   96706.46154
#                 35           97010 |*                                   97316.68571
#                 33           97604 |*                                   97851.06061
#                 46           98198 |*                                   98544.26087
#                127           98792 |*                                   99173.24409
#                323           99386 |*                                   99679.30031
#                347           99980 |*                                  100259.78098
#                415          100574 |**                                 100858.52530
#                438          101168 |**                                 101444.55708
#                369          101762 |*                                  102059.30352
#                341          102356 |*                                  102645.58944
#                288          102950 |*                                  103227.49306
#                285          103544 |*                                  103842.87368
#
#                930           > 95% |****                               105748.84946
#
#        mean of 95%     93040.74847
#          95th %ile          104131
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
          prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w100   1   1          692603        18201        0        1      100   -w-
# bin/../bin-riscv64/poll -N poll_w100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 100 -w 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    653403                     671603
#                        max   3754013                     715604
#                       mean    724687.37660               693525.63683
#                     median    695203                     692603*
#                     stddev     97448.33384                 7369.13997
#             standard error       638.10408                   54.62220
#       99% confidence level      1643.75611                  140.70678
#                       skew         9.16747                    0.48858
#                   kurtosis       133.94156                    0.02021
#           time correlation         7.55893                    1.36051
#
#               elapsed time        20.00448
#                   run time        16.93599
#          getnsecs overhead      1399
#
#          number of samples     23322
#         number of outliers      5121
#    number of final samples     18201
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          671603 |*                                  672103.25000
#                  9          672722 |*                                  673136.44444
#                  4          673841 |*                                  674653.25000
#                  8          674960 |*                                  675291.12500
#                 16          676079 |*                                  676434.62500
#                 53          677198 |*                                  677823.98113
#                 96          678317 |**                                 678969.85417
#                151          679436 |***                                679966.15894
#                270          680555 |******                             681121.75185
#                353          681674 |********                           682238.94334
#                529          682793 |************                       683385.85066
#                612          683912 |*************                      684537.85948
#                640          685031 |**************                     685614.34062
#                745          686150 |****************                   686716.12215
#                918          687269 |********************               687806.71460
#               1123          688388 |*************************          688959.36064
#               1256          689507 |****************************       690104.78424
#               1410          690626 |********************************   691213.60284
#               1194          691745 |***************************        692314.81826
#               1193          692864 |***************************        693376.03856
#                974          693983 |**********************             694493.64682
#                950          695102 |*********************              695659.60842
#                753          696221 |*****************                  696794.88446
#                678          697340 |***************                    697902.25959
#                594          698459 |*************                      698970.96970
#                571          699578 |************                       700097.35902
#                529          700697 |************                       701242.98110
#                415          701816 |*********                          702355.82892
#                392          702935 |********                           703473.15816
#                307          704054 |******                             704636.85016
#                283          705173 |******                             705683.55124
#                260          706292 |*****                              706810.98846
#
#                911           > 95% |********************               710644.26894
#
#        mean of 95%    692623.66611
#          95th %ile          707403
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
           prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w1000   1   1         6891824         2612        0        1     1000   -w-
# bin/../bin-riscv64/poll -N poll_w1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1000 -w 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   6646223                    6646223
#                        max  20620969                    7414926
#                       mean   7045543.99575              6926106.42190
#                     median   6909424                    6891824*
#                     stddev    736304.57267               163175.51182
#             standard error     13855.59407                 3192.77561
#       99% confidence level     35692.01034                 8224.58997
#                       skew        10.78846                    0.71252
#                   kurtosis       147.59786                   -0.10489
#           time correlation       409.54953                  209.20863
#
#               elapsed time        20.01140
#                   run time        19.91812
#          getnsecs overhead      1399
#
#          number of samples      2824
#         number of outliers       212
#    number of final samples      2612
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 21         6646223 |****                              6656432.23810
#                 48         6664999 |*********                         6676033.16667
#                 55         6683775 |***********                       6693259.25455
#                 56         6702551 |***********                       6711672.96429
#                 58         6721327 |***********                       6731064.37931
#                 92         6740103 |******************                6749123.07609
#                130         6758879 |**************************        6769233.95385
#                143         6777655 |****************************      6787048.38462
#                155         6796431 |*******************************   6805781.99355
#                160         6815207 |********************************  6824787.09375
#                142         6833983 |****************************      6842850.14085
#                135         6852759 |***************************       6861749.35556
#                106         6871535 |*********************             6881923.50943
#                110         6890311 |**********************            6900309.88182
#                 99         6909087 |*******************               6917851.87879
#                 87         6927863 |*****************                 6937371.85057
#                 84         6946639 |****************                  6956404.75000
#                 84         6965415 |****************                  6973821.44048
#                 84         6984191 |****************                  6993538.14286
#                 80         7002967 |****************                  7012862.72500
#                 65         7021743 |*************                     7031054.75385
#                 62         7040519 |************                      7048588.54839
#                 69         7059295 |*************                     7067957.49275
#                 60         7078071 |************                      7087407.50000
#                 67         7096847 |*************                     7106863.07463
#                 43         7115623 |********                          7123996.30233
#                 39         7134399 |*******                           7143844.87179
#                 25         7153175 |*****                             7163108.52000
#                 30         7171951 |******                            7181797.76667
#                 34         7190727 |******                            7198765.70588
#                 32         7209503 |******                            7219518.31250
#                 26         7228279 |*****                             7238082.30769
#
#                131           > 95% |**************************        7312118.06107
#
#        mean of 95%   6905724.50947
#          95th %ile         7247025
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
            prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn   1   1        38690027          552        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15777152                   15777152
#                        max  65426465                   54090778
#                       mean  35985835.92767             35932501.45471
#                     median  38690027                   38690027*
#                     stddev   7646397.21725              7549675.61741
#             standard error    325157.88460               321335.53372
#       99% confidence level    837606.71073               827760.33487
#                       skew        -1.03070                   -1.15920
#                   kurtosis         0.96932                    0.73151
#           time correlation     42634.62977                42285.98558
#
#               elapsed time        20.02918
#                   run time        19.96637
#          getnsecs overhead      1399
#
#          number of samples       553
#         number of outliers         1
#    number of final samples       552
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4        15777152 |*                                16134728.75000
#                  9        16669671 |***                              17056345.77778
#                 13        17562190 |*****                            18012398.46154
#                 19        18454709 |*******                          18687288.52632
#                  7        19347228 |**                               19763437.14286
#                  6        20239747 |**                               20732235.33333
#                  1        21132266 |*                                21934372.00000
#                  1        22024785 |*                                22033574.00000
#                  0        22917304 |                                              -
#                  3        23809823 |*                                24363847.00000
#                  1        24702342 |*                                25473984.00000
#                  8        25594861 |***                              26128923.87500
#                  8        26487380 |***                              27021389.37500
#                  6        27379899 |**                               27881442.00000
#                  8        28272418 |***                              28642669.75000
#                  2        29164937 |*                                29814298.50000
#                  6        30057456 |**                               30687001.50000
#                 18        30949975 |*******                          31485659.44444
#                 22        31842494 |********                         32250156.45455
#                 11        32735013 |****                             33194618.63636
#                  7        33627532 |**                               34078512.42857
#                 10        34520051 |****                             34915895.20000
#                 14        35412570 |*****                            35836861.14286
#                 17        36305089 |******                           36886580.47059
#                 37        37197608 |**************                   37735708.10811
#                 58        38090127 |***********************          38550818.44828
#                 80        38982646 |******************************** 39445712.47500
#                 70        39875165 |****************************     40257349.70000
#                 33        40767684 |*************                    41168881.00000
#                 31        41660203 |************                     42076719.22581
#                  6        42552722 |**                               42908491.16667
#                  8        43445241 |***                              43789169.00000
#
#                 28           > 95% |***********                      47227951.92857
#
#        mean of 95%  35328927.76527
#          95th %ile        44337746
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_100r   1   1        37736324          556        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_100r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15507052                   15507052
#                        max 208857884                   49192162
#                       mean  35173463.04643             34322321.57554
#                     median  37766624                   37736324*
#                     stddev  14013245.65947              8352665.83020
#             standard error    592167.70958               354231.93452
#       99% confidence level   1525424.01989               912501.46334
#                       skew         7.10769                   -0.95553
#                   kurtosis        84.43636                   -0.25114
#           time correlation     56231.78570                48185.21072
#
#               elapsed time        20.06202
#                   run time        19.74704
#          getnsecs overhead      1399
#
#          number of samples       560
#         number of outliers         4
#    number of final samples       556
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        15507052 |***                              15975053.16667
#                 20        16380187 |***********                      16930016.55000
#                 23        17253322 |*************                    17787224.47826
#                 24        18126457 |*************                    18498248.95833
#                  6        18999592 |***                              19347247.50000
#                  3        19872727 |*                                20172366.66667
#                  4        20745862 |**                               21165095.25000
#                  4        21618997 |**                               22023723.00000
#                  3        22492132 |*                                23166643.33333
#                  2        23365267 |*                                23679628.50000
#                  7        24238402 |****                             24777653.57143
#                  0        25111537 |                                              -
#                  6        25984672 |***                              26476787.83333
#                  2        26857807 |*                                27368840.00000
#                  4        27730942 |**                               28288493.50000
#                  7        28604077 |****                             29093696.14286
#                  9        29477212 |*****                            29986810.11111
#                 16        30350347 |*********                        30753501.50000
#                 15        31223482 |********                         31636717.80000
#                 15        32096617 |********                         32578047.73333
#                 18        32969752 |**********                       33514927.16667
#                 15        33842887 |********                         34238192.86667
#                 18        34716022 |**********                       35123671.55556
#                 19        35589157 |***********                      36026697.73684
#                 22        36462292 |************                     36923503.54545
#                 34        37335427 |*******************              37871465.85294
#                 55        38208562 |******************************** 38684451.16364
#                 52        39081697 |******************************   39482908.84615
#                 43        39954832 |*************************        40362337.60465
#                 38        40827967 |**********************           41217464.68421
#                 21        41701102 |************                     42021571.66667
#                 17        42574237 |*********                        42930153.11765
#
#                 28           > 95% |****************                 45431522.67857
#
#        mean of 95%  33733197.27462
#          95th %ile        43447343
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                  prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_1024n   1   1        38376226          565        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_1024n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1024 -p 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  16038454                   16038454
#                        max  53378176                   53378176
#                       mean  35026407.47611             35026407.47611
#                     median  38376226                   38376226*
#                     stddev   7641454.26203              7641454.26203
#             standard error    321478.39696               321478.39696
#       99% confidence level    828128.35058               828128.35058
#                       skew        -1.16216                   -1.16216
#                   kurtosis         0.52487                    0.52487
#           time correlation     42011.54222                42011.54222
#
#               elapsed time        20.07003
#                   run time        19.84352
#          getnsecs overhead      1399
#
#          number of samples       565
#         number of outliers         0
#    number of final samples       565
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7        16038454 |**                               16510798.00000
#                 17        16861332 |******                           17415422.64706
#                 32        17684210 |***********                      18066622.50000
#                  9        18507088 |***                              18805084.77778
#                  1        19329966 |*                                19750465.00000
#                  1        20152844 |*                                20228967.00000
#                  1        20975722 |*                                21287871.00000
#                  2        21798600 |*                                22361574.00000
#                  1        22621478 |*                                22928276.00000
#                  2        23444356 |*                                24037730.00000
#                  0        24267234 |                                              -
#                  3        25090112 |*                                25679418.33333
#                  8        25912990 |**                               26435712.37500
#                  5        26735868 |*                                27165029.60000
#                  3        27558746 |*                                27963559.33333
#                  2        28381624 |*                                28703394.50000
#                  9        29204502 |***                              29581208.88889
#                 11        30027380 |****                             30459600.63636
#                 16        30850258 |*****                            31269853.06250
#                 17        31673136 |******                           32020982.17647
#                 26        32496014 |*********                        32893447.00000
#                 14        33318892 |*****                            33665203.78571
#                 18        34141770 |******                           34540019.61111
#                 12        34964648 |****                             35328891.50000
#                 12        35787526 |****                             36203361.08333
#                 26        36610404 |*********                        37070214.57692
#                 25        37433282 |*********                        37888256.96000
#                 64        38256160 |***********************          38745738.53125
#                 86        39079038 |******************************** 39503398.80233
#                 47        39901916 |*****************                40277462.46809
#                 39        40724794 |**************                   41072907.10256
#                 20        41547672 |*******                          41984858.35000
#
#                 29           > 95% |**********                       45276568.13793
#
#        mean of 95%  34471827.88806
#          95th %ile        42370540
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_10r   1   1        37985625          570        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_10r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15750452                   15750452
#                        max  55369882                   55369882
#                       mean  34952452.25965             34952452.25965
#                     median  37985625                   37985625*
#                     stddev   7565956.42641              7565956.42641
#             standard error    316903.04192               316903.04192
#       99% confidence level    816342.23598               816342.23598
#                       skew        -1.26275                   -1.26275
#                   kurtosis         0.92087                    0.92087
#           time correlation     40230.81798                40230.81798
#
#               elapsed time        20.05342
#                   run time        19.97025
#          getnsecs overhead      1399
#
#          number of samples       570
#         number of outliers         0
#    number of final samples       570
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 17        15750452 |******                           16265495.35294
#                 15        16575155 |*****                            17026336.66667
#                 20        17399858 |*******                          17786749.10000
#                 11        18224561 |****                             18519061.54545
#                  2        19049264 |*                                19614415.00000
#                  1        19873967 |*                                19972567.00000
#                  1        20698670 |*                                20785369.00000
#                  0        21523373 |                                              -
#                  1        22348076 |*                                22817775.00000
#                  1        23172779 |*                                23735579.00000
#                  2        23997482 |*                                24197630.50000
#                  3        24822185 |*                                25029183.00000
#                  9        25646888 |***                              25970019.33333
#                  2        26471591 |*                                26661788.00000
#                  2        27296294 |*                                27757891.50000
#                  3        28120997 |*                                28814362.00000
#                  6        28945700 |**                               29300580.00000
#                 12        29770403 |****                             30137532.58333
#                  5        30595106 |*                                31022502.60000
#                 20        31419809 |*******                          31949065.45000
#                 26        32244512 |*********                        32664192.38462
#                 16        33069215 |*****                            33576041.87500
#                 14        33893918 |*****                            34305734.64286
#                  8        34718621 |**                               35131728.25000
#                 15        35543324 |*****                            35907965.13333
#                 25        36368027 |*********                        36849941.36000
#                 53        37192730 |*******************              37648210.88679
#                 87        38017433 |******************************** 38448062.29885
#                 73        38842136 |**************************       39258245.71233
#                 47        39666839 |*****************                39987723.21277
#                 29        40491542 |**********                       40939179.68966
#                 15        41316245 |*****                            41747430.93333
#
#                 29           > 95% |**********                       45317738.68966
#
#        mean of 95%  34396826.92421
#          95th %ile        42140938
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_128n   1   1        38124526          559        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_128n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15387251                   15387251
#                        max  59493295                   56144985
#                       mean  35487814.49643             35444870.88193
#                     median  38139626                   38124526*
#                     stddev   7393314.21817              7329698.29269
#             standard error    312424.54840               310013.20608
#       99% confidence level    804805.63668               798594.01887
#                       skew        -1.16361                   -1.24169
#                   kurtosis         1.17869                    1.09791
#           time correlation     40202.35511                39956.73751
#
#               elapsed time        20.03568
#                   run time        19.93345
#          getnsecs overhead      1399
#
#          number of samples       560
#         number of outliers         1
#    number of final samples       559
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8        15387251 |**                               15690227.50000
#                 10        16286104 |***                              16819116.00000
#                 17        17184957 |*****                            17640641.11765
#                 13        18083810 |****                             18447453.69231
#                  3        18982663 |*                                19436664.66667
#                  0        19881516 |                                              -
#                  2        20780369 |*                                21388421.00000
#                  0        21679222 |                                              -
#                  8        22578075 |**                               23078314.00000
#                  0        23476928 |                                              -
#                  4        24375781 |*                                24816407.00000
#                  2        25274634 |*                                25954886.50000
#                  9        26173487 |***                              26657799.00000
#                  6        27072340 |**                               27659824.50000
#                  8        27971193 |**                               28434293.87500
#                  5        28870046 |*                                29457437.20000
#                 10        29768899 |***                              30253689.70000
#                 11        30667752 |***                              31184366.54545
#                 17        31566605 |*****                            32077941.11765
#                 18        32465458 |******                           33017870.00000
#                 11        33364311 |***                              33721356.45455
#                 16        34263164 |*****                            34656470.50000
#                 11        35162017 |***                              35592544.63636
#                 23        36060870 |********                         36517603.04348
#                 38        36959723 |*************                    37501565.73684
#                 90        37858576 |*******************************  38334738.54444
#                 92        38757429 |******************************** 39190488.83696
#                 52        39656282 |******************               40075824.32692
#                 25        40555135 |********                         40891490.68000
#                 13        41453988 |****                             41896060.84615
#                  3        42352841 |*                                42709141.00000
#                  6        43251694 |**                               43549676.66667
#
#                 28           > 95% |*********                        46415870.64286
#
#        mean of 95%  34866362.41996
#          95th %ile        44150546
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                  prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_128nt   1   1        37969925          260        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_128nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  14806850                   27510991
#                        max  56192834                   47619957
#                       mean  35708784.35640             37099255.37308
#                     median  37767625                   37969925*
#                     stddev   6529511.68923              3681629.02868
#             standard error    384088.92290               228324.93971
#       99% confidence level    989413.06538               588165.04470
#                       skew        -1.33657                   -0.55426
#                   kurtosis         2.35164                    0.40267
#           time correlation     67104.48942                45421.02999
#
#               elapsed time        20.67629
#                   run time        10.37644
#          getnsecs overhead      1399
#
#          number of samples       289
#         number of outliers        29
#    number of final samples       260
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        27510991 |**                               27632091.50000
#                  2        27958884 |**                               28212043.00000
#                  3        28406777 |***                              28632161.33333
#                  5        28854670 |*****                            29138276.20000
#                  1        29302563 |*                                29493597.00000
#                  3        29750456 |***                              29954332.33333
#                  5        30198349 |*****                            30373920.20000
#                  5        30646242 |*****                            30919562.00000
#                  4        31094135 |****                             31283603.00000
#                  6        31542028 |******                           31773454.83333
#                  2        31989921 |**                               32301206.50000
#                  5        32437814 |*****                            32724368.00000
#                  4        32885707 |****                             33122434.50000
#                  4        33333600 |****                             33555960.75000
#                  4        33781493 |****                             33918836.75000
#                  5        34229386 |*****                            34379713.40000
#                  3        34677279 |***                              34905581.66667
#                  0        35125172 |                                              -
#                  4        35573065 |****                             35907793.00000
#                  6        36020958 |******                           36319503.33333
#                 13        36468851 |**************                   36723359.69231
#                 12        36916744 |*************                    37075013.75000
#                 24        37364637 |***************************      37604344.91667
#                 22        37812530 |*************************        38031143.54545
#                 28        38260423 |******************************** 38477833.89286
#                 23        38708316 |**************************       38874014.86957
#                 15        39156209 |*****************                39361923.20000
#                 15        39604102 |*****************                39780564.40000
#                  8        40051995 |*********                        40187882.50000
#                  7        40499888 |********                         40755320.14286
#                  3        40947781 |***                              41184035.66667
#                  4        41395674 |****                             41493586.50000
#
#                 13           > 95% |**************                   44286568.92308
#
#        mean of 95%  36720975.71255
#          95th %ile        41843538
#
# WARNINGS
#     Actual benchmark run time only accounts for 50.2% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
               prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_1r   1   1        38105125          564        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_1r -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -r 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15442351                   15442351
#                        max  62918906                   53138674
#                       mean  35184804.16637             35135630.22695
#                     median  38105125                   38105125*
#                     stddev   7461283.16950              7375702.61535
#             standard error    313898.54213               310573.10634
#       99% confidence level    808602.64453               800036.32192
#                       skew        -1.10752                   -1.22299
#                   kurtosis         1.08452                    0.89705
#           time correlation     40376.55769                40067.65190
#
#               elapsed time        20.01395
#                   run time        19.94312
#          getnsecs overhead      1399
#
#          number of samples       565
#         number of outliers         1
#    number of final samples       564
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        15442351 |*                                15991003.50000
#                  9        16280454 |**                               16893978.55556
#                 25        17118557 |********                         17534082.16000
#                  9        17956660 |**                               18351105.11111
#                  6        18794763 |*                                19364014.33333
#                  2        19632866 |*                                20303267.50000
#                  3        20470969 |*                                20910836.00000
#                  2        21309072 |*                                21879723.00000
#                  4        22147175 |*                                22509274.50000
#                  1        22985278 |*                                23167277.00000
#                  0        23823381 |                                              -
#                  4        24661484 |*                                25304383.50000
#                  1        25499587 |*                                26071686.00000
#                  3        26337690 |*                                26594654.66667
#                  3        27175793 |*                                27693058.33333
#                  7        28013896 |**                               28360036.42857
#                 11        28851999 |***                              29296624.09091
#                 11        29690102 |***                              30116972.18182
#                 14        30528205 |****                             30863009.00000
#                 19        31366308 |******                           31781346.84211
#                 20        32204411 |******                           32619887.75000
#                 11        33042514 |***                              33434428.45455
#                 10        33880617 |***                              34310073.30000
#                 16        34718720 |*****                            35067184.37500
#                 17        35556823 |*****                            35945953.70588
#                 21        36394926 |******                           36883883.57143
#                 44        37233029 |**************                   37834097.45455
#                 98        38071132 |******************************** 38465543.12245
#                 60        38909235 |*******************              39301791.15000
#                 52        39747338 |****************                 40120643.69231
#                 28        40585441 |*********                        40964767.03571
#                 18        41423544 |*****                            41755231.94444
#
#                 29           > 95% |*********                        45622336.37931
#
#        mean of 95%  34567191.94953
#          95th %ile        42261639
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_256n   1   1        38096825          557        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_256n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 256 -p 1024 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15491351                   15491351
#                        max  65499415                   51247668
#                       mean  35554523.85125             35500762.82585
#                     median  38113526                   38096825*
#                     stddev   7257366.33154              7151813.49029
#             standard error    307228.81526               303032.06305
#       99% confidence level    791421.42812               780610.59443
#                       skew        -1.19606                   -1.36153
#                   kurtosis         1.75616                    1.45823
#           time correlation     39352.22773                38984.40494
#
#               elapsed time        20.03837
#                   run time        19.90570
#          getnsecs overhead      1399
#
#          number of samples       558
#         number of outliers         1
#    number of final samples       557
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13        15491351 |****                             15907245.30769
#                 10        16368576 |***                              16724325.60000
#                 19        17245801 |******                           17674221.78947
#                  5        18123026 |*                                18511341.20000
#                  3        19000251 |*                                19612898.66667
#                  0        19877476 |                                              -
#                  1        20754701 |*                                21623471.00000
#                  0        21631926 |                                              -
#                  1        22509151 |*                                22708076.00000
#                  2        23386376 |*                                24055779.50000
#                  3        24263601 |*                                24854115.66667
#                  2        25140826 |*                                25682835.00000
#                  5        26018051 |*                                26477647.60000
#                  2        26895276 |*                                27235240.00000
#                  6        27772501 |**                               28136942.83333
#                  7        28649726 |**                               29352939.85714
#                 14        29526951 |*****                            30031999.28571
#                 16        30404176 |*****                            30737620.37500
#                 15        31281401 |*****                            31705304.73333
#                 20        32158626 |*******                          32450047.00000
#                 11        33035851 |****                             33432537.72727
#                 21        33913076 |*******                          34355922.90476
#                 12        34790301 |****                             35321149.66667
#                 21        35667526 |*******                          36119728.47619
#                 25        36544751 |*********                        37050514.20000
#                 66        37421976 |************************         37915931.00000
#                 88        38299201 |******************************** 38745948.06818
#                 56        39176426 |********************             39536523.10714
#                 47        40053651 |*****************                40398167.10638
#                 26        40930876 |*********                        41356270.88462
#                  9        41808101 |***                              42181838.88889
#                  3        42685326 |*                                43363276.00000
#
#                 28           > 95% |**********                       46022237.10714
#
#        mean of 95%  34943860.59546
#          95th %ile        43562543
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_32n   1   1        38479727          501        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_32n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15900153                   27097789
#                        max  54351279                   47356056
#                       mean  36227939.43169             37563726.34731
#                     median  38145725                   38479727*
#                     stddev   6282726.88850              3701944.39331
#             standard error    268140.24942               165390.67818
#       99% confidence level    690729.28252               426046.38700
#                       skew        -1.44330                   -0.60524
#                   kurtosis         2.58148                    0.27797
#           time correlation     34112.66771                23993.99757
#
#               elapsed time        20.01074
#                   run time        19.94116
#          getnsecs overhead      1399
#
#          number of samples       549
#         number of outliers        48
#    number of final samples       501
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        27097789 |*                                27099889.50000
#                  0        27580810 |                                              -
#                  4        28063831 |**                               28442768.75000
#                  4        28546852 |**                               28675444.75000
#                  5        29029873 |***                              29201576.60000
#                  7        29512894 |****                             29807812.85714
#                 11        29995915 |******                           30218227.00000
#                 11        30478936 |******                           30771256.00000
#                  5        30961957 |***                              31243523.20000
#                 10        31444978 |******                           31767364.80000
#                  8        31927999 |****                             32181193.75000
#                  5        32411020 |***                              32655327.60000
#                  9        32894041 |*****                            33099220.11111
#                  6        33377062 |***                              33680377.83333
#                  8        33860083 |****                             34137675.25000
#                 10        34343104 |******                           34541073.50000
#                  9        34826125 |*****                            35091038.00000
#                  7        35309146 |****                             35487745.57143
#                  8        35792167 |****                             36049893.62500
#                 15        36275188 |*********                        36513340.40000
#                 23        36758209 |*************                    36981556.47826
#                 21        37241230 |************                     37453571.04762
#                 47        37724251 |****************************     37987657.04255
#                 53        38207272 |******************************** 38496058.94340
#                 48        38690293 |****************************     38941615.72917
#                 44        39173314 |**************************       39417934.34091
#                 24        39656335 |**************                   39872568.70833
#                 21        40139356 |************                     40341780.38095
#                 17        40622377 |**********                       40884381.82353
#                 13        41105398 |*******                          41345174.76923
#                 16        41588419 |*********                        41816675.12500
#                  4        42071440 |**                               42165588.75000
#
#                 26           > 95% |***************                  44500050.34615
#
#        mean of 95%  37184053.87579
#          95th %ile        42554440
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_32nt   1   1        37534124          304        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_32nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15565552                   15565552
#                        max  55113181                   55113181
#                       mean  34155963.64803             34155963.64803
#                     median  37534124                   37534124*
#                     stddev   8196581.93203              8196581.93203
#             standard error    470106.21479               470106.21479
#       99% confidence level   1210993.60930              1210993.60930
#                       skew        -0.92184                   -0.92184
#                   kurtosis         0.13802                    0.13802
#           time correlation     85811.35329                85811.35329
#
#               elapsed time        20.70286
#                   run time        10.43213
#          getnsecs overhead      1399
#
#          number of samples       304
#         number of outliers         0
#    number of final samples       304
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10        15565552 |*******                          15885212.80000
#                 14        16465090 |**********                       16927099.28571
#                 12        17364628 |********                         17837067.66667
#                  3        18264166 |**                               18668228.33333
#                  1        19163704 |*                                19771766.00000
#                  0        20063242 |                                              -
#                  3        20962780 |**                               21504171.33333
#                  0        21862318 |                                              -
#                  3        22761856 |**                               23342377.33333
#                  0        23661394 |                                              -
#                  2        24560932 |*                                25135033.00000
#                  0        25460470 |                                              -
#                  4        26360008 |**                               27001264.25000
#                  7        27259546 |*****                            27809563.14286
#                  3        28159084 |**                               28582761.33333
#                  4        29058622 |**                               29334421.75000
#                 12        29958160 |********                         30485317.25000
#                  7        30857698 |*****                            31314189.28571
#                 14        31757236 |**********                       32298106.71429
#                 10        32656774 |*******                          33023719.00000
#                  8        33556312 |*****                            34130387.75000
#                  6        34455850 |****                             34748781.16667
#                 10        35355388 |*******                          35808398.00000
#                 15        36254926 |**********                       36710394.46667
#                 27        37154464 |*******************              37707124.22222
#                 44        38054002 |******************************** 38465124.45455
#                 29        38953540 |*********************            39405391.93103
#                 18        39853078 |*************                    40310960.66667
#                 11        40752616 |********                         41148680.72727
#                  6        41652154 |****                             42147722.16667
#                  3        42551692 |**                               42852041.00000
#                  2        43451230 |*                                43902644.50000
#
#                 16           > 95% |***********                      46793016.43750
#
#        mean of 95%  33453905.15972
#          95th %ile        44350746
#
# WARNINGS
#     Actual benchmark run time only accounts for 50.4% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_512n   1   1        38015226          576        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_512n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 512 -p 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15280351                   15280351
#                        max  52612773                   52612773
#                       mean  34395853.71528             34395853.71528
#                     median  38015226                   38015226*
#                     stddev   7884008.45100              7884008.45100
#             standard error    328500.35213               328500.35213
#       99% confidence level    846216.90707               846216.90707
#                       skew        -1.14891                   -1.14891
#                   kurtosis         0.23409                    0.23409
#           time correlation     42485.44101                42485.44101
#
#               elapsed time        20.02441
#                   run time        19.86543
#          getnsecs overhead      1399
#
#          number of samples       576
#         number of outliers         0
#    number of final samples       576
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4        15280351 |*                                15858178.00000
#                 21        16121667 |*******                          16604498.14286
#                 23        16962983 |********                         17413401.43478
#                 18        17804299 |******                           18208955.00000
#                 10        18645615 |***                              19049483.10000
#                  0        19486931 |                                              -
#                  0        20328247 |                                              -
#                  1        21169563 |*                                21458672.00000
#                  2        22010879 |*                                22541474.50000
#                  3        22852195 |*                                23104742.66667
#                  5        23693511 |*                                24240300.20000
#                  3        24534827 |*                                24845882.33333
#                  5        25376143 |*                                25716105.20000
#                  3        26217459 |*                                26606054.33333
#                  1        27058775 |*                                27715791.00000
#                 10        27900091 |***                              28227703.20000
#                 11        28741407 |****                             29241687.54545
#                 10        29582723 |***                              30049489.40000
#                 15        30424039 |*****                            30959708.93333
#                 12        31265355 |****                             31705687.91667
#                 23        32106671 |********                         32504954.91304
#                 11        32947987 |****                             33388182.72727
#                 14        33789303 |*****                            34187848.42857
#                 10        34630619 |***                              34939295.20000
#                 12        35471935 |****                             35898893.25000
#                 17        36313251 |******                           36844839.17647
#                 43        37154567 |***************                  37640054.27907
#                 88        37995883 |******************************** 38412103.80682
#                 77        38837199 |****************************     39244157.87013
#                 51        39678515 |******************               40056392.84314
#                 26        40519831 |*********                        40957011.73077
#                 18        41361147 |******                           41671270.61111
#
#                 29           > 95% |**********                       44332132.20690
#
#        mean of 95%  33869067.46984
#          95th %ile        42202439
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_64n   1   1        37723024          572        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_64n -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15523652                   15523652
#                        max  56692386                   56692386
#                       mean  34765716.89685             34765716.89685
#                     median  37723024                   37723024*
#                     stddev   7544770.80055              7544770.80055
#             standard error    315462.71496               315462.71496
#       99% confidence level    812631.95375               812631.95375
#                       skew        -1.15797                   -1.15797
#                   kurtosis         0.96962                    0.96962
#           time correlation     40195.27022                40195.27022
#
#               elapsed time        20.01850
#                   run time        19.94348
#          getnsecs overhead      1399
#
#          number of samples       572
#         number of outliers         0
#    number of final samples       572
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4        15523652 |*                                15964678.25000
#                 26        16343758 |**********                       16798348.23077
#                 22        17163864 |*********                        17508535.45455
#                 10        17983970 |****                             18308420.80000
#                  1        18804076 |*                                19262364.00000
#                  2        19624182 |*                                20146266.50000
#                  0        20444288 |                                              -
#                  1        21264394 |*                                21365271.00000
#                  1        22084500 |*                                22532575.00000
#                  1        22904606 |*                                23371678.00000
#                  4        23724712 |*                                24185930.00000
#                  1        24544818 |*                                24814682.00000
#                  2        25364924 |*                                25597834.50000
#                  6        26185030 |**                               26718255.00000
#                  6        27005136 |**                               27306107.00000
#                  4        27825242 |*                                28275068.25000
#                 10        28645348 |****                             29018765.80000
#                  8        29465454 |***                              30003636.62500
#                  8        30285560 |***                              30783326.75000
#                 14        31105666 |*****                            31566104.07143
#                 15        31925772 |******                           32208866.40000
#                 21        32745878 |********                         33014080.38095
#                 20        33565984 |********                         33912841.80000
#                 20        34386090 |********                         34764929.55000
#                 17        35206196 |*******                          35652746.82353
#                 23        36026302 |*********                        36489568.30435
#                 37        36846408 |***************                  37318155.37838
#                 70        37666514 |*****************************    38040876.77143
#                 76        38486620 |******************************** 38909262.32895
#                 64        39306726 |**************************       39718507.39062
#                 30        40126832 |************                     40542553.50000
#                 19        40946938 |********                         41290083.21053
#
#                 29           > 95% |************                     45621308.75862
#
#        mean of 95%  34185952.32228
#          95th %ile        41767038
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_64nt   1   1        37647124          295        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_64nt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  15448651                   15448651
#                        max  63354958                   51474269
#                       mean  34930090.73311             34833735.25085
#                     median  37666524                   37647124*
#                     stddev   7805766.63873              7640661.88109
#             standard error    453700.97017               444856.53365
#       99% confidence level   1168733.69916              1145950.43068
#                       skew        -0.97974                   -1.18548
#                   kurtosis         1.08444                    0.75196
#           time correlation     81004.01602                79864.14920
#
#               elapsed time        20.70047
#                   run time        10.40308
#          getnsecs overhead      1399
#
#          number of samples       296
#         number of outliers         1
#    number of final samples       295
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8        15448651 |*****                            16008990.87500
#                  7        16327298 |****                             16833570.42857
#                 11        17205945 |*******                          17726522.63636
#                  6        18084592 |****                             18435011.16667
#                  3        18963239 |**                               19376731.00000
#                  0        19841886 |                                              -
#                  0        20720533 |                                              -
#                  0        21599180 |                                              -
#                  0        22477827 |                                              -
#                  1        23356474 |*                                24234380.00000
#                  1        24235121 |*                                24459881.00000
#                  1        25113768 |*                                25978286.00000
#                  1        25992415 |*                                26850588.00000
#                  5        26871062 |***                              27340570.40000
#                  4        27749709 |**                               28216518.00000
#                  4        28628356 |**                               28852245.75000
#                  4        29507003 |**                               29970648.75000
#                 10        30385650 |*******                          30940312.20000
#                 10        31264297 |*******                          31542384.50000
#                  8        32142944 |*****                            32658083.00000
#                  6        33021591 |****                             33317593.50000
#                  8        33900238 |*****                            34215037.87500
#                  8        34778885 |*****                            35240878.75000
#                 12        35657532 |********                         36082693.91667
#                 19        36536179 |*************                    37027990.36842
#                 45        37414826 |******************************** 37866382.57778
#                 38        38293473 |***************************      38774751.60526
#                 25        39172120 |*****************                39694926.88000
#                 21        40050767 |**************                   40547143.00000
#                  8        40929414 |*****                            41308098.62500
#                  5        41808061 |***                              42162218.60000
#                  1        42686708 |*                                42903241.00000
#
#                 15           > 95% |**********                       46419372.60000
#
#        mean of 95%  34213076.10714
#          95th %ile        43565343
#
# WARNINGS
#     Actual benchmark run time only accounts for 50.3% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t100k   1   1          353952        17731        0        1   102400
# bin/../bin-riscv64/pread -N pread_t100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    339352                     346752
#                        max   3270211                     362752
#                       mean    370647.45369               354750.34048
#                     median    355052                     353952*
#                     stddev     51199.50707                 2674.37002
#             standard error       334.88059                   20.08422
#       99% confidence level       862.65239                   51.73694
#                       skew        15.05741                    0.80344
#                   kurtosis       533.64187                    0.03879
#           time correlation         3.71590                    0.49554
#
#               elapsed time        20.00346
#                   run time        17.20882
#          getnsecs overhead      1399
#
#          number of samples     23375
#         number of outliers      5644
#    number of final samples     17731
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          346752 |*                                  346864.50000
#                  6          347168 |*                                  347335.33333
#                 15          347584 |*                                  347855.33333
#                 13          348000 |*                                  348190.46154
#                 14          348416 |*                                  348569.85714
#                 20          348832 |*                                  349054.50000
#                 21          349248 |*                                  349454.38095
#                 19          349664 |*                                  349899.36842
#                 47          350080 |*                                  350258.38298
#                 90          350496 |*                                  350727.55556
#                296          350912 |****                               351179.19595
#                585          351328 |*********                          351551.65812
#               1263          351744 |*********************              351943.48852
#               1257          352160 |*********************              352359.59745
#               1105          352576 |******************                 352788.06335
#               1595          352992 |**************************         353233.84953
#               1908          353408 |********************************   353625.45388
#               1791          353824 |******************************     354012.05025
#               1038          354240 |*****************                  354438.31985
#                546          354656 |*********                          354875.44322
#                568          355072 |*********                          355271.89437
#                557          355488 |*********                          355696.44345
#                455          355904 |*******                            356132.34505
#                404          356320 |******                             356517.11386
#                444          356736 |*******                            356907.40541
#                474          357152 |*******                            357343.35232
#                383          357568 |******                             357782.41775
#                400          357984 |******                             358176.12750
#                508          358400 |********                           358596.98425
#                435          358816 |*******                            359015.21839
#                331          359232 |*****                              359421.48943
#                244          359648 |****                               359798.11066
#
#                887           > 95% |**************                     361089.93799
#
#        mean of 95%    354416.49917
#          95th %ile          360052
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t10k   1   1           53094        18403        0       16    10240
# bin/../bin-riscv64/pread -N pread_t10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     51030                      51030
#                        max    660827                      62532
#                       mean     55879.79874                54300.42917
#                     median     53146                      53094*
#                     stddev     10922.02519                 2744.32776
#             standard error        77.91316                   20.22980
#       99% confidence level       200.70431                   52.11197
#                       skew        17.33541                    1.50467
#                   kurtosis       627.60115                    0.76763
#           time correlation         0.81318                    0.42215
#
#               elapsed time        20.00345
#                   run time        18.10140
#          getnsecs overhead      1399
#
#          number of samples     19651
#         number of outliers      1248
#    number of final samples     18403
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8           51030 |*                                   51197.87500
#                 20           51324 |*                                   51452.90000
#                 62           51618 |*                                   51844.88710
#                361           51912 |**                                  52074.93352
#               2222           52206 |***************                     52400.86769
#               4681           52500 |********************************    52596.37129
#               1744           52794 |***********                         52984.74885
#               2890           53088 |*******************                 53213.73737
#                898           53382 |******                              53513.95546
#                726           53676 |****                                53823.41598
#                468           53970 |***                                 54095.49786
#                169           54264 |*                                   54398.26036
#                108           54558 |*                                   54707.00926
#                 71           54852 |*                                   54999.40845
#                 66           55146 |*                                   55269.90909
#                 36           55440 |*                                   55550.69444
#                 46           55734 |*                                   55878.86957
#                 33           56028 |*                                   56186.24242
#                 24           56322 |*                                   56435.29167
#                 29           56616 |*                                   56786.79310
#                 39           56910 |*                                   57076.02564
#                117           57204 |*                                   57375.68376
#                172           57498 |*                                   57657.58140
#                288           57792 |*                                   57930.33681
#                281           58086 |*                                   58235.30605
#                293           58380 |**                                  58520.80205
#                320           58674 |**                                  58814.29688
#                334           58968 |**                                  59108.57784
#                268           59262 |*                                   59403.53358
#                266           59556 |*                                   59700.08271
#                219           59850 |*                                   59992.42466
#                223           60144 |*                                   60278.25112
#
#                921           > 95% |******                              61329.94354
#
#        mean of 95%     53930.09495
#          95th %ile           60420
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
          prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t1k   1   1           25581        18156        0       35     1024
# bin/../bin-riscv64/pread -N pread_t1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     24606                      24606
#                        max    203961                      31553
#                       mean     27106.83473                26443.21591
#                     median     25622                      25581*
#                     stddev      4771.91683                 1704.54421
#             standard error        34.46079                   12.65022
#       99% confidence level        88.77098                   32.58697
#                       skew        12.60197                    1.41358
#                   kurtosis       271.23447                    0.49427
#           time correlation         0.42905                    0.26835
#
#               elapsed time        20.00449
#                   run time        18.17787
#          getnsecs overhead      1399
#
#          number of samples     19175
#         number of outliers      1019
#    number of final samples     18156
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           24606 |*                                   24683.66667
#                 31           24780 |*                                   24908.41935
#                199           24954 |*                                   25063.00503
#               2152           25128 |*************                       25234.81134
#               5091           25302 |********************************    25385.95659
#               2465           25476 |***************                     25554.85314
#               1942           25650 |************                        25724.62564
#                731           25824 |****                                25898.50479
#                454           25998 |**                                  26079.17841
#                305           26172 |*                                   26252.29180
#                192           26346 |*                                   26424.87500
#                152           26520 |*                                   26604.46711
#                114           26694 |*                                   26772.28947
#                 68           26868 |*                                   26954.54412
#                 61           27042 |*                                   27122.91803
#                 59           27216 |*                                   27302.06780
#                 46           27390 |*                                   27477.93478
#                 50           27564 |*                                   27647.04000
#                 50           27738 |*                                   27827.92000
#                 56           27912 |*                                   28015.64286
#                 87           28086 |*                                   28171.43678
#                188           28260 |*                                   28355.89362
#                236           28434 |*                                   28529.11017
#                340           28608 |**                                  28701.96765
#                370           28782 |**                                  28866.25135
#                332           28956 |**                                  29045.09036
#                301           29130 |*                                   29208.68439
#                289           29304 |*                                   29387.54325
#                273           29478 |*                                   29561.46154
#                222           29652 |*                                   29739.93694
#                205           29826 |*                                   29906.99024
#                184           30000 |*                                   30080.52174
#
#                908           > 95% |*****                               30728.12004
#
#        mean of 95%     26217.64234
#          95th %ile           30156
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z100k   1   1          247701        21306        0        2   102400
# bin/../bin-riscv64/pread -N pread_z100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    235601                     235601
#                        max   4311012                     289801
#                       mean    258074.76414               253024.89519
#                     median    247934                     247701*
#                     stddev     45434.47250                12259.14038
#             standard error       302.21224                   83.98642
#       99% confidence level       778.49874                  216.34901
#                       skew        40.60155                    1.78252
#                   kurtosis      3078.78998                    1.59208
#           time correlation         2.57755                    1.52743
#
#               elapsed time        20.00382
#                   run time        17.28766
#          getnsecs overhead      1399
#
#          number of samples     22602
#         number of outliers      1296
#    number of final samples     21306
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          235601 |*                                  236176.00000
#                 17          237068 |*                                  238071.52941
#                 21          238535 |*                                  239229.57143
#                 37          240002 |*                                  240793.75676
#                 41          241469 |*                                  242247.63415
#                237          242936 |*                                  244067.13502
#               3548          244403 |*******************                245329.38839
#               5785          245870 |********************************   246599.06361
#               3287          247337 |******************                 247999.06024
#               2273          248804 |************                       249554.85306
#               1285          250271 |*******                            250902.72451
#                466          251738 |**                                 252415.43133
#                332          253205 |*                                  253870.86747
#                159          254672 |*                                  255364.31447
#                104          256139 |*                                  256919.05769
#                 91          257606 |*                                  258327.50549
#                 73          259073 |*                                  259690.93151
#                 62          260540 |*                                  261283.85484
#                 42          262007 |*                                  262680.14286
#                 31          263474 |*                                  264190.45161
#                 35          264941 |*                                  265710.14286
#                 20          266408 |*                                  267301.15000
#                 24          267875 |*                                  268528.91667
#                 26          269342 |*                                  269992.11538
#                 23          270809 |*                                  271719.91304
#                 86          272276 |*                                  273304.16279
#                292          273743 |*                                  274579.02397
#                375          275210 |**                                 275935.81333
#                376          276677 |**                                 277374.83511
#                412          278144 |**                                 278870.68447
#                360          279611 |*                                  280360.25833
#                316          281078 |*                                  281741.36076
#
#               1066           > 95% |*****                              285775.46811
#
#        mean of 95%    251299.98854
#          95th %ile          282534
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z10k   1   1           39170        18069        0       22    10240
# bin/../bin-riscv64/pread -N pread_z10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     37504                      37504
#                        max    328502                      47657
#                       mean     41682.24225                40464.50816
#                     median     39244                      39170*
#                     stddev      7600.97005                 2397.77605
#             standard error        54.76266                   17.83781
#       99% confidence level       141.06861                   45.95020
#                       skew        10.04817                    1.28555
#                   kurtosis       184.13416                    0.30401
#           time correlation         0.69415                    0.39737
#
#               elapsed time        20.00417
#                   run time        18.05845
#          getnsecs overhead      1399
#
#          number of samples     19265
#         number of outliers      1196
#    number of final samples     18069
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8           37504 |*                                   37653.37500
#                 19           37756 |*                                   37846.94737
#                 30           38008 |*                                   38155.00000
#                378           38260 |***                                 38468.40212
#               3378           38512 |********************************    38650.90853
#               3073           38764 |*****************************       38903.63554
#               2871           39016 |***************************         39115.41414
#               1213           39268 |***********                         39382.32811
#                627           39520 |*****                               39628.66188
#                397           39772 |***                                 39893.03526
#                341           40024 |***                                 40145.75367
#                290           40276 |**                                  40399.59655
#                283           40528 |**                                  40654.65371
#                207           40780 |*                                   40911.14976
#                159           41032 |*                                   41159.32704
#                178           41284 |*                                   41400.64607
#                152           41536 |*                                   41655.86842
#                139           41788 |*                                   41908.99281
#                146           42040 |*                                   42170.83562
#                151           42292 |*                                   42418.94702
#                181           42544 |*                                   42674.13260
#                229           42796 |**                                  42924.16157
#                265           43048 |**                                  43172.96981
#                305           43300 |**                                  43419.11148
#                309           43552 |**                                  43671.93851
#                371           43804 |***                                 43929.02965
#                294           44056 |**                                  44182.70068
#                298           44308 |**                                  44430.75168
#                264           44560 |**                                  44681.35606
#                227           44812 |**                                  44931.83700
#                207           45064 |*                                   45199.88406
#                175           45316 |*                                   45434.30857
#
#                904           > 95% |********                            46463.35841
#
#        mean of 95%     40148.57687
#          95th %ile           45548
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
          prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z1k   1   1           83900        18333        0       10     1024
# bin/../bin-riscv64/pread -N pread_z1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     81637                      81637
#                        max    370021                      99970
#                       mean     87419.63189                86224.20739
#                     median     83973                      83900*
#                     stddev     10237.59699                 4586.03208
#             standard error        74.15045                   33.87040
#       99% confidence level       191.01156                   87.25015
#                       skew        11.91146                    1.30418
#                   kurtosis       230.12139                    0.25283
#           time correlation         1.02597                    0.74016
#
#               elapsed time        20.00405
#                   run time        18.07716
#          getnsecs overhead      1399
#
#          number of samples     19062
#         number of outliers       729
#    number of final samples     18333
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 56           81637 |*                                   81957.48214
#                716           82082 |*******                             82364.31285
#               2244           82527 |***********************             82765.49198
#               2966           82972 |*******************************     83201.39717
#               2998           83417 |********************************    83624.16578
#               1816           83862 |*******************                 84062.38271
#               1152           84307 |************                        84509.28646
#                619           84752 |******                              84950.39580
#                373           85197 |***                                 85392.13673
#                215           85642 |**                                  85842.37674
#                134           86087 |*                                   86297.31343
#                136           86532 |*                                   86756.42647
#                150           86977 |*                                   87198.79333
#                155           87422 |*                                   87657.28387
#                133           87867 |*                                   88093.41353
#                119           88312 |*                                   88515.93277
#                 84           88757 |*                                   88988.11905
#                 58           89202 |*                                   89431.34483
#                 43           89647 |*                                   89872.41860
#                 41           90092 |*                                   90299.85366
#                 92           90537 |*                                   90794.43478
#                185           90982 |*                                   91213.88649
#                276           91427 |**                                  91653.19565
#                380           91872 |****                                92096.69211
#                359           92317 |***                                 92533.80501
#                320           92762 |***                                 92998.55000
#                351           93207 |***                                 93423.94302
#                292           93652 |***                                 93867.85274
#                285           94097 |***                                 94335.99649
#                245           94542 |**                                  94762.11837
#                224           94987 |**                                  95214.22768
#                199           95432 |**                                  95635.17588
#
#                917           > 95% |*********                           97497.18212
#
#        mean of 95%     85630.65446
#          95th %ile           95873
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
             prc thr      nsecs/call      samples   errors cnt/samp     size
pread_zw100k   1   1          249734        16958        0        2   102400
# bin/../bin-riscv64/pread -N pread_zw100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    238668                     245201
#                        max   2677408                     255201
#                       mean    261141.80052               250194.28966
#                     median    250268                     249734*
#                     stddev     38539.02720                 1673.05182
#             standard error       255.71367                   12.84760
#       99% confidence level       658.71840                   33.09542
#                       skew        18.28299                    0.88426
#                   kurtosis       773.73243                    0.20456
#           time correlation         2.62018                    0.32004
#
#               elapsed time        20.00467
#                   run time        17.55024
#          getnsecs overhead      1399
#
#          number of samples     22714
#         number of outliers      5756
#    number of final samples     16958
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          245201 |*                                  245321.00000
#                  8          245463 |*                                  245555.50000
#                 13          245725 |*                                  245806.23077
#                  9          245987 |*                                  246123.22222
#                 14          246249 |*                                  246358.21429
#                 26          246511 |*                                  246692.00000
#                 20          246773 |*                                  246927.60000
#                 51          247035 |*                                  247188.60784
#                 95          247297 |*                                  247443.40000
#                149          247559 |**                                 247698.36913
#                276          247821 |****                               247959.34420
#                604          248083 |*********                          248240.48179
#                776          248345 |************                       248486.21005
#               1168          248607 |******************                 248753.33219
#               1187          248869 |*******************                249010.11542
#               1661          249131 |**************************         249249.88320
#               1987          249393 |********************************   249519.31807
#               1578          249655 |*************************          249783.16730
#               1231          249917 |*******************                250042.81478
#                991          250179 |***************                    250312.26942
#                612          250441 |*********                          250574.99673
#                319          250703 |*****                              250827.35737
#                284          250965 |****                               251075.66549
#                255          251227 |****                               251356.05882
#                264          251489 |****                               251617.03409
#                324          251751 |*****                              251885.66667
#                321          252013 |*****                              252153.57632
#                435          252275 |*******                            252416.46437
#                362          252537 |*****                              252670.21547
#                424          252799 |******                             252912.69104
#                395          253061 |******                             253184.05570
#                266          253323 |****                               253445.74060
#
#                848           > 95% |*************                      254198.47406
#
#        mean of 95%    249983.51695
#          95th %ile          253568
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_128   1   1         1545567           74        0      128 
# bin/../bin-riscv64/pthread_create -N pthread_128 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 128 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1306535                    1306535
#                        max   2242562                    1965145
#                       mean   1577130.94737              1560102.71622
#                     median   1557996                    1545567*
#                     stddev    195054.04783               166987.09425
#             standard error     22374.23376                19411.85541
#       99% confidence level     57636.02618                50004.93953
#                       skew         1.08932                    0.60519
#                   kurtosis         1.16038                   -0.51575
#           time correlation      8285.59029                 7556.51070
#
#               elapsed time        25.37690
#                   run time        15.34244
#          getnsecs overhead      1399
#
#          number of samples        76
#         number of outliers         2
#    number of final samples        74
#             ops per sample       128.00000 (-B 128)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         1306535 |*******                           1311058.00000
#                  3         1324398 |**********                        1337102.66667
#                  2         1342261 |*******                           1352785.00000
#                  2         1360124 |*******                           1366187.00000
#                  3         1377987 |**********                        1390370.66667
#                  6         1395850 |*********************             1407770.00000
#                  2         1413713 |*******                           1423180.50000
#                  2         1431576 |*******                           1440939.00000
#                  5         1449439 |*****************                 1457682.00000
#                  1         1467302 |***                               1483512.00000
#                  4         1485165 |**************                    1492837.75000
#                  4         1503028 |**************                    1517447.00000
#                  1         1520891 |***                               1536309.00000
#                  1         1538754 |***                               1545567.00000
#                  9         1556617 |********************************  1565189.66667
#                  2         1574480 |*******                           1581698.50000
#                  2         1592343 |*******                           1609259.00000
#                  2         1610206 |*******                           1619538.50000
#                  1         1628069 |***                               1638894.00000
#                  0         1645932 |                                              -
#                  1         1663795 |***                               1678731.00000
#                  2         1681658 |*******                           1698240.50000
#                  3         1699521 |**********                        1710937.66667
#                  3         1717384 |**********                        1730252.33333
#                  2         1735247 |*******                           1740997.50000
#                  0         1753110 |                                              -
#                  0         1770973 |                                              -
#                  1         1788836 |***                               1794806.00000
#                  0         1806699 |                                              -
#                  0         1824562 |                                              -
#                  2         1842425 |*******                           1857060.00000
#                  2         1860288 |*******                           1867841.50000
#
#                  4           > 95% |**************                    1915836.50000
#
#        mean of 95%   1539775.07143
#          95th %ile         1878127
#
# WARNINGS
#     Too few samples, 76 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 60.5% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_256   1   1         1619807           39        0      256 
# bin/../bin-riscv64/pthread_create -N pthread_256 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1437023                    1437023
#                        max   1954158                    1954158
#                       mean   1651747.92308              1651747.92308
#                     median   1619807                    1619807*
#                     stddev    126765.41486               126765.41486
#             standard error     20298.71185                20298.71185
#       99% confidence level     52289.48172                52289.48172
#                       skew         0.41293                    0.41293
#                   kurtosis        -0.63467                   -0.63467
#           time correlation     10910.23057                10910.23057
#
#               elapsed time        25.56537
#                   run time        16.49111
#          getnsecs overhead      1399
#
#          number of samples        39
#         number of outliers         0
#    number of final samples        39
#             ops per sample       256.00000 (-B 256)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         1437023 |*********************             1443432.50000
#                  0         1451143 |                                              -
#                  1         1465263 |**********                        1469683.00000
#                  0         1479383 |                                              -
#                  1         1493503 |**********                        1500372.00000
#                  1         1507623 |**********                        1518481.00000
#                  2         1521743 |*********************             1527190.00000
#                  1         1535863 |**********                        1546622.00000
#                  3         1549983 |********************************  1557150.33333
#                  1         1564103 |**********                        1568476.00000
#                  3         1578223 |********************************  1585902.00000
#                  3         1592343 |********************************  1598787.00000
#                  2         1606463 |*********************             1617738.50000
#                  1         1620583 |**********                        1632304.00000
#                  1         1634703 |**********                        1646971.00000
#                  1         1648823 |**********                        1654510.00000
#                  0         1662943 |                                              -
#                  2         1677063 |*********************             1679466.00000
#                  0         1691183 |                                              -
#                  1         1705303 |**********                        1708227.00000
#                  2         1719423 |*********************             1726761.50000
#                  2         1733543 |*********************             1741408.50000
#                  0         1747663 |                                              -
#                  2         1761783 |*********************             1771210.50000
#                  1         1775903 |**********                        1777721.00000
#                  1         1790023 |**********                        1802215.00000
#                  0         1804143 |                                              -
#                  1         1818263 |**********                        1820415.00000
#                  1         1832383 |**********                        1837136.00000
#                  1         1846503 |**********                        1852101.00000
#
#                  2           > 95% |*********************             1921501.00000
#
#        mean of 95%   1637166.67568
#          95th %ile         1888844
#
# WARNINGS
#     Too few samples, 39 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 64.5% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
           prc thr      nsecs/call      samples   errors cnt/samp 
pthread_32   1   1         1396457          211        0       32 
# bin/../bin-riscv64/pthread_create -N pthread_32 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 32 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1016456                    1016456
#                        max   3391737                    1903533
#                       mean   1551965.35772              1426709.09953
#                     median   1422544                    1396457*
#                     stddev    360039.16738               159961.06988
#             standard error     22955.25889                11012.17419
#       99% confidence level     59132.74690                28367.36072
#                       skew         1.91813                    0.93169
#                   kurtosis         3.99011                    0.86155
#           time correlation      4230.96101                 2431.01765
#
#               elapsed time        20.08744
#                   run time        12.21742
#          getnsecs overhead      1399
#
#          number of samples       246
#         number of outliers        35
#    number of final samples       211
#             ops per sample        32.00000 (-B 32)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         1016456 |**                                1021892.00000
#                  0         1040737 |                                              -
#                  0         1065018 |                                              -
#                  0         1089299 |                                              -
#                  0         1113580 |                                              -
#                  0         1137861 |                                              -
#                  0         1162142 |                                              -
#                  5         1186423 |*******                           1198888.20000
#                  6         1210704 |********                          1223847.50000
#                  4         1234985 |*****                             1255090.25000
#                 10         1259266 |**************                    1269708.40000
#                 13         1283547 |******************                1293819.46154
#                 22         1307828 |********************************  1319268.59091
#                 20         1332109 |*****************************     1345424.30000
#                 16         1356390 |***********************           1366337.87500
#                 17         1380671 |************************          1394781.52941
#                 15         1404952 |*********************             1421689.33333
#                 11         1429233 |****************                  1441704.63636
#                  9         1453514 |*************                     1461718.55556
#                 12         1477795 |*****************                 1488705.83333
#                  7         1502076 |**********                        1515000.42857
#                  5         1526357 |*******                           1538415.60000
#                  5         1550638 |*******                           1557194.00000
#                  4         1574919 |*****                             1588415.75000
#                  2         1599200 |**                                1609571.50000
#                  1         1623481 |*                                 1627092.00000
#                  6         1647762 |********                          1663067.50000
#                  1         1672043 |*                                 1690967.00000
#                  2         1696324 |**                                1714245.50000
#                  0         1720605 |                                              -
#                  3         1744886 |****                              1758606.66667
#                  2         1769167 |**                                1775869.00000
#
#                 11           > 95% |****************                  1836338.81818
#
#        mean of 95%   1404179.46500
#          95th %ile         1793424
#
# WARNINGS
#     Actual benchmark run time only accounts for 60.8% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_512   1   1         1721860           19        0      512 
# bin/../bin-riscv64/pthread_create -N pthread_512 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1587016                    1587016
#                        max   1916800                    1916800
#                       mean   1750234.94737              1750234.94737
#                     median   1721860                    1721860*
#                     stddev     97097.57924                97097.57924
#             standard error     22275.71240                22275.71240
#       99% confidence level     57382.23514                57382.23514
#                       skew         0.21881                    0.21881
#                   kurtosis        -0.96287                   -0.96287
#           time correlation     16933.92105                16933.92105
#
#               elapsed time        26.03416
#                   run time        17.02631
#          getnsecs overhead      1399
#
#          number of samples        19
#         number of outliers         0
#    number of final samples        19
#             ops per sample       512.00000 (-B 512)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1587016 |****************                  1587016.00000
#                  1         1597322 |****************                  1603035.00000
#                  0         1607628 |                                              -
#                  0         1617934 |                                              -
#                  0         1628240 |                                              -
#                  0         1638546 |                                              -
#                  1         1648852 |****************                  1656131.00000
#                  0         1659158 |                                              -
#                  0         1669464 |                                              -
#                  2         1679770 |********************************  1685827.50000
#                  2         1690076 |********************************  1693454.50000
#                  1         1700382 |****************                  1702166.00000
#                  1         1710688 |****************                  1713413.00000
#                  1         1720994 |****************                  1721860.00000
#                  0         1731300 |                                              -
#                  0         1741606 |                                              -
#                  0         1751912 |                                              -
#                  2         1762218 |********************************  1764995.00000
#                  1         1772524 |****************                  1778089.00000
#                  0         1782830 |                                              -
#                  0         1793136 |                                              -
#                  1         1803442 |****************                  1806961.00000
#                  0         1813748 |                                              -
#                  0         1824054 |                                              -
#                  1         1834360 |****************                  1835222.00000
#                  1         1844666 |****************                  1848597.00000
#                  0         1854972 |                                              -
#                  0         1865278 |                                              -
#                  1         1875584 |****************                  1884469.00000
#                  0         1885890 |                                              -
#                  0         1896196 |                                              -
#                  1         1906502 |****************                  1912151.00000
#
#                  1           > 95% |****************                  1916800.00000
#
#        mean of 95%   1740981.33333
#          95th %ile         1916800
#
# WARNINGS
#     Too few samples, 19 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 65.4% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
           prc thr      nsecs/call      samples   errors cnt/samp 
pthread_64   1   1         1550835          144        0       64 
# bin/../bin-riscv64/pthread_create -N pthread_64 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 64 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1118336                    1118336
#                        max   2695415                    2400580
#                       mean   1634802.58219              1620105.17361
#                     median   1554643                    1550835*
#                     stddev    297794.44587               272107.46236
#             standard error     24645.64370                22675.62186
#       99% confidence level     63487.17817                58412.40192
#                       skew         0.91097                    0.55035
#                   kurtosis         0.89527                   -0.43182
#           time correlation      6671.47349                 6332.40230
#
#               elapsed time        25.21935
#                   run time        15.27580
#          getnsecs overhead      1399
#
#          number of samples       146
#         number of outliers         2
#    number of final samples       144
#             ops per sample        64.00000 (-B 64)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         1118336 |*****                             1128251.00000
#                  2         1148655 |*****                             1164645.00000
#                  1         1178974 |**                                1187541.00000
#                  2         1209293 |*****                             1215069.00000
#                  2         1239612 |*****                             1267330.50000
#                  4         1269931 |***********                       1282493.75000
#                  5         1300250 |**************                    1319384.40000
#                  6         1330569 |*****************                 1347312.16667
#                  3         1360888 |********                          1382414.66667
#                 10         1391207 |*****************************     1403568.00000
#                  6         1421526 |*****************                 1441633.66667
#                  4         1451845 |***********                       1473323.00000
#                 11         1482164 |********************************  1501319.27273
#                 10         1512483 |*****************************     1528254.30000
#                 11         1542802 |********************************  1558009.63636
#                  7         1573121 |********************              1586832.28571
#                  4         1603440 |***********                       1618300.25000
#                  1         1633759 |**                                1640393.00000
#                  4         1664078 |***********                       1682736.50000
#                  6         1694397 |*****************                 1714266.66667
#                  4         1724716 |***********                       1735769.00000
#                  1         1755035 |**                                1764680.00000
#                  2         1785354 |*****                             1804444.00000
#                  2         1815673 |*****                             1841736.50000
#                  2         1845992 |*****                             1855009.00000
#                  1         1876311 |**                                1896091.00000
#                  6         1906630 |*****************                 1926768.83333
#                  3         1936949 |********                          1947328.66667
#                  7         1967268 |********************              1984750.14286
#                  1         1997587 |**                                2005677.00000
#                  2         2027906 |*****                             2043433.00000
#                  4         2058225 |***********                       2072041.50000
#
#                  8           > 95% |***********************           2195539.12500
#
#        mean of 95%   1586256.11765
#          95th %ile         2088535
#
# WARNINGS
#     Actual benchmark run time only accounts for 60.6% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
             prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n100k   1   1            2310        18380        0      384   102400
# bin/../bin-riscv64/pwrite -N pwrite_n100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2152                       2152
#                        max    168451                       2895
#                       mean      2465.35499                 2391.34412
#                     median      2314                       2310*
#                     stddev      1347.47272                  167.75188
#             standard error         9.69530                    1.23736
#       99% confidence level        24.97510                    3.18743
#                       skew       101.90251                    1.33714
#                   kurtosis     12137.87773                    0.40313
#           time correlation         0.04575                    0.02703
#
#               elapsed time        20.00393
#                   run time        18.08804
#          getnsecs overhead      1399
#
#          number of samples     19316
#         number of outliers       936
#    number of final samples     18380
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2152 |*                                    2158.25000
#                 21            2171 |*                                    2183.52381
#                 54            2190 |*                                    2198.59259
#                 85            2209 |*                                    2220.29412
#                364            2228 |***                                  2239.10440
#               1328            2247 |************                         2257.82907
#               2968            2266 |***************************          2275.98147
#               3410            2285 |********************************     2293.47683
#               2366            2304 |**********************               2312.45985
#               1413            2323 |*************                        2331.00708
#                743            2342 |******                               2349.96770
#                437            2361 |****                                 2369.96568
#                303            2380 |**                                   2388.66667
#                186            2399 |*                                    2408.23118
#                124            2418 |*                                    2426.00000
#                 96            2437 |*                                    2445.88542
#                 89            2456 |*                                    2465.68539
#                 70            2475 |*                                    2483.28571
#                 71            2494 |*                                    2503.43662
#                 79            2513 |*                                    2522.48101
#                104            2532 |*                                    2541.15385
#                175            2551 |*                                    2560.66857
#                302            2570 |**                                   2579.75828
#                399            2589 |***                                  2597.71429
#                366            2608 |***                                  2617.18033
#                370            2627 |***                                  2635.50811
#                364            2646 |***                                  2655.04670
#                303            2665 |**                                   2673.56106
#                249            2684 |**                                   2693.36948
#                258            2703 |**                                   2711.87597
#                229            2722 |**                                   2731.45415
#                131            2741 |*                                    2747.26718
#
#                919           > 95% |********                             2811.88357
#
#        mean of 95%      2369.21047
#          95th %ile            2753
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n10k   1   1            2236        18261        0      403    10240
# bin/../bin-riscv64/pwrite -N pwrite_n10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2110                       2110
#                        max    147051                       2808
#                       mean      2371.41000                 2313.19555
#                     median      2239                       2236*
#                     stddev      1170.22217                  164.96817
#             standard error         8.48098                    1.22078
#       99% confidence level        21.84702                    3.14473
#                       skew       102.86144                    1.35499
#                   kurtosis     12395.90656                    0.46513
#           time correlation         0.04154                    0.02669
#
#               elapsed time        20.00430
#                   run time        18.04311
#          getnsecs overhead      1399
#
#          number of samples     19039
#         number of outliers       778
#    number of final samples     18261
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19            2110 |*                                    2119.73684
#                101            2128 |*                                    2139.14851
#                424            2146 |****                                 2156.32783
#                979            2164 |*********                            2173.31461
#               1514            2182 |***************                      2191.39102
#               2747            2200 |***************************          2209.37423
#               3205            2218 |********************************     2226.00437
#               2162            2236 |*********************                2243.80204
#               1344            2254 |*************                        2261.32961
#                616            2272 |******                               2279.20130
#                292            2290 |**                                   2297.28082
#                188            2308 |*                                    2316.00000
#                119            2326 |*                                    2333.78151
#                 75            2344 |*                                    2352.34667
#                 61            2362 |*                                    2371.04918
#                 54            2380 |*                                    2387.29630
#                 68            2398 |*                                    2406.27941
#                 57            2416 |*                                    2423.94737
#                 84            2434 |*                                    2443.35714
#                122            2452 |*                                    2461.17213
#                200            2470 |*                                    2479.47500
#                296            2488 |**                                   2497.16554
#                342            2506 |***                                  2515.26608
#                374            2524 |***                                  2532.23529
#                350            2542 |***                                  2550.96571
#                303            2560 |***                                  2568.35314
#                284            2578 |**                                   2586.65141
#                283            2596 |**                                   2604.52650
#                237            2614 |**                                   2622.07173
#                222            2632 |**                                   2639.78378
#                190            2650 |*                                    2658.03158
#                 35            2668 |*                                    2669.11429
#
#                914           > 95% |*********                            2729.99562
#
#        mean of 95%      2291.23468
#          95th %ile            2671
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n1k   1   1            2269        18439        0      387     1024
# bin/../bin-riscv64/pwrite -N pwrite_n1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2117                       2117
#                        max    116951                       2849
#                       mean      2427.98008                 2343.51087
#                     median      2272                       2269*
#                     stddev      1465.82941                  168.51020
#             standard error        10.50241                    1.24096
#       99% confidence level        27.05421                    3.19671
#                       skew        68.79255                    1.37455
#                   kurtosis      5217.24929                    0.55803
#           time correlation         0.04822                    0.02693
#
#               elapsed time        20.00408
#                   run time        18.12503
#          getnsecs overhead      1399
#
#          number of samples     19480
#         number of outliers      1041
#    number of final samples     18439
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 24            2117 |*                                    2129.66667
#                229            2136 |**                                   2146.82096
#                380            2155 |***                                  2164.05000
#                278            2174 |**                                   2183.03597
#                479            2193 |****                                 2203.60125
#               1488            2212 |**************                       2222.52016
#               2994            2231 |****************************         2240.75651
#               3342            2250 |********************************     2258.45512
#               2322            2269 |**********************               2277.39363
#               1323            2288 |************                         2295.71429
#                613            2307 |*****                                2314.45188
#                262            2326 |**                                   2334.41985
#                156            2345 |*                                    2353.43590
#                139            2364 |*                                    2372.73381
#                100            2383 |*                                    2391.56000
#                 61            2402 |*                                    2411.03279
#                 67            2421 |*                                    2430.11940
#                 71            2440 |*                                    2449.43662
#                 70            2459 |*                                    2467.44286
#                 84            2478 |*                                    2487.04762
#                126            2497 |*                                    2506.69048
#                211            2516 |**                                   2525.86730
#                284            2535 |**                                   2544.19366
#                363            2554 |***                                  2563.22865
#                371            2573 |***                                  2582.31806
#                323            2592 |***                                  2601.48916
#                293            2611 |**                                   2619.62457
#                281            2630 |**                                   2639.00356
#                259            2649 |**                                   2657.89961
#                197            2668 |*                                    2677.02030
#                218            2687 |**                                   2695.71560
#                109            2706 |*                                    2711.63303
#
#                922           > 95% |********                             2771.51193
#
#        mean of 95%      2320.98322
#          95th %ile            2718
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
             prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t100k   1   1          810403        19755        0        1   102400
# bin/../bin-riscv64/pwrite -N pwrite_t100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    777904                     777904
#                        max  12991036                     946904
#                       mean    842452.12312               828514.74234
#                     median    811303                     810403*
#                     stddev    120569.07191                39507.74317
#             standard error       833.87402                  281.08891
#       99% confidence level      2148.05948                  724.08502
#                       skew        52.16437                    1.61907
#                   kurtosis      4966.05508                    1.05240
#           time correlation         8.48102                    5.47354
#
#               elapsed time        20.00427
#                   run time        17.64498
#          getnsecs overhead      1399
#
#          number of samples     20906
#         number of outliers      1151
#    number of final samples     19755
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14          777904 |*                                  780288.78571
#                 24          782305 |*                                  783948.87500
#                 27          786706 |*                                  789003.18519
#                 78          791107 |*                                  793883.98718
#                420          795508 |**                                 798663.85952
#               2751          799909 |*****************                  802728.71756
#               5079          804310 |********************************   806464.78677
#               3149          808711 |*******************                810692.17021
#               2111          813112 |*************                      815272.21743
#               1214          817513 |*******                            819448.35420
#                500          821914 |***                                823788.84000
#                218          826315 |*                                  828345.88073
#                138          830716 |*                                  832638.05072
#                 90          835117 |*                                  837119.90000
#                 76          839518 |*                                  841719.11842
#                 68          843919 |*                                  845998.89706
#                 52          848320 |*                                  850432.03846
#                 46          852721 |*                                  855029.36957
#                 28          857122 |*                                  858953.50000
#                 41          861523 |*                                  863747.24390
#                 26          865924 |*                                  868161.07692
#                 25          870325 |*                                  872643.44000
#                 37          874726 |*                                  877176.37838
#                 80          879127 |*                                  881747.00000
#                164          883528 |*                                  885947.89024
#                275          887929 |*                                  890319.41818
#                393          892330 |**                                 894645.64885
#                406          896731 |**                                 899019.67241
#                373          901132 |**                                 903305.35657
#                344          905533 |**                                 907806.88953
#                278          909934 |*                                  912035.78417
#                242          914335 |*                                  916497.26033
#
#                988           > 95% |******                             931110.71053
#
#        mean of 95%    823113.51591
#          95th %ile          918704
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t10k   1   1          104289        18376        0        8    10240
# bin/../bin-riscv64/pwrite -N pwrite_t10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    100288                     100288
#                        max    442902                     123813
#                       mean    109120.63637               107097.31187
#                     median    104412                     104289*
#                     stddev     15617.48563                 5572.05439
#             standard error       112.65084                   41.10455
#       99% confidence level       290.18856                  105.88531
#                       skew        10.34091                    1.40791
#                   kurtosis       147.45364                    0.44850
#           time correlation         1.37077                    0.86291
#
#               elapsed time        20.00303
#                   run time        18.01087
#          getnsecs overhead      1399
#
#          number of samples     19220
#         number of outliers       844
#    number of final samples     18376
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          100288 |*                                  100333.00000
#                 15          100877 |*                                  101196.86667
#                 21          101466 |*                                  101724.33333
#                 29          102055 |*                                  102374.62069
#               1385          102644 |********                           103110.18917
#               5177          103233 |********************************   103522.13000
#               2940          103822 |******************                 104072.82075
#               2139          104411 |*************                      104696.42403
#               1348          105000 |********                           105240.58605
#                428          105589 |**                                 105840.14019
#                210          106178 |*                                  106430.38571
#                127          106767 |*                                  107046.14173
#                101          107356 |*                                  107641.89109
#                 76          107945 |*                                  108232.89474
#                 50          108534 |*                                  108795.12000
#                 50          109123 |*                                  109381.38000
#                 46          109712 |*                                  110000.19565
#                 67          110301 |*                                  110634.28358
#                 53          110890 |*                                  111144.81132
#                 40          111479 |*                                  111757.02500
#                 51          112068 |*                                  112354.72549
#                107          112657 |*                                  113017.01869
#                227          113246 |*                                  113542.53304
#                326          113835 |**                                 114126.24540
#                355          114424 |**                                 114738.81690
#                399          115013 |**                                 115310.22807
#                350          115602 |**                                 115881.84571
#                333          116191 |**                                 116490.95495
#                282          116780 |*                                  117076.94326
#                253          117369 |*                                  117655.13043
#                262          117958 |*                                  118236.59924
#                208          118547 |*                                  118825.05288
#
#                919           > 95% |*****                              121019.23069
#
#        mean of 95%    106364.41141
#          95th %ile          119113
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t1k   1   1           39387        18170        0       22     1024
# bin/../bin-riscv64/pwrite -N pwrite_t1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     37404                      37404
#                        max    324851                      47790
#                       mean     41693.99854                40543.18718
#                     median     39437                      39387*
#                     stddev      8086.68915                 2415.91570
#             standard error        58.35305                   17.92274
#       99% confidence level       150.31747                   46.16897
#                       skew        11.48049                    1.42559
#                   kurtosis       214.65196                    0.55211
#           time correlation         0.67375                    0.38299
#
#               elapsed time        20.00498
#                   run time        18.01447
#          getnsecs overhead      1399
#
#          number of samples     19205
#         number of outliers      1035
#    number of final samples     18170
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           37404 |*                                   37508.50000
#                  0           37667 |                                              -
#                 76           37930 |*                                   38114.86842
#                159           38193 |*                                   38285.00629
#                229           38456 |*                                   38660.58515
#               4116           38719 |********************************    38882.61054
#               2939           38982 |**********************              39097.18442
#               2763           39245 |*********************               39373.85957
#               1535           39508 |***********                         39620.52052
#                803           39771 |******                              39892.02366
#                668           40034 |*****                               40157.43263
#                353           40297 |**                                  40415.22380
#                157           40560 |*                                   40679.53503
#                125           40823 |*                                   40934.63200
#                 99           41086 |*                                   41209.55556
#                 76           41349 |*                                   41469.55263
#                 60           41612 |*                                   41735.23333
#                 38           41875 |*                                   42004.44737
#                 43           42138 |*                                   42266.04651
#                 42           42401 |*                                   42515.90476
#                105           42664 |*                                   42807.06667
#                125           42927 |*                                   43075.69600
#                188           43190 |*                                   43331.44681
#                208           43453 |*                                   43591.30288
#                251           43716 |*                                   43849.53785
#                333           43979 |**                                  44118.28529
#                328           44242 |**                                  44377.07012
#                360           44505 |**                                  44628.04167
#                320           44768 |**                                  44900.35313
#                316           45031 |**                                  45160.98734
#                255           45294 |*                                   45419.97255
#                189           45557 |*                                   45665.85185
#
#                909           > 95% |*******                             46617.43674
#
#        mean of 95%     40223.30462
#          95th %ile           45791
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
read_t100k   1   1          356002        15104        0        1   102400
# bin/../bin-riscv64/read -N read_t100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    343252                     347802
#                        max   2886609                     365652
#                       mean    371699.41684               356721.06442
#                     median    357302                     356002*
#                     stddev     51235.91765                 2983.57261
#             standard error       365.57005                   24.27675
#       99% confidence level       941.70845                   62.53692
#                       skew        15.27550                    0.68471
#                   kurtosis       455.07083                   -0.10030
#           time correlation         4.24276                    0.65875
#
#               elapsed time        20.00434
#                   run time        14.49398
#          getnsecs overhead      1399
#
#          number of samples     19643
#         number of outliers      4539
#    number of final samples     15104
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          347802 |*                                  347981.80000
#                  8          348260 |*                                  348489.25000
#                  7          348718 |*                                  348894.85714
#                  7          349176 |*                                  349466.14286
#                 12          349634 |*                                  349906.16667
#                 16          350092 |*                                  350311.25000
#                 19          350550 |*                                  350767.63158
#                 19          351008 |*                                  351225.63158
#                 67          351466 |*                                  351762.32836
#                255          351924 |*****                              352180.71765
#                367          352382 |*******                            352605.21798
#                345          352840 |*******                            353057.67536
#                585          353298 |***********                        353559.22564
#               1275          353756 |*************************          354027.57569
#               1572          354214 |********************************   354458.05407
#               1125          354672 |**********************             354906.17600
#                887          355130 |******************                 355367.86246
#                995          355588 |********************               355801.36281
#               1133          356046 |***********************            356263.92939
#                673          356504 |*************                      356736.61070
#                491          356962 |*********                          357190.62525
#                462          357420 |*********                          357643.25974
#                524          357878 |**********                         358095.72901
#                526          358336 |**********                         358551.82700
#                487          358794 |*********                          359004.69815
#                512          359252 |**********                         359479.68945
#                463          359710 |*********                          359961.22030
#                381          360168 |*******                            360407.33596
#                325          360626 |******                             360851.02769
#                328          361084 |******                             361296.46646
#                266          361542 |*****                              361742.71805
#                211          362000 |****                               362184.18483
#
#                756           > 95% |***************                    363714.13624
#
#        mean of 95%    356352.59757
#          95th %ile          362452
#
# WARNINGS
#     Actual benchmark run time only accounts for 72.5% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
          prc thr      nsecs/call      samples   errors cnt/samp     size
read_t10k   1   1          133500         5056        0        5    10240
# bin/../bin-riscv64/read -N read_t10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    128001                     128001
#                        max   1017404                     158851
#                       mean    142710.62947               136728.70649
#                     median    133701                     133500*
#                     stddev     39140.01053                 7384.99793
#             standard error       531.15469                  103.85965
#       99% confidence level      1368.25449                  267.54245
#                       skew        10.72452                    1.49736
#                   kurtosis       150.20246                    0.76041
#           time correlation         9.78024                    4.18472
#
#               elapsed time        20.00645
#                   run time         4.41027
#          getnsecs overhead      1399
#
#          number of samples      5430
#         number of outliers       374
#    number of final samples      5056
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11          128001 |*                                  128489.81818
#                 21          128788 |*                                  129278.28571
#                 91          129575 |***                                130068.41758
#                254          130362 |**********                         130815.05906
#                577          131149 |**********************             131583.41421
#                811          131936 |********************************   132343.88656
#                775          132723 |******************************     133086.19613
#                545          133510 |*********************              133858.52661
#                400          134297 |***************                    134653.74000
#                233          135084 |*********                          135458.55794
#                125          135871 |****                               136250.40000
#                 90          136658 |***                                137043.76667
#                 35          137445 |*                                  137809.85714
#                 32          138232 |*                                  138596.18750
#                 20          139019 |*                                  139453.05000
#                 21          139806 |*                                  140194.66667
#                 13          140593 |*                                  140979.15385
#                  9          141380 |*                                  141798.77778
#                 12          142167 |*                                  142588.16667
#                 11          142954 |*                                  143324.45455
#                  7          143741 |*                                  144110.85714
#                 13          144528 |*                                  144932.61538
#                 26          145315 |*                                  145683.42308
#                 33          146102 |*                                  146504.51515
#                 62          146889 |**                                 147307.61290
#                 85          147676 |***                                148077.90588
#                 73          148463 |**                                 148843.97260
#                 85          149250 |***                                149625.32941
#                 85          150037 |***                                150464.38824
#                114          150824 |****                               151236.31579
#                 72          151611 |**                                 151942.16667
#                 62          152398 |**                                 152744.33871
#
#                253           > 95% |*********                          155429.90909
#
#        mean of 95%    135743.61295
#          95th %ile          153167
#
# WARNINGS
#     Actual benchmark run time only accounts for 22.0% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
         prc thr      nsecs/call      samples   errors cnt/samp     size
read_t1k   1   1           25600        18020        0       35     1024
# bin/../bin-riscv64/read -N read_t1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     24733                      24733
#                        max    223051                      31438
#                       mean     27066.71736                26423.25638
#                     median     25633                      25600*
#                     stddev      4627.54039                 1672.90196
#             standard error        33.55052                   12.46215
#       99% confidence level        86.42615                   32.10251
#                       skew        12.49296                    1.43339
#                   kurtosis       292.11905                    0.54051
#           time correlation         0.42202                    0.26504
#
#               elapsed time        20.00323
#                   run time        17.95805
#          getnsecs overhead      1399
#
#          number of samples     19024
#         number of outliers      1004
#    number of final samples     18020
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22           24733 |*                                   24834.90909
#                180           24901 |*                                   25021.70556
#               1309           25069 |***********                         25168.70894
#               3386           25237 |*****************************       25326.83255
#               3642           25405 |********************************    25484.39099
#               2227           25573 |*******************                 25648.54827
#               1411           25741 |************                        25813.95535
#                749           25909 |******                              25982.01602
#                398           26077 |***                                 26153.27638
#                215           26245 |*                                   26322.96744
#                142           26413 |*                                   26486.26761
#                100           26581 |*                                   26660.31000
#                 94           26749 |*                                   26828.47872
#                 57           26917 |*                                   26988.47368
#                 53           27085 |*                                   27171.52830
#                 40           27253 |*                                   27348.12500
#                 36           27421 |*                                   27489.22222
#                 43           27589 |*                                   27678.06977
#                 33           27757 |*                                   27830.69697
#                 57           27925 |*                                   28015.38596
#                 90           28093 |*                                   28179.16667
#                172           28261 |*                                   28344.27907
#                222           28429 |*                                   28511.61261
#                281           28597 |**                                  28682.89680
#                346           28765 |***                                 28847.11850
#                328           28933 |**                                  29017.86585
#                318           29101 |**                                  29184.19497
#                295           29269 |**                                  29342.47797
#                282           29437 |**                                  29518.95035
#                232           29605 |**                                  29688.23707
#                206           29773 |*                                   29851.33010
#                153           29941 |*                                   30009.39869
#
#                901           > 95% |*******                             30635.73141
#
#        mean of 95%     26201.54717
#          95th %ile           30089
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
           prc thr      nsecs/call      samples   errors cnt/samp     size
read_z100k   1   1          240534        17524        0        2   102400
# bin/../bin-riscv64/read -N read_z100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    229734                     235568
#                        max   5078947                     246534
#                       mean    252852.45204               241050.28766
#                     median    241334                     240534*
#                     stddev     54780.69160                 1829.47790
#             standard error       360.88383                   13.82008
#       99% confidence level       929.63675                   35.60053
#                       skew        36.89129                    0.80969
#                   kurtosis      2767.01229                    0.00680
#           time correlation         2.85753                    0.34463
#
#               elapsed time        20.00485
#                   run time        17.13958
#          getnsecs overhead      1399
#
#          number of samples     23042
#         number of outliers      5518
#    number of final samples     17524
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9          235568 |*                                  235704.66667
#                  7          235851 |*                                  236017.57143
#                 10          236134 |*                                  236237.60000
#                  3          236417 |*                                  236578.66667
#                  6          236700 |*                                  236806.66667
#                 10          236983 |*                                  237087.50000
#                 16          237266 |*                                  237417.56250
#                 27          237549 |*                                  237673.92593
#                 52          237832 |*                                  237982.71154
#                 89          238115 |*                                  238265.55056
#                240          238398 |****                               238558.63333
#                378          238681 |******                             238839.68783
#               1193          238964 |********************               239121.23722
#               1632          239247 |****************************       239385.91238
#               1832          239530 |********************************   239658.46288
#               1071          239813 |******************                 239949.11018
#               1314          240096 |**********************             240242.31811
#               1384          240379 |************************           240511.64017
#               1259          240662 |*********************              240787.51628
#                685          240945 |***********                        241074.05401
#                559          241228 |*********                          241362.74955
#                475          241511 |********                           241640.54947
#                495          241794 |********                           241928.90909
#                472          242077 |********                           242216.34534
#                651          242360 |***********                        242514.23963
#                481          242643 |********                           242783.05405
#                463          242926 |********                           243057.66091
#                449          243209 |*******                            243349.76615
#                509          243492 |********                           243634.44794
#                384          243775 |******                             243915.94531
#                280          244058 |****                               244201.00357
#                212          244341 |***                                244471.86321
#
#                877           > 95% |***************                    245447.88369
#
#        mean of 95%    240818.61278
#          95th %ile          244601
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
          prc thr      nsecs/call      samples   errors cnt/samp     size
read_z10k   1   1           39278        18016        0       22    10240
# bin/../bin-riscv64/read -N read_z10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     37574                      37574
#                        max    474252                      47365
#                       mean     41431.18854                40411.78930
#                     median     39318                      39278*
#                     stddev      8002.88247                 2318.27123
#             standard error        58.02085                   17.27170
#       99% confidence level       149.46172                   44.49190
#                       skew        20.08704                    1.45702
#                   kurtosis       777.24424                    0.57467
#           time correlation         0.61969                    0.36187
#
#               elapsed time        20.00842
#                   run time        18.04803
#          getnsecs overhead      1399
#
#          number of samples     19025
#         number of outliers      1009
#    number of final samples     18016
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           37574 |*                                   37574.00000
#                 15           37820 |*                                   37981.13333
#                 30           38066 |*                                   38203.13333
#                 57           38312 |*                                   38466.66667
#               1077           38558 |*******                             38721.81708
#               4366           38804 |********************************    38943.01443
#               3661           39050 |**************************          39154.83638
#               2471           39296 |******************                  39406.42372
#               1259           39542 |*********                           39640.37411
#                419           39788 |***                                 39892.51074
#                233           40034 |*                                   40142.67382
#                121           40280 |*                                   40407.61983
#                 75           40526 |*                                   40636.05333
#                 59           40772 |*                                   40897.40678
#                 80           41018 |*                                   41146.45000
#                 70           41264 |*                                   41395.97143
#                 32           41510 |*                                   41623.37500
#                 46           41756 |*                                   41869.34783
#                 38           42002 |*                                   42137.05263
#                 49           42248 |*                                   42368.40816
#                 69           42494 |*                                   42642.39130
#                120           42740 |*                                   42866.57500
#                154           42986 |*                                   43121.53896
#                218           43232 |*                                   43358.36697
#                281           43478 |**                                  43601.72242
#                317           43724 |**                                  43850.22082
#                340           43970 |**                                  44090.42059
#                368           44216 |**                                  44333.89674
#                325           44462 |**                                  44586.06462
#                289           44708 |**                                  44825.95156
#                270           44954 |*                                   45078.87778
#                205           45200 |*                                   45310.37073
#
#                901           > 95% |******                              46251.46837
#
#        mean of 95%     40104.36594
#          95th %ile           45426
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
         prc thr      nsecs/call      samples   errors cnt/samp     size
read_z1k   1   1           55294        17974        0       16     1024
# bin/../bin-riscv64/read -N read_z1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     52377                      52377
#                        max    580027                      65824
#                       mean     57790.61839                56679.15116
#                     median     55359                      55294*
#                     stddev      9362.52730                 3049.08981
#             standard error        68.19444                   22.74301
#       99% confidence level       175.66887                   58.58598
#                       skew        18.27266                    1.39229
#                   kurtosis       654.09057                    0.51591
#           time correlation         0.77688                    0.49816
#
#               elapsed time        20.00350
#                   run time        17.98578
#          getnsecs overhead      1399
#
#          number of samples     18849
#         number of outliers       875
#    number of final samples     17974
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           52377 |*                                   52377.00000
#                  1           52719 |*                                   52947.00000
#                  3           53061 |*                                   53239.66667
#                 38           53403 |*                                   53616.05263
#                441           53745 |*****                               53964.01134
#               1759           54087 |********************                54281.86924
#               2737           54429 |*******************************     54602.65546
#               2763           54771 |********************************    54939.01882
#               2264           55113 |**************************          55279.34143
#               1537           55455 |*****************                   55610.73260
#               1012           55797 |***********                         55950.88636
#                571           56139 |******                              56288.92995
#                364           56481 |****                                56623.30769
#                203           56823 |**                                  56988.94089
#                133           57165 |*                                   57317.26316
#                 85           57507 |*                                   57667.40000
#                 64           57849 |*                                   58015.85938
#                 33           58191 |*                                   58381.60606
#                 27           58533 |*                                   58701.33333
#                 29           58875 |*                                   59051.27586
#                 49           59217 |*                                   59411.38776
#                119           59559 |*                                   59745.70588
#                192           59901 |**                                  60090.67708
#                277           60243 |***                                 60424.89531
#                314           60585 |***                                 60755.98726
#                356           60927 |****                                61098.73034
#                332           61269 |***                                 61434.00602
#                315           61611 |***                                 61783.13333
#                330           61953 |***                                 62107.18485
#                306           62295 |***                                 62463.20261
#                229           62637 |**                                  62798.58515
#                191           62979 |**                                  63140.00524
#
#                899           > 95% |**********                          64362.25139
#
#        mean of 95%     56274.63537
#          95th %ile           63294
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
            prc thr      nsecs/call      samples   errors cnt/samp     size
read_zw100k   1   1          244768        17053        0        2   102400
# bin/../bin-riscv64/read -N read_zw100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    229601                     239301
#                        max   3048075                     251068
#                       mean    256355.84231               245184.98997
#                     median    245634                     244768*
#                     stddev     44276.26248                 1965.32899
#             standard error       292.66886                   15.04994
#       99% confidence level       753.91499                   38.76865
#                       skew        22.19712                    0.70335
#                   kurtosis      1031.28597                    0.04870
#           time correlation         2.69887                    0.38366
#
#               elapsed time        20.00393
#                   run time        17.36409
#          getnsecs overhead      1399
#
#          number of samples     22887
#         number of outliers      5834
#    number of final samples     17053
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9          239301 |*                                  239450.88889
#                  6          239606 |*                                  239728.66667
#                 14          239911 |*                                  240067.57143
#                  9          240216 |*                                  240393.44444
#                 10          240521 |*                                  240656.10000
#                 19          240826 |*                                  240965.89474
#                 23          241131 |*                                  241258.26087
#                 33          241436 |*                                  241590.48485
#                 89          241741 |**                                 241941.97753
#                337          242046 |*******                            242223.29674
#                362          242351 |********                           242512.03867
#                478          242656 |**********                         242813.90377
#                835          242961 |******************                 243119.97964
#               1407          243266 |********************************   243431.80384
#               1366          243571 |*******************************    243737.78697
#               1207          243876 |***************************        244027.34631
#               1234          244181 |****************************       244322.67666
#               1145          244486 |**************************         244626.60175
#               1069          244791 |************************           244936.24041
#                928          245096 |*********************              245231.30280
#                938          245401 |*********************              245549.37207
#                541          245706 |************                       245863.01664
#                583          246011 |*************                      246162.30703
#                523          246316 |***********                        246483.98279
#                515          246621 |***********                        246771.12233
#                475          246926 |**********                         247064.60211
#                513          247231 |***********                        247375.96296
#                398          247536 |*********                          247692.11055
#                344          247841 |*******                            248000.03198
#                321          248146 |*******                            248277.34891
#                269          248451 |******                             248595.00372
#                200          248756 |****                               248882.63500
#
#                853           > 95% |*******************                249880.98828
#
#        mean of 95%    244937.72537
#          95th %ile          249034
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
             prc thr      nsecs/call      samples   errors cnt/samp 
realpath_tmp   1   1          892203        12284        0        1 
# bin/../bin-riscv64/realpath -N realpath_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    860004                     862503
#                        max   9126426                     927104
#                       mean   1018441.93290               893707.83580
#                     median    899903                     892203*
#                     stddev    370107.38666                11145.65370
#             standard error      2767.47229                  100.56240
#       99% confidence level      7129.00861                  259.04875
#                       skew         4.81082                    0.51812
#                   kurtosis        32.09848                    0.02047
#           time correlation        37.37012                    3.05140
#
#               elapsed time        20.00431
#                   run time        18.24345
#          getnsecs overhead      1399
#
#          number of samples     17885
#         number of outliers      5601
#    number of final samples     12284
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          862503 |*                                  862853.50000
#                  3          864132 |*                                  865037.00000
#                  9          865761 |*                                  866792.22222
#                 21          867390 |*                                  868374.71429
#                 26          869019 |*                                  869876.46154
#                 55          870648 |**                                 871565.09091
#                 89          872277 |***                                873144.94382
#                135          873906 |*****                              874758.22222
#                192          875535 |*******                            876336.73958
#                264          877164 |**********                         877988.60227
#                413          878793 |****************                   879596.09927
#                443          880422 |*****************                  881281.31151
#                535          882051 |********************               882868.07477
#                734          883680 |****************************       884518.76567
#                684          885309 |**************************         886165.36257
#                748          886938 |*****************************      887786.52807
#                820          888567 |********************************   889339.98780
#                818          890196 |*******************************    890978.93765
#                711          891825 |***************************        892655.17581
#                652          893454 |*************************          894261.69172
#                620          895083 |************************           895895.82903
#                495          896712 |*******************                897516.96364
#                489          898341 |*******************                899161.06953
#                485          899970 |******************                 900753.92990
#                449          901599 |*****************                  902393.40980
#                365          903228 |**************                     903992.20822
#                373          904857 |**************                     905612.02145
#                302          906486 |***********                        907275.98013
#                229          908115 |********                           908965.86463
#                192          909744 |*******                            910578.96875
#                183          911373 |*******                            912123.61749
#                131          913002 |*****                              913708.85496
#
#                615           > 95% |************************           919919.22764
#
#        mean of 95%    892326.39729
#          95th %ile          914604
#
# Usage: realpath
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'realpath')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f directory (default = /)]
# notes: measures realpath()
             prc thr      nsecs/call      samples   errors cnt/samp 
realpath_usr   1   1          980804        11110        0        1 
# bin/../bin-riscv64/realpath -N realpath_usr -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /var/tmp/libmicro.6465/0/1/2/3/4/5/6/7/8/9 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    951103                     951103
#                        max   5544816                    1015704
#                       mean   1113157.22310               982266.90315
#                     median    988804                     980804*
#                     stddev    394827.74452                11158.86295
#             standard error      3070.47498                  105.86756
#       99% confidence level      7909.54356                  272.71484
#                       skew         4.58652                    0.65914
#                   kurtosis        21.72826                   -0.12651
#           time correlation        42.19423                    3.37723
#
#               elapsed time        20.00471
#                   run time        18.43473
#          getnsecs overhead      1399
#
#          number of samples     16535
#         number of outliers      5425
#    number of final samples     11110
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          951103 |*                                  951153.50000
#                  1          952744 |*                                  953903.00000
#                  3          954385 |*                                  955237.00000
#                  3          956026 |*                                  956903.66667
#                  1          957667 |*                                  959204.00000
#                 13          959308 |*                                  960326.76923
#                 10          960949 |*                                  961893.30000
#                 50          962590 |*                                  963553.70000
#                101          964231 |***                                965165.89109
#                283          965872 |**********                         966788.74205
#                459          967513 |*****************                  968398.83224
#                683          969154 |*************************          969947.10395
#                860          970795 |********************************   971578.71744
#                772          972436 |****************************       973210.61917
#                688          974077 |*************************          974861.62355
#                562          975718 |********************               976542.78292
#                492          977359 |******************                 978135.13211
#                513          979000 |*******************                979842.79337
#                527          980641 |*******************                981508.40417
#                571          982282 |*********************              983129.93695
#                604          983923 |**********************             984787.93212
#                578          985564 |*********************              986427.13495
#                511          987205 |*******************                988043.74364
#                370          988846 |*************                      989703.15405
#                362          990487 |*************                      991276.13536
#                312          992128 |***********                        992970.31410
#                246          993769 |*********                          994549.61789
#                267          995410 |*********                          996245.62172
#                224          997051 |********                           997862.62946
#                197          998692 |*******                            999450.35533
#                150         1000333 |*****                             1001119.80000
#                139         1001974 |*****                             1002766.27338
#
#                556           > 95% |********************              1008741.65108
#
#        mean of 95%    980872.17510
#          95th %ile         1003603
#
# Usage: realpath
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'realpath')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f directory (default = /)]
# notes: measures realpath()
        prc thr      nsecs/call      samples   errors cnt/samp 
recurse   1   1            2633        19053        0      327 
# bin/../bin-riscv64/recurse -N recurse -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2506                       2506
#                        max    501702                       2935
#                       mean      2794.26431                 2668.06251
#                     median      2638                       2633*
#                     stddev      4038.56370                   88.96725
#             standard error        28.35983                    0.64454
#       99% confidence level        73.05493                    1.66033
#                       skew       107.83596                    1.14157
#                   kurtosis     12473.87863                    0.15262
#           time correlation         0.04887                    0.01466
#
#               elapsed time        20.00441
#                   run time        18.12078
#          getnsecs overhead      1399
#
#          number of samples     20279
#         number of outliers      1226
#    number of final samples     19053
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2506 |*                                    2511.00000
#                  8            2517 |*                                    2524.87500
#                 42            2528 |*                                    2533.61905
#                 60            2539 |*                                    2544.35000
#                163            2550 |**                                   2555.49080
#                315            2561 |****                                 2566.74603
#                572            2572 |********                             2577.84441
#               1217            2583 |*****************                    2588.72802
#               1970            2594 |***************************          2599.32234
#               2274            2605 |********************************     2609.90018
#               2066            2616 |*****************************        2620.74831
#               1442            2627 |********************                 2631.96810
#               1310            2638 |******************                   2642.96412
#               1119            2649 |***************                      2653.86238
#                773            2660 |**********                           2664.57956
#                517            2671 |*******                              2675.50870
#                276            2682 |***                                  2686.65217
#                208            2693 |**                                   2697.61058
#                119            2704 |*                                    2708.89076
#                 98            2715 |*                                    2719.23469
#                 97            2726 |*                                    2731.17526
#                152            2737 |**                                   2742.02632
#                198            2748 |**                                   2753.48485
#                298            2759 |****                                 2764.37248
#                410            2770 |*****                                2775.38537
#                470            2781 |******                               2786.04255
#                415            2792 |*****                                2796.94940
#                445            2803 |******                               2807.86067
#                385            2814 |*****                                2818.83896
#                296            2825 |****                                 2829.78378
#                295            2836 |****                                 2840.73559
#                 86            2847 |*                                    2848.31395
#
#                953           > 95% |*************                        2884.97062
#
#        mean of 95%      2656.64188
#          95th %ile            2850
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
            prc thr      nsecs/call      samples   errors cnt/samp 
recurse_10k   1   1          540803        23865        0        1 
# bin/../bin-riscv64/recurse -N recurse_10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    512002                     515302
#                        max  24169166                     570002
#                       mean    560933.28844               541807.21265
#                     median    543302                     540803*
#                     stddev    157871.92434                 9423.43194
#             standard error       932.35968                   60.99980
#       99% confidence level      2401.75853                  157.13547
#                       skew       117.80512                    0.44739
#                   kurtosis     17448.32850                   -0.08234
#           time correlation         4.39110                    1.33339
#
#               elapsed time        20.00466
#                   run time        16.14680
#          getnsecs overhead      1399
#
#          number of samples     28671
#         number of outliers      4806
#    number of final samples     23865
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          515302 |*                                  515302.00000
#                 12          516674 |*                                  517319.16667
#                 11          518046 |*                                  518838.90909
#                 36          519418 |*                                  520205.22222
#                 60          520790 |*                                  521490.75000
#                123          522162 |**                                 522929.26829
#                190          523534 |****                               524348.70526
#                258          524906 |*****                              525640.79845
#                418          526278 |*********                          526982.03110
#                525          527650 |***********                        528401.66095
#                697          529022 |***************                    529743.73888
#                923          530394 |********************               531054.32394
#               1063          531766 |***********************            532489.65381
#               1230          533138 |**************************         533881.93577
#               1250          534510 |***************************        535206.36320
#               1464          535882 |********************************   536539.26981
#               1406          537254 |******************************     537968.66785
#               1375          538626 |******************************     539307.69527
#               1451          539998 |*******************************    540659.86354
#               1350          541370 |*****************************      542078.38963
#               1266          542742 |***************************        543456.24882
#               1075          544114 |***********************            544802.82419
#               1034          545486 |**********************             546138.28046
#               1012          546858 |**********************             547522.45158
#                801          548230 |*****************                  548892.88639
#                778          549602 |*****************                  550234.11954
#                667          550974 |**************                     551615.98201
#                646          552346 |**************                     553006.50310
#                476          553718 |**********                         554376.43697
#                437          555090 |*********                          555752.64073
#                357          556462 |*******                            557136.64706
#                279          557834 |******                             558559.83871
#
#               1194           > 95% |**************************         563493.55193
#
#        mean of 95%    540665.07119
#          95th %ile          559202
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
           prc thr      nsecs/call      samples   errors cnt/samp 
recurse_1k   1   1           26677        18337        0       33 
# bin/../bin-riscv64/recurse -N recurse_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     25596                      25596
#                        max   1087203                      29674
#                       mean     27715.33034                27033.08595
#                     median     26720                      26677*
#                     stddev      9147.53772                  881.12403
#             standard error        65.57585                    6.50688
#       99% confidence level       168.92340                   16.76173
#                       skew        82.70695                    1.31762
#                   kurtosis      9293.47310                    0.48135
#           time correlation         0.32783                    0.14591
#
#               elapsed time        20.00327
#                   run time        18.19591
#          getnsecs overhead      1399
#
#          number of samples     19459
#         number of outliers      1122
#    number of final samples     18337
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5           25596 |*                                   25646.00000
#                 11           25701 |*                                   25774.27273
#                 27           25806 |*                                   25874.18519
#                107           25911 |*                                   25975.54206
#                258           26016 |***                                 26072.61240
#                639           26121 |********                            26184.82629
#               1241           26226 |****************                    26287.37147
#               1801           26331 |***********************             26384.00888
#               2414           26436 |********************************    26485.55882
#               2128           26541 |****************************        26593.67622
#               1553           26646 |********************                26695.48358
#               1438           26751 |*******************                 26799.17872
#               1021           26856 |*************                       26905.99314
#                755           26961 |**********                          27010.52715
#                460           27066 |******                              27114.00652
#                321           27171 |****                                27213.30218
#                167           27276 |**                                  27325.52695
#                 78           27381 |*                                   27426.67949
#                 48           27486 |*                                   27528.27083
#                 36           27591 |*                                   27642.66667
#                 37           27696 |*                                   27758.94595
#                 64           27801 |*                                   27862.23438
#                133           27906 |*                                   27962.53383
#                191           28011 |**                                  28066.24084
#                302           28116 |****                                28172.36093
#                328           28221 |****                                28272.31098
#                375           28326 |****                                28375.74667
#                351           28431 |****                                28484.94872
#                349           28536 |****                                28586.35817
#                285           28641 |***                                 28693.03158
#                296           28746 |***                                 28799.08108
#                201           28851 |**                                  28888.82090
#
#                917           > 95% |************                        29233.73391
#
#        mean of 95%     26917.24242
#          95th %ile           28934
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
            prc thr      nsecs/call      samples   errors cnt/samp     size
scasecmp_10   1   1             101        20363        0     7823       10
# bin/../bin-riscv64/strcasecmp -N scasecmp_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        96                         96
#                        max     88660                        112
#                       mean       110.62288                  102.24888
#                     median       101                        101*
#                     stddev       611.77895                    3.21270
#             standard error         4.13553                    0.02251
#       99% confidence level        10.65313                    0.05800
#                       skew       139.78936                    1.44711
#                   kurtosis     20090.01250                    1.20326
#           time correlation         0.00265                    0.00047
#
#               elapsed time        20.00400
#                   run time        17.78468
#          getnsecs overhead      1399
#
#          number of samples     21884
#         number of outliers      1521
#    number of final samples     20363
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1              96 |*                                             -
#                 39              97 |*                                             -
#                225              98 |*                                             -
#               1763              99 |***********                                   -
#               4661             100 |*******************************               -
#               4811             101 |********************************              -
#               3477             102 |***********************                       -
#               1305             103 |********                                      -
#                469             104 |***                                           -
#                218             105 |*                                             -
#                361             106 |**                                            -
#                649             107 |****                                          -
#                706             108 |****                                          -
#                569             109 |***                                           -
#                 90             110 |*                                             -
#
#               1019           > 95% |******                                110.89696
#
#        mean of 95%       101.79332
#          95th %ile             110
#
# Usage: strcasecmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcasecmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcasecmp()
            prc thr      nsecs/call      samples   errors cnt/samp     size
scasecmp_1k   1   1            4947        17625        0      191     1024
# bin/../bin-riscv64/strcasecmp -N scasecmp_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4671                       4671
#                        max    138891                       5556
#                       mean      5121.47461                 5022.94094
#                     median      4956                       4947*
#                     stddev      1223.01872                  177.80916
#             standard error         8.97050                    1.33934
#       99% confidence level        23.10801                    3.45013
#                       skew        73.88924                    1.07755
#                   kurtosis      7756.46594                    0.10990
#           time correlation         0.05841                    0.03209
#
#               elapsed time        20.00377
#                   run time        18.13113
#          getnsecs overhead      1399
#
#          number of samples     18588
#         number of outliers       963
#    number of final samples     17625
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            4671 |*                                    4682.00000
#                 12            4694 |*                                    4709.83333
#                 10            4717 |*                                    4725.30000
#                 31            4740 |*                                    4752.77419
#                 36            4763 |*                                    4774.72222
#                115            4786 |*                                    4800.04348
#                402            4809 |*****                                4822.40547
#                923            4832 |*************                        4844.81473
#               1283            4855 |******************                   4866.77475
#               1794            4878 |*************************            4888.55909
#               2256            4901 |********************************     4912.45124
#               1886            4924 |**************************           4935.34040
#               1224            4947 |*****************                    4957.61846
#               1016            4970 |**************                       4980.26772
#                713            4993 |**********                           5002.96494
#                457            5016 |******                               5026.43982
#                265            5039 |***                                  5050.54717
#                212            5062 |***                                  5072.48113
#                167            5085 |**                                   5096.20359
#                184            5108 |**                                   5120.33696
#                235            5131 |***                                  5143.05106
#                333            5154 |****                                 5165.59159
#                380            5177 |*****                                5188.42632
#                393            5200 |*****                                5211.26209
#                479            5223 |******                               5233.84134
#                453            5246 |******                               5256.64680
#                429            5269 |******                               5279.18182
#                330            5292 |****                                 5302.69697
#                296            5315 |****                                 5325.70608
#                233            5338 |***                                  5349.45064
#                190            5361 |**                                   5371.58947
#
#                882           > 95% |************                         5461.66327
#
#        mean of 95%      4999.82960
#          95th %ile            5383
#
# Usage: strcasecmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcasecmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcasecmp()
            prc thr      nsecs/call      samples   errors cnt/samp   method
sched_yield   1   1            6725        18092        0      134     libc
# bin/../bin-riscv64/sched_yield -N sched_yield -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6408                       6408
#                        max    225651                       8059
#                       mean      7098.16318                 6912.03770
#                     median      6731                       6725*
#                     stddev      2081.28389                  382.19442
#             standard error        15.07820                    2.84146
#       99% confidence level        38.84146                    7.31959
#                       skew        67.07814                    1.33408
#                   kurtosis      6582.23206                    0.22197
#           time correlation         0.10946                    0.06111
#
#               elapsed time        20.00331
#                   run time        18.10684
#          getnsecs overhead      1399
#
#          number of samples     19053
#         number of outliers       961
#    number of final samples     18092
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9            6408 |*                                    6429.55556
#                 16            6449 |*                                    6468.75000
#                 30            6490 |*                                    6509.76667
#                 38            6531 |*                                    6549.94737
#                409            6572 |***                                  6602.48166
#               2683            6613 |************************             6635.52665
#               3515            6654 |********************************     6673.87055
#               3108            6695 |****************************         6714.58945
#               2048            6736 |******************                   6753.20996
#                883            6777 |********                             6795.56512
#                467            6818 |****                                 6835.90792
#                261            6859 |**                                   6875.71264
#                152            6900 |*                                    6919.10526
#                 96            6941 |*                                    6959.44792
#                 60            6982 |*                                    7001.45000
#                 33            7023 |*                                    7038.78788
#                 41            7064 |*                                    7084.51220
#                 35            7105 |*                                    7125.11429
#                 21            7146 |*                                    7165.80952
#                 42            7187 |*                                    7211.42857
#                 61            7228 |*                                    7247.29508
#                 91            7269 |*                                    7293.84615
#                127            7310 |*                                    7330.00000
#                113            7351 |*                                    7370.84956
#                163            7392 |*                                    7414.30675
#                439            7433 |***                                  7455.28474
#                622            7474 |*****                                7492.38585
#                537            7515 |****                                 7533.55121
#                413            7556 |***                                  7574.30751
#                307            7597 |**                                   7616.58632
#                227            7638 |**                                   7657.50661
#                140            7679 |*                                    7692.65000
#
#                905           > 95% |********                             7838.66851
#
#        mean of 95%      6863.24495
#          95th %ile            7706
#
# Usage: sched_yield
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sched_yield')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -s skip libc making system call directly
# note: measures sched_yield()
              prc thr      nsecs/call      samples   errors cnt/samp   method
sched_yield_s   1   1            6712        18184        0      135  syscall
# bin/../bin-riscv64/sched_yield -N sched_yield_s -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6344                       6344
#                        max    138801                       8042
#                       mean      7040.12114                 6902.39744
#                     median      6717                       6712*
#                     stddev      1408.51014                  379.73348
#             standard error        10.21330                    2.81601
#       99% confidence level        26.30946                    7.25404
#                       skew        48.15463                    1.33869
#                   kurtosis      4111.72609                    0.25339
#           time correlation         0.09521                    0.06040
#
#               elapsed time        20.00373
#                   run time        18.10116
#          getnsecs overhead      1399
#
#          number of samples     19019
#         number of outliers       835
#    number of final samples     18184
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            6344 |*                                    6364.25000
#                  5            6387 |*                                    6404.00000
#                  9            6430 |*                                    6457.22222
#                 21            6473 |*                                    6497.90476
#                 24            6516 |*                                    6538.75000
#                126            6559 |*                                    6591.32540
#               3069            6602 |*************************            6630.29879
#               3823            6645 |********************************     6663.88125
#               3299            6688 |***************************          6708.14883
#               1681            6731 |**************                       6749.10767
#                770            6774 |******                               6791.50909
#                362            6817 |***                                  6835.13260
#                282            6860 |**                                   6880.34043
#                152            6903 |*                                    6923.44079
#                110            6946 |*                                    6966.06364
#                 83            6989 |*                                    7008.04819
#                 56            7032 |*                                    7051.67857
#                 33            7075 |*                                    7097.63636
#                 47            7118 |*                                    7139.74468
#                 43            7161 |*                                    7183.60465
#                 53            7204 |*                                    7224.05660
#                140            7247 |*                                    7270.07143
#                143            7290 |*                                    7308.79720
#                151            7333 |*                                    7353.57616
#                272            7376 |**                                   7398.86397
#                424            7419 |***                                  7441.18632
#                490            7462 |****                                 7482.72857
#                537            7505 |****                                 7525.96462
#                382            7548 |***                                  7568.85602
#                343            7591 |**                                   7610.89213
#                266            7634 |**                                   7653.30827
#                 70            7677 |*                                    7684.28571
#
#                910           > 95% |*******                              7827.70989
#
#        mean of 95%      6853.65167
#          95th %ile            7691
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: sched_yield
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sched_yield')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -s skip libc making system call directly
# note: measures sched_yield()
          prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_10   1   1           43043        17953        0       20       10   ---
# bin/../bin-riscv64/select -N select_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     40962                      40962
#                        max   1115104                      50400
#                       mean     45560.14993                43980.00295
#                     median     43130                      43043*
#                     stddev     12156.16292                 2140.48534
#             standard error        87.03201                   15.97511
#       99% confidence level       224.19445                   41.15187
#                       skew        42.72341                    1.55216
#                   kurtosis      3289.44109                    0.97928
#           time correlation         0.73111                    0.33936
#
#               elapsed time        20.00404
#                   run time        17.94080
#          getnsecs overhead      1399
#
#          number of samples     19509
#         number of outliers      1556
#    number of final samples     17953
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6           40962 |*                                   41105.16667
#                  9           41211 |*                                   41324.44444
#                 20           41460 |*                                   41571.55000
#                 84           41709 |*                                   41886.75000
#                456           41958 |****                                42120.48026
#               1158           42207 |**********                          42352.32988
#               2976           42456 |***************************         42600.67406
#               3476           42705 |********************************    42819.84091
#               2188           42954 |********************                43076.97258
#               1687           43203 |***************                     43316.01838
#               1000           43452 |*********                           43564.94800
#                547           43701 |*****                               43815.40768
#                339           43950 |***                                 44059.26254
#                230           44199 |**                                  44313.93043
#                136           44448 |*                                   44550.57353
#                 77           44697 |*                                   44816.50649
#                 44           44946 |*                                   45061.27273
#                 32           45195 |*                                   45292.15625
#                 25           45444 |*                                   45573.64000
#                 31           45693 |*                                   45797.22581
#                 35           45942 |*                                   46078.22857
#                 66           46191 |*                                   46330.39394
#                158           46440 |*                                   46571.26582
#                216           46689 |*                                   46827.77315
#                271           46938 |**                                  47068.21033
#                253           47187 |**                                  47310.94466
#                288           47436 |**                                  47567.30903
#                291           47685 |**                                  47817.36426
#                287           47934 |**                                  48053.39721
#                259           48183 |**                                  48305.33205
#                220           48432 |**                                  48558.08182
#                190           48681 |*                                   48789.25263
#
#                898           > 95% |********                            49561.71381
#
#        mean of 95%     43686.10812
#          95th %ile           48905
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
           prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_100   1   1           79655        19097        0       10      100   ---
# bin/../bin-riscv64/select -N select_100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     77319                      77319
#                        max   1230004                      94619
#                       mean     83696.78539                81760.87375
#                     median     79790                      79655*
#                     stddev     16492.00374                 4286.35752
#             standard error       116.26780                   31.01743
#       99% confidence level       299.50584                   79.90090
#                       skew        25.52287                    1.48049
#                   kurtosis      1328.34425                    0.68828
#           time correlation         1.10871                    0.63876
#
#               elapsed time        20.00407
#                   run time        17.94051
#          getnsecs overhead      1399
#
#          number of samples     20120
#         number of outliers      1023
#    number of final samples     19097
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           77319 |*                                   77373.50000
#                117           77755 |*                                   78094.73504
#               1032           78191 |*******                             78472.31686
#               2969           78627 |*********************               78869.82183
#               4351           79063 |********************************    79268.52884
#               2166           79499 |***************                     79682.01524
#               1603           79935 |***********                         80150.25889
#               1163           80371 |********                            80566.44368
#                581           80807 |****                                81010.97935
#                383           81243 |**                                  81436.32898
#                267           81679 |*                                   81865.00375
#                173           82115 |*                                   82326.78613
#                 94           82551 |*                                   82744.51064
#                 70           82987 |*                                   83197.21429
#                 57           83423 |*                                   83624.92982
#                 49           83859 |*                                   84091.04082
#                 37           84295 |*                                   84505.78378
#                 44           84731 |*                                   84937.47727
#                 24           85167 |*                                   85391.16667
#                 31           85603 |*                                   85838.25806
#                 45           86039 |*                                   86306.31111
#                120           86475 |*                                   86724.10833
#                233           86911 |*                                   87152.36052
#                295           87347 |**                                  87574.41695
#                318           87783 |**                                  88017.58805
#                301           88219 |**                                  88436.66445
#                312           88655 |**                                  88875.64103
#                289           89091 |**                                  89313.82007
#                277           89527 |**                                  89724.24549
#                271           89963 |*                                   90161.09594
#                246           90399 |*                                   90608.76423
#                222           90835 |*                                   91029.72523
#
#                955           > 95% |*******                             92660.75183
#
#        mean of 95%     81187.10109
#          95th %ile           91246
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
            prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_1000   1   1          464152        17414        0        1     1000   ---
# bin/../bin-riscv64/select -N select_1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    446902                     446902
#                        max   2783258                     539052
#                       mean    499777.15434               473546.32882
#                     median    467852                     464152*
#                     stddev     96070.12273                21843.80599
#             standard error       669.18986                  165.53089
#       99% confidence level      1723.83307                  426.40756
#                       skew         7.04290                    1.39716
#                   kurtosis        77.17055                    0.81349
#           time correlation         9.22203                    3.80569
#
#               elapsed time        20.00462
#                   run time        17.83194
#          getnsecs overhead      1399
#
#          number of samples     20610
#         number of outliers      3196
#    number of final samples     17414
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 27          446902 |*                                  448252.03704
#                153          449284 |*                                  450805.64052
#                485          451666 |******                             452978.15464
#               1592          454048 |********************               455551.98995
#               2532          456430 |********************************   457592.43167
#               2061          458812 |**************************         459934.46385
#               1490          461194 |******************                 462288.44765
#               1244          463576 |***************                    464697.36254
#                881          465958 |***********                        467076.86833
#                719          468340 |*********                          469465.57024
#                632          470722 |*******                            471851.12342
#                517          473104 |******                             474265.44487
#                434          475486 |*****                              476629.03456
#                367          477868 |****                               479039.41417
#                299          480250 |***                                481363.30769
#                219          482632 |**                                 483788.84475
#                212          485014 |**                                 486136.95755
#                190          487396 |**                                 488588.64211
#                155          489778 |*                                  490974.69032
#                151          492160 |*                                  493213.00662
#                137          494542 |*                                  495560.11679
#                131          496924 |*                                  498144.45038
#                118          499306 |*                                  500444.49153
#                135          501688 |*                                  502923.19259
#                198          504070 |**                                 505469.21717
#                231          506452 |**                                 507603.53680
#                224          508834 |**                                 510098.89286
#                225          511216 |**                                 512354.03556
#                230          513598 |**                                 514776.37391
#                187          515980 |**                                 517108.98930
#                189          518362 |**                                 519629.26984
#                178          520744 |**                                 521973.66292
#
#                871           > 95% |***********                        530690.71412
#
#        mean of 95%    470537.63876
#          95th %ile          523103
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
           prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w10   1   1           59634        18360        0       14       10   -w-
# bin/../bin-riscv64/select -N select_w10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 10 -w 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     56920                      56920
#                        max   1006981                      72529
#                       mean     62971.90211                61525.35027
#                     median     59774                      59634*
#                     stddev     14257.36476                 3670.91042
#             standard error       102.36455                   27.09177
#       99% confidence level       263.69109                   69.78841
#                       skew        40.00326                    1.18262
#                   kurtosis      2294.27411                    0.15375
#           time correlation         0.95698                    0.61708
#
#               elapsed time        20.00441
#                   run time        18.10171
#          getnsecs overhead      1399
#
#          number of samples     19399
#         number of outliers      1039
#    number of final samples     18360
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10           56920 |*                                   57067.00000
#                107           57305 |*                                   57567.57944
#                312           57690 |**                                  57903.69551
#                460           58075 |****                                58287.02609
#               3414           58460 |********************************    58683.31400
#               3133           58845 |*****************************       59000.25950
#               1662           59230 |***************                     59423.78640
#               1226           59615 |***********                         59785.60848
#                662           60000 |******                              60183.80514
#                587           60385 |*****                               60566.49063
#                430           60770 |****                                60952.72791
#                348           61155 |***                                 61343.35632
#                308           61540 |**                                  61726.36039
#                267           61925 |**                                  62104.63296
#                225           62310 |**                                  62498.38667
#                186           62695 |*                                   62896.46237
#                181           63080 |*                                   63264.04972
#                185           63465 |*                                   63647.89730
#                160           63850 |*                                   64050.74375
#                210           64235 |*                                   64461.19048
#                311           64620 |**                                  64827.01286
#                338           65005 |***                                 65197.31657
#                322           65390 |***                                 65577.39752
#                356           65775 |***                                 65964.85955
#                345           66160 |***                                 66339.75652
#                308           66545 |**                                  66722.66883
#                295           66930 |**                                  67114.52203
#                284           67315 |**                                  67501.88028
#                276           67700 |**                                  67884.80072
#                188           68085 |*                                   68267.13830
#                194           68470 |*                                   68658.17010
#                152           68855 |*                                   69032.17105
#
#                918           > 95% |********                            70632.85076
#
#        mean of 95%     61046.00814
#          95th %ile           69227
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
            prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w100   1   1           97715        19126        0        8      100   -w-
# bin/../bin-riscv64/select -N select_w100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 100 -w 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     94200                      94200
#                        max   1435382                     115667
#                       mean    102486.96672               100281.80430
#                     median     97867                      97715*
#                     stddev     20658.25874                 5128.41753
#             standard error       145.81009                   37.08270
#       99% confidence level       375.60679                   95.52502
#                       skew        27.16888                    1.45977
#                   kurtosis      1330.46244                    0.59884
#           time correlation         1.30278                    0.76143
#
#               elapsed time        20.00416
#                   run time        17.98705
#          getnsecs overhead      1399
#
#          number of samples     20073
#         number of outliers       947
#    number of final samples     19126
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           94200 |*                                   94200.00000
#                 10           94740 |*                                   95131.40000
#                 35           95280 |*                                   95589.60000
#                260           95820 |*                                   96226.44231
#               2613           96360 |****************                    96714.10601
#               5216           96900 |********************************    97158.13267
#               2262           97440 |*************                       97668.63926
#               1770           97980 |**********                          98252.58192
#               1181           98520 |*******                             98761.83319
#                632           99060 |***                                 99305.84652
#                368           99600 |**                                  99848.50815
#                244          100140 |*                                  100368.80738
#                162          100680 |*                                  100936.08025
#                105          101220 |*                                  101456.93333
#                 73          101760 |*                                  102001.09589
#                 75          102300 |*                                  102563.26667
#                 63          102840 |*                                  103131.87302
#                 35          103380 |*                                  103606.65714
#                 41          103920 |*                                  104218.41463
#                 35          104460 |*                                  104712.42857
#                 37          105000 |*                                  105265.75676
#                 37          105540 |*                                  105851.24324
#                114          106080 |*                                  106387.13158
#                282          106620 |*                                  106913.59929
#                308          107160 |*                                  107435.36039
#                359          107700 |**                                 107980.38440
#                339          108240 |**                                 108523.29204
#                350          108780 |**                                 109047.76571
#                314          109320 |*                                  109572.87898
#                293          109860 |*                                  110133.81229
#                323          110400 |*                                  110658.39628
#                232          110940 |*                                  111194.44397
#
#                957           > 95% |*****                              113168.95507
#
#        mean of 95%     99603.01057
#          95th %ile          111456
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
             prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w1000   1   1          632603         6594        0        1     1000   -w-
# bin/../bin-riscv64/select -N select_w1000 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -n 1000 -w 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    538002                     538002
#                        max   3661611                     860504
#                       mean    677778.81291               641603.70701
#                     median    645003                     632603*
#                     stddev    157031.40944                73099.33471
#             standard error      1849.99066                  900.19988
#       99% confidence level      4765.57594                 2318.91490
#                       skew         4.31567                    0.63789
#                   kurtosis        39.66276                   -0.27824
#           time correlation        56.90587                   37.37931
#
#               elapsed time        20.00802
#                   run time         4.89621
#          getnsecs overhead      1399
#
#          number of samples      7205
#         number of outliers       611
#    number of final samples      6594
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                112          538002 |********                           543464.98214
#                439          545599 |********************************   549490.40091
#                405          553196 |*****************************      556998.57531
#                437          560793 |*******************************    564465.45995
#                295          568390 |*********************              571923.90169
#                211          575987 |***************                    579576.51185
#                231          583584 |****************                   587180.99134
#                195          591181 |**************                     594966.72308
#                178          598778 |************                       602626.79775
#                199          606375 |**************                     610142.84925
#                240          613972 |*****************                  617864.37917
#                257          621569 |******************                 625360.67315
#                198          629166 |**************                     632790.57576
#                192          636763 |*************                      640755.87500
#                203          644360 |**************                     648302.29557
#                250          651957 |******************                 655795.20400
#                254          659554 |******************                 663129.52362
#                243          667151 |*****************                  670768.21399
#                239          674748 |*****************                  678598.62762
#                206          682345 |***************                    686215.44660
#                185          689942 |*************                      693507.76216
#                169          697539 |************                       701253.16568
#                159          705136 |***********                        708758.87421
#                108          712733 |*******                            716211.26852
#                110          720330 |********                           723709.29091
#                105          727927 |*******                            732004.87619
#                 88          735524 |******                             739130.23864
#                 86          743121 |******                             747014.63953
#                 91          750718 |******                             754049.19780
#                 70          758315 |*****                              761103.01429
#                 65          765912 |****                               769906.16923
#                 44          773509 |***                                777557.56818
#
#                330           > 95% |************************           813386.55152
#
#        mean of 95%    632553.84451
#          95th %ile          781103
#
# WARNINGS
#     Actual benchmark run time only accounts for 24.5% of elapsed time.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
      prc thr      nsecs/call      samples   errors cnt/samp 
semop   1   1           38646        12750        0       20 
# bin/../bin-riscv64/semop -N semop -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     37555                      37582
#                        max   1639155                      39882
#                       mean     44015.29972                38730.32918
#                     median     38943                      38646*
#                     stddev     19502.42313                  383.73400
#             standard error       143.95383                    3.39841
#       99% confidence level       370.82505                    8.75429
#                       skew        32.39871                    0.62767
#                   kurtosis      2451.27339                    0.04545
#           time correlation         1.54013                    0.10045
#
#               elapsed time        20.00362
#                   run time        16.80950
#          getnsecs overhead      1399
#
#          number of samples     18354
#         number of outliers      5604
#    number of final samples     12750
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           37582 |*                                   37582.00000
#                  1           37642 |*                                   37675.00000
#                 11           37702 |*                                   37736.27273
#                 15           37762 |*                                   37791.00000
#                 30           37822 |*                                   37853.63333
#                 62           37882 |*                                   37914.08065
#                 51           37942 |*                                   37976.52941
#                 57           38002 |*                                   38027.92982
#                 38           38062 |*                                   38089.44737
#                 83           38122 |**                                  38157.24096
#                231           38182 |*****                               38216.74026
#                475           38242 |***********                         38273.09263
#                605           38302 |**************                      38335.31074
#               1090           38362 |**************************          38392.72385
#               1294           38422 |********************************    38450.68702
#                968           38482 |***********************             38509.70971
#                837           38542 |********************                38571.25448
#                703           38602 |*****************                   38629.75391
#                557           38662 |*************                       38689.81508
#                566           38722 |*************                       38750.42756
#                567           38782 |**************                      38812.07055
#                556           38842 |*************                       38873.28058
#                566           38902 |*************                       38932.32862
#                582           38962 |**************                      38989.75430
#                472           39022 |***********                         39052.36017
#                427           39082 |**********                          39112.09836
#                339           39142 |********                            39171.26549
#                272           39202 |******                              39231.95588
#                205           39262 |*****                               39290.81463
#                206           39322 |*****                               39349.75728
#                163           39382 |****                                39412.39264
#                 82           39442 |**                                  39456.03659
#
#                638           > 95% |***************                     39643.38715
#
#        mean of 95%     38682.23382
#          95th %ile           39472
#
# Usage: semop
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'semop')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures semop()
           prc thr      nsecs/call      samples   errors cnt/samp 
setcontext   1   1           13703        17736        0       66 
# bin/../bin-riscv64/setcontext -N setcontext -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     13127                      13127
#                        max    156267                      17006
#                       mean     14516.69710                14186.36164
#                     median     13718                      13703*
#                     stddev      2475.27854                  939.77335
#             standard error        18.09668                    7.05660
#       99% confidence level        46.61704                   18.17779
#                       skew        16.84541                    1.38518
#                   kurtosis       659.77351                    0.40833
#           time correlation         0.23193                    0.15173
#
#               elapsed time        20.00352
#                   run time        18.11240
#          getnsecs overhead      1399
#
#          number of samples     18709
#         number of outliers       973
#    number of final samples     17736
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5           13127 |*                                   13178.40000
#                 17           13224 |*                                   13281.64706
#                 62           13321 |*                                   13372.20968
#               1312           13418 |*********                           13487.21951
#               2990           13515 |********************                13553.47358
#               4659           13612 |********************************    13659.38206
#               2195           13709 |***************                     13751.52164
#               1156           13806 |*******                             13848.21972
#                442           13903 |***                                 13943.40045
#                193           14000 |*                                   14043.06218
#                114           14097 |*                                   14139.76316
#                113           14194 |*                                   14242.46903
#                 80           14291 |*                                   14336.85000
#                 73           14388 |*                                   14436.57534
#                 66           14485 |*                                   14537.39394
#                 58           14582 |*                                   14627.51724
#                 53           14679 |*                                   14728.05660
#                 60           14776 |*                                   14823.88333
#                 63           14873 |*                                   14922.95238
#                 72           14970 |*                                   15020.37500
#                137           15067 |*                                   15120.50365
#                182           15164 |*                                   15213.04396
#                221           15261 |*                                   15307.80995
#                284           15358 |*                                   15407.18310
#                347           15455 |**                                  15503.78963
#                377           15552 |**                                  15599.61273
#                356           15649 |**                                  15693.46067
#                337           15746 |**                                  15789.60237
#                268           15843 |*                                   15889.30970
#                228           15940 |*                                   15986.72807
#                213           16037 |*                                   16084.22066
#                116           16134 |*                                   16167.54310
#
#                887           > 95% |******                              16537.57835
#
#        mean of 95%     14062.58401
#          95th %ile           16203
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: setcontext
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'setcontext')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures setcontext()
           prc thr      nsecs/call      samples   errors cnt/samp 
setsockopt   1   1           23080        10848        0       35 
# bin/../bin-riscv64/setsockopt -N setsockopt -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     21939                      21939
#                        max    399002                      24822
#                       mean     27202.66959                23192.12104
#                     median     23367                      23080*
#                     stddev     11101.72237                  543.83735
#             standard error        88.81946                    5.22149
#       99% confidence level       228.79894                   13.45055
#                       skew         5.88130                    0.94596
#                   kurtosis        94.95844                    0.51463
#           time correlation         1.38251                    0.16336
#
#               elapsed time        20.00381
#                   run time        14.92138
#          getnsecs overhead      1399
#
#          number of samples     15623
#         number of outliers      4775
#    number of final samples     10848
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           21939 |*                                   21970.66667
#                 14           22016 |*                                   22053.50000
#                 17           22093 |*                                   22128.70588
#                 31           22170 |*                                   22219.90323
#                 54           22247 |**                                  22292.46296
#                180           22324 |******                              22367.46111
#                214           22401 |********                            22441.17290
#                284           22478 |**********                          22513.89789
#                355           22555 |*************                       22595.48451
#                596           22632 |**********************              22672.76007
#                669           22709 |*************************           22746.77130
#                732           22786 |****************************        22823.09290
#                782           22863 |******************************      22903.07801
#                797           22940 |******************************      22979.32748
#                834           23017 |********************************    23054.84053
#                733           23094 |****************************        23131.88267
#                683           23171 |**************************          23208.33089
#                537           23248 |********************                23284.01490
#                487           23325 |******************                  23359.14990
#                380           23402 |**************                      23437.71579
#                308           23479 |***********                         23515.64610
#                254           23556 |*********                           23594.14961
#                218           23633 |********                            23667.02294
#                157           23710 |******                              23746.85987
#                120           23787 |****                                23828.62500
#                122           23864 |****                                23900.75410
#                118           23941 |****                                23978.49153
#                133           24018 |*****                               24060.96241
#                132           24095 |*****                               24133.46212
#                135           24172 |*****                               24209.51852
#                125           24249 |****                                24287.76800
#                101           24326 |***                                 24351.57426
#
#                543           > 95% |********************                24568.78637
#
#        mean of 95%     23119.58059
#          95th %ile           24381
#
# WARNINGS
#     Actual benchmark run time only accounts for 74.6% of elapsed time.
#
# Usage: setsockopt
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'setsockopt')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# setsockopt(TCP_NODELAY)
          prc thr      nsecs/call      samples   errors cnt/samp 
sigaction   1   1           24119        18202        0       37 
# bin/../bin-riscv64/sigaction -N sigaction -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     23072                      23072
#                        max    494852                      29347
#                       mean     25482.24732                24873.50352
#                     median     24141                      24119*
#                     stddev      6045.81154                 1491.30683
#             standard error        43.73565                   11.05369
#       99% confidence level       112.66304                   28.47432
#                       skew        36.20091                    1.44960
#                   kurtosis      2287.85129                    0.57161
#           time correlation         0.38579                    0.23041
#
#               elapsed time        20.00374
#                   run time        18.12959
#          getnsecs overhead      1399
#
#          number of samples     19109
#         number of outliers       907
#    number of final samples     18202
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           23072 |*                                   23146.42857
#                 17           23231 |*                                   23325.88235
#                 47           23390 |*                                   23473.53191
#                143           23549 |*                                   23648.06294
#               1282           23708 |********                            23823.41810
#               4950           23867 |********************************    23949.64687
#               3858           24026 |************************            24094.78227
#               1990           24185 |************                        24255.02211
#                781           24344 |*****                               24410.51344
#                366           24503 |**                                  24570.94809
#                246           24662 |*                                   24737.76423
#                161           24821 |*                                   24891.00621
#                 85           24980 |*                                   25052.41176
#                 59           25139 |*                                   25211.20339
#                 57           25298 |*                                   25377.96491
#                 47           25457 |*                                   25532.38298
#                 38           25616 |*                                   25693.92105
#                 34           25775 |*                                   25864.82353
#                 31           25934 |*                                   26023.12903
#                 51           26093 |*                                   26182.62745
#                 36           26252 |*                                   26339.11111
#                136           26411 |*                                   26510.33824
#                194           26570 |*                                   26661.45361
#                302           26729 |*                                   26816.10927
#                397           26888 |**                                  26967.19395
#                408           27047 |**                                  27125.07108
#                403           27206 |**                                  27284.02481
#                351           27365 |**                                  27442.27920
#                248           27524 |*                                   27599.38710
#                205           27683 |*                                   27755.77073
#                198           27842 |*                                   27920.48990
#                163           28001 |*                                   28067.41718
#
#                911           > 95% |*****                               28662.72009
#
#        mean of 95%     24673.86345
#          95th %ile           28141
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: sigaction
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sigaction')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures sigaction()
           prc thr      nsecs/call      samples   errors cnt/samp 
siglongjmp   1   1           14997        18272        0       60 
# bin/../bin-riscv64/siglongjmp -N siglongjmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     14385                      14385
#                        max    598269                      18620
#                       mean     15937.22111                15520.62675
#                     median     15010                      14997*
#                     stddev      5573.85693                 1033.35267
#             standard error        40.33207                    7.64461
#       99% confidence level       103.89541                   19.69252
#                       skew        66.18460                    1.41006
#                   kurtosis      6410.04442                    0.42072
#           time correlation         0.26779                    0.15938
#
#               elapsed time        20.00440
#                   run time        18.19742
#          getnsecs overhead      1399
#
#          number of samples     19099
#         number of outliers       827
#    number of final samples     18272
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           14385 |*                                   14464.28571
#                 23           14490 |*                                   14547.56522
#                 45           14595 |*                                   14649.64444
#                596           14700 |***                                 14773.13926
#               5720           14805 |********************************    14861.49825
#               3282           14910 |******************                  14958.09049
#               2376           15015 |*************                       15060.60438
#                861           15120 |****                                15164.69686
#                425           15225 |**                                  15270.38118
#                261           15330 |*                                   15379.28736
#                174           15435 |*                                   15487.58621
#                119           15540 |*                                   15587.73109
#                 62           15645 |*                                   15688.61290
#                 46           15750 |*                                   15800.23913
#                 37           15855 |*                                   15903.16216
#                 47           15960 |*                                   16018.00000
#                 34           16065 |*                                   16118.61765
#                 34           16170 |*                                   16218.52941
#                 35           16275 |*                                   16323.42857
#                 52           16380 |*                                   16440.17308
#                 57           16485 |*                                   16542.70175
#                 71           16590 |*                                   16649.91549
#                179           16695 |*                                   16750.22346
#                288           16800 |*                                   16855.12500
#                364           16905 |**                                  16954.74176
#                441           17010 |**                                  17060.80952
#                420           17115 |**                                  17164.84286
#                340           17220 |*                                   17274.73529
#                316           17325 |*                                   17377.53481
#                247           17430 |*                                   17477.54656
#                234           17535 |*                                   17582.12821
#                165           17640 |*                                   17678.73939
#
#                914           > 95% |*****                               18092.75492
#
#        mean of 95%     15385.18919
#          95th %ile           17724
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: siglongjmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'siglongjmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures siglongjmp()
       prc thr      nsecs/call      samples   errors cnt/samp 
signal   1   1          208771         8712        0       10 
# bin/../bin-riscv64/signal -N signal -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    193041                     193041
#                        max    813332                     234311
#                       mean    213387.07891               208424.23003
#                     median    209401                     208771*
#                     stddev     35699.51804                 8629.74408
#             standard error       373.47414                   92.45683
#       99% confidence level       962.06939                  238.16879
#                       skew         9.27828                    0.63968
#                   kurtosis       100.96334                   -0.50858
#           time correlation         6.03984                    3.29323
#
#               elapsed time        20.00470
#                   run time        19.50993
#          getnsecs overhead      1399
#
#          number of samples      9137
#         number of outliers       425
#    number of final samples      8712
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          193041 |*                                  193581.00000
#                  4          194034 |*                                  194638.50000
#                 19          195027 |*                                  195579.94737
#                 45          196020 |*                                  196622.55556
#                100          197013 |**                                 197618.00000
#                272          198006 |******                             198633.42647
#                947          198999 |**********************             199596.46990
#               1341          199992 |********************************   200517.26398
#                892          200985 |*********************              201378.65695
#                249          201978 |*****                              202362.92771
#                100          202971 |**                                 203415.50000
#                 61          203964 |*                                  204480.34426
#                 61          204957 |*                                  205403.29508
#                 50          205950 |*                                  206534.40000
#                 76          206943 |*                                  207516.13158
#                184          207936 |****                               208519.36957
#                348          208929 |********                           209434.62069
#                440          209922 |**********                         210405.04545
#                449          210915 |**********                         211401.40089
#                414          211908 |*********                          212390.10628
#                385          212901 |*********                          213415.96104
#                280          213894 |******                             214365.17857
#                290          214887 |******                             215379.44828
#                227          215880 |*****                              216393.29075
#                205          216873 |****                               217371.92683
#                162          217866 |***                                218334.02469
#                147          218859 |***                                219352.83673
#                128          219852 |***                                220382.40625
#                114          220845 |**                                 221365.29825
#                 93          221838 |**                                 222336.37634
#                 98          222831 |**                                 223315.08163
#                 90          223824 |**                                 224322.11111
#
#                436           > 95% |**********                         228212.90367
#
#        mean of 95%    207381.71411
#          95th %ile          224811
#
# Usage: signal
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'signal')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures kill()
            prc thr      nsecs/call      samples   errors cnt/samp 
sigprocmask   1   1           23730        17408        0       39 
# bin/../bin-riscv64/sigprocmask -N sigprocmask -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     22608                      22608
#                        max    131120                      29010
#                       mean     25085.93447                24513.59691
#                     median     23755                      23730*
#                     stddev      3806.11053                 1499.87550
#             standard error        28.07886                   11.36791
#       99% confidence level        72.33115                   29.28375
#                       skew         8.69304                    1.37868
#                   kurtosis       118.00359                    0.30872
#           time correlation         0.38689                    0.24206
#
#               elapsed time        20.00430
#                   run time        18.33241
#          getnsecs overhead      1399
#
#          number of samples     18374
#         number of outliers       966
#    number of final samples     17408
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           22608 |*                                   22608.00000
#                 16           22767 |*                                   22869.93750
#                 36           22926 |*                                   23006.02778
#                 43           23085 |*                                   23171.81395
#                145           23244 |*                                   23347.11034
#               2593           23403 |**************                      23509.09911
#               5693           23562 |********************************    23636.09046
#               2566           23721 |**************                      23797.34996
#               1421           23880 |*******                             23938.01548
#                327           24039 |*                                   24102.32110
#                170           24198 |*                                   24278.16471
#                 94           24357 |*                                   24424.55319
#                 46           24516 |*                                   24597.43478
#                 39           24675 |*                                   24737.43590
#                 35           24834 |*                                   24910.62857
#                 37           24993 |*                                   25064.67568
#                 29           25152 |*                                   25242.20690
#                 22           25311 |*                                   25393.81818
#                 26           25470 |*                                   25540.19231
#                 36           25629 |*                                   25713.22222
#                 44           25788 |*                                   25878.86364
#                 79           25947 |*                                   26034.62025
#                142           26106 |*                                   26193.36620
#                255           26265 |*                                   26347.89020
#                396           26424 |**                                  26507.64394
#                396           26583 |**                                  26669.34848
#                438           26742 |**                                  26822.08447
#                409           26901 |**                                  26977.47677
#                324           27060 |*                                   27133.12346
#                257           27219 |*                                   27292.03113
#                251           27378 |*                                   27456.39442
#                171           27537 |*                                   27602.08187
#
#                871           > 95% |****                                28202.25488
#
#        mean of 95%     24319.31614
#          95th %ile           27673
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: sigprocmask
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sigprocmask')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures sigprocmask()
         prc thr      nsecs/call      samples   errors cnt/samp 
socket_i   1   1           83037          314        0      400 
# bin/../bin-riscv64/socket -N socket_i -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 400 -f PF_INET 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     67215                      67215
#                        max    260902                     231204
#                       mean    108269.06013               107332.60191
#                     median     83299                      83037*
#                     stddev     46762.04797                45403.29444
#             standard error      2630.57072                 2562.25614
#       99% confidence level      6776.35017                 6600.37181
#                       skew         1.22492                    1.19074
#                   kurtosis         0.32278                    0.14962
#           time correlation       455.28729                  446.03220
#
#               elapsed time        20.06121
#                   run time        13.68565
#          getnsecs overhead      1399
#
#          number of samples       316
#         number of outliers         2
#    number of final samples       314
#             ops per sample       400.00000 (-B 400)
#
#       recommended -B value         9
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 54           67215 |******************************      69843.51852
#                 57           71586 |********************************    73956.80702
#                 21           75957 |***********                         78109.80952
#                 35           80328 |*******************                 82357.34286
#                 10           84699 |*****                               85882.00000
#                  6           89070 |***                                 91644.33333
#                  8           93441 |****                                95562.87500
#                  5           97812 |**                                 100268.40000
#                  7          102183 |***                                103961.14286
#                  9          106554 |*****                              108542.88889
#                  4          110925 |**                                 113540.75000
#                  8          115296 |****                               117598.87500
#                  6          119667 |***                                121555.50000
#                  3          124038 |*                                  127096.66667
#                  3          128409 |*                                  130452.66667
#                  4          132780 |**                                 133909.75000
#                  4          137151 |**                                 139318.00000
#                  1          141522 |*                                  142210.00000
#                  3          145893 |*                                  147260.00000
#                  6          150264 |***                                152806.16667
#                  4          154635 |**                                 157219.50000
#                  6          159006 |***                                161819.83333
#                  7          163377 |***                                165600.00000
#                  2          167748 |*                                  171168.00000
#                  3          172119 |*                                  174192.33333
#                  3          176490 |*                                  179504.00000
#                  3          180861 |*                                  183278.66667
#                  5          185232 |**                                 186154.40000
#                  3          189603 |*                                  191232.66667
#                  3          193974 |*                                  195935.00000
#                  3          198345 |*                                  200720.00000
#                  2          202716 |*                                  204561.50000
#
#                 16           > 95% |********                           219181.37500
#
#        mean of 95%    101327.29866
#          95th %ile          207082
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 68.2% of elapsed time.
#
# Usage: socket
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socket')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f socket-family (default PF_UNIX)]
# notes: measures socket
         prc thr      nsecs/call      samples   errors cnt/samp 
socket_u   1   1           83822          238        0      600 
# bin/../bin-riscv64/socket -N socket_u -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 600 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     64905                      64905
#                        max    189638                     189638
#                       mean    100010.20168               100010.20168
#                     median     83822                      83822*
#                     stddev     37324.55597                37324.55597
#             standard error      2419.39162                 2419.39162
#       99% confidence level      6232.35280                 6232.35280
#                       skew         0.95940                    0.95940
#                   kurtosis        -0.53060                   -0.53060
#           time correlation       498.33923                  498.33923
#
#               elapsed time        20.04547
#                   run time        14.28179
#          getnsecs overhead      1399
#
#          number of samples       238
#         number of outliers         0
#    number of final samples       238
#             ops per sample       600.00000 (-B 600)
#
#       recommended -B value        10
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 46           64905 |********************************    66984.63043
#                 26           68273 |******************                  69678.53846
#                 23           71641 |****************                    73508.65217
#                 13           75009 |*********                           77032.92308
#                 10           78377 |******                              80004.90000
#                  3           81745 |**                                  83687.00000
#                 11           85113 |*******                             86880.54545
#                  9           88481 |******                              90027.55556
#                  2           91849 |*                                   93585.50000
#                  8           95217 |*****                               96663.62500
#                  4           98585 |**                                  99963.50000
#                  9          101953 |******                             103439.77778
#                  3          105321 |**                                 107579.66667
#                  1          108689 |*                                  109765.00000
#                  3          112057 |**                                 113187.66667
#                  4          115425 |**                                 116834.25000
#                  2          118793 |*                                  121851.00000
#                  1          122161 |*                                  122385.00000
#                  2          125529 |*                                  127440.50000
#                  3          128897 |**                                 130364.00000
#                  4          132265 |**                                 133712.00000
#                  2          135633 |*                                  138428.50000
#                  1          139001 |*                                  139616.00000
#                  6          142369 |****                               143715.66667
#                  3          145737 |**                                 147740.00000
#                  1          149105 |*                                  150840.00000
#                  1          152473 |*                                  152954.00000
#                  4          155841 |**                                 158956.50000
#                  3          159209 |**                                 160864.00000
#                  4          162577 |**                                 163601.00000
#                  7          165945 |****                               168046.14286
#                  7          169313 |****                               170989.57143
#
#                 12           > 95% |********                           179238.75000
#
#        mean of 95%     95803.37611
#          95th %ile          172678
#
# WARNINGS
#     Actual benchmark run time only accounts for 71.2% of elapsed time.
#
# Usage: socket
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socket')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f socket-family (default PF_UNIX)]
# notes: measures socket
           prc thr      nsecs/call      samples   errors cnt/samp 
socketpair   1   1          235879          342        0      150 
# bin/../bin-riscv64/socketpair -N socketpair -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -B 300 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    215187                     215187
#                        max    730183                     635674
#                       mean    301531.80580               298072.57018
#                     median    237100                     235879*
#                     stddev    118283.13191               112818.64138
#             standard error      6368.14975                 6100.53345
#       99% confidence level     16404.35377                15714.97415
#                       skew         1.52870                    1.48874
#                   kurtosis         1.23806                    0.99552
#           time correlation       994.97879                  960.15325
#
#               elapsed time        20.03835
#                   run time        15.60475
#          getnsecs overhead      1399
#
#          number of samples       345
#         number of outliers         3
#    number of final samples       342
#             ops per sample       150.00000 (-B 300)
#
#       recommended -B value         3
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                137          215187 |********************************   220902.80292
#                 35          225811 |********                           230481.22857
#                 17          236435 |***                                241390.88235
#                 12          247059 |**                                 251830.50000
#                 11          257683 |**                                 263675.72727
#                  7          268307 |*                                  272660.00000
#                  4          278931 |*                                  282650.50000
#                 14          289555 |***                                294206.35714
#                  9          300179 |**                                 306952.22222
#                  7          310803 |*                                  316627.57143
#                  8          321427 |*                                  328727.75000
#                  0          332051 |                                              -
#                  7          342675 |*                                  346817.42857
#                  4          353299 |*                                  358261.00000
#                  2          363923 |*                                  367417.00000
#                  2          374547 |*                                  377475.50000
#                  4          385171 |*                                  392178.50000
#                  2          395795 |*                                  405061.50000
#                  1          406419 |*                                  414529.00000
#                  3          417043 |*                                  422532.33333
#                  1          427667 |*                                  431584.00000
#                  5          438291 |*                                  443335.20000
#                  3          448915 |*                                  455316.66667
#                  3          459539 |*                                  464142.00000
#                  5          470163 |*                                  474956.00000
#                  3          480787 |*                                  486182.66667
#                  1          491411 |*                                  492671.00000
#                  3          502035 |*                                  507605.00000
#                  6          512659 |*                                  516766.50000
#                  3          523283 |*                                  529634.33333
#                  4          533907 |*                                  538747.00000
#                  1          544531 |*                                  552547.00000
#
#                 18           > 95% |****                               597408.38889
#
#        mean of 95%    281442.80247
#          95th %ile          555125
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 77.9% of elapsed time.
#
# Usage: socketpair
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socketpair')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures socketpair
         prc thr      nsecs/call      samples   errors cnt/samp 
stat_tmp   1   1          231334         7046        0        3 
# bin/../bin-riscv64/stat -N stat_tmp -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    219034                     219034
#                        max   1276404                     279526
#                       mean    245926.70466               237759.47147
#                     median    231767                     231334*
#                     stddev     52434.04350                13934.90223
#             standard error       606.14353                  166.00937
#       99% confidence level      1561.42575                  427.64014
#                       skew         8.85416                    1.44491
#                   kurtosis       101.63676                    0.67541
#           time correlation        11.16719                    5.76455
#
#               elapsed time        20.00421
#                   run time         6.36703
#          getnsecs overhead      1399
#
#          number of samples      7483
#         number of outliers       437
#    number of final samples      7046
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          219034 |*                                  219534.00000
#                  8          220586 |*                                  221238.37500
#                 11          222138 |*                                  222900.36364
#                 19          223690 |*                                  224642.52632
#                286          225242 |******                             226255.14685
#                979          226794 |*********************              227712.64760
#               1439          228346 |********************************   229038.74496
#                827          229898 |******************                 230612.00000
#                659          231450 |**************                     232157.39605
#                434          233002 |*********                          233748.81106
#                325          234554 |*******                            235278.60308
#                193          236106 |****                               236789.54404
#                133          237658 |**                                 238332.37594
#                106          239210 |**                                 239922.74528
#                 64          240762 |*                                  241428.78125
#                 48          242314 |*                                  243051.89583
#                 27          243866 |*                                  244650.03704
#                 24          245418 |*                                  246120.45833
#                 18          246970 |*                                  247559.33333
#                 22          248522 |*                                  249211.22727
#                 27          250074 |*                                  250839.00000
#                 52          251626 |*                                  252380.63462
#                 61          253178 |*                                  253971.95082
#                 68          254730 |*                                  255513.11765
#                 91          256282 |**                                 257088.08791
#                108          257834 |**                                 258751.62037
#                135          259386 |***                                260198.60741
#                116          260938 |**                                 261765.72414
#                128          262490 |**                                 263279.14062
#                105          264042 |**                                 264798.60000
#                 95          265594 |**                                 266392.57895
#                 83          267146 |*                                  267955.62651
#
#                353           > 95% |*******                            273176.27479
#
#        mean of 95%    235891.53011
#          95th %ile          268676
#
# WARNINGS
#     Actual benchmark run time only accounts for 31.8% of elapsed time.
#
# Usage: stat
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'stat')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-stat (default /dev/null)]
# notes: measures stat()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strchr_10   1   1              70        19836        0    11716       10
# bin/../bin-riscv64/strchr -N strchr_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        67                         67
#                        max     30690                         79
#                       mean        75.52877                   70.85199
#                     median        70                         70*
#                     stddev       222.73569                    2.56109
#             standard error         1.52846                    0.01818
#       99% confidence level         3.93731                    0.04684
#                       skew       127.12539                    1.43686
#                   kurtosis     17030.85572                    1.19049
#           time correlation         0.00162                    0.00039
#
#               elapsed time        20.00492
#                   run time        17.93003
#          getnsecs overhead      1399
#
#          number of samples     21236
#         number of outliers      1400
#    number of final samples     19836
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2              67 |*                                             -
#                700              68 |***                                           -
#               7202              69 |********************************              -
#               5293              70 |***********************                       -
#               1734              71 |*******                                       -
#                421              72 |*                                             -
#                718              73 |***                                           -
#               1376              74 |******                                        -
#                920              75 |****                                          -
#                478              76 |**                                            -
#
#                992           > 95% |****                                   77.86895
#
#        mean of 95%        70.48259
#          95th %ile              76
#
# Usage: strchr
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strchr')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strchr]
# notes: measures strchr()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strchr_1k   1   1             356        18309        0     2610     1024
# bin/../bin-riscv64/strchr -N strchr_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       348                        348
#                        max     10710                        396
#                       mean       367.95261                  361.39128
#                     median       356                        356*
#                     stddev        95.23788                   11.51823
#             standard error         0.68883                    0.08512
#       99% confidence level         1.77442                    0.21928
#                       skew        70.96895                    1.28350
#                   kurtosis      7330.37599                    0.25833
#           time correlation         0.00369                    0.00189
#
#               elapsed time        20.00480
#                   run time        18.23719
#          getnsecs overhead      1399
#
#          number of samples     19116
#         number of outliers       807
#    number of final samples     18309
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 45             348 |*                                     348.86667
#                929             350 |*******                               350.80301
#               3405             352 |****************************          352.62555
#               3880             354 |********************************      354.48222
#               2413             356 |*******************                   356.43804
#               1736             358 |**************                        358.48790
#               1065             360 |********                              360.40094
#                338             362 |**                                    362.34320
#                133             364 |*                                     364.39850
#                 95             366 |*                                     366.49474
#                 51             368 |*                                     368.54902
#                 73             370 |*                                     370.57534
#                127             372 |*                                     372.57480
#                407             374 |***                                   374.55528
#                577             376 |****                                  376.51646
#                662             378 |*****                                 378.50604
#                595             380 |****                                  380.49580
#                521             382 |****                                  382.46449
#                341             384 |**                                    384.41056
#
#                916           > 95% |*******                               389.58843
#
#        mean of 95%       359.90628
#          95th %ile             385
#
# Usage: strchr
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strchr')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strchr]
# notes: measures strchr()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcmp_10   1   1              49        20465        0    16170       10
# bin/../bin-riscv64/strcmp -N strcmp_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        47                         47
#                        max     32900                         55
#                       mean        53.76950                   49.90271
#                     median        49                         49*
#                     stddev       245.02531                    1.71526
#             standard error         1.66699                    0.01199
#       99% confidence level         4.29417                    0.03089
#                       skew       121.37899                    1.38974
#                   kurtosis     15534.14557                    1.02284
#           time correlation         0.00127                    0.00025
#
#               elapsed time        20.00396
#                   run time        17.68567
#          getnsecs overhead      1399
#
#          number of samples     21605
#         number of outliers      1140
#    number of final samples     20465
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 45              47 |*                                             -
#               2010              48 |******                                        -
#              10409              49 |********************************              -
#               3507              50 |**********                                    -
#                665              51 |**                                            -
#               1280              52 |***                                           -
#               1305              53 |****                                          -
#                220              54 |*                                             -
#
#               1024           > 95% |***                                    54.44629
#
#        mean of 95%        49.66339
#          95th %ile              54
#
# Usage: strcmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcmp()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcmp_1k   1   1             408        18441        0     2182     1024
# bin/../bin-riscv64/strcmp -N strcmp_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       387                        387
#                        max     45780                        453
#                       mean       427.61247                  412.88130
#                     median       409                        408*
#                     stddev       350.76834                   13.24391
#             standard error         2.49495                    0.09753
#       99% confidence level         6.42698                    0.25123
#                       skew       113.89606                    1.30511
#                   kurtosis     14325.88707                    0.66441
#           time correlation         0.00617                    0.00222
#
#               elapsed time        20.00345
#                   run time        18.13713
#          getnsecs overhead      1399
#
#          number of samples     19766
#         number of outliers      1325
#    number of final samples     18441
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             387 |*                                     387.33333
#                  3             389 |*                                     389.33333
#                  7             391 |*                                     391.57143
#                 12             393 |*                                     393.33333
#                 40             395 |*                                     395.70000
#                224             397 |**                                    397.79911
#                969             399 |************                          399.68834
#               2087             401 |***************************           401.58697
#               2439             403 |********************************      403.51538
#               1683             405 |**********************                405.47712
#               1794             407 |***********************               407.54459
#               1953             409 |*************************             409.51408
#               1424             411 |******************                    411.45787
#                838             413 |**********                            413.43317
#                534             415 |*******                               415.46442
#                386             417 |*****                                 417.40674
#                203             419 |**                                    419.38424
#                135             421 |*                                     421.46667
#                 82             423 |*                                     423.48780
#                132             425 |*                                     425.58333
#                265             427 |***                                   427.60377
#                386             429 |*****                                 429.50518
#                385             431 |*****                                 431.47013
#                362             433 |****                                  433.45856
#                359             435 |****                                  435.45404
#                336             437 |****                                  437.50595
#                290             439 |***                                   439.43448
#                187             441 |**                                    441.32620
#
#                923           > 95% |************                          447.00758
#
#        mean of 95%       411.08323
#          95th %ile             442
#
# Usage: strcmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcmp()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcpy_10   1   1             635         6748        0     1361       10
# bin/../bin-riscv64/strcpy -N strcpy_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       603                        603
#                        max     39660                        705
#                       mean       671.88076                  641.89226
#                     median       636                        635*
#                     stddev       520.13958                   20.97872
#             standard error         6.14614                    0.25538
#       99% confidence level        15.83247                    0.65787
#                       skew        62.48329                    1.17311
#                   kurtosis      4503.55731                    0.43197
#           time correlation         0.03290                    0.00981
#
#               elapsed time        20.00735
#                   run time         6.36614
#          getnsecs overhead      1399
#
#          number of samples      7162
#         number of outliers       414
#    number of final samples      6748
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             603 |*                                     604.00000
#                  7             606 |*                                     607.85714
#                 10             609 |*                                     610.30000
#                 70             612 |***                                   613.25714
#                155             615 |*******                               616.07742
#                243             618 |***********                           619.14403
#                406             621 |*******************                   622.07389
#                529             624 |*************************             625.05860
#                669             627 |********************************      628.02840
#                651             630 |*******************************       630.96313
#                655             633 |*******************************       633.98931
#                602             636 |****************************          636.98505
#                485             639 |***********************               639.93196
#                346             642 |****************                      642.90173
#                254             645 |************                          645.91339
#                169             648 |********                              648.91124
#                 84             651 |****                                  651.77381
#                 50             654 |**                                    655.06000
#                 47             657 |**                                    658.00000
#                 65             660 |***                                   661.13846
#                 61             663 |**                                    664.04918
#                 84             666 |****                                  667.15476
#                111             669 |*****                                 670.00000
#                126             672 |******                                672.99206
#                128             675 |******                                676.01562
#                141             678 |******                                679.00000
#                128             681 |******                                681.94531
#                107             684 |*****                                 685.05607
#                 24             687 |*                                     687.00000
#
#                338           > 95% |****************                      694.05325
#
#        mean of 95%       639.14181
#          95th %ile             687
#
# WARNINGS
#     Actual benchmark run time only accounts for 31.8% of elapsed time.
#
# Usage: strcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcpy_1k   1   1             398        18480        0     2243     1024
# bin/../bin-riscv64/strcpy -N strcpy_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       373                        373
#                        max     34030                        452
#                       mean       417.67972                  405.45179
#                     median       399                        398*
#                     stddev       268.57689                   15.42538
#             standard error         1.91924                    0.11347
#       99% confidence level         4.94396                    0.29230
#                       skew       105.74086                    1.01029
#                   kurtosis     12769.40128                   -0.23685
#           time correlation         0.00588                    0.00263
#
#               elapsed time        20.00478
#                   run time        18.06704
#          getnsecs overhead      1399
#
#          number of samples     19583
#         number of outliers      1103
#    number of final samples     18480
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4             373 |*                                     373.75000
#                  1             375 |*                                     375.00000
#                  8             377 |*                                     377.62500
#                  2             379 |*                                     380.00000
#                 13             381 |*                                     381.38462
#                  4             383 |*                                     383.75000
#                 28             385 |*                                     385.67857
#                115             387 |*                                     387.69565
#                548             389 |******                                389.66058
#               1621             391 |******************                    391.60703
#               2789             393 |********************************      393.51918
#               2614             395 |*****************************         395.45448
#               1840             397 |*********************                 397.47554
#               1457             399 |****************                      399.46809
#                970             401 |***********                           401.43505
#                506             403 |*****                                 403.38142
#                243             405 |**                                    405.37860
#                105             407 |*                                     407.40952
#                 47             409 |*                                     409.29787
#                 36             411 |*                                     411.47222
#                 38             413 |*                                     413.52632
#                111             415 |*                                     415.63964
#                265             417 |***                                   417.63396
#                481             419 |*****                                 419.54470
#                680             421 |*******                               421.49412
#                793             423 |*********                             423.48802
#                688             425 |*******                               425.47529
#                545             427 |******                                427.42018
#                437             429 |*****                                 429.49428
#                340             431 |***                                   431.51176
#                227             433 |**                                    433.46256
#
#                924           > 95% |**********                            441.76948
#
#        mean of 95%       403.54033
#          95th %ile             435
#
# Usage: strcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcpy()
         prc thr      nsecs/call      samples   errors cnt/samp   format
strftime   1   1            3257        18399        0      284       %c
# bin/../bin-riscv64/strftime -N strftime -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      3076                       3076
#                        max    277751                       3652
#                       mean      3393.05648                 3304.25588
#                     median      3261                       3257*
#                     stddev      2761.01007                  115.76882
#             standard error        19.93055                    0.85348
#       99% confidence level        51.34109                    2.19857
#                       skew        92.76042                    1.08868
#                   kurtosis      8929.23900                    0.04602
#           time correlation         0.04494                    0.01988
#
#               elapsed time        20.00358
#                   run time        18.26571
#          getnsecs overhead      1399
#
#          number of samples     19191
#         number of outliers       792
#    number of final samples     18399
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7            3076 |*                                    3082.14286
#                  3            3091 |*                                    3100.00000
#                 12            3106 |*                                    3111.50000
#                 22            3121 |*                                    3129.18182
#                 65            3136 |*                                    3144.95385
#                210            3151 |**                                   3159.03810
#                431            3166 |*****                                3173.87239
#                757            3181 |**********                           3188.60502
#               1252            3196 |*****************                    3203.76917
#               1953            3211 |**************************           3218.12903
#               2347            3226 |********************************     3232.87047
#               1914            3241 |**************************           3247.78945
#               1610            3256 |*********************                3262.60497
#               1229            3271 |****************                     3277.56387
#                770            3286 |**********                           3292.28831
#                449            3301 |******                               3306.98886
#                208            3316 |**                                   3322.28365
#                179            3331 |**                                   3337.52514
#                142            3346 |*                                    3353.11972
#                194            3361 |**                                   3368.11340
#                201            3376 |**                                   3383.45274
#                216            3391 |**                                   3398.07407
#                278            3406 |***                                  3413.38849
#                357            3421 |****                                 3428.61064
#                452            3436 |******                               3443.02434
#                472            3451 |******                               3457.70339
#                478            3466 |******                               3472.57741
#                393            3481 |*****                                3487.50891
#                358            3496 |****                                 3503.09777
#                291            3511 |***                                  3517.79381
#                229            3526 |***                                  3531.41048
#
#                920           > 95% |************                         3584.13696
#
#        mean of 95%      3289.52446
#          95th %ile            3538
#
# Usage: strftime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strftime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f format (default = "%c")]
# notes: measures strftime()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strlen_10   1   1              49        20810        0    16108       10
# bin/../bin-riscv64/strlen -N strlen_10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        45                         45
#                        max     34260                         56
#                       mean        53.78392                   49.39111
#                     median        49                         49*
#                     stddev       285.54132                    2.18859
#             standard error         1.92894                    0.01517
#       99% confidence level         4.96894                    0.03908
#                       skew       108.22356                    1.10396
#                   kurtosis     11977.06952                    0.67872
#           time correlation         0.00148                    0.00033
#
#               elapsed time        20.00452
#                   run time        17.79711
#          getnsecs overhead      1399
#
#          number of samples     21913
#         number of outliers      1103
#    number of final samples     20810
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5              45 |*                                             -
#                419              46 |**                                            -
#               2968              47 |****************                              -
#               4833              48 |**************************                    -
#               5802              49 |********************************              -
#               2105              50 |***********                                   -
#               1011              51 |*****                                         -
#               1122              52 |******                                        -
#               1106              53 |******                                        -
#                398              54 |**                                            -
#
#               1041           > 95% |*****                                  55.03074
#
#        mean of 95%        49.09414
#          95th %ile              54
#
# Usage: strlen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strlen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strlen]
# notes: measures strlen()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strlen_1k   1   1             266        17974        0     3580     1024
# bin/../bin-riscv64/strlen -N strlen_1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       248                        248
#                        max     12720                        296
#                       mean       272.92309                  268.45655
#                     median       266                        266*
#                     stddev        96.04831                    9.02716
#             standard error         0.70075                    0.06733
#       99% confidence level         1.80512                    0.17345
#                       skew       116.49134                    1.06592
#                   kurtosis     15018.09180                    0.21349
#           time correlation         0.00281                    0.00161
#
#               elapsed time        20.00461
#                   run time        18.33022
#          getnsecs overhead      1399
#
#          number of samples     18787
#         number of outliers       813
#    number of final samples     17974
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5             248 |*                                     248.80000
#                  3             250 |*                                     250.00000
#                 22             252 |*                                     252.68182
#                 42             254 |*                                     254.78571
#                236             256 |**                                    256.71610
#               1152             258 |*************                         258.65799
#               2666             260 |********************************      260.53788
#               2514             262 |******************************        262.45028
#               2252             264 |***************************           264.48535
#               2028             266 |************************              266.45217
#               1472             268 |*****************                     268.41916
#                879             270 |**********                            270.40842
#                456             272 |*****                                 272.42325
#                269             274 |***                                   274.42751
#                422             276 |*****                                 276.59005
#                568             278 |******                                278.52289
#                660             280 |*******                               280.50152
#                602             282 |*******                               282.48505
#                537             284 |******                                284.45810
#                290             286 |***                                   286.32414
#
#                899           > 95% |**********                            290.65628
#
#        mean of 95%       267.28773
#          95th %ile             287
#
# Usage: strlen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strlen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strlen]
# notes: measures strlen()
       prc thr      nsecs/call      samples   errors cnt/samp 
strtol   1   1             103        21401        0     6942 
# bin/../bin-riscv64/strtol -N strtol -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min        97                         97
#                        max    153271                        115
#                       mean       118.37815                  103.89328
#                     median       103                        103*
#                     stddev      1087.07105                    3.59341
#             standard error         7.06412                    0.02456
#       99% confidence level        18.19717                    0.06328
#                       skew       127.99009                    1.45254
#                   kurtosis     17244.52772                    1.30863
#           time correlation         0.00399                    0.00051
#
#               elapsed time        20.00420
#                   run time        17.49253
#          getnsecs overhead      1399
#
#          number of samples     23681
#         number of outliers      2280
#    number of final samples     21401
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5              97 |*                                             -
#                 42              98 |*                                             -
#                251              99 |*                                             -
#               1113             100 |*******                                       -
#               3397             101 |**********************                        -
#               4840             102 |********************************              -
#               3918             103 |*************************                     -
#               2467             104 |****************                              -
#               1218             105 |********                                      -
#                571             106 |***                                           -
#                221             107 |*                                             -
#                229             108 |*                                             -
#                468             109 |***                                           -
#                612             110 |****                                          -
#                586             111 |***                                           -
#                392             112 |**                                            -
#
#               1071           > 95% |*******                               113.62652
#
#        mean of 95%       103.38052
#          95th %ile             112
#
# Usage: strtol
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strtol')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures strtol()
       prc thr      nsecs/call      samples   errors cnt/samp  command
system   1   1       117271206          199        0        1     A=$$
# bin/../bin-riscv64/system -N system -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  72428189                   72428189
#                        max 223790182                  176807960
#                       mean 105160601.58500            104564473.04020
#                     median 117492006                  117271206*
#                     stddev  28686916.02498             27489317.96440
#             standard error   2028471.28526              1948666.08435
#       99% confidence level   5225342.03083              5019763.83328
#                       skew         0.49616                    0.22588
#                   kurtosis        -0.05326                   -1.22245
#           time correlation    461107.88027               450029.86195
#
#               elapsed time        21.15507
#                   run time        21.12427
#          getnsecs overhead      1399
#
#          number of samples       200
#         number of outliers         1
#    number of final samples       199
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22        72428189 |****************                 74007538.45455
#                 43        74665070 |******************************** 75583085.41860
#                 11        76901951 |********                         77727720.81818
#                  7        79138832 |*****                            79698365.14286
#                  3        81375713 |**                               82553815.66667
#                  1        83612594 |*                                85157022.00000
#                  2        85849475 |*                                87373827.50000
#                  0        88086356 |                                              -
#                  2        90323237 |*                                91229912.50000
#                  2        92560118 |*                                93632394.50000
#                  0        94796999 |                                              -
#                  1        97033880 |*                                98370757.00000
#                  0        99270761 |                                              -
#                  1       101507642 |*                               103299469.00000
#                  0       103744523 |                                              -
#                  0       105981404 |                                              -
#                  1       108218285 |*                               109683985.00000
#                  0       110455166 |                                              -
#                  1       112692047 |*                               114639798.00000
#                  2       114928928 |*                               116517553.50000
#                  6       117165809 |****                            118238924.66667
#                  6       119402690 |****                            120228663.16667
#                 21       121639571 |***************                 123217482.61905
#                 18       123876452 |*************                   125084419.88889
#                 13       126113333 |*********                       127032138.15385
#                 11       128350214 |********                        129667128.36364
#                  1       130587095 |*                               131230341.00000
#                  5       132823976 |***                             133590427.60000
#                  5       135060857 |***                             135597072.80000
#                  2       137297738 |*                               139029612.00000
#                  2       139534619 |*                               140325665.00000
#
#                 10           > 95% |*******                         159735145.20000
#
#        mean of 95% 101645389.85714
#          95th %ile       144008375
#
# Usage: system
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'system')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-c command (default A=$$)]
# notes: measures system()
     prc thr      nsecs/call      samples   errors cnt/samp 
time   1   1             133        18595        0     6873 
# bin/../bin-riscv64/time -N time -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       126                        126
#                        max     35790                        149
#                       mean       138.64844                  135.18962
#                     median       133                        133*
#                     stddev       257.31095                    4.60302
#             standard error         1.84553                    0.03376
#       99% confidence level         4.75409                    0.08695
#                       skew       136.99649                    1.28269
#                   kurtosis     18958.50316                    0.48904
#           time correlation         0.00172                    0.00076
#
#               elapsed time        20.00589
#                   run time        18.28306
#          getnsecs overhead      1399
#
#          number of samples     19439
#         number of outliers       844
#    number of final samples     18595
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             126 |*                                             -
#                  8             127 |*                                             -
#                 27             128 |*                                             -
#                 40             129 |*                                             -
#                334             130 |**                                            -
#               1833             131 |**************                                -
#               4107             132 |********************************              -
#               3593             133 |***************************                   -
#               2328             134 |******************                            -
#               1323             135 |**********                                    -
#                524             136 |****                                          -
#                204             137 |*                                             -
#                102             138 |*                                             -
#                156             139 |*                                             -
#                439             140 |***                                           -
#                705             141 |*****                                         -
#                745             142 |*****                                         -
#                610             143 |****                                          -
#                429             144 |***                                           -
#                157             145 |*                                             -
#
#                930           > 95% |*******                               146.88387
#
#        mean of 95%       134.57396
#          95th %ile             145
#
# Usage: time
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'time')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures time()
      prc thr      nsecs/call      samples   errors cnt/samp 
times   1   1           34137         6732        0       29 
# bin/../bin-riscv64/times -N times -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     32823                      32823
#                        max    114150                      40957
#                       mean     35789.59286                35109.45915
#                     median     34180                      34137*
#                     stddev      5143.58237                 1953.67682
#             standard error        61.33753                   23.81117
#       99% confidence level       158.00547                   61.33756
#                       skew         9.04502                    1.27207
#                   kurtosis       109.54986                    0.20889
#           time correlation         1.32663                    0.86621
#
#               elapsed time        20.00486
#                   run time         7.49037
#          getnsecs overhead      1399
#
#          number of samples      7032
#         number of outliers       300
#    number of final samples      6732
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           32823 |*                                   32823.00000
#                 17           33023 |*                                   33162.23529
#                154           33223 |****                                33363.06494
#                562           33423 |*****************                   33529.19929
#                997           33623 |******************************      33725.97492
#               1051           33823 |********************************    33918.59562
#                916           34023 |***************************         34114.77511
#                558           34223 |****************                    34308.19892
#                303           34423 |*********                           34510.71287
#                186           34623 |*****                               34717.82796
#                 94           34823 |**                                  34916.32979
#                 53           35023 |*                                   35121.60377
#                 36           35223 |*                                   35302.77778
#                 32           35423 |*                                   35504.90625
#                 18           35623 |*                                   35720.55556
#                 15           35823 |*                                   35917.93333
#                 13           36023 |*                                   36146.53846
#                 27           36223 |*                                   36327.85185
#                 42           36423 |*                                   36534.90476
#                 65           36623 |*                                   36734.15385
#                 84           36823 |**                                  36927.90476
#                 87           37023 |**                                  37130.44828
#                118           37223 |***                                 37327.44915
#                155           37423 |****                                37524.96774
#                128           37623 |***                                 37722.03906
#                133           37823 |****                                37915.82707
#                106           38023 |***                                 38119.10377
#                114           38223 |***                                 38323.78070
#                 92           38423 |**                                  38529.80435
#                 87           38623 |**                                  38717.25287
#                 85           38823 |**                                  38907.72941
#                 66           39023 |**                                  39109.37879
#
#                337           > 95% |**********                          39933.12166
#
#        mean of 95%     34855.26458
#          95th %ile           39207
#
# WARNINGS
#     Actual benchmark run time only accounts for 37.4% of elapsed time.
#
# Usage: times
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'times')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures times()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_a128k   1   1          128526        13747        0        4   131072   a---
# bin/../bin-riscv64/munmap -N unmap_a128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     96434                      96434
#                        max   3856770                     590252
#                       mean    227145.91494               211843.96617
#                     median    129326                     128526*
#                     stddev    186402.30530               126257.12109
#             standard error      1575.94995                 1076.84183
#       99% confidence level      4059.64708                 2773.94455
#                       skew         5.28868                    0.91488
#                   kurtosis        58.96953                   -0.73357
#           time correlation        33.03357                   27.98122
#
#               elapsed time        20.00480
#                   run time        12.75624
#          getnsecs overhead      1399
#
#          number of samples     13990
#         number of outliers       243
#    number of final samples     13747
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 17           96434 |*                                  102688.88235
#               3227          107132 |****************************       114586.09823
#               3634          117830 |********************************   121992.62631
#                893          128528 |*******                            133008.12542
#                503          139226 |****                               144360.16103
#                321          149924 |**                                 155252.94704
#                173          160622 |*                                  165471.00000
#                127          171320 |*                                  176971.70866
#                100          182018 |*                                  187286.10000
#                 80          192716 |*                                  197388.50000
#                 53          203414 |*                                  208770.24528
#                 24          214112 |*                                  219379.12500
#                 22          224810 |*                                  230919.18182
#                 36          235508 |*                                  241907.27778
#                 54          246206 |*                                  251953.77778
#                 48          256904 |*                                  261653.12500
#                 53          267602 |*                                  272607.32075
#                 89          278300 |*                                  284096.51685
#                 82          288998 |*                                  294339.30488
#                 53          299696 |*                                  305005.47170
#                 67          310394 |*                                  315465.38806
#                 73          321092 |*                                  327206.91781
#                263          331790 |**                                 338270.14068
#                525          342488 |****                               348292.62095
#                560          353186 |****                               358417.87679
#                436          363884 |***                                368911.36009
#                343          374582 |***                                379577.82216
#                325          385280 |**                                 390342.54462
#                246          395978 |**                                 401079.49187
#                254          406676 |**                                 412258.22835
#                202          417374 |*                                  422701.00990
#                176          428072 |*                                  433166.67614
#
#                688           > 95% |******                             485114.93895
#
#        mean of 95%    197446.96569
#          95th %ile          438751
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 63.8% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_a8k   1   1          132781        12743        0        4     8192   a---
# bin/../bin-riscv64/munmap -N unmap_a8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    105451                     105451
#                        max   6325317                     610877
#                       mean    235002.62037               221650.73868
#                     median    134026                     132781*
#                     stddev    180852.29824               129848.42067
#             standard error      1589.11605                 1150.27275
#       99% confidence level      4093.56295                 2963.10260
#                       skew         6.09142                    0.80017
#                   kurtosis       124.32298                   -0.89307
#           time correlation        36.30397                   31.69866
#
#               elapsed time        20.00551
#                   run time        12.80526
#          getnsecs overhead      1399
#
#          number of samples     12952
#         number of outliers       209
#    number of final samples     12743
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1548          105451 |*************                      113345.32106
#               3751          116058 |********************************   121054.29032
#               1414          126665 |************                       130592.34017
#                470          137272 |****                               142279.89787
#                337          147879 |**                                 152680.58160
#                203          158486 |*                                  163097.44335
#                113          169093 |*                                  174145.38053
#                 81          179700 |*                                  184475.75309
#                 64          190307 |*                                  194768.89062
#                 54          200914 |*                                  206691.24074
#                 32          211521 |*                                  216490.68750
#                 18          222128 |*                                  227068.50000
#                 18          232735 |*                                  239652.38889
#                 36          243342 |*                                  249058.63889
#                 55          253949 |*                                  259026.81818
#                 74          264556 |*                                  270204.24324
#                 88          275163 |*                                  279988.67045
#                 82          285770 |*                                  290987.40244
#                 98          296377 |*                                  301882.32653
#                 77          306984 |*                                  312485.15584
#                 66          317591 |*                                  322586.15152
#                186          328198 |*                                  334683.47312
#                367          338805 |***                                344621.58583
#                515          349412 |****                               354625.33981
#                470          360019 |****                               364740.38298
#                372          370626 |***                                375983.02151
#                337          381233 |**                                 386275.72700
#                330          391840 |**                                 397107.03636
#                240          402447 |**                                 408110.92083
#                244          413054 |**                                 418425.77869
#                192          423661 |*                                  428750.84375
#                173          434268 |*                                  439249.99422
#
#                638           > 95% |*****                              495963.04075
#
#        mean of 95%    207192.97340
#          95th %ile          444851
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 64.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_ra128k   1   1          424602         7125        0        2   131072   ar--
# bin/../bin-riscv64/munmap -N unmap_ra128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    141401                     156451
#                        max   2492157                     723152
#                       mean    471146.33198               438081.83228
#                     median    428502                     424602*
#                     stddev    164735.42531                95099.65439
#             standard error      1882.59837                 1126.64347
#       99% confidence level      4849.57340                 2902.23358
#                       skew         3.05387                    0.35112
#                   kurtosis        19.92965                    0.97618
#           time correlation        59.58659                   43.19669
#
#               elapsed time        20.00628
#                   run time         7.44473
#          getnsecs overhead      1399
#
#          number of samples      7657
#         number of outliers       532
#    number of final samples      7125
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14          156451 |*                                  163912.78571
#                 44          171052 |*                                  178588.79545
#                 55          185653 |*                                  191661.07273
#                 28          200254 |*                                  206702.10714
#                 18          214855 |*                                  223213.00000
#                 23          229456 |*                                  237498.78261
#                 35          244057 |*                                  251249.94286
#                 52          258658 |*                                  266442.44231
#                 61          273259 |**                                 280115.27869
#                 75          287860 |**                                 295587.74667
#                124          302461 |****                               309535.31452
#                178          317062 |******                             324383.96067
#                181          331663 |******                             338369.76243
#                208          346264 |*******                            354026.39904
#                270          360865 |*********                          369083.83704
#                389          375466 |*************                      382921.06427
#                567          390067 |********************               397920.76896
#                868          404668 |******************************     412516.95046
#                897          419269 |********************************   425937.91750
#                452          433870 |****************                   440432.32965
#                332          448471 |***********                        455844.10843
#                293          463072 |**********                         470662.90785
#                315          477673 |***********                        485018.86667
#                304          492274 |**********                         499126.61513
#                232          506875 |********                           513477.00000
#                134          521476 |****                               528229.60448
#                137          536077 |****                               543149.20438
#                117          550678 |****                               558096.94017
#                105          565279 |***                                572989.45714
#                 94          579880 |***                                587155.25532
#                 82          594481 |**                                 601018.64634
#                 84          609082 |**                                 616558.53571
#
#                357           > 95% |************                       670071.52381
#
#        mean of 95%    425844.78738
#          95th %ile          623652
#
# WARNINGS
#     Actual benchmark run time only accounts for 37.2% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_ra8k   1   1          403152        10272        0        2     8192   ar--
# bin/../bin-riscv64/munmap -N unmap_ra8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    130701                     226334
#                        max   3067859                     579552
#                       mean    495982.88485               402540.27804
#                     median    416352                     403152*
#                     stddev    219879.38982                59020.25990
#             standard error      1913.80444                  582.33596
#       99% confidence level      4929.96023                 1500.09744
#                       skew         2.40317                    0.21989
#                   kurtosis         9.81644                    0.63025
#           time correlation        46.56832                   18.95292
#
#               elapsed time        20.01012
#                   run time        13.28383
#          getnsecs overhead      1399
#
#          number of samples     13200
#         number of outliers      2928
#    number of final samples     10272
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 28          226334 |*                                  231318.85714
#                 16          235273 |*                                  238975.93750
#                 20          244212 |*                                  247852.70000
#                 41          253151 |*                                  258459.34146
#                 51          262090 |*                                  266765.58824
#                 77          271029 |**                                 275840.92208
#                 77          279968 |**                                 283869.71429
#                116          288907 |****                               293118.86207
#                114          297846 |****                               302041.21930
#                159          306785 |*****                              311577.44654
#                197          315724 |*******                            320108.84264
#                236          324663 |********                           329147.75847
#                281          333602 |**********                         338153.67260
#                346          342541 |************                       347018.92486
#                386          351480 |*************                      356141.08808
#                498          360419 |*****************                  364979.27108
#                588          369358 |********************               373978.31803
#                614          378297 |*********************              382772.96254
#                679          387236 |************************           391598.36082
#                798          396175 |****************************       400698.63283
#                899          405114 |********************************   409734.07119
#                871          414053 |*******************************    418404.46728
#                689          422992 |************************           427236.86647
#                461          431931 |****************                   436129.80043
#                328          440870 |***********                        445053.41463
#                254          449809 |*********                          453991.89370
#                203          458748 |*******                            463017.76355
#                168          467687 |*****                              472015.68452
#                166          476626 |*****                              480963.74699
#                162          485565 |*****                              489631.32099
#                132          494504 |****                               499063.48485
#                103          503443 |***                                508048.11650
#
#                514           > 95% |******************                 541974.43774
#
#        mean of 95%    395195.62154
#          95th %ile          512352
#
# WARNINGS
#     Actual benchmark run time only accounts for 66.4% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rt128k   1   1          269301         4125        0        2   131072   -r--
# bin/../bin-riscv64/munmap -N unmap_rt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    153551                     153551
#                        max   1516638                     433635
#                       mean    320415.95246               290093.16727
#                     median    272468                     269301*
#                     stddev    114398.16110                47874.60555
#             standard error      1697.07049                  745.40660
#       99% confidence level      4371.65359                 1920.16740
#                       skew         2.92501                    0.97213
#                   kurtosis        10.94025                    0.54198
#           time correlation        64.43128                   36.34567
#
#               elapsed time        20.00545
#                   run time         4.36489
#          getnsecs overhead      1399
#
#          number of samples      4544
#         number of outliers       419
#    number of final samples      4125
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          153551 |*                                  157358.40000
#                 14          160980 |*                                  164348.42857
#                  7          168409 |*                                  170898.42857
#                  6          175838 |*                                  178939.66667
#                  5          183267 |*                                  186274.20000
#                  3          190696 |*                                  192953.66667
#                  1          198125 |*                                  199834.00000
#                  0          205554 |                                              -
#                  6          212983 |*                                  217045.50000
#                 20          220412 |*                                  225100.95000
#                 38          227841 |*                                  231910.63158
#                 52          235270 |*                                  239469.51923
#                185          242699 |*******                            247229.82703
#                496          250128 |******************                 254441.64718
#                845          257557 |********************************   261346.33609
#                580          264986 |*********************              268352.87069
#                272          272415 |**********                         275637.69118
#                136          279844 |*****                              283071.21324
#                 96          287273 |***                                291250.75000
#                 90          294702 |***                                298919.23333
#                104          302131 |***                                305964.93269
#                118          309560 |****                               313598.34746
#                130          316989 |****                               320632.41538
#                110          324418 |****                               327936.34545
#                 95          331847 |***                                335542.61053
#                 80          339276 |***                                343120.01250
#                 69          346705 |**                                 350606.57971
#                 75          354134 |**                                 357464.80000
#                 72          361563 |**                                 365459.13889
#                 74          368992 |**                                 372679.28378
#                 59          376421 |**                                 380248.23729
#                 70          383850 |**                                 387291.77143
#
#                207           > 95% |*******                            408740.51691
#
#        mean of 95%    283824.66258
#          95th %ile          391268
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.8% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rt8k   1   1          366052        12266        0        2     8192   -r--
# bin/../bin-riscv64/munmap -N unmap_rt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    112226                     152601
#                        max   6880919                     578752
#                       mean    416410.95645               364611.67854
#                     median    375702                     366052*
#                     stddev    191277.10685                71380.22014
#             standard error      1613.59271                  644.50517
#       99% confidence level      4156.61483                 1660.24531
#                       skew         6.17561                    0.20109
#                   kurtosis       121.49874                    0.22891
#           time correlation        34.66205                   19.48793
#
#               elapsed time        20.00402
#                   run time        11.93381
#          getnsecs overhead      1399
#
#          number of samples     14052
#         number of outliers      1786
#    number of final samples     12266
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          152601 |*                                  156786.37500
#                  3          163230 |*                                  169242.66667
#                  7          173859 |*                                  179646.28571
#                 12          184488 |*                                  191251.00000
#                 56          195117 |**                                 201949.30357
#                120          205746 |****                               211723.18333
#                143          216375 |*****                              221904.27273
#                156          227004 |*****                              232592.07051
#                195          237633 |*******                            243099.02564
#                216          248262 |********                           253485.73148
#                241          258891 |********                           264502.89212
#                331          269520 |************                       274791.29003
#                347          280149 |************                       285333.47262
#                388          290778 |**************                     296164.52062
#                428          301407 |***************                    306890.42290
#                602          312036 |**********************             317887.33223
#                687          322665 |*************************          328061.59971
#                676          333294 |*************************          338493.76183
#                697          343923 |*************************          349508.24390
#                765          354552 |****************************       359952.52418
#                844          365181 |*******************************    370799.04028
#                862          375810 |********************************   381269.96056
#                850          386439 |*******************************    391586.07529
#                692          397068 |*************************          402083.48988
#                577          407697 |*********************              412968.54939
#                512          418326 |*******************                423297.11719
#                351          428955 |*************                      434033.61823
#                241          439584 |********                           445037.88797
#                173          450213 |******                             455681.31792
#                161          460842 |*****                              466187.91925
#                164          471471 |******                             476845.34146
#                147          482100 |*****                              487460.38776
#
#                614           > 95% |**********************             528586.48697
#
#        mean of 95%    355971.05613
#          95th %ile          492702
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.7% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rz128k   1   1          310002         7508        0        2   131072   -r--
# bin/../bin-riscv64/munmap -N unmap_rz128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    108351                     170301
#                        max   1616905                     473602
#                       mean    351891.09576               321050.62214
#                     median    315352                     310002*
#                     stddev    118353.28607                50854.61461
#             standard error      1290.03549                  586.90558
#       99% confidence level      3323.13141                 1511.86876
#                       skew         3.31810                    0.79417
#                   kurtosis        17.64802                    0.69969
#           time correlation        36.90266                   21.99723
#
#               elapsed time        20.00657
#                   run time         6.11784
#          getnsecs overhead      1399
#
#          number of samples      8417
#         number of outliers       909
#    number of final samples      7508
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          170301 |*                                  171551.00000
#                  6          178344 |*                                  182828.83333
#                  4          186387 |*                                  191374.00000
#                 16          194430 |*                                  199833.25000
#                 21          202473 |*                                  205642.61905
#                 43          210516 |*                                  214656.46512
#                 38          218559 |*                                  222525.86842
#                 49          226602 |*                                  231320.81633
#                 61          234645 |**                                 238834.72131
#                104          242688 |****                               246636.05769
#                142          250731 |*****                              254842.64085
#                205          258774 |********                           262965.90732
#                262          266817 |**********                         271014.21374
#                403          274860 |***************                    279250.33251
#                587          282903 |**********************             287267.33901
#                818          290946 |********************************   294918.65403
#                727          298989 |****************************       302752.43741
#                661          307032 |*************************          310850.01513
#                590          315075 |***********************            318846.50339
#                389          323118 |***************                    326891.73779
#                285          331161 |***********                        334757.89123
#                219          339204 |********                           343164.47945
#                257          347247 |**********                         351240.16342
#                238          355290 |*********                          359491.38655
#                228          363333 |********                           367073.89912
#                161          371376 |******                             375555.06832
#                127          379419 |****                               383468.22835
#                124          387462 |****                               391702.76613
#                109          395505 |****                               399396.59633
#                 92          403548 |***                                407394.90217
#                 87          411591 |***                                415659.98851
#                 77          419634 |***                                423304.96104
#
#                376           > 95% |**************                     450898.48936
#
#        mean of 95%    314205.02510
#          95th %ile          427652
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.6% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rz8k   1   1          353402        12844        0        2     8192   -r--
# bin/../bin-riscv64/munmap -N unmap_rz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    103676                     103676
#                        max  14860589                     810753
#                       mean    417639.34507               387173.58907
#                     median    357802                     353402*
#                     stddev    230566.41770               141341.17927
#             standard error      1983.00481                 1247.14963
#       99% confidence level      5108.22039                 3212.65745
#                       skew        19.45164                    1.18324
#                   kurtosis      1141.59100                    0.89057
#           time correlation        42.66899                   34.63127
#
#               elapsed time        20.00357
#                   run time        11.89413
#          getnsecs overhead      1399
#
#          number of samples     13519
#         number of outliers       675
#    number of final samples     12844
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 67          103676 |*                                  114591.80597
#                 20          122638 |*                                  127046.90000
#                  6          141600 |*                                  149970.33333
#                  7          160562 |*                                  170751.00000
#                 98          179524 |**                                 193264.75510
#                450          198486 |**********                         209472.81111
#                631          217448 |**************                     226766.49762
#                511          236410 |***********                        245705.03523
#                442          255372 |**********                         264783.89367
#                570          274334 |*************                      284234.02632
#                852          293296 |*******************                303630.70775
#               1184          312258 |***************************        322250.43919
#               1336          331220 |*******************************    340736.24326
#               1377          350182 |********************************   359245.96659
#               1081          369144 |*************************          378408.74931
#                728          388106 |****************                   396877.27885
#                399          407068 |*********                          415782.93484
#                258          426030 |*****                              435658.26744
#                243          444992 |*****                              454426.96296
#                199          463954 |****                               473287.15578
#                148          482916 |***                                492559.12162
#                144          501878 |***                                510736.00694
#                137          520840 |***                                530414.99270
#                159          539802 |***                                548405.60377
#                142          558764 |***                                567556.09155
#                153          577726 |***                                587332.24183
#                129          596688 |**                                 606160.89147
#                121          615650 |**                                 625047.87603
#                105          634612 |**                                 644868.28571
#                133          653574 |***                                663895.30827
#                167          672536 |***                                682503.32335
#                204          691498 |****                               700642.12255
#
#                643           > 95% |**************                     754439.86470
#
#        mean of 95%    367818.43660
#          95th %ile          710453
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.5% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_t128k   1   1           51434         7646        0       11   131072   ----
# bin/../bin-riscv64/munmap -N unmap_t128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     41382                      41382
#                        max   1104770                     206731
#                       mean     81185.60174                74845.89524
#                     median     51700                      51434*
#                     stddev     67246.32328                44010.00203
#             standard error       760.48900                  503.30847
#       99% confidence level      1959.01967                 1296.52263
#                       skew         5.22220                    1.46753
#                   kurtosis        49.87566                    0.53630
#           time correlation        19.69354                   15.93498
#
#               elapsed time        20.01160
#                   run time         7.47551
#          getnsecs overhead      1399
#
#          number of samples      7819
#         number of outliers       173
#    number of final samples      7646
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                205           41382 |**                                  44252.04878
#               2610           45415 |********************************    47751.59885
#               1528           49448 |******************                  51002.90314
#                541           53481 |******                              55408.09982
#                439           57514 |*****                               59333.58770
#                237           61547 |**                                  63295.05063
#                142           65580 |*                                   67440.09859
#                100           69613 |*                                   71493.87000
#                 55           73646 |*                                   75378.47273
#                 35           77679 |*                                   79887.85714
#                 30           81712 |*                                   83418.03333
#                 16           85745 |*                                   87814.87500
#                 12           89778 |*                                   91188.08333
#                  8           93811 |*                                   95066.50000
#                 14           97844 |*                                  100403.85714
#                 23          101877 |*                                  104137.08696
#                 17          105910 |*                                  107688.88235
#                 29          109943 |*                                  111414.37931
#                 45          113976 |*                                  116287.26667
#                 43          118009 |*                                  120069.93023
#                 41          122042 |*                                  124211.56098
#                 35          126075 |*                                  127871.45714
#                 37          130108 |*                                  132293.21622
#                 51          134141 |*                                  135932.33333
#                103          138174 |*                                  140287.89320
#                154          142207 |*                                  144265.53247
#                140          146240 |*                                  148240.15000
#                110          150273 |*                                  152078.41818
#                129          154306 |*                                  156360.83721
#                123          158339 |*                                  160402.11382
#                104          162372 |*                                  164326.56731
#                107          166405 |*                                  168257.75701
#
#                383           > 95% |****                               183773.51697
#
#        mean of 95%     69101.81165
#          95th %ile          170409
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 37.4% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_t8k   1   1           51142         7478        0       11     8192   ----
# bin/../bin-riscv64/munmap -N unmap_t8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     40327                      40327
#                        max   1418696                     212173
#                       mean     82354.37837                76096.31439
#                     median     51385                      51142*
#                     stddev     69957.37240                45364.01276
#             standard error       800.46742                  524.58846
#       99% confidence level      2062.00408                 1351.33988
#                       skew         5.86649                    1.35384
#                   kurtosis        65.61239                    0.22333
#           time correlation        21.00305                   17.21305
#
#               elapsed time        20.00498
#                   run time         7.43859
#          getnsecs overhead      1399
#
#          number of samples      7638
#         number of outliers       160
#    number of final samples      7478
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                413           40327 |*******                             43180.05811
#               1876           44404 |********************************    46962.10235
#               1862           48481 |*******************************     50143.41246
#                533           52558 |*********                           54301.27392
#                325           56635 |*****                               58565.47077
#                255           60712 |****                                62417.25490
#                148           64789 |**                                  66636.24324
#                 83           68866 |*                                   70605.19277
#                 78           72943 |*                                   75050.98718
#                 45           77020 |*                                   79164.80000
#                 32           81097 |*                                   82538.18750
#                 27           85174 |*                                   87162.14815
#                 17           89251 |*                                   91752.11765
#                 17           93328 |*                                   95655.00000
#                 12           97405 |*                                   99586.91667
#                 19          101482 |*                                  103534.10526
#                 23          105559 |*                                  108022.13043
#                 15          109636 |*                                  111828.53333
#                 30          113713 |*                                  115864.00000
#                 34          117790 |*                                  119759.94118
#                 38          121867 |*                                  123823.78947
#                 60          125944 |*                                  128343.80000
#                 76          130021 |*                                  132381.80263
#                 79          134098 |*                                  136068.43038
#                100          138175 |*                                  140514.36000
#                128          142252 |**                                 144301.54688
#                143          146329 |**                                 148365.53147
#                167          150406 |**                                 152408.48503
#                144          154483 |**                                 156710.15278
#                126          158560 |**                                 160564.48413
#                104          162637 |*                                  164692.18269
#                 95          166714 |*                                  168549.30526
#
#                374           > 95% |******                             185343.71658
#
#        mean of 95%     70344.83235
#          95th %ile          170782
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 37.2% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wa128k   1   1          496352         4546        0        1   131072   a-w-
# bin/../bin-riscv64/munmap -N unmap_wa128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    226501                     240602
#                        max   3081008                     783903
#                       mean    550300.62290               512787.40431
#                     median    507402                     496352*
#                     stddev    167945.37508                90981.74116
#             standard error      2388.76124                 1349.39634
#       99% confidence level      6153.44895                 3476.04497
#                       skew         3.08354                    0.67748
#                   kurtosis        20.09544                    0.47934
#           time correlation        94.57023                   65.99156
#
#               elapsed time        20.00777
#                   run time         3.39994
#          getnsecs overhead      1399
#
#          number of samples      4943
#         number of outliers       397
#    number of final samples      4546
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          240602 |*                                  243851.50000
#                  3          255009 |*                                  263468.33333
#                  1          269416 |*                                  271302.00000
#                  0          283823 |                                              -
#                  2          298230 |*                                  311251.50000
#                  8          312637 |*                                  322164.37500
#                 62          327044 |****                               335769.66129
#                 72          341451 |*****                              346811.65278
#                 38          355858 |**                                 363130.94737
#                 41          370265 |**                                 377583.65854
#                 75          384672 |*****                              391972.00000
#                 93          399079 |******                             407162.76344
#                184          413486 |*************                      421229.22283
#                280          427893 |********************               435687.40714
#                448          442300 |********************************   450228.05804
#                420          456707 |******************************     463237.70238
#                322          471114 |***********************            477976.86646
#                284          485521 |********************               492258.40141
#                241          499928 |*****************                  506748.30705
#                204          514335 |**************                     522401.30882
#                254          528742 |******************                 535317.34646
#                287          543149 |********************               550330.81882
#                277          557556 |*******************                564687.06498
#                181          571963 |************                       578470.93370
#                120          586370 |********                           592344.21667
#                 73          600777 |*****                              607138.73973
#                 67          615184 |****                               621921.79104
#                 66          629591 |****                               636413.18182
#                 61          643998 |****                               650614.91803
#                 46          658405 |***                                665875.56522
#                 54          672812 |***                                679985.16667
#                 52          687219 |***                                694886.36538
#
#                228           > 95% |****************                   739477.02632
#
#        mean of 95%    500817.68828
#          95th %ile          701603
#
# WARNINGS
#     Actual benchmark run time only accounts for 17.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wa8k   1   1          410402        14238        0        1     8192   a-w-
# bin/../bin-riscv64/munmap -N unmap_wa8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    181201                     181201
#                        max   3548660                     658103
#                       mean    500034.89588               418682.96938
#                     median    428202                     410402*
#                     stddev    223981.65046                79832.68345
#             standard error      1715.94409                  669.04639
#       99% confidence level      4420.27198                 1723.46351
#                       skew         2.87178                    0.50627
#                   kurtosis        14.10770                    0.27459
#           time correlation        36.02235                   18.71055
#
#               elapsed time        20.00574
#                   run time        11.90123
#          getnsecs overhead      1399
#
#          number of samples     17038
#         number of outliers      2800
#    number of final samples     14238
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          181201 |*                                  187371.50000
#                 10          193392 |*                                  198911.80000
#                  5          205583 |*                                  209561.60000
#                 12          217774 |*                                  223484.50000
#                 39          229965 |*                                  237548.66667
#                 60          242156 |*                                  248967.25000
#                104          254347 |***                                260624.35577
#                140          266538 |****                               272911.26429
#                131          278729 |****                               284977.67939
#                244          290920 |*******                            297511.65574
#                322          303111 |**********                         309936.49379
#                411          315302 |*************                      321271.33577
#                472          327493 |***************                    333776.54025
#                685          339684 |**********************             346371.57518
#                903          351875 |*****************************      357862.25138
#                928          364066 |*****************************      370293.40194
#                958          376257 |******************************     382321.99374
#                927          388448 |*****************************      394784.87379
#                955          400639 |******************************     406722.98639
#                996          412830 |********************************   418913.04116
#                842          425021 |***************************        431132.70784
#                740          437212 |***********************            443065.21892
#                649          449403 |********************               455291.71032
#                606          461594 |*******************                467618.37459
#                529          473785 |****************                   479946.74102
#                424          485976 |*************                      492081.52358
#                306          498167 |*********                          504156.01634
#                266          510358 |********                           516538.17293
#                226          522549 |*******                            528110.73894
#                212          534740 |******                             540740.34434
#                234          546931 |*******                            553016.89316
#                180          559122 |*****                              564929.66111
#
#                712           > 95% |**********************             609305.16713
#
#        mean of 95%    408648.73865
#          95th %ile          571302
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.5% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wt128k   1   1          406502         4379        0        1   131072   --w-
# bin/../bin-riscv64/munmap -N unmap_wt128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    217602                     217602
#                        max   1552355                     687453
#                       mean    463000.48458               437025.30007
#                     median    413752                     406502*
#                     stddev    142304.83809                83586.46749
#             standard error      2089.78264                 1263.13131
#       99% confidence level      5383.28009                 3253.82624
#                       skew         2.76267                    0.69156
#                   kurtosis        11.22392                    0.14060
#           time correlation        84.97312                   62.69422
#
#               elapsed time        20.00698
#                   run time         4.28254
#          getnsecs overhead      1399
#
#          number of samples      4637
#         number of outliers       258
#    number of final samples      4379
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          217602 |*                                  217602.00000
#                  1          229571 |*                                  241401.00000
#                  4          241540 |*                                  251763.75000
#                 20          253509 |*                                  261088.85000
#                 40          265478 |*                                  270936.45000
#                 56          277447 |**                                 284047.05357
#                 47          289416 |**                                 296020.65957
#                 21          301385 |*                                  308180.04762
#                 24          313354 |*                                  320099.45833
#                 16          325323 |*                                  332204.87500
#                 47          337292 |**                                 344530.46809
#                119          349261 |*****                              356687.96639
#                376          361230 |******************                 368441.14096
#                660          373199 |********************************   379334.54091
#                489          385168 |***********************            390873.26789
#                320          397137 |***************                    402463.87500
#                171          409106 |********                           414491.76608
#                103          421075 |****                               426788.41748
#                124          433044 |******                             438978.20968
#                135          445013 |******                             451492.74074
#                182          456982 |********                           463216.01099
#                188          468951 |*********                          474722.47872
#                163          480920 |*******                            486976.84663
#                160          492889 |*******                            499158.87500
#                158          504858 |*******                            510406.11392
#                108          516827 |*****                              522333.48148
#                 95          528796 |****                               535194.63158
#                 81          540765 |***                                546540.27160
#                 76          552734 |***                                558254.63158
#                 54          564703 |**                                 570281.62963
#                 59          576672 |**                                 582854.54237
#                 62          588641 |***                                594680.32258
#
#                219           > 95% |**********                         638319.70320
#
#        mean of 95%    426428.31106
#          95th %ile          600602
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.4% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wt8k   1   1          470902         5801        0        1     8192   --w-
# bin/../bin-riscv64/munmap -N unmap_wt8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    191801                     191801
#                        max   2258607                     862103
#                       mean    556239.41882               509049.11136
#                     median    477302                     470902*
#                     stddev    198647.48388               117963.82671
#             standard error      2494.02890                 1548.80742
#       99% confidence level      6424.61844                 3989.72791
#                       skew         2.05892                    0.95354
#                   kurtosis         5.99025                    0.63579
#           time correlation        90.99584                   64.80413
#
#               elapsed time        20.00724
#                   run time         3.90055
#          getnsecs overhead      1399
#
#          number of samples      6344
#         number of outliers       543
#    number of final samples      5801
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          191801 |*                                  200472.57143
#                  7          209633 |*                                  221580.28571
#                 25          227465 |*                                  238375.52000
#                 18          245297 |*                                  253612.44444
#                 20          263129 |*                                  271459.30000
#                  9          280961 |*                                  288212.77778
#                 17          298793 |*                                  307019.47059
#                 15          316625 |*                                  325361.66667
#                 57          334457 |**                                 344475.63158
#                 91          352289 |***                                363148.63736
#                131          370121 |*****                              380115.74046
#                227          387953 |********                           398030.23348
#                442          405785 |*****************                  414479.66516
#                628          423617 |************************           433258.78662
#                649          441449 |*************************          450620.33744
#                822          459281 |********************************   467866.36253
#                507          477113 |*******************                484730.63905
#                205          494945 |*******                            503166.45854
#                153          512777 |*****                              521497.36601
#                135          530609 |*****                              539518.95556
#                167          548441 |******                             558398.53892
#                147          566273 |*****                              574132.72109
#                 95          584105 |***                                592764.53684
#                 96          601937 |***                                611182.25000
#                144          619769 |*****                              629442.59028
#                207          637601 |********                           646679.71981
#                138          655433 |*****                              663022.60145
#                 87          673265 |***                                682140.73563
#                 72          691097 |**                                 699616.02778
#                 84          708929 |***                                716303.46429
#                 62          726761 |**                                 735698.90323
#                 46          744593 |*                                  753508.34783
#
#                291           > 95% |***********                        810677.14433
#
#        mean of 95%    493119.20980
#          95th %ile          762402
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.5% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wz128k   1   1          482203         8209        0        1   131072   --w-
# bin/../bin-riscv64/munmap -N unmap_wz128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    217602                     217602
#                        max   2202106                     808103
#                       mean    527401.16312               500697.83530
#                     median    493503                     482203*
#                     stddev    154674.14936               102635.38518
#             standard error      1657.80463                 1132.79674
#       99% confidence level      4270.50473                 2918.08439
#                       skew         2.38945                    0.65698
#                   kurtosis        11.29524                    0.81464
#           time correlation        51.57864                   40.57249
#
#               elapsed time        20.00561
#                   run time         5.30028
#          getnsecs overhead      1399
#
#          number of samples      8705
#         number of outliers       496
#    number of final samples      8209
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          217602 |*                                  223626.37500
#                  7          233128 |*                                  242908.42857
#                 63          248654 |**                                 259204.63492
#                107          264180 |***                                271974.31776
#                 43          279706 |*                                  286385.34884
#                 26          295232 |*                                  303241.07692
#                 25          310758 |*                                  316838.68000
#                 25          326284 |*                                  335255.80000
#                 45          341810 |*                                  349857.33333
#                 61          357336 |**                                 366531.34426
#                110          372862 |***                                382283.48182
#                295          388388 |*********                          396326.59661
#                357          403914 |***********                        412434.43697
#                963          419440 |********************************   428372.16822
#                942          434966 |*******************************    442227.32909
#                569          450492 |******************                 457874.41476
#                442          466018 |**************                     473502.87330
#                369          481544 |************                       489765.14092
#                420          497070 |*************                      505455.80476
#                704          512596 |***********************            521323.68608
#                547          528122 |******************                 535140.14260
#                299          543648 |*********                          550878.95652
#                217          559174 |*******                            566218.98157
#                179          574700 |*****                              581551.75419
#                166          590226 |*****                              597968.68675
#                165          605752 |*****                              613360.38788
#                188          621278 |******                             629032.39362
#                132          636804 |****                               643774.20455
#                108          652330 |***                                659681.90741
#                 76          667856 |**                                 675526.85526
#                 72          683382 |**                                 690454.88889
#                 68          698908 |**                                 706143.25000
#
#                411           > 95% |*************                      761875.22384
#
#        mean of 95%    486932.26635
#          95th %ile          714403
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.5% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wz8k   1   1          351302         9098        0        2     8192   --w-
# bin/../bin-riscv64/munmap -N unmap_wz8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    140251                     228634
#                        max   2211756                     486752
#                       mean    451365.62081               356660.62574
#                     median    363402                     351302*
#                     stddev    205365.11853                43406.44341
#             standard error      1868.42314                  455.07318
#       99% confidence level      4813.05802                 1172.26850
#                       skew         2.10285                    0.63588
#                   kurtosis         5.84403                    0.64535
#           time correlation        47.40837                   15.58333
#
#               elapsed time        20.00488
#                   run time        10.99066
#          getnsecs overhead      1399
#
#          number of samples     12081
#         number of outliers      2983
#    number of final samples      9098
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          228634 |*                                  231634.50000
#                  7          235463 |*                                  239108.14286
#                 14          242292 |*                                  245810.85714
#                 26          249121 |*                                  252844.11538
#                 36          255950 |*                                  259571.27778
#                 41          262779 |*                                  266490.43902
#                 53          269608 |**                                 272820.49057
#                 73          276437 |**                                 280061.26027
#                127          283266 |****                               287060.52756
#                181          290095 |*******                            293540.77348
#                223          296924 |********                           300290.87444
#                256          303753 |*********                          307245.44531
#                321          310582 |************                       314278.02181
#                344          317411 |*************                      321015.75581
#                548          324240 |*********************              327888.63139
#                725          331069 |****************************       334574.36276
#                827          337898 |********************************   341388.00967
#                776          344727 |******************************     348081.46392
#                766          351556 |*****************************      354908.45953
#                731          358385 |****************************       361719.24213
#                585          365214 |**********************             368586.98462
#                425          372043 |****************                   375299.67765
#                264          378872 |**********                         382087.51894
#                213          385701 |********                           388907.31925
#                157          392530 |******                             395941.49045
#                178          399359 |******                             402776.79775
#                139          406188 |*****                              409620.10072
#                144          413017 |*****                              416532.78472
#                 97          419846 |***                                423067.46392
#                119          426675 |****                               430171.74790
#                131          433504 |*****                              437119.93893
#                110          440333 |****                               443806.54545
#
#                455           > 95% |*****************                  464266.57582
#
#        mean of 95%    350995.84415
#          95th %ile          447152
#
# WARNINGS
#     Actual benchmark run time only accounts for 54.9% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_z128k   1   1           53660         8582        0       10   131072   ----
# bin/../bin-riscv64/munmap -N unmap_z128k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     40346                      40346
#                        max   1363766                     209212
#                       mean     82747.18375                74941.85563
#                     median     54642                      53660*
#                     stddev     71158.44350                44794.78293
#             standard error       755.97873                  483.54086
#       99% confidence level      1947.40122                 1245.60126
#                       skew         5.89922                    1.52116
#                   kurtosis        68.15438                    0.83128
#           time correlation        18.57158                   14.74185
#
#               elapsed time        20.01069
#                   run time         7.40208
#          getnsecs overhead      1399
#
#          number of samples      8860
#         number of outliers       278
#    number of final samples      8582
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                961           40346 |**************                      43393.58065
#               2186           44590 |********************************    46552.40393
#               1042           48834 |***************                     50641.81574
#                652           53078 |*********                           55260.56595
#                840           57322 |************                        59341.79405
#                454           61566 |******                              63441.22247
#                206           65810 |***                                 67886.56311
#                155           70054 |**                                  72132.86452
#                108           74298 |*                                   75989.98148
#                 57           78542 |*                                   80535.38596
#                 49           82786 |*                                   84542.12245
#                 25           87030 |*                                   89121.40000
#                 22           91274 |*                                   93325.68182
#                 12           95518 |*                                   97723.08333
#                 19           99762 |*                                  102105.00000
#                 31          104006 |*                                  106236.38710
#                 29          108250 |*                                  109987.24138
#                 29          112494 |*                                  114557.96552
#                 20          116738 |*                                  118698.05000
#                 23          120982 |*                                  123295.04348
#                 43          125226 |*                                  127583.60465
#                 87          129470 |*                                  131856.97701
#                123          133714 |*                                  135968.20325
#                144          137958 |**                                 140133.08333
#                121          142202 |*                                  144154.34711
#                116          146446 |*                                  148462.03448
#                138          150690 |**                                 152907.62319
#                 97          154934 |*                                  157030.95876
#                 92          159178 |*                                  161354.70652
#                 99          163422 |*                                  165714.65657
#                 84          167666 |*                                  170015.63095
#                 88          171910 |*                                  174107.12500
#
#                430           > 95% |******                             190726.96977
#
#        mean of 95%     68834.44652
#          95th %ile          176151
#
# WARNINGS
#     Actual benchmark run time only accounts for 37.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_z8k   1   1           54518         8636        0       10     8192   ----
# bin/../bin-riscv64/munmap -N unmap_z8k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     40264                      40264
#                        max   1379624                     219041
#                       mean     84666.89352                77561.86603
#                     median     55288                      54518*
#                     stddev     74056.56660                47185.40465
#             standard error       787.34588                  507.75168
#       99% confidence level      2028.20299                 1307.96832
#                       skew         5.96258                    1.34831
#                   kurtosis        68.02135                    0.37299
#           time correlation        19.57052                   15.94066
#
#               elapsed time        20.01106
#                   run time         7.54511
#          getnsecs overhead      1399
#
#          number of samples      8847
#         number of outliers       211
#    number of final samples      8636
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1310           40264 |******************                  43419.79695
#               2253           44572 |********************************    46310.70883
#                636           48880 |*********                           50728.21698
#                530           53188 |*******                             55604.48491
#                879           57496 |************                        59551.32992
#                334           61804 |****                                63699.03293
#                176           66112 |**                                  68181.44318
#                145           70420 |**                                  72343.55862
#                 97           74728 |*                                   76745.28866
#                 58           79036 |*                                   80864.84483
#                 28           83344 |*                                   85519.57143
#                 26           87652 |*                                   89943.19231
#                 25           91960 |*                                   93706.88000
#                 41           96268 |*                                   98398.07317
#                 36          100576 |*                                  102323.97222
#                 16          104884 |*                                  107123.18750
#                 48          109192 |*                                  111333.54167
#                 38          113500 |*                                  116110.28947
#                 21          117808 |*                                  119678.52381
#                 37          122116 |*                                  123986.00000
#                 56          126424 |*                                  128934.66071
#                141          130732 |**                                 133176.36879
#                207          135040 |**                                 137133.86473
#                180          139348 |**                                 141311.83889
#                150          143656 |**                                 145636.81333
#                129          147964 |*                                  150092.64341
#                124          152272 |*                                  154429.91129
#                112          156580 |*                                  158855.43750
#                103          160888 |*                                  162879.71845
#                107          165196 |*                                  167408.50467
#                 87          169504 |*                                  171745.54023
#                 74          173812 |*                                  175866.40541
#
#                432           > 95% |******                             195944.26620
#
#        mean of 95%     71328.17552
#          95th %ile          178112
#
# WARNINGS
#     Actual benchmark run time only accounts for 37.7% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
       prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep   1   1         3864511         4891        0        1        1
# bin/../bin-riscv64/usleep -N usleep -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1223004                    2978609
#                        max   5945216                    4748814
#                       mean   3859679.31506              3862721.99877
#                     median   3864011                    3864511*
#                     stddev    355649.49273               295902.90164
#             standard error      5030.14640                 4231.07177
#       99% confidence level     12957.65713                10899.24089
#                       skew        -0.37444                   -0.05490
#                   kurtosis         5.99784                    0.26891
#           time correlation       222.94041                  202.39025
#
#               elapsed time        20.01234
#                   run time        19.30439
#          getnsecs overhead      1399
#
#          number of samples      4999
#         number of outliers       108
#    number of final samples      4891
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11         2978609 |*                                 3001263.36364
#                 11         3021838 |*                                 3043290.81818
#                 16         3065067 |*                                 3088027.75000
#                 28         3108296 |**                                3129112.71429
#                 30         3151525 |**                                3179739.13333
#                 41         3194754 |***                               3216126.43902
#                 40         3237983 |***                               3261612.05000
#                 38         3281212 |***                               3303520.13158
#                 65         3324441 |*****                             3348778.89231
#                 52         3367670 |****                              3387350.07692
#                 68         3410899 |*****                             3431305.42647
#                 97         3454128 |********                          3476863.64948
#                136         3497357 |***********                       3518335.85294
#                187         3540586 |***************                   3563269.59893
#                156         3583815 |*************                     3604934.08333
#                160         3627044 |*************                     3648387.26875
#                207         3670273 |*****************                 3691831.31884
#                260         3713502 |*********************             3735483.76154
#                288         3756731 |************************          3778747.57639
#                380         3799960 |********************************  3822700.15263
#                353         3843189 |*****************************     3863965.99717
#                330         3886418 |***************************       3908465.38182
#                334         3929647 |****************************      3950271.40719
#                262         3972876 |**********************            3993519.40458
#                191         4016105 |****************                  4036239.27225
#                180         4059334 |***************                   4080128.17778
#                183         4102563 |***************                   4121644.47541
#                162         4145792 |*************                     4167489.59877
#                133         4189021 |***********                       4210087.89474
#                106         4232250 |********                          4253718.63208
#                 86         4275479 |*******                           4296755.18605
#                 55         4318708 |****                              4338086.81818
#
#                245           > 95% |********************              4493782.48163
#
#        mean of 95%   3829443.94920
#          95th %ile         4361912
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
           prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep_d10   1   1         3886912         4888        0        1       10
# bin/../bin-riscv64/usleep -N usleep_d10 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1101804                    2989408
#                        max   6618019                    4769314
#                       mean   3875465.53041              3876305.48691
#                     median   3886912                    3886912*
#                     stddev    382675.38065               297921.01761
#             standard error      5412.92983                 4261.23558
#       99% confidence level     13943.70723                10976.94284
#                       skew        -0.22703                   -0.07706
#                   kurtosis         9.31340                    0.27132
#           time correlation       231.14910                  203.68104
#
#               elapsed time        20.01105
#                   run time        19.38031
#          getnsecs overhead      1399
#
#          number of samples      4998
#         number of outliers       110
#    number of final samples      4888
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12         2989408 |*                                 3005208.66667
#                  8         3032537 |*                                 3056871.50000
#                 16         3075666 |*                                 3092521.50000
#                 23         3118795 |*                                 3139874.21739
#                 28         3161924 |**                                3185384.28571
#                 42         3205053 |***                               3226790.33333
#                 43         3248182 |***                               3266658.37209
#                 50         3291311 |***                               3310287.62000
#                 72         3334440 |*****                             3355587.54167
#                 62         3377569 |****                              3399242.06452
#                 83         3420698 |******                            3441773.77108
#                 86         3463827 |******                            3488142.66279
#                142         3506956 |**********                        3528734.75352
#                138         3550085 |**********                        3570523.98551
#                141         3593214 |**********                        3617399.77305
#                163         3636343 |************                      3658843.63804
#                198         3679472 |***************                   3700930.80808
#                256         3722601 |*******************               3744938.25391
#                256         3765730 |*******************               3787941.70703
#                322         3808859 |************************          3832275.83540
#                393         3851988 |******************************    3875020.74300
#                415         3895117 |********************************  3915425.86506
#                339         3938246 |**************************        3958474.72566
#                226         3981375 |*****************                 4001660.06195
#                197         4024504 |***************                   4046087.18782
#                183         4067633 |**************                    4088455.80874
#                172         4110762 |*************                     4132757.05233
#                189         4153891 |**************                    4175309.70899
#                134         4197020 |**********                        4216751.48507
#                 98         4240149 |*******                           4261814.07143
#                 81         4283278 |******                            4305578.88889
#                 75         4326407 |*****                             4344664.32000
#
#                245           > 95% |******************                4507728.20000
#
#        mean of 95%   3842986.82124
#          95th %ile         4369512
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep_d100   1   1         3882811         4907        0        1      100
# bin/../bin-riscv64/usleep -N usleep_d100 -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1237804                    2977608
#                        max   6343718                    4770413
#                       mean   3873813.29117              3875259.84104
#                     median   3882811                    3882811*
#                     stddev    361790.80308               300703.90013
#             standard error      5118.03024                 4292.70488
#       99% confidence level     13184.04591                11058.00777
#                       skew        -0.26873                   -0.07517
#                   kurtosis         6.60553                    0.18239
#           time correlation       225.74696                  205.36194
#
#               elapsed time        20.00992
#                   run time        19.36809
#          getnsecs overhead      1399
#
#          number of samples      4997
#         number of outliers        90
#    number of final samples      4907
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11         2977608 |*                                 3006099.72727
#                  9         3021381 |*                                 3039842.22222
#                 14         3065154 |*                                 3082859.00000
#                 17         3108927 |*                                 3134509.00000
#                 26         3152700 |**                                3173366.88462
#                 46         3196473 |***                               3216035.47826
#                 53         3240246 |****                              3264249.13208
#                 57         3284019 |****                              3305955.05263
#                 54         3327792 |****                              3352156.05556
#                 66         3371565 |*****                             3394230.98485
#                 78         3415338 |******                            3438184.20513
#                112         3459111 |********                          3481209.15179
#                125         3502884 |*********                         3525109.26400
#                148         3546657 |***********                       3568194.71622
#                151         3590430 |***********                       3613042.14570
#                178         3634203 |*************                     3656891.41011
#                197         3677976 |***************                   3700412.69036
#                230         3721749 |*****************                 3742968.09565
#                286         3765522 |**********************            3788945.75874
#                343         3809295 |**************************        3832396.37901
#                363         3853068 |****************************      3875463.38567
#                410         3896841 |********************************  3917919.43415
#                331         3940614 |*************************         3959703.47130
#                225         3984387 |*****************                 4005268.70667
#                188         4028160 |**************                    4050902.56383
#                194         4071933 |***************                   4094027.04124
#                198         4115706 |***************                   4138272.84848
#                163         4159479 |************                      4183087.90798
#                137         4203252 |**********                        4223848.43796
#                 91         4247025 |*******                           4266351.61538
#                 90         4290798 |*******                           4312352.24444
#                 70         4334571 |*****                             4357350.81429
#
#                246           > 95% |*******************               4507053.78049
#
#        mean of 95%   3841914.78438
#          95th %ile         4378312
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
            prc thr      nsecs/call      samples   errors cnt/samp     size
write_n100k   1   1            2337        18290        0      386   102400
# bin/../bin-riscv64/write -N write_n100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2181                       2181
#                        max    122001                       2963
#                       mean      2481.89988                 2418.07162
#                     median      2341                       2337*
#                     stddev      1007.34690                  181.50005
#             standard error         7.29120                    1.34205
#       99% confidence level        18.78212                    3.45713
#                       skew        91.04275                    1.29323
#                   kurtosis     10486.97307                    0.41607
#           time correlation         0.04624                    0.03024
#
#               elapsed time        20.00287
#                   run time        18.16731
#          getnsecs overhead      1399
#
#          number of samples     19088
#         number of outliers       798
#    number of final samples     18290
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12            2181 |*                                    2194.25000
#                 65            2201 |*                                    2212.98462
#                275            2221 |***                                  2231.78545
#                765            2241 |**********                           2252.66536
#               1814            2261 |************************             2271.36053
#               2291            2281 |*******************************      2290.36578
#               2344            2301 |********************************     2310.46758
#               1884            2321 |*************************            2330.04671
#               1435            2341 |*******************                  2350.30871
#                980            2361 |*************                        2369.90714
#                662            2381 |*********                            2389.66314
#                481            2401 |******                               2409.61746
#                332            2421 |****                                 2429.80723
#                209            2441 |**                                   2450.64593
#                144            2461 |*                                    2470.08333
#                119            2481 |*                                    2490.18487
#                120            2501 |*                                    2510.31667
#                112            2521 |*                                    2530.74107
#                132            2541 |*                                    2550.59091
#                185            2561 |**                                   2571.43784
#                240            2581 |***                                  2590.88750
#                285            2601 |***                                  2610.81053
#                308            2621 |****                                 2630.17532
#                274            2641 |***                                  2650.70073
#                280            2661 |***                                  2671.04286
#                300            2681 |****                                 2691.18000
#                259            2701 |***                                  2710.93436
#                263            2721 |***                                  2730.33080
#                251            2741 |***                                  2750.39841
#                236            2761 |***                                  2770.27119
#                213            2781 |**                                   2790.61972
#                105            2801 |*                                    2805.79048
#
#                915           > 95% |************                         2875.69508
#
#        mean of 95%      2393.97232
#          95th %ile            2811
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
           prc thr      nsecs/call      samples   errors cnt/samp     size
write_n10k   1   1            2280        18370        0      390    10240
# bin/../bin-riscv64/write -N write_n10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2169                       2169
#                        max    109051                       2926
#                       mean      2439.06158                 2374.19134
#                     median      2286                       2280*
#                     stddev       912.34496                  183.77891
#             standard error         6.58257                    1.35594
#       99% confidence level        16.95670                    3.49291
#                       skew        86.00725                    1.18269
#                   kurtosis      9775.56599                    0.16832
#           time correlation         0.04692                    0.03102
#
#               elapsed time        20.00384
#                   run time        18.12674
#          getnsecs overhead      1399
#
#          number of samples     19210
#         number of outliers       840
#    number of final samples     18370
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 66            2169 |*                                    2181.36364
#                481            2188 |*****                                2199.76091
#               1660            2207 |******************                   2217.27530
#               2869            2226 |********************************     2235.23249
#               2533            2245 |****************************         2253.35215
#               1771            2264 |*******************                  2272.14060
#               1120            2283 |************                         2291.10625
#                567            2302 |******                               2310.33862
#                374            2321 |****                                 2329.36096
#                400            2340 |****                                 2349.30500
#                373            2359 |****                                 2368.31635
#                371            2378 |****                                 2387.10782
#                367            2397 |****                                 2405.46322
#                268            2416 |**                                   2424.60448
#                230            2435 |**                                   2442.93913
#                178            2454 |*                                    2462.67978
#                178            2473 |*                                    2481.88764
#                180            2492 |**                                   2501.50556
#                219            2511 |**                                   2520.58447
#                312            2530 |***                                  2538.59936
#                298            2549 |***                                  2558.45302
#                312            2568 |***                                  2576.52244
#                325            2587 |***                                  2595.97846
#                289            2606 |***                                  2615.42907
#                267            2625 |**                                   2634.00749
#                283            2644 |***                                  2653.16254
#                258            2663 |**                                   2671.95349
#                239            2682 |**                                   2690.79916
#                228            2701 |**                                   2709.97807
#                200            2720 |**                                   2728.76000
#                204            2739 |**                                   2747.82353
#                 31            2758 |*                                    2759.58065
#
#                919           > 95% |**********                           2828.70511
#
#        mean of 95%      2350.25586
#          95th %ile            2762
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
          prc thr      nsecs/call      samples   errors cnt/samp     size
write_n1k   1   1            2305        18140        0      387     1024
# bin/../bin-riscv64/write -N write_n1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2171                       2171
#                        max    114301                       2884
#                       mean      2458.04174                 2379.54068
#                     median      2309                       2305*
#                     stddev       997.89579                  168.04653
#             standard error         7.22128                    1.24770
#       99% confidence level        18.60201                    3.21408
#                       skew        77.83596                    1.39464
#                   kurtosis      8360.21265                    0.60809
#           time correlation         0.04760                    0.02744
#
#               elapsed time        20.00453
#                   run time        18.00442
#          getnsecs overhead      1399
#
#          number of samples     19096
#         number of outliers       956
#    number of final samples     18140
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7            2171 |*                                    2183.28571
#                100            2190 |*                                    2201.98000
#                420            2209 |****                                 2220.30476
#               1101            2228 |************                         2238.41689
#               2066            2247 |************************             2256.32865
#               2440            2266 |****************************         2275.38484
#               2726            2285 |********************************     2293.98166
#               2069            2304 |************************             2312.02707
#               1299            2323 |***************                      2331.39184
#                764            2342 |********                             2350.32199
#                392            2361 |****                                 2369.01531
#                236            2380 |**                                   2387.87288
#                156            2399 |*                                    2407.43590
#                117            2418 |*                                    2426.18803
#                 78            2437 |*                                    2445.03846
#                 83            2456 |*                                    2465.24096
#                 65            2475 |*                                    2483.47692
#                 66            2494 |*                                    2503.07576
#                112            2513 |*                                    2523.12500
#                169            2532 |*                                    2542.18343
#                266            2551 |***                                  2560.23308
#                260            2570 |***                                  2579.49231
#                297            2589 |***                                  2597.84512
#                286            2608 |***                                  2617.22028
#                281            2627 |***                                  2636.04626
#                265            2646 |***                                  2654.42642
#                258            2665 |***                                  2673.57364
#                265            2684 |***                                  2693.00755
#                247            2703 |**                                   2711.82186
#                218            2722 |**                                   2731.00000
#                124            2741 |*                                    2746.75806
#
#                907           > 95% |**********                           2807.96251
#
#        mean of 95%      2356.99217
#          95th %ile            2752
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
            prc thr      nsecs/call      samples   errors cnt/samp     size
write_t100k   1   1          816203        19308        0        1   102400
# bin/../bin-riscv64/write -N write_t100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    778203                     778203
#                        max   6588918                     961903
#                       mean    856848.13984               835907.87901
#                     median    818103                     816203*
#                     stddev    137104.20500                42007.02352
#             standard error       956.20229                  302.31052
#       99% confidence level      2463.17711                  778.75191
#                       skew        12.08650                    1.34660
#                   kurtosis       269.39716                    0.60018
#           time correlation        11.38282                    6.61245
#
#               elapsed time        20.00397
#                   run time        17.64644
#          getnsecs overhead      1399
#
#          number of samples     20559
#         number of outliers      1251
#    number of final samples     19308
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 16          778203 |*                                  780834.25000
#                 16          782972 |*                                  784784.25000
#                 21          787741 |*                                  790584.00000
#                228          792510 |**                                 795635.07456
#               1505          797279 |*************                      800470.32093
#               3582          802048 |********************************   804344.89168
#               2226          806817 |*******************                809029.70305
#               2118          811586 |******************                 813883.71955
#               1299          816355 |***********                        818496.26328
#                680          821124 |******                             823353.45000
#                490          825893 |****                               828061.31224
#                409          830662 |***                                833121.96333
#                602          835431 |*****                              837942.89535
#                872          840200 |*******                            842575.22477
#                695          844969 |******                             847188.24173
#                443          849738 |***                                852063.67946
#                272          854507 |**                                 856609.11029
#                131          859276 |*                                  861333.75573
#                 69          864045 |*                                  866025.01449
#                 36          868814 |*                                  870745.00000
#                 50          873583 |*                                  876341.32000
#                 76          878352 |*                                  880691.50000
#                119          883121 |*                                  885624.30252
#                216          887890 |*                                  890514.89815
#                346          892659 |***                                895091.50867
#                343          897428 |***                                899840.34694
#                320          902197 |**                                 904553.06563
#                289          906966 |**                                 909295.07612
#                232          911735 |**                                 914277.06466
#                203          916504 |*                                  918741.80788
#                223          921273 |*                                  923572.46188
#                215          926042 |*                                  928399.16279
#
#                966           > 95% |********                           942908.43064
#
#        mean of 95%    830272.58663
#          95th %ile          930803
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
           prc thr      nsecs/call      samples   errors cnt/samp     size
write_t10k   1   1          106534        18425        0        8    10240
# bin/../bin-riscv64/write -N write_t10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    101838                     101838
#                        max    495589                     127089
#                       mean    110785.05632               109258.24608
#                     median    106634                     106534*
#                     stddev     12927.81210                 5944.73012
#             standard error        93.39579                   43.79539
#       99% confidence level       240.58754                  112.81692
#                       skew        10.78429                    1.43003
#                   kurtosis       190.13312                    0.53732
#           time correlation         1.29249                    0.92826
#
#               elapsed time        20.00382
#                   run time        17.97156
#          getnsecs overhead      1399
#
#          number of samples     19160
#         number of outliers       735
#    number of final samples     18425
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9          101838 |*                                  102277.00000
#                 24          102475 |*                                  102754.79167
#                 22          103112 |*                                  103422.54545
#                305          103749 |***                                104181.73115
#               1707          104386 |****************                   104768.32045
#               3252          105023 |********************************   105347.56673
#               2927          105660 |****************************       105954.51418
#               2424          106297 |***********************            106601.97649
#               1604          106934 |***************                    107217.95698
#                988          107571 |*********                          107854.40385
#                540          108208 |*****                              108491.81852
#                309          108845 |***                                109134.77670
#                145          109482 |*                                  109780.68276
#                 80          110119 |*                                  110386.31250
#                 43          110756 |*                                  111074.76744
#                 27          111393 |*                                  111660.40741
#                 22          112030 |*                                  112301.59091
#                 16          112667 |*                                  112887.62500
#                 16          113304 |*                                  113570.62500
#                 13          113941 |*                                  114229.53846
#                 25          114578 |*                                  114966.00000
#                 76          115215 |*                                  115594.93421
#                170          115852 |*                                  116196.85294
#                278          116489 |**                                 116844.75899
#                342          117126 |***                                117453.34211
#                388          117763 |***                                118101.09536
#                336          118400 |***                                118736.46131
#                359          119037 |***                                119352.62674
#                320          119674 |***                                119978.89688
#                260          120311 |**                                 120629.75385
#                256          120948 |**                                 121248.11328
#                220          121585 |**                                 121881.92273
#
#                922           > 95% |*********                          124162.03579
#
#        mean of 95%    108473.16386
#          95th %ile          122213
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
          prc thr      nsecs/call      samples   errors cnt/samp     size
write_t1k   1   1           42282         6220        0       20     1024
# bin/../bin-riscv64/write -N write_t1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     40791                      40791
#                        max    266001                      50872
#                       mean     45142.06561                43433.80096
#                     median     42362                      42282*
#                     stddev     10364.47168                 2480.91356
#             standard error       126.84957                   31.45694
#       99% confidence level       326.76450                   81.03307
#                       skew         9.12194                    1.44943
#                   kurtosis       110.62664                    0.71174
#           time correlation         2.42351                    1.16357
#
#               elapsed time        20.00788
#                   run time         6.10317
#          getnsecs overhead      1399
#
#          number of samples      6676
#         number of outliers       456
#    number of final samples      6220
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4           40791 |*                                   40938.25000
#                 35           41048 |*                                   41232.97143
#                450           41305 |*************                       41468.76667
#               1078           41562 |********************************    41690.01948
#                885           41819 |**************************          41939.87119
#                814           42076 |************************            42202.52088
#                507           42333 |***************                     42449.92899
#                378           42590 |***********                         42711.57143
#                239           42847 |*******                             42975.31381
#                173           43104 |*****                               43229.01734
#                100           43361 |**                                  43480.67000
#                 79           43618 |**                                  43744.73418
#                 45           43875 |*                                   43988.60000
#                 34           44132 |*                                   44246.76471
#                 26           44389 |*                                   44510.84615
#                 26           44646 |*                                   44751.96154
#                 21           44903 |*                                   45026.52381
#                 23           45160 |*                                   45291.43478
#                 34           45417 |*                                   45579.02941
#                 41           45674 |*                                   45810.00000
#                 62           45931 |*                                   46060.37097
#                 54           46188 |*                                   46347.75926
#                 86           46445 |**                                  46583.03488
#                 82           46702 |**                                  46829.17073
#                 95           46959 |**                                  47082.01053
#                 80           47216 |**                                  47352.52500
#                 71           47473 |**                                  47606.19718
#                 74           47730 |**                                  47858.14865
#                 94           47987 |**                                  48122.97872
#                 79           48244 |**                                  48362.96203
#                 75           48501 |**                                  48605.52000
#                 65           48758 |*                                   48861.03077
#
#                311           > 95% |*********                           49792.69775
#
#        mean of 95%     43099.12219
#          95th %ile           48985
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.5% of elapsed time.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
             prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n100k   1   1          155681        13888        0        5   102400   10
# bin/../bin-riscv64/writev -N writev_n100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    149167                     151834
#                        max    892103                     160384
#                       mean    164713.77037               156053.94254
#                     median    156634                     155681*
#                     stddev     26340.40746                 1446.17326
#             standard error       190.15990                   12.27158
#       99% confidence level       489.85191                   31.61159
#                       skew         8.66347                    0.76445
#                   kurtosis       114.47786                    0.05071
#           time correlation         2.43122                    0.34609
#
#               elapsed time        20.00376
#                   run time        17.85300
#          getnsecs overhead      1399
#
#          number of samples     19187
#         number of outliers      5299
#    number of final samples     13888
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          151834 |*                                  151892.83333
#                  4          152057 |*                                  152137.50000
#                  8          152280 |*                                  152392.50000
#                  9          152503 |*                                  152607.33333
#                  4          152726 |*                                  152809.25000
#                  9          152949 |*                                  153050.33333
#                 10          153172 |*                                  153275.00000
#                 51          153395 |*                                  153525.07843
#                 88          153618 |**                                 153753.54545
#                142          153841 |***                                153963.14789
#                361          154064 |*********                          154201.38504
#                697          154287 |******************                 154405.81492
#                963          154510 |*************************          154625.06334
#               1143          154733 |******************************     154851.69029
#               1160          154956 |******************************     155065.95776
#               1198          155179 |********************************   155284.67279
#                890          155402 |***********************            155515.13708
#                744          155625 |*******************                155735.49462
#                654          155848 |*****************                  155961.49541
#                562          156071 |***************                    156181.76868
#                519          156294 |*************                      156400.72062
#                579          156517 |***************                    156623.12263
#                587          156740 |***************                    156852.37990
#                553          156963 |**************                     157083.84991
#                447          157186 |***********                        157301.10291
#                380          157409 |**********                         157515.86579
#                346          157632 |*********                          157736.35838
#                271          157855 |*******                            157964.76384
#                260          158078 |******                             158184.96923
#                242          158301 |******                             158407.96281
#                177          158524 |****                               158622.71751
#                129          158747 |***                                158845.75969
#
#                695           > 95% |******************                 159562.15396
#
#        mean of 95%    155869.13189
#          95th %ile          158961
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
            prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n10k   1   1          159401         7006        0        4    10240   10
# bin/../bin-riscv64/writev -N writev_n10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    149761                     149761
#                        max    950504                     192441
#                       mean    169783.00644               163623.34499
#                     median    159701                     159401*
#                     stddev     38774.79271                 9617.47858
#             standard error       449.20254                  114.90162
#       99% confidence level      1157.14574                  295.98658
#                       skew         9.01158                    1.50663
#                   kurtosis       109.63673                    0.95219
#           time correlation         8.14498                    4.00927
#
#               elapsed time        20.00664
#                   run time         6.02426
#          getnsecs overhead      1399
#
#          number of samples      7451
#         number of outliers       445
#    number of final samples      7006
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          149761 |*                                  150327.66667
#                  4          150895 |*                                  151610.75000
#                 10          152029 |*                                  152534.90000
#                 17          153163 |*                                  153705.70588
#                 39          154297 |*                                  155159.79487
#                770          155431 |*******************                156150.80000
#               1295          156565 |********************************   157122.37915
#                968          157699 |***********************            158244.99174
#                774          158833 |*******************                159383.25711
#                523          159967 |************                       160477.31166
#                366          161101 |*********                          161613.79781
#                282          162235 |******                             162791.83688
#                205          163369 |*****                              163903.27317
#                138          164503 |***                                165007.36232
#                 91          165637 |**                                 166102.42857
#                 68          166771 |*                                  167257.25000
#                 35          167905 |*                                  168403.28571
#                 29          169039 |*                                  169422.55172
#                 18          170173 |*                                  170853.22222
#                 59          171307 |*                                  171922.94915
#                 51          172441 |*                                  172994.29412
#                 66          173575 |*                                  174210.59091
#                 76          174709 |*                                  175302.00000
#                 89          175843 |**                                 176424.06742
#                 65          176977 |*                                  177587.50769
#                 65          178111 |*                                  178620.30769
#                 87          179245 |**                                 179828.12644
#                 90          180379 |**                                 180962.72222
#                113          181513 |**                                 182065.73451
#                102          182647 |**                                 183188.59804
#                 74          183781 |*                                  184294.58108
#                 83          184915 |**                                 185436.00000
#
#                351           > 95% |********                           188754.53846
#
#        mean of 95%    162297.86807
#          95th %ile          186021
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.1% of elapsed time.
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
           prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n1k   1   1          154584        13854        0        5     1024   10
# bin/../bin-riscv64/writev -N writev_n1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    146781                     150601
#                        max    836803                     159167
#                       mean    163416.64562               154838.16472
#                     median    155434                     154584*
#                     stddev     24944.92988                 1445.27698
#             standard error       179.52498                   12.27901
#       99% confidence level       462.45635                   31.63074
#                       skew         8.66398                    0.59759
#                   kurtosis       119.21624                   -0.08556
#           time correlation         2.37911                    0.35063
#
#               elapsed time        20.00517
#                   run time        17.85211
#          getnsecs overhead      1399
#
#          number of samples     19307
#         number of outliers      5453
#    number of final samples     13854
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          150601 |*                                  150671.00000
#                 11          150820 |*                                  150957.27273
#                  6          151039 |*                                  151167.00000
#                  6          151258 |*                                  151333.00000
#                 12          151477 |*                                  151588.58333
#                  6          151696 |*                                  151781.16667
#                 34          151915 |*                                  152044.61765
#                 69          152134 |**                                 152250.59420
#                129          152353 |****                               152481.55814
#                269          152572 |********                           152693.65428
#                461          152791 |**************                     152902.35792
#                552          153010 |*****************                  153119.87319
#                639          153229 |********************               153342.69014
#                809          153448 |*************************          153558.63906
#                998          153667 |********************************   153774.66733
#                981          153886 |*******************************    154000.85627
#                914          154105 |*****************************      154219.71335
#                908          154324 |*****************************      154437.36454
#                795          154543 |*************************          154651.80126
#                751          154762 |************************           154862.58056
#                602          154981 |*******************                155086.60631
#                609          155200 |*******************                155312.26601
#                489          155419 |***************                    155527.73620
#                489          155638 |***************                    155744.87117
#                465          155857 |**************                     155968.22796
#                451          156076 |**************                     156183.11086
#                385          156295 |************                       156396.82597
#                412          156514 |*************                      156614.52913
#                307          156733 |*********                          156838.63518
#                243          156952 |*******                            157066.51852
#                204          157171 |******                             157274.58333
#                153          157390 |****                               157483.26797
#
#                693           > 95% |**********************             158213.37229
#
#        mean of 95%    154660.44123
#          95th %ile          157581
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
             prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t100k   1   1         8427623         2117        0        1   102400   10
# bin/../bin-riscv64/writev -N writev_t100k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   8281422                    8281422
#                        max  32129584                    8654624
#                       mean   8523976.84863              8442168.34766
#                     median   8438123                    8427623*
#                     stddev    603982.72412                71191.64641
#             standard error     12507.20429                 1547.27892
#       99% confidence level     32218.55825                 3985.79049
#                       skew        27.09335                    0.74160
#                   kurtosis      1006.31497                    0.01444
#           time correlation       285.66683                  112.39153
#
#               elapsed time        20.01169
#                   run time        19.91331
#          getnsecs overhead      1399
#
#          number of samples      2332
#         number of outliers       215
#    number of final samples      2117
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         8281422 |*                                 8281422.00000
#                  1         8290819 |*                                 8298822.00000
#                  0         8300216 |                                              -
#                  3         8309613 |*                                 8317155.66667
#                 15         8319010 |***                               8324836.13333
#                 22         8328407 |****                              8334172.45455
#                 44         8337804 |*********                         8342550.00000
#                 82         8347201 |*****************                 8351925.04878
#                 81         8356598 |*****************                 8360883.27160
#                126         8365995 |***************************       8371233.04762
#                129         8375392 |***************************       8379998.71318
#                100         8384789 |*********************             8389770.69000
#                148         8394186 |********************************  8398738.31081
#                135         8403583 |*****************************     8408150.19259
#                104         8412980 |**********************            8417997.85577
#                106         8422377 |**********************            8426741.76415
#                103         8431774 |**********************            8436488.95146
#                 72         8441171 |***************                   8445899.26389
#                 99         8450568 |*********************             8455042.11111
#                 86         8459965 |******************                8464399.68605
#                 78         8469362 |****************                  8473510.15385
#                 55         8478759 |***********                       8483568.45455
#                 81         8488156 |*****************                 8493182.30864
#                 63         8497553 |*************                     8502048.46032
#                 46         8506950 |*********                         8511225.23913
#                 47         8516347 |**********                        8520597.61702
#                 42         8525744 |*********                         8530189.80952
#                 38         8535141 |********                          8539752.21053
#                 34         8544538 |*******                           8548990.85294
#                 23         8553935 |****                              8558236.47826
#                 22         8563332 |****                              8568018.72727
#                 25         8572729 |*****                             8577355.28000
#
#                106           > 95% |**********************            8615137.49057
#
#        mean of 95%   8433051.12780
#          95th %ile         8582123
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
            prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t10k   1   1         1067903        15867        0        1    10240   10
# bin/../bin-riscv64/writev -N writev_t10k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1015203                    1015203
#                        max  13510436                    1258204
#                       mean   1108642.78273              1094964.36535
#                     median   1068804                    1067903*
#                     stddev    148158.24072                54433.57166
#             standard error      1155.02149                  432.13498
#       99% confidence level      2975.33537                 1113.17970
#                       skew        41.35652                    1.15752
#                   kurtosis      3108.64758                   -0.00798
#           time correlation        14.30423                   10.50792
#
#               elapsed time        20.00601
#                   run time        18.26833
#          getnsecs overhead      1399
#
#          number of samples     16454
#         number of outliers       587
#    number of final samples     15867
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8         1015203 |*                                 1018291.12500
#                 21         1021144 |*                                 1023760.85714
#                 23         1027085 |*                                 1030064.52174
#                122         1033026 |*                                 1036790.60656
#                453         1038967 |*****                             1042101.97351
#                750         1044908 |*********                         1048566.15600
#               2299         1050849 |*****************************     1054182.55676
#               2512         1056790 |********************************  1059576.65048
#               2001         1062731 |*************************         1065673.24388
#               1364         1068672 |*****************                 1071288.38196
#                760         1074613 |*********                         1077375.04342
#                435         1080554 |*****                             1083187.80230
#                320         1086495 |****                              1089275.15625
#                174         1092436 |**                                1094883.23563
#                123         1098377 |*                                 1101250.27642
#                 85         1104318 |*                                 1107099.29412
#                 53         1110259 |*                                 1112862.45283
#                 43         1116200 |*                                 1118845.86047
#                 45         1122141 |*                                 1125199.55556
#                 48         1128082 |*                                 1131218.54167
#                110         1134023 |*                                 1137460.34545
#                224         1139964 |**                                1143344.16071
#                396         1145905 |*****                             1149026.51010
#                401         1151846 |*****                             1154787.34913
#                411         1157787 |*****                             1160629.61557
#                406         1163728 |*****                             1166599.68227
#                316         1169669 |****                              1172602.55696
#                279         1175610 |***                               1178492.60573
#                235         1181551 |**                                1184321.14468
#                236         1187492 |***                               1190291.44492
#                219         1193433 |**                                1196462.11872
#                201         1199374 |**                                1202190.81095
#
#                794           > 95% |**********                        1226386.25315
#
#        mean of 95%   1088041.45824
#          95th %ile         1205304
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
           prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t1k   1   1          349802        17990        0        1     1024   10
# bin/../bin-riscv64/writev -N writev_t1k -E -L -W -O 1399 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.6465/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    333952                     339902
#                        max   2312807                     361002
#                       mean    367445.22263               350433.74669
#                     median    351002                     349802*
#                     stddev     58513.30184                 3522.67321
#             standard error       384.15865                   26.26375
#       99% confidence level       989.59267                   67.65543
#                       skew        13.57028                    0.62974
#                   kurtosis       295.75842                    0.05331
#           time correlation         4.12236                    0.65354
#
#               elapsed time        20.00410
#                   run time        16.90138
#          getnsecs overhead      1399
#
#          number of samples     23200
#         number of outliers      5210
#    number of final samples     17990
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11          339902 |*                                  340142.72727
#                  6          340442 |*                                  340660.33333
#                 11          340982 |*                                  341256.36364
#                 13          341522 |*                                  341813.38462
#                  6          342062 |*                                  342385.16667
#                  9          342602 |*                                  342879.77778
#                 37          343142 |*                                  343484.29730
#                128          343682 |**                                 343979.29688
#                155          344222 |***                                344482.56774
#                266          344762 |*****                              345063.91353
#                530          345302 |***********                        345563.62075
#                684          345842 |**************                     346107.81433
#                643          346382 |*************                      346663.89580
#                791          346922 |****************                   347215.18710
#               1174          347462 |************************           347748.16099
#               1431          348002 |******************************     348254.45073
#               1224          348542 |*************************          348797.35784
#               1510          349082 |********************************   349349.68874
#               1372          349622 |*****************************      349897.87682
#                947          350162 |********************               350420.23865
#                941          350702 |*******************                350943.65887
#                868          351242 |******************                 351486.50115
#                521          351782 |***********                        352053.67370
#                518          352322 |**********                         352593.83398
#                488          352862 |**********                         353107.45902
#                518          353402 |**********                         353640.77027
#                477          353942 |**********                         354207.09224
#                427          354482 |*********                          354756.17564
#                471          355022 |*********                          355299.74098
#                308          355562 |******                             355818.83117
#                339          356102 |*******                            356361.84071
#                266          356642 |*****                              356892.74812
#
#                900           > 95% |*******************                358720.70111
#
#        mean of 95%    349997.33599
#          95th %ile          357152
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
