!Libmicro_#:                                            0.4.1-rh.31
!Options:             -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000
!Machine_name:                                    openeuler-riscv64
!OS_name:                                                     Linux
!OS_release:                           6.4.0-1.0.0.4.oe2309.riscv64
!OS_build:                      #1 SMP Wed Jul 26 14:45:48 UTC 2023
!IPV4_address:                                            10.0.2.15
!IPV6_address:                            fec0::e717:fa5c:a015:b54b
!IPV6_address:                             fe80::8942:64ee:21ab:ed1
!Run_by:                                                       root
!Date:                                               09/08/23 19:50
!Compiler:                                                      gcc
!Compiler Ver.:                                                  12
!Libc Ver.:                                              glibc 2.38
!Libpthread Ver.:                                         NPTL 2.38
!sizeof(long):                                                    8
!extra_CFLAGS:                                               [none]
!TimerRes:                                                  1 nsecs
!TimerOverhead:                                          1416 nsecs
!Location /tmp:                                                /tmp
!Location /var/tmp:                                               /
!CPU_NAME:                                                         
!Boot cmd line:       root=/dev/vda2 rw console=ttyS0 systemd.default_timeout_start_sec=600 selinux=0 highres=off earlycon
!Processor:                                                 riscv64
!Byte_Order:                                          Little_Endian
!#CPUs:                                                           4
!On-line_CPUs_list:                                             0-3
!NUMA_nodes:                                                      1
!NUMA_node0_CPUs:                                               0-3
!Memory:                                                      0,0,0
!kernel.sched_autogroup_enabled:                                  1
!kernel.sched_cfs_bandwidth_slice_us:                          5000
!kernel.sched_child_runs_first:                                   0
!kernel.sched_deadline_period_max_us:                       4194304
!kernel.sched_deadline_period_min_us:                           100
!kernel.sched_rr_timeslice_ms:                                  100
!kernel.sched_rt_period_us:                                 1000000
!kernel.sched_rt_runtime_us:                                 950000
!kernel.sched_schedstats:                                         0
!Trans. Huge Page:                           always madvise [never]
!THP Defrag:             always defer defer+madvise [madvise] never
!THP khpd.alloc_sleep_millisecs:                              60000
!THP khpd.defrag:                                                 1
!THP khpd.full_scans:                                             7
!THP khpd.max_ptes_none:                                        511
!THP khpd.max_ptes_shared:                                      256
!THP khpd.max_ptes_swap:                                         64
!THP khpd.pages_collapsed:                                       80
!THP khpd.pages_to_scan:                                       4096
!THP khpd.scan_sleep_millisecs:                               10000
!vm.admin_reserve_kbytes:                                      8192
!vm.compaction_proactiveness:                                    20
!vm.compact_memory:                                                
!vm.compact_unevictable_allowed:                                  1
!vm.dirty_background_bytes:                                       0
!vm.dirty_background_ratio:                                      90
!vm.dirty_bytes:                                                  0
!vm.dirty_expire_centisecs:                                    2500
!vm.dirty_ratio:                                                 90
!vm.dirtytime_expire_seconds:                                 43200
!vm.dirty_writeback_centisecs:                                    0
!vm.drop_caches:                                                   
!vm.extfrag_threshold:                                          500
!vm.hugetlb_optimize_vmemmap:                                     0
!vm.hugetlb_shm_group:                                            0
!vm.laptop_mode:                                                  0
!vm.legacy_va_layout:                                             0
!vm.lowmem_reserve_ratio:                                  256 32 0
!vm.max_map_count:                                            65530
!vm.memfd_noexec:                                                 0
!vm.min_free_kbytes:                                           7932
!vm.min_slab_ratio:                                               5
!vm.min_unmapped_ratio:                                           1
!vm.mmap_min_addr:                                             4096
!vm.mmap_rnd_bits:                                               18
!vm.mmap_rnd_compat_bits:                                        11
!vm.nr_hugepages:                                                 0
!vm.nr_hugepages_mempolicy:                                       0
!vm.nr_overcommit_hugepages:                                      0
!vm.numa_stat:                                                    1
!vm.numa_zonelist_order:                                       Node
!vm.oom_dump_tasks:                                               1
!vm.oom_kill_allocating_task:                                     0
!vm.overcommit_kbytes:                                            0
!vm.overcommit_memory:                                            0
!vm.overcommit_ratio:                                            50
!vm.page-cluster:                                                 3
!vm.page_lock_unfairness:                                         5
!vm.panic_on_oom:                                                 0
!vm.percpu_pagelist_high_fraction:                                0
!vm.stat_interval:                                                1
!vm.stat_refresh:                                                  
!vm.swappiness:                                                  60
!vm.unprivileged_userfaultfd:                                     0
!vm.user_reserve_kbytes:                                     124614
!vm.vfs_cache_pressure:                                         100
!vm.watermark_boost_factor:                                   15000
!vm.watermark_scale_factor:                                      10
!vm.zone_reclaim_mode:                                            0
!nh:
!nh:node
     prc thr      nsecs/call      samples   errors cnt/samp 
atoi   1   1             141        21157        0     5242 
# bin/../bin-riscv64/atoi -N atoi -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       135                        135
#                        max    140200                        158
#                       mean       159.65939                  143.46051
#                     median       142                        141*
#                     stddev      1129.89795                    4.73678
#             standard error         7.46706                    0.03257
#       99% confidence level        19.23516                    0.08389
#                       skew       111.58087                    1.28585
#                   kurtosis     12766.67011                    0.40836
#           time correlation         0.00473                    0.00068
#
#               elapsed time        20.00483
#                   run time        17.52641
#          getnsecs overhead      1416
#
#          number of samples     22897
#         number of outliers      1740
#    number of final samples     21157
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             135 |*                                             -
#                  1             136 |*                                             -
#                 14             137 |*                                             -
#                180             138 |*                                             -
#               1463             139 |*********                                     -
#               4779             140 |********************************              -
#               4669             141 |*******************************               -
#               2753             142 |******************                            -
#               1458             143 |*********                                     -
#                600             144 |****                                          -
#                223             145 |*                                             -
#                 88             146 |*                                             -
#                 74             147 |*                                             -
#                261             148 |*                                             -
#                769             149 |*****                                         -
#                977             150 |******                                        -
#                806             151 |*****                                         -
#                645             152 |****                                          -
#                338             153 |**                                            -
#
#               1058           > 95% |*******                               155.31096
#
#        mean of 95%       142.83671
#          95th %ile             153
#
# Usage: atoi
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'atoi')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures atoi()
     prc thr      nsecs/call      samples   errors cnt/samp 
bind   1   1           75470           64        0     1024 
# bin/../bin-riscv64/bind -N bind -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     74012                      74012
#                        max    133388                      79350
#                       mean     78781.79167                75810.73438
#                     median     75705                      75470*
#                     stddev     10775.71391                 1283.65126
#             standard error      1269.93006                  160.45641
#       99% confidence level      3271.33984                  413.33570
#                       skew         3.84580                    0.95919
#                   kurtosis        14.20167                    0.06750
#           time correlation       276.97812                   64.97681
#
#               elapsed time        25.23207
#                   run time         5.80852
#          getnsecs overhead      1416
#
#          number of samples        72
#         number of outliers         8
#    number of final samples        64
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value        13
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           74012 |*****                               74012.00000
#                  0           74150 |                                              -
#                  5           74288 |**************************          74366.20000
#                  5           74426 |**************************          74485.00000
#                  1           74564 |*****                               74670.00000
#                  3           74702 |****************                    74787.66667
#                  2           74840 |**********                          74906.50000
#                  6           74978 |********************************    75064.00000
#                  6           75116 |********************************    75177.50000
#                  1           75254 |*****                               75280.00000
#                  4           75392 |*********************               75450.25000
#                  1           75530 |*****                               75650.00000
#                  4           75668 |*********************               75723.00000
#                  5           75806 |**************************          75863.40000
#                  1           75944 |*****                               75983.00000
#                  0           76082 |                                              -
#                  1           76220 |*****                               76232.00000
#                  1           76358 |*****                               76465.00000
#                  2           76496 |**********                          76566.00000
#                  0           76634 |                                              -
#                  2           76772 |**********                          76852.50000
#                  2           76910 |**********                          76959.00000
#                  1           77048 |*****                               77088.00000
#                  1           77186 |*****                               77210.00000
#                  1           77324 |*****                               77418.00000
#                  0           77462 |                                              -
#                  1           77600 |*****                               77645.00000
#                  1           77738 |*****                               77817.00000
#                  0           77876 |                                              -
#                  0           78014 |                                              -
#                  0           78152 |                                              -
#                  2           78290 |**********                          78302.50000
#
#                  4           > 95% |*********************               78791.50000
#
#        mean of 95%     75612.01667
#          95th %ile           78399
#
# WARNINGS
#     Too few samples, 72 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 23.0% of elapsed time.
#
# Usage: bind
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'bind')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-z bind to port 0 rather than seq. number
# notes: measures bind() on TCP
         prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_1   1   1           13847         6731        0       63 
# bin/../bin-riscv64/cascade_cond -N c_cond_1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     13285                      13285
#                        max    300151                      15356
#                       mean     14501.99261                14003.62472
#                     median     13862                      13847*
#                     stddev      5156.61858                  450.80268
#             standard error        61.46677                    5.49473
#       99% confidence level       158.33839                   14.15444
#                       skew        31.27864                    1.08379
#                   kurtosis      1500.48713                    0.11599
#           time correlation         0.60476                    0.21329
#
#               elapsed time        20.00809
#                   run time         6.35346
#          getnsecs overhead      1416
#
#          number of samples      7038
#         number of outliers       307
#    number of final samples      6731
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8           13285 |*                                   13316.50000
#                 30           13337 |*                                   13367.00000
#                 75           13389 |****                                13417.36000
#                150           13441 |********                            13468.88667
#                244           13493 |*************                       13520.50000
#                318           13545 |*****************                   13572.07547
#                436           13597 |************************            13623.43349
#                518           13649 |****************************        13675.58494
#                569           13701 |*******************************     13726.76098
#                578           13753 |********************************    13778.01903
#                537           13805 |*****************************       13829.66480
#                462           13857 |*************************           13881.54329
#                394           13909 |*********************               13934.01269
#                300           13961 |****************                    13985.47667
#                198           14013 |**********                          14036.76768
#                143           14065 |*******                             14089.79720
#                 82           14117 |****                                14141.34146
#                 62           14169 |***                                 14193.91935
#                 57           14221 |***                                 14244.38596
#                 48           14273 |**                                  14302.08333
#                 52           14325 |**                                  14354.21154
#                 64           14377 |***                                 14405.60938
#                 80           14429 |****                                14454.76250
#                 73           14481 |****                                14507.39726
#                 98           14533 |*****                               14560.88776
#                139           14585 |*******                             14613.29496
#                153           14637 |********                            14662.33987
#                132           14689 |*******                             14714.57576
#                142           14741 |*******                             14764.71127
#                106           14793 |*****                               14817.62264
#                 89           14845 |****                                14867.58427
#                 57           14897 |***                                 14912.68421
#
#                337           > 95% |******************                  15090.57864
#
#        mean of 95%     13946.33610
#          95th %ile           14932
#
# WARNINGS
#     Actual benchmark run time only accounts for 31.8% of elapsed time.
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_o1   1   1            2393        16584        0      360 
# bin/../bin-riscv64/cascade_cond -N c_cond_o1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -o 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2315                       2315
#                        max    468807                       2642
#                       mean      2530.49112                 2422.02334
#                     median      2396                       2393*
#                     stddev      4025.45679                   73.20038
#             standard error        30.51253                    0.56842
#       99% confidence level        78.60027                    1.46425
#                       skew       101.97885                    1.16494
#                   kurtosis     11103.80778                    0.18256
#           time correlation         0.04895                    0.01384
#
#               elapsed time        20.00359
#                   run time        15.37467
#          getnsecs overhead      1416
#
#          number of samples     17405
#         number of outliers       821
#    number of final samples     16584
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            2315 |*                                    2319.25000
#                 49            2324 |*                                    2329.28571
#                220            2333 |***                                  2337.88182
#                616            2342 |**********                           2346.56981
#               1253            2351 |*********************                2355.33998
#               1639            2360 |****************************         2364.17450
#               1831            2369 |********************************     2373.00273
#               1652            2378 |****************************         2381.88438
#               1414            2387 |************************             2390.88755
#               1188            2396 |********************                 2399.94444
#                948            2405 |****************                     2408.75105
#                665            2414 |***********                          2417.56241
#                410            2423 |*******                              2426.68780
#                271            2432 |****                                 2435.89299
#                221            2441 |***                                  2444.85973
#                172            2450 |***                                  2453.91860
#                132            2459 |**                                   2462.76515
#                116            2468 |**                                   2472.03448
#                125            2477 |**                                   2481.11200
#                166            2486 |**                                   2490.50000
#                254            2495 |****                                 2499.29528
#                279            2504 |****                                 2508.00358
#                346            2513 |******                               2517.20231
#                369            2522 |******                               2525.86992
#                370            2531 |******                               2535.00270
#                330            2540 |*****                                2543.90303
#                299            2549 |*****                                2552.88629
#                259            2558 |****                                 2561.87259
#                156            2567 |**                                   2569.72436
#
#                830           > 95% |**************                       2601.26265
#
#        mean of 95%      2412.58011
#          95th %ile            2573
#
# WARNINGS
#     Actual benchmark run time only accounts for 76.9% of elapsed time.
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
           prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_os1   1   1             870        19919        0      936 
# bin/../bin-riscv64/cascade_cond -N c_cond_os1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -o -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       846                        846
#                        max    410807                        954
#                       mean       941.43377                  880.09363
#                     median       871                        870*
#                     stddev      3259.71587                   24.52811
#             standard error        22.39997                    0.17379
#       99% confidence level        57.70233                    0.44769
#                       skew       111.86934                    1.52895
#                   kurtosis     13104.54731                    1.03438
#           time correlation         0.02018                    0.00360
#
#               elapsed time        20.00543
#                   run time        17.72811
#          getnsecs overhead      1416
#
#          number of samples     21177
#         number of outliers      1258
#    number of final samples     19919
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9             846 |*                                     847.44444
#                 29             849 |*                                     850.44828
#                128             852 |*                                     853.24219
#                357             855 |***                                   856.27731
#               1053             858 |***********                           859.22127
#               2111             861 |**********************                862.12316
#               2990             864 |********************************      865.02140
#               2843             867 |******************************        867.96483
#               2042             870 |*********************                 870.89863
#               1402             873 |***************                       873.90656
#               1067             876 |***********                           876.98594
#                871             879 |*********                             880.01033
#                683             882 |*******                               883.00878
#                422             885 |****                                  885.87915
#                167             888 |*                                     888.82635
#                 98             891 |*                                     891.83673
#                 46             894 |*                                     894.93478
#                 33             897 |*                                     897.90909
#                 29             900 |*                                     901.03448
#                 44             903 |*                                     904.06818
#                 79             906 |*                                     907.02532
#                128             909 |*                                     909.95312
#                151             912 |*                                     913.12583
#                179             915 |*                                     916.11732
#                250             918 |**                                    919.07600
#                308             921 |***                                   922.01299
#                349             924 |***                                   924.94556
#                332             927 |***                                   927.98494
#                322             930 |***                                   931.04969
#                298             933 |***                                   933.97987
#                103             936 |*                                     936.08738
#
#                996           > 95% |**********                            943.93976
#
#        mean of 95%       876.73313
#          95th %ile             937
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_cond_s1   1   1           45886         4824        0       20 
# bin/../bin-riscv64/cascade_cond -N c_cond_s1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     43624                      43624
#                        max    586414                      51251
#                       mean     46901.53662                46154.44735
#                     median     45969                      45886*
#                     stddev     11593.06298                 1710.50196
#             standard error       164.23010                   24.62748
#       99% confidence level       423.05673                   63.44038
#                       skew        35.59050                    0.82610
#                   kurtosis      1507.93654                   -0.12685
#           time correlation         1.95750                    1.17797
#
#               elapsed time        20.00857
#                   run time         4.73753
#          getnsecs overhead      1416
#
#          number of samples      4983
#         number of outliers       159
#    number of final samples      4824
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10           43624 |*                                   43741.80000
#                 62           43810 |*****                               43918.32258
#                187           43996 |****************                    44105.09626
#                316           44182 |***************************         44281.45886
#                370           44368 |********************************    44463.74595
#                317           44554 |***************************         44640.05047
#                295           44740 |*************************           44826.53898
#                253           44926 |*********************               45016.94071
#                183           45112 |***************                     45197.46995
#                129           45298 |***********                         45379.86822
#                122           45484 |**********                          45577.70492
#                135           45670 |***********                         45768.68148
#                186           45856 |****************                    45946.94624
#                249           46042 |*********************               46138.01606
#                218           46228 |******************                  46325.66514
#                187           46414 |****************                    46505.55080
#                153           46600 |*************                       46687.32680
#                130           46786 |***********                         46878.40769
#                134           46972 |***********                         47064.58955
#                 97           47158 |********                            47239.15464
#                 80           47344 |******                              47433.40000
#                 73           47530 |******                              47627.69863
#                 86           47716 |*******                             47807.63953
#                100           47902 |********                            47990.97000
#                 76           48088 |******                              48184.26316
#                 64           48274 |*****                               48370.21875
#                 74           48460 |******                              48554.66216
#                 76           48646 |******                              48743.96053
#                 70           48832 |******                              48918.42857
#                 56           49018 |****                                49117.35714
#                 47           49204 |****                                49300.00000
#                 47           49390 |****                                49466.00000
#
#                242           > 95% |********************                50238.35950
#
#        mean of 95%     45938.75404
#          95th %ile           49561
#
# WARNINGS
#     Actual benchmark run time only accounts for 23.7% of elapsed time.
#
# Usage: cascade_cond
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_cond')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-o] (do signal outside mutex)
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_cond_wait()/pthread_cond_signal()
          prc thr      nsecs/call      samples   errors cnt/samp 
c_fcntl_1   1   1          368207        15595        0        2 
# bin/../bin-riscv64/cascade_fcntl -N c_fcntl_1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    358856                     358856
#                        max   1577252                     382557
#                       mean    397767.29459               368878.63027
#                     median    370357                     368207*
#                     stddev     67563.23754                 4584.27254
#             standard error       474.13090                   36.70944
#       99% confidence level      1221.36120                   94.56351
#                       skew         2.85912                    0.59785
#                   kurtosis        12.00679                   -0.19164
#           time correlation         7.74874                    0.99210
#
#               elapsed time        20.00417
#                   run time        16.18287
#          getnsecs overhead      1416
#
#          number of samples     20306
#         number of outliers      4711
#    number of final samples     15595
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9          358856 |*                                  359206.00000
#                 24          359442 |*                                  359758.12500
#                 36          360028 |*                                  360321.38889
#                 67          360614 |**                                 360960.52239
#                167          361200 |*****                              361515.97605
#                281          361786 |*********                          362091.39146
#                414          362372 |*************                      362702.56522
#                583          362958 |*******************                363272.68096
#                690          363544 |***********************            363842.97971
#                874          364130 |*****************************      364441.05034
#                766          364716 |*************************          365012.11488
#                960          365302 |********************************   365591.20937
#                803          365888 |**************************         366179.67870
#                857          366474 |****************************       366786.78063
#                599          367060 |*******************                367365.75459
#                707          367646 |***********************            367936.15842
#                600          368232 |********************               368546.86333
#                610          368818 |********************               369096.51311
#                695          369404 |***********************            369666.77410
#                618          369990 |********************               370280.23948
#                670          370576 |**********************             370877.99104
#                557          371162 |******************                 371454.01257
#                597          371748 |*******************                372027.32328
#                470          372334 |***************                    372628.19574
#                413          372920 |*************                      373198.15738
#                304          373506 |**********                         373778.74342
#                317          374092 |**********                         374361.17350
#                286          374678 |*********                          374956.75524
#                241          375264 |********                           375548.64315
#                253          375850 |********                           376114.06719
#                189          376436 |******                             376715.16931
#                158          377022 |*****                              377307.92405
#
#                780           > 95% |**************************         379577.19231
#
#        mean of 95%    368315.35802
#          95th %ile          377607
#
# Usage: cascade_fcntl
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_fcntl')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp file (default /tmp)]
# notes: thread cascade using fcntl region locking
        prc thr      nsecs/call      samples   errors cnt/samp 
c_flock   1   1           30814        13462        0       28 
# bin/../bin-riscv64/cascade_flock -N c_flock -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     29758                      29758
#                        max    469411                      32257
#                       mean     34080.14186                30867.00215
#                     median     31074                      30814*
#                     stddev      8600.62454                  463.16691
#             standard error        62.93945                    3.99193
#       99% confidence level       162.13202                   10.28321
#                       skew        13.16993                    0.53639
#                   kurtosis       463.70407                   -0.17643
#           time correlation         0.90637                    0.11633
#
#               elapsed time        20.00547
#                   run time        17.92049
#          getnsecs overhead      1416
#
#          number of samples     18673
#         number of outliers      5211
#    number of final samples     13462
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           29758 |*                                   29758.00000
#                  4           29820 |*                                   29863.50000
#                 16           29882 |*                                   29914.81250
#                 44           29944 |*                                   29977.13636
#                102           30006 |****                                30041.77451
#                137           30068 |*****                               30100.86131
#                241           30130 |**********                          30163.60166
#                333           30192 |**************                      30222.78979
#                519           30254 |**********************              30285.19461
#                571           30316 |************************            30346.39755
#                615           30378 |**************************          30409.48130
#                733           30440 |********************************    30471.05730
#                651           30502 |****************************        30532.80492
#                650           30564 |****************************        30592.80462
#                711           30626 |*******************************     30656.45570
#                679           30688 |*****************************       30718.96465
#                699           30750 |******************************      30779.85694
#                687           30812 |*****************************       30841.02911
#                655           30874 |****************************        30902.95725
#                589           30936 |*************************           30965.42615
#                573           30998 |*************************           31028.40838
#                533           31060 |***********************             31090.08068
#                496           31122 |*********************               31152.19758
#                435           31184 |******************                  31213.74713
#                415           31246 |******************                  31276.76627
#                356           31308 |***************                     31336.79213
#                352           31370 |***************                     31399.59091
#                242           31432 |**********                          31460.07438
#                224           31494 |*********                           31523.67857
#                230           31556 |**********                          31586.97826
#                160           31618 |******                              31650.37500
#                135           31680 |*****                               31706.37778
#
#                674           > 95% |*****************************       31940.35905
#
#        mean of 95%     30810.43017
#          95th %ile           31734
#
# Usage: cascade_flock
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_flock')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp files (default /tmp)]
# notes: thread cascade using flock file locking
          prc thr      nsecs/call      samples   errors cnt/samp 
c_lockf_1   1   1          381558         4955        0        2 
# bin/../bin-riscv64/cascade_lockf -N c_lockf_1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    373008                     373008
#                        max   1424249                     396158
#                       mean    403594.21277               382526.50373
#                     median    383958                     381558*
#                     stddev     52961.33916                 4548.03778
#             standard error       652.89901                   64.61037
#       99% confidence level      1681.86785                  166.43632
#                       skew         6.42557                    0.70205
#                   kurtosis        81.52643                   -0.07406
#           time correlation        17.47095                    3.07493
#
#               elapsed time        20.00656
#                   run time         5.32061
#          getnsecs overhead      1416
#
#          number of samples      6580
#         number of outliers      1625
#    number of final samples      4955
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          373008 |*                                  373277.60000
#                 13          373584 |*                                  373915.07692
#                 14          374160 |*                                  374439.64286
#                 26          374736 |**                                 375068.76923
#                 64          375312 |******                             375607.35938
#                103          375888 |**********                         376185.66019
#                139          376464 |*************                      376758.90647
#                199          377040 |*******************                377344.31156
#                238          377616 |***********************            377907.31933
#                321          378192 |********************************   378499.94393
#                266          378768 |**************************         379065.42481
#                317          379344 |*******************************    379648.64984
#                283          379920 |****************************       380209.08127
#                277          380496 |***************************        380762.01805
#                263          381072 |**************************         381349.19011
#                187          381648 |******************                 381939.86631
#                214          382224 |*********************              382505.45794
#                178          382800 |*****************                  383095.48315
#                158          383376 |***************                    383636.68987
#                194          383952 |*******************                384236.02062
#                148          384528 |**************                     384802.22297
#                177          385104 |*****************                  385381.14124
#                136          385680 |*************                      385951.37500
#                137          386256 |*************                      386526.97810
#                118          386832 |***********                        387101.64407
#                102          387408 |**********                         387654.56863
#                107          387984 |**********                         388275.75701
#                 71          388560 |*******                            388839.69014
#                 94          389136 |*********                          389444.17021
#                 60          389712 |*****                              390020.50000
#                 61          390288 |******                             390558.81967
#                 37          390864 |***                                391193.13514
#
#                248           > 95% |************************           393358.41129
#
#        mean of 95%    381955.79775
#          95th %ile          391408
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.6% of elapsed time.
#
# Usage: cascade_lockf
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_lockf')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d directory for temp files (default /tmp)]
# notes: thread cascade using lockf file locking
          prc thr      nsecs/call      samples   errors cnt/samp 
c_mutex_1   1   1            7695         6697        0      111 
# bin/../bin-riscv64/cascade_mutex -N c_mutex_1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      7345                       7345
#                        max    355857                       8509
#                       mean      8117.50515                 7768.71734
#                     median      7705                       7695*
#                     stddev      5431.46486                  247.29211
#             standard error        64.97414                    3.02183
#       99% confidence level       167.37338                    7.78424
#                       skew        48.94314                    1.00215
#                   kurtosis      2855.73009                    0.10136
#           time correlation         0.40101                    0.11966
#
#               elapsed time        20.00659
#                   run time         6.13450
#          getnsecs overhead      1416
#
#          number of samples      6988
#         number of outliers       291
#    number of final samples      6697
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11            7345 |*                                    7363.90909
#                 17            7375 |*                                    7392.64706
#                 64            7405 |****                                 7419.96875
#                123            7435 |*******                              7449.50407
#                204            7465 |*************                        7480.84804
#                292            7495 |******************                   7509.70890
#                412            7525 |**************************           7539.70874
#                451            7555 |*****************************        7570.05987
#                490            7585 |*******************************      7599.97143
#                495            7615 |********************************     7629.71111
#                461            7645 |*****************************        7659.37744
#                472            7675 |******************************       7689.15890
#                435            7705 |****************************         7718.93563
#                314            7735 |********************                 7749.86624
#                304            7765 |*******************                  7779.03947
#                225            7795 |**************                       7809.39111
#                168            7825 |**********                           7838.14286
#                123            7855 |*******                              7867.05691
#                100            7885 |******                               7899.63000
#                 70            7915 |****                                 7929.37143
#                 83            7945 |*****                                7958.53012
#                 79            7975 |*****                                7989.05063
#                 68            8005 |****                                 8021.48529
#                 99            8035 |******                               8050.13131
#                126            8065 |********                             8081.96032
#                109            8095 |*******                              8109.53211
#                110            8125 |*******                              8139.27273
#                149            8155 |*********                            8170.34228
#                111            8185 |*******                              8200.81081
#                 93            8215 |******                               8230.08602
#                 93            8245 |******                               8258.52688
#                 11            8275 |*                                    8276.18182
#
#                335           > 95% |*********************                8365.54328
#
#        mean of 95%      7737.29063
#          95th %ile            8278
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.7% of elapsed time.
#
# Usage: cascade_mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_mutexes
           prc thr      nsecs/call      samples   errors cnt/samp 
c_mutex_s1   1   1            8740         6286        0      111 
# bin/../bin-riscv64/cascade_mutex -N c_mutex_s1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8424                       8424
#                        max     80796                       9693
#                       mean      8907.06737                 8842.72876
#                     median      8748                       8740*
#                     stddev      1054.08929                  284.18293
#             standard error        13.11783                    3.58435
#       99% confidence level        33.79153                    9.23329
#                       skew        51.63222                    0.97062
#                   kurtosis      3398.81625                   -0.22234
#           time correlation         0.19380                    0.14615
#
#               elapsed time        20.00736
#                   run time         6.39899
#          getnsecs overhead      1416
#
#          number of samples      6457
#         number of outliers       171
#    number of final samples      6286
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            8424 |*                                    8438.20000
#                 31            8455 |*                                    8475.67742
#                 90            8486 |*****                                8504.32222
#                214            8517 |*************                        8533.54673
#                440            8548 |**************************           8563.96364
#                498            8579 |******************************       8593.88353
#                526            8610 |********************************     8624.69011
#                471            8641 |****************************         8655.44161
#                391            8672 |***********************              8685.41944
#                378            8703 |**********************               8717.90476
#                395            8734 |************************             8749.12911
#                341            8765 |********************                 8778.73900
#                237            8796 |**************                       8810.13080
#                186            8827 |***********                          8840.93011
#                164            8858 |*********                            8873.07317
#                104            8889 |******                               8901.73077
#                 72            8920 |****                                 8933.86111
#                 71            8951 |****                                 8966.42254
#                 55            8982 |***                                  8997.56364
#                 43            9013 |**                                   9029.11628
#                 59            9044 |***                                  9060.22034
#                 74            9075 |****                                 9089.68919
#                109            9106 |******                               9121.34862
#                115            9137 |******                               9152.73043
#                131            9168 |*******                              9183.29771
#                139            9199 |********                             9214.24460
#                120            9230 |*******                              9246.55833
#                128            9261 |*******                              9275.07031
#                119            9292 |*******                              9307.37815
#                116            9323 |*******                              9337.73276
#                108            9354 |******                               9368.66667
#                 36            9385 |**                                   9389.11111
#
#                315           > 95% |*******************                  9502.15238
#
#        mean of 95%      8807.94088
#          95th %ile            9395
#
# WARNINGS
#     Actual benchmark run time only accounts for 32.0% of elapsed time.
#
# Usage: cascade_mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'cascade_mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (force PTHREAD_PROCESS_SHARED)
# notes: thread cascade using pthread_mutexes
          prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chdir_tmp   1   1          310705         4225        0        1     2     n
# bin/../bin-riscv64/chdir -N chdir_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 /tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.1285/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    298255                     298255
#                        max   1730655                     329056
#                       mean    334283.84085               312317.90036
#                     median    313355                     310705*
#                     stddev     88102.71011                 5587.61970
#             standard error      1200.59468                   85.96338
#       99% confidence level      3092.73189                  221.44167
#                       skew         8.85615                    0.87631
#                   kurtosis        92.61519                   -0.08930
#           time correlation        23.85133                    4.36337
#
#               elapsed time        20.00840
#                   run time         3.47576
#          getnsecs overhead      1416
#
#          number of samples      5385
#         number of outliers      1160
#    number of final samples      4225
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          298255 |*                                  298255.00000
#                  0          299054 |                                              -
#                  0          299853 |                                              -
#                  1          300652 |*                                  301404.00000
#                  0          301451 |                                              -
#                  1          302250 |*                                  302955.00000
#                  1          303049 |*                                  303755.00000
#                 11          303848 |*                                  304455.00000
#                 78          304647 |*****                              305124.87179
#                166          305446 |************                       305877.28916
#                383          306245 |****************************       306683.72063
#                421          307044 |*******************************    307438.35392
#                429          307843 |********************************   308215.25641
#                322          308642 |************************           309002.04969
#                205          309441 |***************                    309808.30732
#                189          310240 |**************                     310671.59259
#                163          311039 |************                       311453.17791
#                171          311838 |************                       312246.49123
#                172          312637 |************                       313051.01163
#                174          313436 |************                       313810.68966
#                160          314235 |***********                        314593.18125
#                111          315034 |********                           315422.75676
#                101          315833 |*******                            316226.17822
#                 94          316632 |*******                            317016.32979
#                121          317431 |*********                          317841.00000
#                132          318230 |*********                          318606.80303
#                105          319029 |*******                            319408.21905
#                106          319828 |*******                            320291.71698
#                 68          320627 |*****                              320956.91176
#                 49          321426 |***                                321763.42857
#                 39          322225 |**                                 322647.48718
#                 39          323024 |**                                 323371.94872
#
#                212           > 95% |***************                    325879.18868
#
#        mean of 95%    311601.48044
#          95th %ile          323806
#
# WARNINGS
#     Actual benchmark run time only accounts for 17.4% of elapsed time.
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
          prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chdir_usr   1   1          249105        16635        0        2     2     n
# bin/../bin-riscv64/chdir -N chdir_usr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 /var/tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.1285/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    210151                     243705
#                        max  14536295                     256039
#                       mean    262251.02242               249814.21629
#                     median    250039                     249105*
#                     stddev    103761.71395                 2081.26133
#             standard error       693.37998                   16.13672
#       99% confidence level      1786.14684                   41.56819
#                       skew       116.93997                    0.79879
#                   kurtosis     15994.87225                   -0.18483
#           time correlation         3.34882                    0.41303
#
#               elapsed time        20.00464
#                   run time        17.29469
#          getnsecs overhead      1416
#
#          number of samples     22394
#         number of outliers      5759
#    number of final samples     16635
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          243705 |*                                  243831.40000
#                  4          244021 |*                                  244171.50000
#                  1          244337 |*                                  244605.00000
#                  3          244653 |*                                  244794.00000
#                  7          244969 |*                                  245085.85714
#                 12          245285 |*                                  245413.25000
#                  9          245601 |*                                  245738.22222
#                 15          245917 |*                                  246091.53333
#                 26          246233 |*                                  246380.61538
#                 47          246549 |*                                  246714.89362
#                363          246865 |******                             247046.73278
#                734          247181 |************                       247340.38965
#                952          247497 |****************                   247647.86555
#               1039          247813 |*****************                  247976.57555
#               1856          248129 |********************************   248288.32112
#               1702          248445 |*****************************      248592.85194
#               1446          248761 |************************           248904.07607
#                988          249077 |*****************                  249226.24190
#                851          249393 |**************                     249544.63220
#                633          249709 |**********                         249858.77093
#                525          250025 |*********                          250173.65524
#                400          250341 |******                             250493.85250
#                401          250657 |******                             250811.17207
#                362          250973 |******                             251136.95856
#                425          251289 |*******                            251444.49882
#                496          251605 |********                           251760.90323
#                503          251921 |********                           252073.33797
#                565          252237 |*********                          252390.59469
#                458          252553 |*******                            252696.79258
#                421          252869 |*******                            253018.87411
#                286          253185 |****                               253332.11888
#                263          253501 |****                               253650.58555
#
#                832           > 95% |**************                     254673.67067
#
#        mean of 95%    249558.37461
#          95th %ile          253805
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
            prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_tmp   1   1          397259         4948        0        1     2     y
# bin/../bin-riscv64/chdir -N chgetwd_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -g /tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.1285/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    379458                     379458
#                        max   1881662                     485762
#                       mean    420293.19236               408813.50182
#                     median    398009                     397259*
#                     stddev     84237.97807                25686.61147
#             standard error      1173.03067                  365.16738
#       99% confidence level      3021.72701                  940.67116
#                       skew         8.38763                    1.31955
#                   kurtosis        86.78389                    0.37970
#           time correlation        26.90264                   15.65137
#
#               elapsed time        20.00746
#                   run time         4.10822
#          getnsecs overhead      1416
#
#          number of samples      5157
#         number of outliers       209
#    number of final samples      4948
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          379458 |*                                  380308.00000
#                  9          382105 |*                                  384139.55556
#                286          384752 |************                       386447.02448
#                731          387399 |********************************   388800.86867
#                611          390046 |**************************         391354.56301
#                532          392693 |***********************            394018.60150
#                404          395340 |*****************                  396563.36634
#                288          397987 |************                       399227.35764
#                255          400634 |***********                        401926.95686
#                197          403281 |********                           404595.76142
#                205          405928 |********                           407119.50732
#                155          408575 |******                             409817.07742
#                 75          411222 |***                                412337.29333
#                 37          413869 |*                                  415125.91892
#                 32          416516 |*                                  417713.90625
#                 27          419163 |*                                  420278.22222
#                 18          421810 |*                                  423117.44444
#                 14          424457 |*                                  425824.92857
#                 12          427104 |*                                  428530.16667
#                 16          429751 |*                                  431185.00000
#                 33          432398 |*                                  433927.84848
#                 40          435045 |*                                  436381.35000
#                 55          437692 |**                                 438946.01818
#                 69          440339 |***                                441784.71014
#                 65          442986 |**                                 444362.41538
#                 72          445633 |***                                446922.11111
#                 83          448280 |***                                449517.62651
#                 84          450927 |***                                452201.38095
#                 90          453574 |***                                454899.33333
#                 87          456221 |***                                457542.08046
#                 67          458868 |**                                 460123.34328
#                 49          461515 |**                                 462825.81633
#
#                248           > 95% |**********                         472268.33871
#
#        mean of 95%    405465.24660
#          95th %ile          464161
#
# WARNINGS
#     Actual benchmark run time only accounts for 20.5% of elapsed time.
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
            prc thr      nsecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_usr   1   1          299641        18726        0        2     2     y
# bin/../bin-riscv64/chdir -N chgetwd_usr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -g /var/tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.1285/1/2/3/4/5/6/7/8/9/0 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    254053                     254053
#                        max  14243486                     362899
#                       mean    313798.62585               305267.05693
#                     median    300174                     299641*
#                     stddev    110521.60997                19224.83820
#             standard error       783.70325                  140.48831
#       99% confidence level      2018.81957                  361.89788
#                       skew       101.57556                    0.58214
#                   kurtosis     12692.12578                    1.04211
#           time correlation         4.97685                    2.98595
#
#               elapsed time        20.00451
#                   run time        17.99517
#          getnsecs overhead      1416
#
#          number of samples     19888
#         number of outliers      1162
#    number of final samples     18726
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          254053 |*                                  254053.00000
#                193          256856 |*                                  259044.19171
#                523          259659 |**                                 261001.85277
#                143          262462 |*                                  263622.96503
#                 99          265265 |*                                  266708.87879
#                 32          268068 |*                                  269173.87500
#                 22          270871 |*                                  272231.04545
#                 14          273674 |*                                  275118.28571
#                  7          276477 |*                                  277318.28571
#                  6          279280 |*                                  280529.00000
#                  1          282083 |*                                  283604.00000
#                  1          284886 |*                                  285304.00000
#                  6          287689 |*                                  289684.16667
#                 15          290492 |*                                  291589.06667
#                745          293295 |***                                295641.38389
#               6726          296098 |********************************   297412.81371
#               3523          298901 |****************                   300367.90009
#               1960          301704 |*********                          302734.36990
#                546          304507 |**                                 305611.56410
#                164          307310 |*                                  308496.87195
#                 72          310113 |*                                  311567.62500
#                 70          312916 |*                                  314432.18571
#                 47          315719 |*                                  317213.72340
#                 24          318522 |*                                  319942.00000
#                 29          321325 |*                                  322614.44828
#                129          324128 |*                                  326046.56589
#                459          326931 |**                                 328418.48584
#                619          329734 |**                                 331101.82553
#                521          332537 |**                                 333945.91939
#                460          335340 |**                                 336639.40870
#                337          338143 |*                                  339496.05638
#                295          340946 |*                                  342301.62034
#
#                937           > 95% |****                               350885.19637
#
#        mean of 95%    302864.21266
#          95th %ile          343743
#
# Usage: chdir
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'chdir')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g] (do getcwd() also)
# directory ... (default = /)
# notes: measures chdir() and (optionally) getcwd()
              prc thr      nsecs/call      samples   errors cnt/samp 
clock_gettime   1   1            1418        17851        0      677 
# bin/../bin-riscv64/clock_gettime -N clock_gettime -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1362                       1362
#                        max     25620                       1559
#                       mean      1452.98896                 1437.26637
#                     median      1421                       1418*
#                     stddev       213.85000                   40.55156
#             standard error         1.56533                    0.30351
#       99% confidence level         4.03230                    0.78185
#                       skew        80.77053                    1.29364
#                   kurtosis      8811.06339                    0.21024
#           time correlation         0.01082                    0.00672
#
#               elapsed time        20.00403
#                   run time        18.33676
#          getnsecs overhead      1416
#
#          number of samples     18664
#         number of outliers       813
#    number of final samples     17851
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            1362 |*                                    1362.00000
#                  0            1367 |                                              -
#                  2            1372 |*                                    1375.50000
#                  1            1377 |*                                    1380.00000
#                  2            1382 |*                                    1383.50000
#                  3            1387 |*                                    1388.33333
#                  3            1392 |*                                    1394.33333
#                  1            1397 |*                                    1400.00000
#               1534            1402 |*******                              1405.64276
#               6239            1407 |********************************     1409.58327
#                982            1412 |*****                                1413.56008
#                729            1417 |***                                  1419.21536
#               1867            1422 |*********                            1424.10177
#               1161            1427 |*****                                1428.51680
#                476            1432 |**                                   1433.76891
#                277            1437 |*                                    1438.87004
#                184            1442 |*                                    1443.95652
#                 89            1447 |*                                    1449.06742
#                 74            1452 |*                                    1453.81081
#                 48            1457 |*                                    1458.77083
#                 40            1462 |*                                    1463.92500
#                 20            1467 |*                                    1468.60000
#                 31            1472 |*                                    1474.64516
#                281            1477 |*                                    1479.88256
#                434            1482 |**                                   1483.72120
#                181            1487 |*                                    1488.78453
#                268            1492 |*                                    1494.20149
#                454            1497 |**                                   1499.04626
#                649            1502 |***                                  1504.03698
#                338            1507 |*                                    1508.78994
#                271            1512 |*                                    1514.15867
#                318            1517 |*                                    1518.71698
#
#                893           > 95% |****                                 1535.68981
#
#        mean of 95%      1432.08344
#          95th %ile            1521
#
# Usage: clock_gettime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_gettime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures clock_gettime(CLOCK_REALTIME)
                prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep   1   1         2741598         3509        0        1        1      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    403801                     403801
#                        max   5457612                    5273505
#                       mean   2664624.42210              2663076.15503
#                     median   2741698                    2741598*
#                     stddev    879698.16549               877551.91334
#             standard error     14846.30135                14814.29994
#       99% confidence level     38244.07227                38161.63664
#                       skew        -0.15377                   -0.16665
#                   kurtosis        -0.53373                   -0.56188
#           time correlation       857.27281                  856.09060
#
#               elapsed time        20.00818
#                   run time         9.36446
#          getnsecs overhead      1416
#
#          number of samples      3511
#         number of outliers         2
#    number of final samples      3509
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14          403801 |**                                 451774.28571
#                 16          516684 |**                                 568276.62500
#                 19          629567 |***                                680423.05263
#                 22          742450 |***                                812058.90909
#                 18          855333 |**                                 916439.16667
#                 32          968216 |*****                             1027130.06250
#                 42         1081099 |******                            1140138.90476
#                 77         1193982 |************                      1249599.96104
#                 74         1306865 |************                      1359258.44595
#                105         1419748 |*****************                 1481142.11429
#                121         1532631 |*******************               1585868.46281
#                129         1645514 |********************              1702556.80620
#                 75         1758397 |************                      1819058.76000
#                117         1871280 |*******************               1931568.16239
#                102         1984163 |****************                  2044509.70588
#                115         2097046 |******************                2152387.90435
#                119         2209929 |*******************               2265623.26891
#                148         2322812 |************************          2379551.07432
#                134         2435695 |*********************             2493846.51493
#                178         2548578 |****************************      2601790.53933
#                154         2661461 |*************************         2720136.06494
#                197         2774344 |********************************  2832959.80711
#                170         2887227 |***************************       2941339.30588
#                162         3000110 |**************************        3055893.80864
#                150         3112993 |************************          3169228.54000
#                162         3225876 |**************************        3281316.83333
#                160         3338759 |*************************         3388956.95000
#                133         3451642 |*********************             3513499.26316
#                133         3564525 |*********************             3622433.89474
#                 95         3677408 |***************                   3731444.22105
#                 87         3790291 |**************                    3849658.75862
#                 73         3903174 |***********                       3956504.94521
#
#                176           > 95% |****************************      4268673.26136
#
#        mean of 95%   2578292.14941
#          95th %ile         4016051
#
# WARNINGS
#     Actual benchmark run time only accounts for 46.8% of elapsed time.
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                    prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d10   1   1         3840045         4901        0        1       10      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1419543                    3024111
#                        max  10292415                    4629678
#                       mean   3828268.94857              3828411.79922
#                     median   3840045                    3840045*
#                     stddev    346790.50195               269536.99662
#             standard error      4905.83028                 3850.13567
#       99% confidence level     12637.41881                 9917.94949
#                       skew         1.04126                   -0.19104
#                   kurtosis        31.49150                    0.29386
#           time correlation       205.10229                  182.91513
#
#               elapsed time        20.01050
#                   run time        19.14043
#          getnsecs overhead      1416
#
#          number of samples      4997
#         number of outliers        96
#    number of final samples      4901
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12         3024111 |*                                 3043578.00000
#                 15         3063157 |*                                 3081173.06667
#                 15         3102203 |*                                 3121174.66667
#                 24         3141249 |*                                 3163628.75000
#                 34         3180295 |**                                3199267.91176
#                 39         3219341 |**                                3238991.35897
#                 53         3258387 |***                               3277936.28302
#                 71         3297433 |*****                             3320749.70423
#                 77         3336479 |*****                             3357114.05195
#                 64         3375525 |****                              3394396.26562
#                 73         3414571 |*****                             3434996.23288
#                 81         3453617 |*****                             3471949.74074
#                 96         3492663 |******                            3512836.11458
#                130         3531709 |*********                         3550995.63846
#                144         3570755 |**********                        3591275.83333
#                147         3609801 |**********                        3630018.85714
#                153         3648847 |**********                        3667486.47059
#                210         3687893 |**************                    3707562.90952
#                235         3726939 |****************                  3748325.50638
#                371         3765985 |**************************        3785925.97035
#                453         3805031 |********************************  3824149.96468
#                424         3844077 |*****************************     3862026.95283
#                357         3883123 |*************************         3901964.30252
#                288         3922169 |********************              3941553.75347
#                231         3961215 |****************                  3980015.90909
#                175         4000261 |************                      4019937.30286
#                138         4039307 |*********                         4058528.37681
#                130         4078353 |*********                         4096439.23077
#                117         4117399 |********                          4138649.44444
#                109         4156445 |*******                           4177002.77982
#                101         4195491 |*******                           4213476.15842
#                 88         4234537 |******                            4253674.54545
#
#                246           > 95% |*****************                 4380398.96341
#
#        mean of 95%   3799241.26380
#          95th %ile         4273563
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                     prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d100   1   1         3897548         4928        0        1      100      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1183433                    3141816
#                        max   6619361                    4617977
#                       mean   3878429.22349              3880596.46205
#                     median   3897347                    3897548*
#                     stddev    272514.97681               247137.15003
#             standard error      3854.71478                 3520.48651
#       99% confidence level      9929.74528                 9068.77325
#                       skew        -0.20107                   -0.18841
#                   kurtosis         5.32298                    0.65969
#           time correlation       173.61439                  164.71557
#
#               elapsed time        20.01024
#                   run time        19.39479
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        70
#    number of final samples      4928
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3141816 |*                                 3156952.00000
#                 19         3177737 |*                                 3194770.31579
#                 26         3213658 |*                                 3233477.07692
#                 42         3249579 |**                                3266999.40476
#                 42         3285500 |**                                3304500.95238
#                 33         3321421 |**                                3336170.84848
#                 42         3357342 |**                                3375089.69048
#                 57         3393263 |***                               3410361.85965
#                 41         3429184 |**                                3446243.00000
#                 49         3465105 |**                                3482968.63265
#                 55         3501026 |***                               3520478.63636
#                 75         3536947 |****                              3556496.82667
#                138         3572868 |********                          3590851.77536
#                116         3608789 |*******                           3628223.79310
#                153         3644710 |*********                         3662936.05882
#                155         3680631 |*********                         3699296.89677
#                172         3716552 |**********                        3734075.18023
#                199         3752473 |************                      3772320.80402
#                244         3788394 |**************                    3807738.08197
#                329         3824315 |********************              3843525.74468
#                449         3860236 |***************************       3877633.19376
#                524         3896157 |********************************  3914806.85687
#                463         3932078 |****************************      3947930.23326
#                252         3967999 |***************                   3984509.54365
#                167         4003920 |**********                        4021678.74850
#                178         4039841 |**********                        4055689.12921
#                139         4075762 |********                          4093058.97842
#                143         4111683 |********                          4128914.15385
#                121         4147604 |*******                           4165199.61983
#                 96         4183525 |*****                             4201627.58333
#                 81         4219446 |****                              4236379.85185
#                 67         4255367 |****                              4272952.47761
#
#                247           > 95% |***************                   4409575.87045
#
#        mean of 95%   3852684.06858
#          95th %ile         4291264
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                      prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d1000   1   1         3886846         4945        0        1     1000      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2084472                    3093314
#                        max   6019036                    4667280
#                       mean   3875157.20908              3879682.22568
#                     median   3885747                    3886846*
#                     stddev    280616.00251               263437.34514
#             standard error      3969.30351                 3746.22789
#       99% confidence level     10224.92583                 9650.28305
#                       skew        -0.21192                   -0.13491
#                   kurtosis         1.77593                    0.31954
#           time correlation       183.64481                  177.22023
#
#               elapsed time        20.01134
#                   run time        19.37783
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        53
#    number of final samples      4945
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3093314 |*                                 3114743.00000
#                 13         3131279 |*                                 3156593.07692
#                 17         3169244 |*                                 3188047.00000
#                 22         3207209 |*                                 3228251.04545
#                 28         3245174 |*                                 3270245.96429
#                 35         3283139 |**                                3301688.00000
#                 57         3321104 |***                               3343939.77193
#                 68         3359069 |****                              3377851.89706
#                 73         3397034 |****                              3416344.87671
#                 60         3434999 |***                               3456457.18333
#                 67         3472964 |****                              3492113.73134
#                 87         3510929 |*****                             3531426.13793
#                112         3548894 |*******                           3570167.40179
#                120         3586859 |*******                           3605908.31667
#                137         3624824 |********                          3642320.43066
#                162         3662789 |**********                        3682947.46914
#                178         3700754 |***********                       3719870.64607
#                184         3738719 |***********                       3757081.53261
#                244         3776684 |***************                   3797218.77869
#                377         3814649 |************************          3834273.76127
#                469         3852614 |******************************    3872390.08316
#                500         3890579 |********************************  3908852.70000
#                291         3928544 |******************                3946958.18900
#                236         3966509 |***************                   3984090.63559
#                211         4004474 |*************                     4023778.07109
#                163         4042439 |**********                        4060491.45399
#                148         4080404 |*********                         4097838.01351
#                159         4118369 |**********                        4137263.54088
#                161         4156334 |**********                        4173943.82609
#                135         4194299 |********                          4214268.60000
#                 96         4232264 |******                            4251081.79167
#                 73         4270229 |****                              4290167.79452
#
#                248           > 95% |***************                   4432599.41935
#
#        mean of 95%   3850488.38620
#          95th %ile         4308164
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                       prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_d10000   1   1         2889005         3581        0        1    10000      rel     real        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_d10000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 10000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    413002                     413002
#                        max   5781526                    5569918
#                       mean   2797579.06836              2795125.74951
#                     median   2890605                    2889005*
#                     stddev    931444.23220               927966.32037
#             standard error     15558.68389                15507.08094
#       99% confidence level     40079.16971                39946.24050
#                       skew        -0.09218                   -0.11172
#                   kurtosis        -0.52832                   -0.57339
#           time correlation       889.39856                  887.52170
#
#               elapsed time        20.01128
#                   run time        10.03456
#          getnsecs overhead      1416
#
#          number of samples      3584
#         number of outliers         3
#    number of final samples      3581
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19          413002 |***                                458524.36842
#                  8          532817 |*                                  599046.87500
#                  8          652632 |*                                  703963.62500
#                 13          772447 |**                                 830795.61538
#                 26          892262 |****                               954597.11538
#                 46         1012077 |*******                           1076546.41304
#                 60         1131892 |*********                         1194807.41667
#                 83         1251707 |*************                     1309381.04819
#                 80         1371522 |*************                     1428711.38750
#                 80         1491337 |*************                     1555736.70000
#                106         1611152 |*****************                 1675864.64151
#                122         1730967 |********************              1793789.45902
#                121         1850782 |********************              1907391.19008
#                117         1970597 |*******************               2034164.85470
#                142         2090412 |***********************           2152253.74648
#                146         2210227 |************************          2267013.18493
#                111         2330042 |******************                2392705.84685
#                123         2449857 |********************              2512420.99187
#                163         2569672 |***************************       2629664.71166
#                142         2689487 |***********************           2745119.45070
#                146         2809302 |************************          2879159.39726
#                179         2929117 |*****************************     2995020.39106
#                193         3048932 |********************************  3099770.81865
#                173         3168747 |****************************      3229582.22543
#                167         3288562 |***************************       3348821.26946
#                166         3408377 |***************************       3465403.24699
#                142         3528192 |***********************           3587696.90141
#                178         3648007 |*****************************     3710131.55618
#                131         3767822 |*********************             3823190.67939
#                 73         3887637 |************                      3947004.02740
#                 75         4007452 |************                      4066701.00000
#                 62         4127267 |**********                        4186154.46774
#
#                180           > 95% |*****************************     4553811.36667
#
#        mean of 95%   2702046.24022
#          95th %ile         4247061
#
# WARNINGS
#     Actual benchmark run time only accounts for 50.1% of elapsed time.
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_m   1   1         3890947         4948        0        1        1      rel     mono        no     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    533406                    3103714
#                        max   7675305                    4663980
#                       mean   3881445.93459              3881522.74960
#                     median   3890947                    3890947*
#                     stddev    285249.24735               261822.80753
#             standard error      4034.43701                 3722.13936
#       99% confidence level     10392.70973                 9588.23100
#                       skew         0.00454                   -0.11964
#                   kurtosis        10.71914                    0.44891
#           time correlation       182.03862                  174.92394
#
#               elapsed time        20.01173
#                   run time        19.41387
#          getnsecs overhead      1416
#
#          number of samples      4999
#         number of outliers        51
#    number of final samples      4948
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3103714 |*                                 3127486.21429
#                 16         3142129 |*                                 3163697.81250
#                 23         3180544 |*                                 3201900.73913
#                 24         3218959 |*                                 3243536.54167
#                 37         3257374 |**                                3280845.75676
#                 41         3295789 |**                                3315930.34146
#                 48         3334204 |**                                3353982.89583
#                 60         3372619 |***                               3392622.78333
#                 66         3411034 |***                               3430596.74242
#                 67         3449449 |****                              3468009.89552
#                 84         3487864 |*****                             3508147.63095
#                111         3526279 |******                            3545463.28829
#                100         3564694 |******                            3582734.05000
#                105         3603109 |******                            3622643.43810
#                149         3641524 |********                          3662654.92617
#                181         3679939 |**********                        3700027.40884
#                173         3718354 |**********                        3738962.01734
#                217         3756769 |*************                     3776497.45161
#                250         3795184 |***************                   3816467.88800
#                441         3833599 |**************************        3853696.92744
#                531         3872014 |********************************  3890992.02072
#                477         3910429 |****************************      3928164.45702
#                325         3948844 |*******************               3965529.51692
#                187         3987259 |***********                       4005066.21390
#                156         4025674 |*********                         4043952.76282
#                171         4064089 |**********                        4084662.09942
#                166         4102504 |**********                        4122569.34940
#                153         4140919 |*********                         4159611.20261
#                125         4179334 |*******                           4197043.84800
#                 87         4217749 |*****                             4236177.56322
#                 58         4256164 |***                               4274619.93103
#                 57         4294579 |***                               4313589.24561
#
#                248           > 95% |**************                    4444660.91129
#
#        mean of 95%   3851808.22532
#          95th %ile         4332965
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_mr   1   1         3881947         4957        0        1        1      rel     mono       yes     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_mr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -m -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1483446                    3057412
#                        max   5984235                    4687980
#                       mean   3869542.79632              3872092.80432
#                     median   3881646                    3881947*
#                     stddev    295333.07119               275964.84837
#             standard error      4177.47593                 3919.62309
#       99% confidence level     10761.17798                10096.94907
#                       skew        -0.25747                   -0.17125
#                   kurtosis         2.89889                    0.14327
#           time correlation       193.22396                  186.66182
#
#               elapsed time        20.01092
#                   run time        19.35050
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        41
#    number of final samples      4957
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10         3057412 |*                                 3077932.90000
#                 17         3097011 |*                                 3116226.29412
#                 16         3136610 |*                                 3159760.06250
#                 26         3176209 |**                                3204056.61538
#                 34         3215808 |**                                3236022.50000
#                 44         3255407 |***                               3274555.25000
#                 44         3295006 |***                               3317607.04545
#                 53         3334605 |****                              3355573.62264
#                 65         3374204 |*****                             3393523.06154
#                 86         3413803 |******                            3434643.69767
#                 91         3453402 |*******                           3472485.61538
#                112         3493001 |********                          3513549.92857
#                110         3532600 |********                          3550572.76364
#                111         3572199 |********                          3592838.16216
#                141         3611798 |**********                        3631736.82979
#                165         3651397 |************                      3672634.21818
#                181         3690996 |*************                     3711876.48066
#                229         3730595 |*****************                 3751225.41048
#                312         3770194 |************************          3790048.24679
#                328         3809793 |*************************         3830028.87195
#                362         3849392 |***************************       3869161.57459
#                414         3888991 |********************************  3909880.40097
#                319         3928590 |************************          3946920.81191
#                231         3968189 |*****************                 3987256.68398
#                202         4007788 |***************                   4026266.53465
#                196         4047387 |***************                   4066987.55612
#                206         4086986 |***************                   4106841.01942
#                186         4126585 |**************                    4146908.75269
#                146         4166184 |***********                       4182833.18493
#                 94         4205783 |*******                           4222855.56383
#                 89         4245382 |******                            4263751.39326
#                 89         4284981 |******                            4303155.28090
#
#                248           > 95% |*******************               4429757.90323
#
#        mean of 95%   3842723.31089
#          95th %ile         4324565
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_ms   1   1         3876647         4949        0        1        1      rel     mono        no  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_ms -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -m -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1580750                    3067913
#                        max   5215602                    4682980
#                       mean   3873808.50400              3876552.09133
#                     median   3876347                    3876647*
#                     stddev    286085.15819               269711.52610
#             standard error      4046.66452                 3833.89999
#       99% confidence level     10424.20781                 9876.12637
#                       skew        -0.21789                   -0.06310
#                   kurtosis         1.67430                    0.27099
#           time correlation       187.78786                  181.66563
#
#               elapsed time        20.01171
#                   run time        19.37222
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        49
#    number of final samples      4949
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13         3067913 |*                                 3088867.38462
#                  9         3107843 |*                                 3130870.88889
#                 21         3147773 |*                                 3168145.19048
#                 21         3187703 |*                                 3209118.47619
#                 31         3227633 |**                                3248304.03226
#                 31         3267563 |**                                3286308.77419
#                 47         3307493 |***                               3330766.14894
#                 47         3347423 |***                               3369648.51064
#                 71         3387353 |****                              3409586.11268
#                 82         3427283 |*****                             3447905.26829
#                 92         3467213 |******                            3487674.67391
#                108         3507143 |*******                           3527979.02778
#                100         3547073 |******                            3569101.55000
#                127         3587003 |********                          3607376.89764
#                153         3626933 |**********                        3647171.50327
#                191         3666863 |*************                     3686378.78534
#                214         3706793 |**************                    3728105.66822
#                212         3746723 |**************                    3766546.96698
#                322         3786653 |**********************            3808347.89130
#                464         3826583 |********************************  3846631.24138
#                445         3866513 |******************************    3885296.91461
#                399         3906443 |***************************       3926704.19048
#                288         3946373 |*******************               3965458.45139
#                181         3986303 |************                      4007518.79558
#                190         4026233 |*************                     4045435.08947
#                191         4066163 |*************                     4085806.47644
#                178         4106093 |************                      4125732.07865
#                114         4146023 |*******                           4163865.50000
#                108         4185953 |*******                           4205589.80556
#                 88         4225883 |******                            4247071.14773
#                 77         4265813 |*****                             4285945.35065
#                 86         4305743 |*****                             4325746.67442
#
#                248           > 95% |*****************                 4446837.63710
#
#        mean of 95%   3846466.82961
#          95th %ile         4345666
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                    prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_msr   1   1         3874946         4941        0        1        1      rel     mono       yes  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_msr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -m -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1234536                    3108414
#                        max   4946492                    4637978
#                       mean   3871021.73835              3874096.42178
#                     median   3874246                    3874946*
#                     stddev    272613.54304               255305.65165
#             standard error      3855.72329                 3632.05990
#       99% confidence level      9932.34320                 9356.18629
#                       skew        -0.34586                   -0.12829
#                   kurtosis         2.54724                    0.42612
#           time correlation       177.74088                  171.30796
#
#               elapsed time        20.01148
#                   run time        19.36099
#          getnsecs overhead      1416
#
#          number of samples      4999
#         number of outliers        58
#    number of final samples      4941
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13         3108414 |*                                 3126638.00000
#                 18         3145938 |*                                 3165977.77778
#                 20         3183462 |*                                 3200983.25000
#                 27         3220986 |*                                 3238845.74074
#                 27         3258510 |*                                 3278513.92593
#                 40         3296034 |**                                3318570.57500
#                 56         3333558 |***                               3352949.50000
#                 61         3371082 |***                               3388606.39344
#                 51         3408606 |***                               3429970.86275
#                 59         3446130 |***                               3466303.76271
#                 63         3483654 |****                              3503159.39683
#                 89         3521178 |*****                             3541840.29213
#                111         3558702 |*******                           3580009.70270
#                132         3596226 |********                          3614939.28030
#                164         3633750 |**********                        3653083.42683
#                156         3671274 |*********                         3690594.39103
#                186         3708798 |***********                       3727174.03763
#                180         3746322 |***********                       3767219.67222
#                342         3783846 |*********************             3802116.43567
#                463         3821370 |*****************************     3841170.21814
#                501         3858894 |********************************  3877454.83234
#                389         3896418 |************************          3913755.70180
#                271         3933942 |*****************                 3952146.28782
#                189         3971466 |************                      3989173.37566
#                225         4008990 |**************                    4028087.91111
#                192         4046514 |************                      4065785.06771
#                168         4084038 |**********                        4100526.65476
#                147         4121562 |*********                         4138885.33333
#                 95         4159086 |******                            4177440.00000
#                 86         4196610 |*****                             4214117.56977
#                 88         4234134 |*****                             4252821.28409
#                 84         4271658 |*****                             4288679.08333
#
#                248           > 95% |***************                   4411759.17339
#
#        mean of 95%   3845683.81526
#          95th %ile         4309164
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_r   1   1         3886946         4934        0        1        1      rel     real       yes     libc
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1133731                    3134315
#                        max   8457838                    4634679
#                       mean   3879948.87530              3882517.53668
#                     median   3886447                    3886946*
#                     stddev    280854.01075               251407.63141
#             standard error      3973.46521                 3579.14163
#       99% confidence level     10235.64639                 9219.86883
#                       skew         0.48322                   -0.13196
#                   kurtosis        17.62854                    0.34047
#           time correlation       178.21485                  169.63380
#
#               elapsed time        20.01015
#                   run time        19.39487
#          getnsecs overhead      1416
#
#          number of samples      4996
#         number of outliers        62
#    number of final samples      4934
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9         3134315 |*                                 3157016.33333
#                 17         3170720 |*                                 3185340.94118
#                 17         3207125 |*                                 3228331.00000
#                 33         3243530 |**                                3263066.15152
#                 35         3279935 |**                                3296610.74286
#                 41         3316340 |***                               3335857.95122
#                 40         3352745 |***                               3370077.87500
#                 61         3389150 |****                              3406000.47541
#                 54         3425555 |****                              3439035.42593
#                 61         3461960 |****                              3481116.70492
#                 79         3498365 |******                            3516838.92405
#                 72         3534770 |*****                             3556080.48611
#                139         3571175 |**********                        3590344.54676
#                137         3607580 |**********                        3625508.94891
#                144         3643985 |***********                       3662001.34028
#                148         3680390 |***********                       3698980.91892
#                172         3716795 |*************                     3736759.79070
#                227         3753200 |*****************                 3772111.67401
#                313         3789605 |************************          3808422.82748
#                410         3826010 |*******************************   3844711.70976
#                369         3862415 |****************************      3880492.14092
#                412         3898820 |********************************  3916731.86650
#                322         3935225 |*************************         3953528.87267
#                256         3971630 |*******************               3989310.56250
#                210         4008035 |****************                  4026629.88095
#                201         4044440 |***************                   4062999.55224
#                164         4080845 |************                      4097219.71341
#                150         4117250 |***********                       4134936.58667
#                121         4153655 |*********                         4172459.66942
#                100         4190060 |*******                           4209218.44000
#                 97         4226465 |*******                           4245413.41237
#                 76         4262870 |*****                             4279090.90789
#
#                247           > 95% |*******************               4411091.89474
#
#        mean of 95%   3854662.22061
#          95th %ile         4299264
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                  prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_s   1   1         3860046         4917        0        1        1      rel     real        no  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_s -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2279979                    3114614
#                        max   9112165                    4580876
#                       mean   3845073.12748              3847946.38702
#                     median   3858846                    3860046*
#                     stddev    276926.36843               245177.56893
#             standard error      3917.50569                 3496.47663
#       99% confidence level     10091.49465                 9006.92381
#                       skew         1.06733                   -0.21939
#                   kurtosis        27.02976                    0.45161
#           time correlation       175.21867                  165.57308
#
#               elapsed time        20.00974
#                   run time        19.22449
#          getnsecs overhead      1416
#
#          number of samples      4997
#         number of outliers        80
#    number of final samples      4917
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15         3114614 |*                                 3132702.06667
#                 21         3150041 |*                                 3167178.57143
#                 23         3185468 |*                                 3204420.43478
#                 29         3220895 |**                                3237979.75862
#                 38         3256322 |***                               3272894.73684
#                 43         3291749 |***                               3308927.62791
#                 41         3327176 |***                               3345274.73171
#                 47         3362603 |***                               3378988.31915
#                 39         3398030 |***                               3417582.89744
#                 58         3433457 |****                              3452098.55172
#                 56         3468884 |****                              3487426.07143
#                103         3504311 |********                          3522725.87379
#                108         3539738 |********                          3559886.29630
#                134         3575165 |***********                       3591925.32090
#                155         3610592 |************                      3628235.00645
#                160         3646019 |*************                     3663364.05625
#                191         3681446 |***************                   3700188.73822
#                195         3716873 |****************                  3735233.91282
#                271         3752300 |**********************            3770959.16974
#                331         3787727 |***************************       3805320.41390
#                387         3823154 |********************************  3841503.60982
#                358         3858581 |*****************************     3876095.57821
#                382         3894008 |*******************************   3911374.59948
#                348         3929435 |****************************      3945658.95977
#                232         3964862 |*******************               3983091.35776
#                198         4000289 |****************                  4017511.02525
#                149         4035716 |************                      4052850.67114
#                158         4071143 |*************                     4089363.36709
#                128         4106570 |**********                        4123970.63281
#                104         4141997 |********                          4158581.80769
#                 90         4177424 |*******                           4196420.78889
#                 79         4212851 |******                            4227423.92405
#
#                246           > 95% |********************              4353663.10163
#
#        mean of 95%   3821312.62299
#          95th %ile         4248262
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
                   prc thr      nsecs/call      samples   errors cnt/samp    delta  abs/rel    clock remainder   method
clock_nanosleep_sr   1   1         3877023         4920        0        1        1      rel     real       yes  syscall
# bin/../bin-riscv64/clock_nanosleep -N clock_nanosleep_sr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1158076                    3063599
#                        max   6119314                    4668960
#                       mean   3863594.00840              3865413.14207
#                     median   3876914                    3877023*
#                     stddev    317003.08452               268121.93368
#             standard error      4483.99750                 3822.52022
#       99% confidence level     11550.77757                 9846.81209
#                       skew        -0.32853                   -0.13900
#                   kurtosis         7.93815                    0.31627
#           time correlation       197.16403                  181.62368
#
#               elapsed time        20.01196
#                   run time        19.32106
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        78
#    number of final samples      4920
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10         3063599 |*                                 3082350.00000
#                  7         3102224 |*                                 3122265.57143
#                 19         3140849 |*                                 3156650.57895
#                 35         3179474 |**                                3197514.60000
#                 19         3218099 |*                                 3232915.36842
#                 44         3256724 |**                                3277285.22727
#                 54         3295349 |***                               3314374.75926
#                 65         3333974 |****                              3351819.46154
#                 54         3372599 |***                               3392715.79630
#                 69         3411224 |****                              3430095.23188
#                 72         3449849 |****                              3469122.22222
#                 78         3488474 |*****                             3510448.20513
#                111         3527099 |*******                           3546561.83784
#                111         3565724 |*******                           3585225.12613
#                142         3604349 |*********                         3623983.73239
#                174         3642974 |***********                       3663954.58046
#                199         3681599 |*************                     3702292.98492
#                219         3720224 |**************                    3739487.62100
#                236         3758849 |***************                   3778478.23305
#                340         3797474 |**********************            3817635.96176
#                376         3836099 |*************************         3855969.10904
#                479         3874724 |********************************  3893981.89979
#                361         3913349 |************************          3932009.03324
#                236         3951974 |***************                   3971181.70763
#                200         3990599 |*************                     4009029.66000
#                161         4029224 |**********                        4049007.13043
#                176         4067849 |***********                       4086289.79545
#                158         4106474 |**********                        4125395.86709
#                172         4145099 |***********                       4162602.75581
#                135         4183724 |*********                         4202054.01481
#                 87         4222349 |*****                             4241981.21839
#                 75         4260974 |*****                             4277553.50667
#
#                246           > 95% |****************                  4425243.26016
#
#        mean of 95%   3835948.39902
#          95th %ile         4299569
#
# Usage: clock_nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'clock_nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -a use absolute time (implies additional calls to clock_gettime)
#     -m use MONOTONIC clock (defaults to REALTIME)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures clock_nanosleep()
          prc thr      nsecs/call      samples   errors cnt/samp 
close_bad   1   1            1904         1320        0     7500 
# bin/../bin-riscv64/close -N close_bad -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 7500 -b 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1836                       1836
#                        max      5874                       2008
#                       mean      1927.67055                 1907.44318
#                     median      1906                       1904*
#                     stddev       189.65945                   33.50844
#             standard error         5.12032                    0.92229
#       99% confidence level        13.18995                    2.37582
#                       skew        15.18612                    0.57933
#                   kurtosis       269.72936                   -0.05859
#           time correlation         0.16314                    0.08555
#
#               elapsed time        20.01825
#                   run time        19.83757
#          getnsecs overhead      1416
#
#          number of samples      1372
#         number of outliers        52
#    number of final samples      1320
#             ops per sample      7500.00000 (-B 7500)
#
#       recommended -B value       524
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            1836 |*                                    1836.00000
#                  3            1841 |*                                    1844.66667
#                  8            1846 |***                                  1848.25000
#                 24            1851 |*********                            1853.33333
#                 39            1856 |***************                      1858.23077
#                 40            1861 |****************                     1863.10000
#                 55            1866 |**********************               1867.85455
#                 74            1871 |*****************************        1873.41892
#                 64            1876 |*************************            1878.09375
#                 79            1881 |********************************     1882.81013
#                 79            1886 |********************************     1888.22785
#                 73            1891 |*****************************        1893.04110
#                 73            1896 |*****************************        1898.16438
#                 72            1901 |*****************************        1903.00000
#                 74            1906 |*****************************        1908.12162
#                 66            1911 |**************************           1913.13636
#                 75            1916 |******************************       1917.88000
#                 62            1921 |*************************            1923.19355
#                 52            1926 |*********************                1927.98077
#                 58            1931 |***********************              1932.93103
#                 40            1936 |****************                     1937.87500
#                 35            1941 |**************                       1943.42857
#                 24            1946 |*********                            1947.70833
#                 25            1951 |**********                           1952.80000
#                 20            1956 |********                             1957.90000
#                 24            1961 |*********                            1963.04167
#                 15            1966 |******                               1967.73333
#
#                 66           > 95% |**************************           1987.06061
#
#        mean of 95%      1903.25279
#          95th %ile            1970
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
          prc thr      nsecs/call      samples   errors cnt/samp 
close_tmp   1   1            8152           35        0     2600 
# bin/../bin-riscv64/close -N close_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 2600 -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8045                       8045
#                        max      8365                       8365
#                       mean      8166.91429                 8166.91429
#                     median      8152                       8152*
#                     stddev        89.16257                   89.16257
#             standard error        15.07122                   15.07122
#       99% confidence level        38.82347                   38.82347
#                       skew         0.44372                    0.44372
#                   kurtosis        -0.89801                   -0.89801
#           time correlation         8.57339                    8.57339
#
#               elapsed time        25.07962
#                   run time         0.74324
#          getnsecs overhead      1416
#
#          number of samples        35
#         number of outliers         0
#    number of final samples        35
#             ops per sample      2600.00000 (-B 2600)
#
#       recommended -B value       122
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            8045 |*********************                8046.00000
#                  2            8054 |*********************                8056.50000
#                  3            8063 |********************************     8067.33333
#                  0            8072 |                                              -
#                  0            8081 |                                              -
#                  3            8090 |********************************     8094.66667
#                  1            8099 |**********                           8102.00000
#                  2            8108 |*********************                8114.50000
#                  2            8117 |*********************                8121.00000
#                  0            8126 |                                              -
#                  1            8135 |**********                           8142.00000
#                  2            8144 |*********************                8149.50000
#                  1            8153 |**********                           8153.00000
#                  1            8162 |**********                           8168.00000
#                  0            8171 |                                              -
#                  2            8180 |*********************                8184.00000
#                  0            8189 |                                              -
#                  1            8198 |**********                           8198.00000
#                  1            8207 |**********                           8211.00000
#                  2            8216 |*********************                8221.50000
#                  0            8225 |                                              -
#                  1            8234 |**********                           8236.00000
#                  1            8243 |**********                           8249.00000
#                  0            8252 |                                              -
#                  2            8261 |*********************                8265.50000
#                  0            8270 |                                              -
#                  1            8279 |**********                           8281.00000
#                  0            8288 |                                              -
#                  2            8297 |*********************                8301.50000
#
#                  2           > 95% |*********************                8348.00000
#
#        mean of 95%      8155.93939
#          95th %ile            8331
#
# WARNINGS
#     Too few samples, 35 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 3.0% of elapsed time.
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
           prc thr      nsecs/call      samples   errors cnt/samp 
close_zero   1   1           10991           40        0     2600 
# bin/../bin-riscv64/close -N close_zero -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 2600 -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     10703                      10703
#                        max     17401                      11896
#                       mean     11392.02174                11017.47500
#                     median     11004                      10991*
#                     stddev      1167.56102                  214.25350
#             standard error       172.14748                   33.87645
#       99% confidence level       443.45191                   87.26574
#                       skew         3.51844                    2.22133
#                   kurtosis        13.64811                    6.29441
#           time correlation        54.23022                   15.10272
#
#               elapsed time        25.23829
#                   run time         1.36255
#          getnsecs overhead      1416
#
#          number of samples        46
#         number of outliers         6
#    number of final samples        40
#             ops per sample      2600.00000 (-B 2600)
#
#       recommended -B value        91
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           10703 |******                              10703.00000
#                  0           10732 |                                              -
#                  1           10761 |******                              10789.00000
#                  1           10790 |******                              10794.00000
#                  2           10819 |************                        10831.00000
#                  3           10848 |*******************                 10859.33333
#                  3           10877 |*******************                 10894.66667
#                  5           10906 |********************************    10918.60000
#                  2           10935 |************                        10953.50000
#                  3           10964 |*******************                 10985.33333
#                  4           10993 |*************************           11001.50000
#                  3           11022 |*******************                 11035.66667
#                  2           11051 |************                        11069.00000
#                  2           11080 |************                        11105.50000
#                  3           11109 |*******************                 11123.00000
#                  0           11138 |                                              -
#                  1           11167 |******                              11193.00000
#                  1           11196 |******                              11199.00000
#                  0           11225 |                                              -
#                  0           11254 |                                              -
#                  1           11283 |******                              11285.00000
#
#                  2           > 95% |************                        11762.50000
#
#        mean of 95%     10978.26316
#          95th %ile           11629
#
# WARNINGS
#     Too few samples, 46 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 5.4% of elapsed time.
#
# Usage: close
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'close')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-close (default /dev/null)]
#     [-b] (try to close an unopened fd)
# notes: measures close()
             prc thr      nsecs/call      samples   errors cnt/samp 
conn_connect   1   1          191071          326        0      125 
# bin/../bin-riscv64/connection -N conn_connect -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 125 -c 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    171172                     171172
#                        max   1326621                     232965
#                       mean    234621.17157               191042.16258
#                     median    195011                     191071*
#                     stddev    120307.32146                14075.07606
#             standard error      5956.09994                  779.54636
#       99% confidence level     15342.91344                 2008.11143
#                       skew         4.58440                    0.67706
#                   kurtosis        30.83244                   -0.27117
#           time correlation       636.17452                  144.55216
#
#               elapsed time        20.14078
#                   run time        11.96626
#          getnsecs overhead      1416
#
#          number of samples       408
#         number of outliers        82
#    number of final samples       326
#             ops per sample       125.00000 (-B 125)
#
#       recommended -B value         5
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          171172 |***                                172071.66667
#                 10          172627 |**********                         173688.10000
#                 24          174082 |*************************          174923.16667
#                 30          175537 |********************************   176213.16667
#                 23          176992 |************************           177705.30435
#                 14          178447 |**************                     179087.07143
#                 10          179902 |**********                         180739.60000
#                 11          181357 |***********                        182294.36364
#                 10          182812 |**********                         183539.90000
#                  7          184267 |*******                            184827.71429
#                  7          185722 |*******                            186611.14286
#                  6          187177 |******                             188137.33333
#                  5          188632 |*****                              188986.00000
#                  8          190087 |********                           190986.25000
#                 13          191542 |*************                      192271.61538
#                 20          192997 |*********************              193643.80000
#                  8          194452 |********                           195119.50000
#                 17          195907 |******************                 196732.11765
#                 12          197362 |************                       197999.50000
#                  7          198817 |*******                            199365.71429
#                 15          200272 |****************                   200855.66667
#                  5          201727 |*****                              202272.80000
#                  6          203182 |******                             204023.16667
#                  5          204637 |*****                              205035.60000
#                  4          206092 |****                               206863.25000
#                  7          207547 |*******                            208459.00000
#                  6          209002 |******                             209625.00000
#                  3          210457 |***                                211234.00000
#                  3          211912 |***                                212405.00000
#                  4          213367 |****                               214084.25000
#                  3          214822 |***                                215860.33333
#                  3          216277 |***                                216996.66667
#
#                 17           > 95% |******************                 223811.05882
#
#        mean of 95%    189239.34304
#          95th %ile          217729
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.4% of elapsed time.
#
# Usage: connection
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'connection')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a] (measure accept() only)
#     [-c] (measure connect() only)
# notes: measures connect()/accept()
    prc thr      nsecs/call      samples   errors cnt/samp 
dup   1   1            2729          592        0     5500 
# bin/../bin-riscv64/dup -N dup -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 5500 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2614                       2614
#                        max      9092                       2854
#                       mean      2758.64160                 2728.48818
#                     median      2733                       2729*
#                     stddev       276.83817                   42.35663
#             standard error        11.07353                    1.74085
#       99% confidence level        28.52540                    4.48442
#                       skew        19.50597                    0.04214
#                   kurtosis       436.98703                   -0.14593
#           time correlation         0.48818                    0.24247
#
#               elapsed time        20.05139
#                   run time         9.48375
#          getnsecs overhead      1416
#
#          number of samples       625
#         number of outliers        33
#    number of final samples       592
#             ops per sample      5500.00000 (-B 5500)
#
#       recommended -B value       367
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            2614 |**                                   2616.33333
#                  2            2620 |*                                    2623.00000
#                  0            2626 |                                              -
#                  4            2632 |***                                  2633.25000
#                  4            2638 |***                                  2640.75000
#                  5            2644 |****                                 2647.00000
#                  6            2650 |*****                                2654.33333
#                  7            2656 |*****                                2658.00000
#                  5            2662 |****                                 2664.40000
#                 20            2668 |****************                     2670.55000
#                 19            2674 |****************                     2676.73684
#                 28            2680 |***********************              2682.46429
#                 27            2686 |**********************               2688.07407
#                 14            2692 |***********                          2693.92857
#                 21            2698 |*****************                    2700.14286
#                 28            2704 |***********************              2706.89286
#                 29            2710 |************************             2712.75862
#                 30            2716 |*************************            2718.43333
#                 35            2722 |*****************************        2724.54286
#                 27            2728 |**********************               2730.37037
#                 37            2734 |*******************************      2736.59459
#                 35            2740 |*****************************        2742.74286
#                 38            2746 |********************************     2748.31579
#                 32            2752 |**************************           2754.90625
#                 18            2758 |***************                      2760.22222
#                 21            2764 |*****************                    2766.28571
#                 19            2770 |****************                     2772.63158
#                 17            2776 |**************                       2778.82353
#                 11            2782 |*********                            2783.63636
#                 12            2788 |**********                           2790.33333
#                  8            2794 |******                               2796.87500
#
#                 30           > 95% |*************************            2816.60000
#
#        mean of 95%      2723.78470
#          95th %ile            2800
#
# WARNINGS
#     Actual benchmark run time only accounts for 47.3% of elapsed time.
#
# Usage: dup
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'dup')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-dup (default /dev/null)]
# notes: measures dup()
     prc thr      nsecs/call      samples   errors cnt/samp 
exec   1   1        39339782          444        0        1 
# bin/../bin-riscv64/exec -N exec -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  16486099                   34427552
#                        max  56234011                   44117652
#                       mean  37552396.58015             39345055.68919
#                     median  39143658                   39339782*
#                     stddev   5723223.66946              1640661.49839
#             standard error    250020.18686                77862.34898
#       99% confidence level    644052.00135               200573.41096
#                       skew        -2.20176                   -0.33731
#                   kurtosis         5.56688                    0.69408
#           time correlation     28329.19448                12179.45347
#
#               elapsed time        20.01181
#                   run time        19.73443
#          getnsecs overhead      1416
#
#          number of samples       524
#         number of outliers        80
#    number of final samples       444
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        34427552 |**                               34434408.00000
#                  3        34660096 |**                               34779090.66667
#                  2        34892640 |*                                35003073.00000
#                  6        35125184 |*****                            35266394.50000
#                  0        35357728 |                                              -
#                  3        35590272 |**                               35713270.33333
#                  3        35822816 |**                               35950982.33333
#                  2        36055360 |*                                36176964.00000
#                  4        36287904 |***                              36383443.25000
#                  2        36520448 |*                                36716904.50000
#                  5        36752992 |****                             36875228.00000
#                  7        36985536 |*****                            37106125.42857
#                  8        37218080 |******                           37310127.37500
#                  6        37450624 |*****                            37562118.33333
#                 11        37683168 |*********                        37763580.00000
#                 18        37915712 |***************                  38037020.05556
#                 19        38148256 |****************                 38264026.68421
#                 19        38380800 |****************                 38491074.10526
#                 23        38613344 |*******************              38698465.21739
#                 33        38845888 |***************************      38949486.33333
#                 37        39078432 |*******************************  39203427.78378
#                 38        39310976 |******************************** 39419579.18421
#                 26        39543520 |*********************            39681920.30769
#                 23        39776064 |*******************              39848013.91304
#                 25        40008608 |*********************            40107133.12000
#                 18        40241152 |***************                  40340092.05556
#                 12        40473696 |**********                       40565654.91667
#                 12        40706240 |**********                       40839004.75000
#                 20        40938784 |****************                 41041700.25000
#                 16        41171328 |*************                    41303419.31250
#                 10        41403872 |********                         41510543.90000
#                  7        41636416 |*****                            41779765.28571
#
#                 23           > 95% |*******************              42619513.08696
#
#        mean of 95%  39166166.09264
#          95th %ile        41868955
#
# Usage: exec
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exec')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures execv time of simple process()
      prc thr      nsecs/call      samples   errors cnt/samp 
execw   1   1        39365040          431        0        1 
# bin/../bin-riscv64/execw -N execw -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  17070502                   35783918
#                        max  55979861                   43709613
#                       mean  37437790.80871             39490998.65661
#                     median  39110959                   39365040*
#                     stddev   5941888.24791              1408312.07466
#             standard error    258587.49454                67836.00567
#       99% confidence level    666121.38593               174745.55060
#                       skew        -2.23312                    0.14538
#                   kurtosis         5.02995                    0.25703
#           time correlation     29098.24024                10909.66265
#
#               elapsed time        20.01195
#                   run time        19.82009
#          getnsecs overhead      1416
#
#          number of samples       528
#         number of outliers        97
#    number of final samples       431
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        35783918 |******                           35859898.83333
#                  2        35979508 |**                               36015822.50000
#                  0        36175098 |                                              -
#                  2        36370688 |**                               36434551.50000
#                  4        36566278 |****                             36607113.75000
#                  2        36761868 |**                               36854439.50000
#                  3        36957458 |***                              37080374.33333
#                  5        37153048 |*****                            37255204.00000
#                  4        37348638 |****                             37492523.75000
#                  5        37544228 |*****                            37605463.00000
#                 12        37739818 |************                     37846168.41667
#                 19        37935408 |*******************              38037881.10526
#                 13        38130998 |*************                    38221819.00000
#                 23        38326588 |***********************          38430768.78261
#                 19        38522178 |*******************              38613082.31579
#                 28        38717768 |****************************     38839720.96429
#                 28        38913358 |****************************     39009227.00000
#                 30        39108948 |******************************   39206803.66667
#                 31        39304538 |******************************** 39398534.16129
#                 20        39500128 |********************             39603422.65000
#                 18        39695718 |******************               39769005.38889
#                 25        39891308 |*************************        39977108.92000
#                 16        40086898 |****************                 40189407.43750
#                 20        40282488 |********************             40383270.55000
#                 17        40478078 |*****************                40602743.05882
#                 15        40673668 |***************                  40767478.73333
#                  9        40869258 |*********                        40969408.22222
#                  6        41064848 |******                           41194471.16667
#                  7        41260438 |*******                          41380683.71429
#                  9        41456028 |*********                        41573452.66667
#                  8        41651618 |********                         41755166.50000
#                  3        41847208 |***                              41958918.66667
#
#                 22           > 95% |**********************           42583502.77273
#
#        mean of 95%  39324653.69193
#          95th %ile        42042779
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_100r   1   1        84155198          217        0        1 
# bin/../bin-riscv64/execw -N execw_100r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  33124572                   64008539
#                        max 113114107                  101108044
#                       mean  80010944.34959             82999964.42396
#                     median  83400845                   84155198*
#                     stddev  13808794.84617              6905358.80188
#             standard error    880416.60294               468766.30015
#       99% confidence level   2267953.16917              1207541.98920
#                       skew        -1.43902                   -0.35596
#                   kurtosis         2.58671                    0.48438
#           time correlation    166525.71700               105062.33839
#
#               elapsed time        20.12090
#                   run time        19.79295
#          getnsecs overhead      1416
#
#          number of samples       246
#         number of outliers        29
#    number of final samples       217
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        64008539 |****                             64463184.66667
#                  2        64920324 |***                              65445747.00000
#                  1        65832109 |*                                65878742.00000
#                  1        66743894 |*                                67462549.00000
#                  0        67655679 |                                              -
#                  4        68567464 |******                           68889557.50000
#                  3        69479249 |****                             70069574.66667
#                  1        70391034 |*                                70999151.00000
#                  2        71302819 |***                              72169769.50000
#                  1        72214604 |*                                72764808.00000
#                  3        73126389 |****                             73542120.33333
#                  4        74038174 |******                           74436383.75000
#                  1        74949959 |*                                75111801.00000
#                 11        75861744 |****************                 76227647.00000
#                  8        76773529 |************                     77213009.75000
#                  7        77685314 |**********                       78188573.71429
#                  7        78597099 |**********                       79045268.14286
#                  6        79508884 |*********                        79869277.66667
#                 13        80420669 |*******************              80932458.76923
#                  9        81332454 |*************                    81793756.77778
#                 12        82244239 |******************               82540467.25000
#                  8        83156024 |************                     83669870.37500
#                 21        84067809 |******************************** 84595230.52381
#                 13        84979594 |*******************              85319783.92308
#                 18        85891379 |***************************      86410748.05556
#                 12        86803164 |******************               87322400.83333
#                 11        87714949 |****************                 88303876.63636
#                  7        88626734 |**********                       89012984.71429
#                  4        89538519 |******                           89902066.75000
#                  5        90450304 |*******                          91081435.20000
#                  3        91362089 |****                             91981301.00000
#                  5        92273874 |*******                          92639514.00000
#
#                 11           > 95% |****************                 96757721.27273
#
#        mean of 95%  82265326.92233
#          95th %ile        93185642
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_1024n   1   1        97183283          212        0        1 
# bin/../bin-riscv64/execw -N execw_1024n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1024 -p 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  34946778                   59004754
#                        max 145619897                  125753500
#                       mean  91726986.01395             91948721.44811
#                     median  97179744                   97183283*
#                     stddev  14630916.30325             13371141.10965
#             standard error    997820.21001               918333.74173
#       99% confidence level   2570384.86098              2365627.71869
#                       skew        -0.95485                   -1.09564
#                   kurtosis         1.49943                    0.25919
#           time correlation    197392.29520               185057.09517
#
#               elapsed time        20.11113
#                   run time        19.81973
#          getnsecs overhead      1416
#
#          number of samples       215
#         number of outliers         3
#    number of final samples       212
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        59004754 |*                                59668855.50000
#                  1        60377952 |*                                61620332.00000
#                  1        61751150 |*                                62712654.00000
#                  9        63124348 |********                         63748062.22222
#                  4        64497546 |***                              64909887.25000
#                  6        65870744 |*****                            66702293.83333
#                  9        67243942 |********                         68062198.66667
#                  3        68617140 |**                               69205180.00000
#                  4        69990338 |***                              70618615.00000
#                  0        71363536 |                                              -
#                  0        72736734 |                                              -
#                  0        74109932 |                                              -
#                  2        75483130 |*                                76826133.00000
#                  0        76856328 |                                              -
#                  0        78229526 |                                              -
#                  1        79602724 |*                                79680550.00000
#                  0        80975922 |                                              -
#                  1        82349120 |*                                83273965.00000
#                  2        83722318 |*                                83968238.00000
#                  0        85095516 |                                              -
#                  4        86468714 |***                              87176023.75000
#                  1        87841912 |*                                88686638.00000
#                  2        89215110 |*                                89991381.00000
#                  2        90588308 |*                                91458046.00000
#                  4        91961506 |***                              92766033.25000
#                  5        93334704 |****                             94202232.40000
#                 16        94707902 |**************                   95676780.81250
#                 35        96081100 |******************************** 96848855.37143
#                 33        97454298 |******************************   98210021.12121
#                 34        98827496 |*******************************  99453291.35294
#                  9       100200694 |********                        100563961.11111
#                 11       101573892 |**********                      102095774.63636
#
#                 11           > 95% |**********                      110482204.18182
#
#        mean of 95%  90934451.24876
#          95th %ile       102947073
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_10r   1   1        45816640          409        0        1 
# bin/../bin-riscv64/execw -N execw_10r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  18285160                   35091071
#                        max  66709880                   55191642
#                       mean  43362116.58022             45432923.63570
#                     median  45526989                   45816640*
#                     stddev   7397804.82051              3457164.11835
#             standard error    346814.43929               170945.76372
#       99% confidence level    893393.99562               440356.28735
#                       skew        -1.81905                   -0.65447
#                   kurtosis         3.23094                    1.06942
#           time correlation     45753.82049                27115.76354
#
#               elapsed time        20.01754
#                   run time        19.79712
#          getnsecs overhead      1416
#
#          number of samples       455
#         number of outliers        46
#    number of final samples       409
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        35091071 |*****                            35326746.33333
#                  2        35569813 |*                                35924251.50000
#                  2        36048555 |*                                36373439.50000
#                  2        36527297 |*                                36817617.00000
#                  3        37006039 |**                               37160823.00000
#                  4        37484781 |***                              37632090.75000
#                  5        37963523 |****                             38277171.40000
#                  4        38442265 |***                              38740503.25000
#                  1        38921007 |*                                39335388.00000
#                  8        39399749 |******                           39690287.12500
#                  3        39878491 |**                               40197332.33333
#                  3        40357233 |**                               40766416.66667
#                  8        40835975 |******                           41021182.37500
#                  4        41314717 |***                              41703516.25000
#                  2        41793459 |*                                42021384.50000
#                  9        42272201 |*******                          42498197.33333
#                 11        42750943 |*********                        42958114.54545
#                  8        43229685 |******                           43434610.62500
#                 16        43708427 |*************                    44013010.12500
#                 19        44187169 |****************                 44415176.78947
#                 38        44665911 |******************************** 44919829.60526
#                 33        45144653 |***************************      45379633.36364
#                 36        45623395 |******************************   45883697.00000
#                 38        46102137 |******************************** 46347289.34211
#                 36        46580879 |******************************   46824975.69444
#                 19        47059621 |****************                 47307249.10526
#                 17        47538363 |**************                   47760070.70588
#                 11        48017105 |*********                        48233199.00000
#                  8        48495847 |******                           48709496.12500
#                 11        48974589 |*********                        49201005.81818
#                 15        49453331 |************                     49629221.06667
#                  6        49932073 |*****                            50121273.83333
#
#                 21           > 95% |*****************                52075073.80952
#
#        mean of 95%  45073425.81701
#          95th %ile        50410794
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_128n   1   1        46807415          391        0        1 
# bin/../bin-riscv64/execw -N execw_128n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  22377773                   43050115
#                        max  61970456                   51164752
#                       mean  46697666.08726             46964665.39642
#                     median  46786403                   46807415*
#                     stddev   3560622.93368              1427516.76609
#             standard error    172919.13583                72192.62591
#       99% confidence level    445439.69391               185968.20436
#                       skew        -2.16717                    0.40325
#                   kurtosis        15.59025                    0.08526
#           time correlation     20912.87981                12249.50116
#
#               elapsed time        20.02013
#                   run time        19.84978
#          getnsecs overhead      1416
#
#          number of samples       424
#         number of outliers        33
#    number of final samples       391
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        43050115 |*                                43050115.00000
#                  0        43253163 |                                              -
#                  2        43456211 |**                               43552509.50000
#                  1        43659259 |*                                43727410.00000
#                  2        43862307 |**                               44031569.50000
#                  1        44065355 |*                                44130910.00000
#                  4        44268403 |****                             44335002.00000
#                  3        44471451 |***                              44592831.66667
#                  4        44674499 |****                             44780373.25000
#                  4        44877547 |****                             44987591.50000
#                 10        45080595 |************                     45184366.00000
#                 16        45283643 |*******************              45385735.87500
#                 22        45486691 |***************************      45588211.00000
#                 22        45689739 |***************************      45799716.68182
#                 26        45892787 |******************************** 45991663.15385
#                 23        46095835 |****************************     46190055.47826
#                 25        46298883 |******************************   46397708.08000
#                 20        46501931 |************************         46590929.50000
#                 20        46704979 |************************         46810552.00000
#                 16        46908027 |*******************              46977339.56250
#                 20        47111075 |************************         47201381.40000
#                 21        47314123 |*************************        47417227.23810
#                 15        47517171 |******************               47637361.00000
#                 20        47720219 |************************         47851770.95000
#                 16        47923267 |*******************              48023955.12500
#                 13        48126315 |****************                 48209231.07692
#                 11        48329363 |*************                    48425129.36364
#                 11        48532411 |*************                    48630782.09091
#                  5        48735459 |******                           48862230.00000
#                  3        48938507 |***                              49018869.66667
#                  9        49141555 |***********                      49236362.00000
#                  5        49344603 |******                           49465951.40000
#
#                 20           > 95% |************************         50233738.45000
#
#        mean of 95%  46788435.04313
#          95th %ile        49547624
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_128nt   1   1       277608516           53        0        1 
# bin/../bin-riscv64/execw -N execw_128nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 191377437                  191377437
#                        max 303787495                  303787495
#                       mean 264647350.01887            264647350.01887
#                     median 277608516                  277608516*
#                     stddev  29765133.07286             29765133.07286
#             standard error   4088555.46490              4088555.46490
#       99% confidence level  10532118.87757             10532118.87757
#                       skew        -0.73775                   -0.73775
#                   kurtosis        -0.60349                   -0.60349
#           time correlation   1840007.97355              1840007.97355
#
#               elapsed time        25.76076
#                   run time        14.30399
#          getnsecs overhead      1416
#
#          number of samples        53
#         number of outliers         0
#    number of final samples        53
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       191377437 |***                             191377437.00000
#                  0       194717110 |                                              -
#                  1       198056783 |***                             198853607.00000
#                  0       201396456 |                                              -
#                  1       204736129 |***                             206910398.00000
#                  0       208075802 |                                              -
#                  2       211415475 |******                          213747647.50000
#                  0       214755148 |                                              -
#                  1       218094821 |***                             220788080.00000
#                  0       221434494 |                                              -
#                  2       224774167 |******                          226495514.00000
#                  0       228113840 |                                              -
#                  2       231453513 |******                          232481006.00000
#                  0       234793186 |                                              -
#                  4       238132859 |************                    239470908.75000
#                  1       241472532 |***                             243607266.00000
#                  1       244812205 |***                             247048858.00000
#                  1       248151878 |***                             249183639.00000
#                  1       251491551 |***                             253685324.00000
#                  1       254831224 |***                             257673452.00000
#                  3       258170897 |*********                       259972369.66667
#                  1       261510570 |***                             261726009.00000
#                  2       264850243 |******                          266809377.00000
#                  0       268189916 |                                              -
#                  1       271529589 |***                             274133535.00000
#                  1       274869262 |***                             277608516.00000
#                  1       278208935 |***                             279630776.00000
#                  5       281548608 |****************                283183153.80000
#                  4       284888281 |************                    287134997.75000
#                 10       288227954 |********************************289879074.30000
#                  3       291567627 |*********                       292802433.33333
#
#                  3           > 95% |*********                       301853672.66667
#
#        mean of 95% 262414970.66000
#          95th %ile       298246960
#
# WARNINGS
#     Too few samples, 53 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 55.5% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
             prc thr      nsecs/call      samples   errors cnt/samp 
execw_128ntv   1   1        31636652          324        0        1 
# bin/../bin-riscv64/execw -N execw_128ntv -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  12766852                   12766852
#                        max  45905735                   45905735
#                       mean  28109111.07099             28109111.07099
#                     median  31636652                   31636652*
#                     stddev   7488969.11056              7488969.11056
#             standard error    416053.83948               416053.83948
#       99% confidence level   1071754.69049              1071754.69049
#                       skew        -0.96639                   -0.96639
#                   kurtosis        -0.41245                   -0.41245
#           time correlation     71060.29989                71060.29989
#
#               elapsed time        20.67090
#                   run time         9.13910
#          getnsecs overhead      1416
#
#          number of samples       324
#         number of outliers         0
#    number of final samples       324
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13        12766852 |*******                          13132262.76923
#                 20        13480170 |************                     13770423.60000
#                 11        14193488 |******                           14468119.18182
#                  5        14906806 |***                              15142410.60000
#                  5        15620124 |***                              16004837.60000
#                  1        16333442 |*                                17015020.00000
#                  2        17046760 |*                                17411101.00000
#                  3        17760078 |*                                18135701.00000
#                  5        18473396 |***                              18886849.60000
#                  5        19186714 |***                              19523503.20000
#                  1        19900032 |*                                20111484.00000
#                  6        20613350 |***                              20999424.33333
#                  2        21326668 |*                                21724701.50000
#                  2        22039986 |*                                22492364.00000
#                  0        22753304 |                                              -
#                  2        23466622 |*                                23884378.50000
#                  2        24179940 |*                                24279696.50000
#                  1        24893258 |*                                24970823.00000
#                  1        25606576 |*                                26048922.00000
#                  0        26319894 |                                              -
#                  1        27033212 |*                                27273810.00000
#                  7        27746530 |****                             28100204.14286
#                 11        28459848 |******                           28802829.09091
#                  7        29173166 |****                             29546230.71429
#                  8        29886484 |****                             30409531.87500
#                 21        30599802 |************                     30948979.95238
#                 49        31313120 |*****************************    31695543.77551
#                 53        32026438 |******************************** 32344060.50943
#                 31        32739756 |******************               33043513.45161
#                 15        33453074 |*********                        33788769.93333
#                 12        34166392 |*******                          34506315.58333
#                  5        34879710 |***                              35204864.80000
#
#                 17           > 95% |**********                       37454127.35294
#
#        mean of 95%  27591634.59935
#          95th %ile        35593026
#
# WARNINGS
#     Actual benchmark run time only accounts for 44.2% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
         prc thr      nsecs/call      samples   errors cnt/samp 
execw_1r   1   1        40137619          448        0        1 
# bin/../bin-riscv64/execw -N execw_1r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  16396144                   34478595
#                        max  56310511                   45731437
#                       mean  38500450.92039             40104793.19866
#                     median  39880281                   40137619*
#                     stddev   5775793.73922              1931710.67115
#             standard error    254511.88126                91264.75073
#       99% confidence level    655622.60614               235097.99788
#                       skew        -2.25443                   -0.43403
#                   kurtosis         5.80328                    0.86509
#           time correlation     29264.75435                14066.28146
#
#               elapsed time        20.04334
#                   run time        19.87250
#          getnsecs overhead      1416
#
#          number of samples       515
#         number of outliers        67
#    number of final samples       448
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5        34478595 |****                             34553459.60000
#                  5        34753100 |****                             34877863.20000
#                  2        35027605 |*                                35263741.00000
#                  3        35302110 |**                               35408960.66667
#                  4        35576615 |***                              35721164.50000
#                  2        35851120 |*                                35971627.00000
#                  5        36125625 |****                             36255641.40000
#                  3        36400130 |**                               36575213.00000
#                  5        36674635 |****                             36880141.60000
#                  3        36949140 |**                               37080399.00000
#                  4        37223645 |***                              37395154.50000
#                  4        37498150 |***                              37675747.50000
#                  7        37772655 |*****                            37947541.71429
#                  3        38047160 |**                               38168320.66667
#                 14        38321665 |***********                      38452390.28571
#                 12        38596170 |**********                       38766778.50000
#                 25        38870675 |*********************            38998488.68000
#                 25        39145180 |*********************            39299466.36000
#                 38        39419685 |******************************** 39566112.42105
#                 37        39694190 |*******************************  39806999.29730
#                 32        39968695 |**************************       40116059.18750
#                 25        40243200 |*********************            40395193.16000
#                 34        40517705 |****************************     40656362.44118
#                 32        40792210 |**************************       40943942.21875
#                 18        41066715 |***************                  41187788.94444
#                 16        41341220 |*************                    41449402.81250
#                 10        41615725 |********                         41707123.60000
#                 17        41890230 |**************                   41999835.35294
#                 13        42164735 |**********                       42275540.76923
#                  7        42439240 |*****                            42513650.00000
#                  7        42713745 |*****                            42868223.28571
#                  8        42988250 |******                           43146375.62500
#
#                 23           > 95% |*******************              43895869.30435
#
#        mean of 95%  39899629.08000
#          95th %ile        43262749
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_256n   1   1        54881739          335        0        1 
# bin/../bin-riscv64/execw -N execw_256n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 256 -p 1024 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  20465965                   50035724
#                        max  74508198                   60180234
#                       mean  53545899.11892             54951549.87463
#                     median  54748765                   54881739*
#                     stddev   6042689.45862              1757996.64454
#             standard error    314144.46622                96049.61719
#       99% confidence level    809236.14499               247423.81387
#                       skew        -2.91571                    0.06543
#                   kurtosis        10.31727                    0.10570
#           time correlation     38437.04892                17635.47467
#
#               elapsed time        20.05777
#                   run time        19.86004
#          getnsecs overhead      1416
#
#          number of samples       370
#         number of outliers        35
#    number of final samples       335
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        50035724 |*                                50035724.00000
#                  3        50279939 |***                              50369087.33333
#                  0        50524154 |                                              -
#                  2        50768369 |**                               50925570.00000
#                  1        51012584 |*                                51205474.00000
#                  3        51256799 |***                              51418973.33333
#                  3        51501014 |***                              51587828.33333
#                  2        51745229 |**                               51849552.00000
#                  2        51989444 |**                               52150976.00000
#                  6        52233659 |******                           52350563.00000
#                  6        52477874 |******                           52591160.66667
#                  8        52722089 |*********                        52857044.50000
#                 16        52966304 |******************               53083443.68750
#                  8        53210519 |*********                        53318199.12500
#                 12        53454734 |*************                    53592770.58333
#                 18        53698949 |********************             53797986.00000
#                 17        53943164 |*******************              54058203.52941
#                 22        54187379 |*************************        54281986.77273
#                 18        54431594 |********************             54562315.27778
#                 28        54675809 |******************************** 54813167.28571
#                 17        54920024 |*******************              55048345.23529
#                 24        55164239 |***************************      55294733.66667
#                 13        55408454 |**************                   55524471.61538
#                  9        55652669 |**********                       55740381.33333
#                 12        55896884 |*************                    56020900.16667
#                 10        56141099 |***********                      56269698.20000
#                 11        56385314 |************                     56519312.36364
#                 15        56629529 |*****************                56741078.33333
#                 10        56873744 |***********                      57007069.40000
#                  7        57117959 |********                         57221558.00000
#                  5        57362174 |*****                            57465298.20000
#                  9        57606389 |**********                       57739694.22222
#
#                 17           > 95% |*******************              58578909.41176
#
#        mean of 95%  54757634.42767
#          95th %ile        57850591
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_32n   1   1        41785580          445        0        1 
# bin/../bin-riscv64/execw -N execw_32n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  17788219                   34186907
#                        max  65675354                   48576379
#                       mean  40158265.46856             41464457.96854
#                     median  41626781                   41785580*
#                     stddev   5594553.02452              2453447.45743
#             standard error    251965.99606               116304.56362
#       99% confidence level    649064.40586               299600.55590
#                       skew        -1.99700                   -0.73987
#                   kurtosis         6.34551                    0.94721
#           time correlation     30411.65400                17681.37720
#
#               elapsed time        20.02764
#                   run time        19.86440
#          getnsecs overhead      1416
#
#          number of samples       493
#         number of outliers        48
#    number of final samples       445
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        34186907 |**                               34348589.00000
#                  3        34522668 |**                               34686907.66667
#                  2        34858429 |*                                34946624.00000
#                  5        35194190 |****                             35432471.40000
#                  5        35529951 |****                             35732906.00000
#                  9        35865712 |*******                          36092104.22222
#                  2        36201473 |*                                36261081.50000
#                  8        36537234 |******                           36709970.50000
#                  6        36872995 |****                             37112427.33333
#                  1        37208756 |*                                37251904.00000
#                  4        37544517 |***                              37582640.25000
#                  3        37880278 |**                               38019758.00000
#                  3        38216039 |**                               38385690.00000
#                  5        38551800 |****                             38728289.00000
#                  7        38887561 |*****                            39083236.57143
#                  3        39223322 |**                               39408127.00000
#                  6        39559083 |****                             39777216.16667
#                 11        39894844 |********                         40131191.63636
#                 21        40230605 |****************                 40417773.42857
#                 34        40566366 |***************************      40725606.70588
#                 27        40902127 |*********************            41048226.18519
#                 29        41237888 |***********************          41434541.13793
#                 40        41573649 |******************************** 41737435.80000
#                 32        41909410 |*************************        42084848.81250
#                 40        42245171 |******************************** 42406158.27500
#                 26        42580932 |********************             42734144.38462
#                 27        42916693 |*********************            43075799.33333
#                 13        43252454 |**********                       43402640.07692
#                 18        43588215 |**************                   43756827.33333
#                 15        43923976 |************                     44107403.20000
#                  9        44259737 |*******                          44406263.77778
#                  5        44595498 |****                             44668471.00000
#
#                 23           > 95% |******************               45930005.43478
#
#        mean of 95%  41221075.04976
#          95th %ile        44931236
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_32nt   1   1       278002821           51        0        1 
# bin/../bin-riscv64/execw -N execw_32nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 202279260                  202279260
#                        max 293655955                  293655955
#                       mean 266095906.56863            266095906.56863
#                     median 278002821                  278002821*
#                     stddev  21539151.54604             21539151.54604
#             standard error   3016084.49368              3016084.49368
#       99% confidence level   7769433.65572              7769433.65572
#                       skew        -1.13499                   -1.13499
#                   kurtosis         0.23741                    0.23741
#           time correlation   1303442.53158              1303442.53158
#
#               elapsed time        25.69817
#                   run time        13.84617
#          getnsecs overhead      1416
#
#          number of samples        51
#         number of outliers         0
#    number of final samples        51
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       202279260 |**                              202279260.00000
#                  0       204930261 |                                              -
#                  0       207581262 |                                              -
#                  0       210232263 |                                              -
#                  0       212883264 |                                              -
#                  0       215534265 |                                              -
#                  0       218185266 |                                              -
#                  2       220836267 |****                            222568422.00000
#                  1       223487268 |**                              224821999.00000
#                  0       226138269 |                                              -
#                  1       228789270 |**                              229204684.00000
#                  2       231440271 |****                            231992905.00000
#                  0       234091272 |                                              -
#                  0       236742273 |                                              -
#                  2       239393274 |****                            240329301.50000
#                  1       242044275 |**                              243130813.00000
#                  0       244695276 |                                              -
#                  2       247346277 |****                            249478173.00000
#                  0       249997278 |                                              -
#                  3       252648279 |******                          254217359.33333
#                  1       255299280 |**                              256384805.00000
#                  0       257950281 |                                              -
#                  1       260601282 |**                              262853638.00000
#                  0       263252283 |                                              -
#                  2       265903284 |****                            268046252.00000
#                  1       268554285 |**                              268667984.00000
#                  1       271205286 |**                              272360876.00000
#                  4       273856287 |********                        275558683.50000
#                  4       276507288 |********                        278536402.50000
#                 16       279158289 |********************************280425219.43750
#                  3       281809290 |******                          282854586.66667
#
#                  3           > 95% |******                          290652458.66667
#
#        mean of 95% 264561122.06250
#          95th %ile       287111290
#
# WARNINGS
#     Too few samples, 51 < 100, consider running test longer, or for a least 100 samples
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 53.9% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_32ntv   1   1        32321073          263        0        1 
# bin/../bin-riscv64/execw -N execw_32ntv -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  13442324                   28771680
#                        max  59661597                   35819687
#                       mean  31599241.46465             32423387.24715
#                     median  32187790                   32321073*
#                     stddev   4339741.59714              1240183.28455
#             standard error    251817.34823                76472.97739
#       99% confidence level    648681.48903               196994.38976
#                       skew        -1.09931                    0.09852
#                   kurtosis        11.32733                    0.11426
#           time correlation     35605.93893                15769.22706
#
#               elapsed time        20.66799
#                   run time         9.44506
#          getnsecs overhead      1416
#
#          number of samples       297
#         number of outliers        34
#    number of final samples       263
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        28771680 |*                                28771680.00000
#                  0        28956031 |                                              -
#                  0        29140382 |                                              -
#                  1        29324733 |*                                29345981.00000
#                  3        29509084 |****                             29644836.66667
#                  2        29693435 |***                              29761931.50000
#                  2        29877786 |***                              30008427.50000
#                  5        30062137 |********                         30125936.40000
#                  2        30246488 |***                              30330576.00000
#                  2        30430839 |***                              30535273.00000
#                  1        30615190 |*                                30796169.00000
#                  7        30799541 |***********                      30920445.85714
#                  6        30983892 |*********                        31065642.83333
#                 11        31168243 |*****************                31237885.45455
#                  9        31352594 |**************                   31474364.11111
#                 19        31536945 |******************************   31617572.57895
#                 19        31721296 |******************************   31823308.52632
#                 19        31905647 |******************************   32007465.68421
#                 17        32089998 |***************************      32161896.23529
#                 20        32274349 |******************************** 32365557.00000
#                 15        32458700 |************************         32550116.73333
#                 13        32643051 |********************             32740381.76923
#                 12        32827402 |*******************              32905591.16667
#                 11        33011753 |*****************                33087674.45455
#                  9        33196104 |**************                   33307373.55556
#                  9        33380455 |**************                   33479044.00000
#                  8        33564806 |************                     33645058.00000
#                 11        33749157 |*****************                33819922.18182
#                  5        33933508 |********                         34044041.20000
#                  2        34117859 |***                              34226532.00000
#                  3        34302210 |****                             34360717.66667
#                  5        34486561 |********                         34575611.60000
#
#                 14           > 95% |**********************           35049741.00000
#
#        mean of 95%  32275720.77108
#          95th %ile        34670886
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.7% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_512n   1   1        68221481          266        0        1 
# bin/../bin-riscv64/execw -N execw_512n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 512 -p 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  34211136                   60920590
#                        max  82641095                   73897261
#                       mean  66414042.72819             68265745.49248
#                     median  68046445                   68221481*
#                     stddev   7388057.52434              2458947.95181
#             standard error    427978.68127               150767.77230
#       99% confidence level   1102473.08295               388377.78144
#                       skew        -2.64640                   -0.21155
#                   kurtosis         7.60926                    0.19744
#           time correlation     62643.45709                30940.53074
#
#               elapsed time        20.08179
#                   run time        19.87445
#          getnsecs overhead      1416
#
#          number of samples       298
#         number of outliers        32
#    number of final samples       266
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        60920590 |*                                60920590.00000
#                  1        61277732 |*                                61480546.00000
#                  2        61634874 |***                              61889643.00000
#                  1        61992016 |*                                62155355.00000
#                  1        62349158 |*                                62552035.00000
#                  3        62706300 |****                             62822045.00000
#                  2        63063442 |***                              63193709.00000
#                  3        63420584 |****                             63731516.00000
#                  3        63777726 |****                             63946717.00000
#                  1        64134868 |*                                64184412.00000
#                  1        64492010 |*                                64783920.00000
#                  3        64849152 |****                             64982953.66667
#                  4        65206294 |******                           65331455.50000
#                 10        65563436 |****************                 65777556.90000
#                 10        65920578 |****************                 66108822.30000
#                 19        66277720 |******************************   66473149.31579
#                 15        66634862 |************************         66814368.20000
#                 17        66992004 |***************************      67133990.70588
#                 11        67349146 |*****************                67566300.72727
#                 14        67706288 |**********************           67899584.07143
#                 20        68063430 |******************************** 68233657.05000
#                 11        68420572 |*****************                68574017.45455
#                 14        68777714 |**********************           68967453.50000
#                 19        69134856 |******************************   69309116.31579
#                 12        69491998 |*******************              69646995.41667
#                 12        69849140 |*******************              70046131.83333
#                 14        70206282 |**********************           70365272.92857
#                  4        70563424 |******                           70759174.50000
#                  9        70920566 |**************                   71127809.55556
#                  8        71277708 |************                     71414063.25000
#                  3        71634850 |****                             71892650.00000
#                  4        71991992 |******                           72167411.75000
#
#                 14           > 95% |**********************           73129672.57143
#
#        mean of 95%  67995527.32143
#          95th %ile        72349105
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
          prc thr      nsecs/call      samples   errors cnt/samp 
execw_64n   1   1        43752957          385        0        1 
# bin/../bin-riscv64/execw -N execw_64n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  16125391                   39539639
#                        max  65488153                   48128369
#                       mean  41436737.78452             43808221.77143
#                     median  43418537                   43752957*
#                     stddev   7409341.60038              1484010.76381
#             standard error    338895.39663                75632.19178
#       99% confidence level    872994.54171               194828.52604
#                       skew        -1.94507                    0.22295
#                   kurtosis         3.74461                    0.52759
#           time correlation     40019.52261                12807.80076
#
#               elapsed time        20.04540
#                   run time        19.87293
#          getnsecs overhead      1416
#
#          number of samples       478
#         number of outliers        93
#    number of final samples       385
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        39539639 |***                              39604968.00000
#                  2        39757182 |**                               39833242.50000
#                  2        39974725 |**                               40132551.00000
#                  0        40192268 |                                              -
#                  0        40409811 |                                              -
#                  2        40627354 |**                               40678699.50000
#                  1        40844897 |*                                41058353.00000
#                  1        41062440 |*                                41141920.00000
#                  5        41279983 |*****                            41380239.80000
#                  3        41497526 |***                              41619002.00000
#                  7        41715069 |*******                          41831635.85714
#                 11        41932612 |************                     42026369.72727
#                 18        42150155 |*******************              42277392.83333
#                 17        42367698 |******************               42470354.11765
#                 21        42585241 |***********************          42670338.57143
#                 29        42802784 |******************************** 42919164.37931
#                 19        43020327 |********************             43133094.63158
#                 26        43237870 |****************************     43333906.88462
#                 18        43455413 |*******************              43570437.16667
#                 22        43672956 |************************         43774670.77273
#                 28        43890499 |******************************   44004545.28571
#                 21        44108042 |***********************          44221195.38095
#                 27        44325585 |*****************************    44438549.81481
#                 12        44543128 |*************                    44650436.66667
#                 12        44760671 |*************                    44878393.08333
#                 13        44978214 |**************                   45104845.00000
#                 15        45195757 |****************                 45292769.93333
#                  8        45413300 |********                         45511708.25000
#                 11        45630843 |************                     45717149.90909
#                  3        45848386 |***                              46024980.00000
#                  3        46065929 |***                              46188483.66667
#                  5        46283472 |*****                            46353794.60000
#
#                 20           > 95% |**********************           47182156.95000
#
#        mean of 95%  43623348.61096
#          95th %ile        46500999
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
           prc thr      nsecs/call      samples   errors cnt/samp 
execw_64nt   1   1       283341725           48        0        1 
# bin/../bin-riscv64/execw -N execw_64nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 236830412                  273504130
#                        max 297035724                  292745891
#                       mean 282467533.94000            283114803.35417
#                     median 283341725                  283341725*
#                     stddev   7779357.69079              3719737.08763
#             standard error   1100167.31529               536897.80221
#       99% confidence level   2834031.00418              1383048.73850
#                       skew        -3.92102                    0.09479
#                   kurtosis        21.60491                    0.39161
#           time correlation    367494.70631               255265.79304
#
#               elapsed time        25.75608
#                   run time        14.39695
#          getnsecs overhead      1416
#
#          number of samples        50
#         number of outliers         2
#    number of final samples        48
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       273504130 |******                          273504130.00000
#                  0       273993281 |                                              -
#                  0       274482432 |                                              -
#                  0       274971583 |                                              -
#                  0       275460734 |                                              -
#                  0       275949885 |                                              -
#                  1       276439036 |******                          276915073.00000
#                  1       276928187 |******                          277193077.00000
#                  1       277417338 |******                          277804476.00000
#                  1       277906489 |******                          278048241.00000
#                  0       278395640 |                                              -
#                  2       278884791 |************                    279092285.00000
#                  2       279373942 |************                    279604898.00000
#                  1       279863093 |******                          280194622.00000
#                  4       280352244 |*************************       280752772.75000
#                  1       280841395 |******                          281086068.00000
#                  3       281330546 |*******************             281564076.66667
#                  1       281819697 |******                          282037519.00000
#                  2       282308848 |************                    282553061.00000
#                  2       282797999 |************                    283275840.00000
#                  5       283287150 |********************************283425878.60000
#                  3       283776301 |*******************             284079744.66667
#                  2       284265452 |************                    284585501.50000
#                  2       284754603 |************                    285091444.50000
#                  3       285243754 |*******************             285547576.66667
#                  2       285732905 |************                    285977094.00000
#                  2       286222056 |************                    286498338.50000
#                  1       286711207 |******                          286929095.00000
#                  1       287200358 |******                          287464473.00000
#                  1       287689509 |******                          287737089.00000
#
#                  3           > 95% |*******************             291175031.66667
#
#        mean of 95% 282577454.80000
#          95th %ile       289156943
#
# WARNINGS
#     Too few samples, 50 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 55.9% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp 
execw_64ntv   1   1        31843809          249        0        1 
# bin/../bin-riscv64/execw -N execw_64ntv -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t -v 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  12739810                   27488770
#                        max  44770737                   35661949
#                       mean  30078805.64865             31881168.97992
#                     median  31560202                   31843809*
#                     stddev   5717080.41330              1489687.82201
#             standard error    332298.54928                94405.12985
#       99% confidence level    856001.06294               243187.61450
#                       skew        -1.92397                   -0.42078
#                   kurtosis         3.46862                    1.14750
#           time correlation     50683.10531                19299.38484
#
#               elapsed time        20.65180
#                   run time         8.94542
#          getnsecs overhead      1416
#
#          number of samples       296
#         number of outliers        47
#    number of final samples       249
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4        27488770 |*****                            27592787.75000
#                  3        27705179 |****                             27821167.66667
#                  2        27921588 |**                               28081861.50000
#                  2        28137997 |**                               28221967.50000
#                  1        28354406 |*                                28367765.00000
#                  1        28570815 |*                                28665267.00000
#                  1        28787224 |*                                28944470.00000
#                  0        29003633 |                                              -
#                  0        29220042 |                                              -
#                  1        29436451 |*                                29648483.00000
#                  2        29652860 |**                               29728226.50000
#                  4        29869269 |*****                            29988810.00000
#                  2        30085678 |**                               30211583.00000
#                  2        30302087 |**                               30412089.00000
#                  6        30518496 |********                         30649792.00000
#                 11        30734905 |**************                   30838831.72727
#                 21        30951314 |****************************     31065518.33333
#                 24        31167723 |******************************** 31286779.29167
#                 24        31384132 |******************************** 31488585.41667
#                 10        31600541 |*************                    31700206.90000
#                 16        31816950 |*********************            31904914.06250
#                 21        32033359 |****************************     32139511.28571
#                 17        32249768 |**********************           32367406.17647
#                 11        32466177 |**************                   32562933.63636
#                 10        32682586 |*************                    32802816.90000
#                  8        32898995 |**********                       32995259.37500
#                  4        33115404 |*****                            33240970.25000
#                 10        33331813 |*************                    33404883.60000
#                  6        33548222 |********                         33627443.00000
#                  6        33764631 |********                         33885328.50000
#                  4        33981040 |*****                            34069004.75000
#                  2        34197449 |**                               34376729.00000
#
#                 13           > 95% |*****************                34893502.30769
#
#        mean of 95%  31715235.36441
#          95th %ile        34413839
#
# WARNINGS
#     Actual benchmark run time only accounts for 43.3% of elapsed time.
#
# Usage: execw
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'execw')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
#     [-v use vfork() instead of fork()
# notes: measures fork/execv/waitpid time of simple process()
         prc thr      nsecs/call      samples   errors cnt/samp 
exit_100   1   1          768182          152        0       50 
# bin/../bin-riscv64/exit -N exit_100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 50 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    616647                     616647
#                        max   1377946                     924002
#                       mean    824206.51111               769363.42763
#                     median    778894                     768182*
#                     stddev    145127.12170                52877.06932
#             standard error     10817.13698                 4288.89667
#       99% confidence level     27864.94487                11048.19781
#                       skew         1.87489                    0.15836
#                   kurtosis         3.01592                    0.54535
#           time correlation      2294.22807                 1153.65601
#
#               elapsed time        25.02732
#                   run time         7.41811
#          getnsecs overhead      1416
#
#          number of samples       180
#         number of outliers        28
#    number of final samples       152
#             ops per sample        50.00000 (-B 50)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          616647 |****                               619558.00000
#                  0          624295 |                                              -
#                  0          631943 |                                              -
#                  0          639591 |                                              -
#                  1          647239 |**                                 651549.00000
#                  0          654887 |                                              -
#                  1          662535 |**                                 663694.00000
#                  0          670183 |                                              -
#                  1          677831 |**                                 683379.00000
#                  5          685479 |***********                        689038.60000
#                  3          693127 |******                             699938.66667
#                  3          700775 |******                             704498.00000
#                  7          708423 |****************                   712737.42857
#                  4          716071 |*********                          720267.25000
#                  8          723719 |******************                 729150.62500
#                 10          731367 |**********************             736471.90000
#                  7          739015 |****************                   742213.85714
#                  6          746663 |*************                      750696.50000
#                  6          754311 |*************                      759277.50000
#                 14          761959 |********************************   765757.07143
#                 10          769607 |**********************             772925.40000
#                 11          777255 |*************************          780501.27273
#                  9          784903 |********************               788451.44444
#                  6          792551 |*************                      795745.00000
#                  5          800199 |***********                        802842.40000
#                  7          807847 |****************                   812489.57143
#                  2          815495 |****                               817967.00000
#                  5          823143 |***********                        827139.80000
#                  5          830791 |***********                        834078.00000
#                  4          838439 |*********                          841116.50000
#                  2          846087 |****                               851721.50000
#
#                  8           > 95% |******************                 888254.12500
#
#        mean of 95%    762758.38889
#          95th %ile          861353
#
# WARNINGS
#     Actual benchmark run time only accounts for 29.6% of elapsed time.
#
# Usage: exit
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exit')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-e] (uses _exit() rather than exit())notes: measures exit()
                prc thr      nsecs/call      samples   errors cnt/samp 
exit_100_nolibc   1   1          576327          159        0       60 
# bin/../bin-riscv64/exit -N exit_100_nolibc -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -e -B 60 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    346757                     346757
#                        max   1202188                    1001962
#                       mean    618781.72050               611746.32704
#                     median    576660                     576327*
#                     stddev    146174.72691               132742.09877
#             standard error     11520.18234                10527.13319
#       99% confidence level     29675.98971                27117.89510
#                       skew         1.37769                    1.06993
#                   kurtosis         1.99575                    0.61470
#           time correlation      2805.10829                 2643.39279
#
#               elapsed time        25.11401
#                   run time         5.97766
#          getnsecs overhead      1416
#
#          number of samples       161
#         number of outliers         2
#    number of final samples       159
#             ops per sample        60.00000 (-B 60)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          346757 |*                                  346757.00000
#                  0          363958 |                                              -
#                  0          381159 |                                              -
#                  2          398360 |**                                 410551.50000
#                  1          415561 |*                                  427265.00000
#                  3          432762 |***                                442958.00000
#                  8          449963 |*********                          455899.75000
#                  3          467164 |***                                477781.66667
#                  7          484365 |********                           491903.42857
#                  6          501566 |*******                            512177.16667
#                 11          518767 |*************                      526784.54545
#                 13          535968 |****************                   544638.53846
#                 15          553169 |******************                 562358.06667
#                 26          570370 |********************************   577844.76923
#                 12          587571 |**************                     595175.66667
#                  5          604772 |******                             613055.00000
#                  1          621973 |*                                  627065.00000
#                  3          639174 |***                                646948.33333
#                  4          656375 |****                               663620.50000
#                  1          673576 |*                                  688435.00000
#                  5          690777 |******                             701670.00000
#                  1          707978 |*                                  711333.00000
#                  1          725179 |*                                  727946.00000
#                  4          742380 |****                               755921.25000
#                  4          759581 |****                               763671.75000
#                  3          776782 |***                                779956.66667
#                  2          793983 |**                                 799835.00000
#                  2          811184 |**                                 825121.50000
#                  0          828385 |                                              -
#                  2          845586 |**                                 853496.50000
#                  4          862787 |****                               870566.75000
#                  1          879988 |*                                  893278.00000
#
#                  8           > 95% |*********                          949492.37500
#
#        mean of 95%    593852.49669
#          95th %ile          897181
#
# WARNINGS
#     Actual benchmark run time only accounts for 23.8% of elapsed time.
#
# Usage: exit
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exit')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-e] (uses _exit() rather than exit())notes: measures exit()
    prc thr      nsecs/call      samples   errors cnt/samp     func
exp   1   1             213        17622        0     4582      exp
# bin/../bin-riscv64/exp -N exp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       133                        189
#                        max     35809                        240
#                       mean       216.79750                  214.69356
#                     median       213                        213*
#                     stddev       263.01453                    8.45748
#             standard error         1.93508                    0.06371
#       99% confidence level         4.98477                    0.16412
#                       skew       134.17077                    0.62446
#                   kurtosis     18150.75901                   -0.24296
#           time correlation         0.00314                    0.00162
#
#               elapsed time        20.00386
#                   run time        18.25158
#          getnsecs overhead      1416
#
#          number of samples     18474
#         number of outliers       852
#    number of final samples     17622
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             189 |*                                     189.00000
#                  0             191 |                                              -
#                  0             193 |                                              -
#                  0             195 |                                              -
#                  6             197 |*                                     197.83333
#                124             199 |*                                     199.59677
#                432             201 |******                                201.63194
#                819             203 |***********                           203.56410
#               1399             205 |********************                  205.56112
#               2084             207 |******************************        207.54367
#               2186             209 |********************************      209.45517
#               1419             211 |********************                  211.46159
#               1136             213 |****************                      213.49472
#               1137             215 |****************                      215.47054
#               1311             217 |*******************                   217.54462
#               1322             219 |*******************                   219.50000
#               1084             221 |***************                       221.48063
#                748             223 |**********                            223.45187
#                544             225 |*******                               225.47059
#                462             227 |******                                227.46970
#                459             229 |******                                229.48802
#                 67             231 |*                                     231.00000
#
#                882           > 95% |************                          234.30839
#
#        mean of 95%       213.66010
#          95th %ile             231
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp10   1   1             600        18502        0     1567    exp10
# bin/../bin-riscv64/exp -N exp10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       574                        574
#                        max     48459                        667
#                       mean       616.60806                  607.34531
#                     median       601                        600*
#                     stddev       352.97889                   19.94634
#             standard error         2.55306                    0.14664
#       99% confidence level         6.57669                    0.37775
#                       skew       130.40512                    1.13229
#                   kurtosis     17654.25209                    0.15475
#           time correlation         0.00595                    0.00339
#
#               elapsed time        20.00432
#                   run time        18.37865
#          getnsecs overhead      1416
#
#          number of samples     19115
#         number of outliers       613
#    number of final samples     18502
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10             574 |*                                     575.30000
#                 50             577 |*                                     578.52000
#                225             580 |***                                   581.29333
#                503             583 |*******                               584.15706
#                844             586 |************                          587.14218
#               1481             589 |*********************                 590.09858
#               2018             592 |****************************          593.03122
#               2133             595 |******************************        595.99531
#               2244             598 |********************************      599.00579
#               1761             601 |*************************             601.95116
#               1251             604 |*****************                     604.92566
#                844             607 |************                          607.86019
#                562             610 |********                              610.85231
#                256             613 |***                                   613.81250
#                104             616 |*                                     616.82692
#                 75             619 |*                                     619.97333
#                 99             622 |*                                     623.17172
#                195             625 |**                                    626.09744
#                287             628 |****                                  629.04181
#                374             631 |*****                                 632.05615
#                455             634 |******                                634.99121
#                530             637 |*******                               638.00755
#                492             640 |*******                               640.96138
#                442             643 |******                                643.95249
#                341             646 |****                                  646.87390
#
#                926           > 95% |*************                         655.40281
#
#        mean of 95%       604.81338
#          95th %ile             648
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
exp10f   1   1             204         6830        0     3435   exp10f
# bin/../bin-riscv64/exp -N exp10f -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp10f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       197                        197
#                        max    110800                        225
#                       mean       235.75931                  206.31537
#                     median       205                        204*
#                     stddev      1307.94965                    6.10748
#             standard error        15.21798                    0.07390
#       99% confidence level        39.20151                    0.19037
#                       skew        82.19677                    1.38080
#                   kurtosis      6916.21110                    1.04119
#           time correlation         0.02581                    0.00275
#
#               elapsed time        20.00450
#                   run time         5.32456
#          getnsecs overhead      1416
#
#          number of samples      7387
#         number of outliers       557
#    number of final samples      6830
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             197 |*                                             -
#                 18             198 |*                                             -
#                122             199 |*****                                         -
#                425             200 |*****************                             -
#                624             201 |*************************                     -
#                749             202 |******************************                -
#                774             203 |********************************              -
#                768             204 |*******************************               -
#                692             205 |****************************                  -
#                457             206 |******************                            -
#                378             207 |***************                               -
#                313             208 |************                                  -
#                208             209 |********                                      -
#                140             210 |*****                                         -
#                 61             211 |**                                            -
#                 30             212 |*                                             -
#                 36             213 |*                                             -
#                 49             214 |**                                            -
#                 75             215 |***                                           -
#                113             216 |****                                          -
#                114             217 |****                                          -
#                132             218 |*****                                         -
#                123             219 |*****                                         -
#                 85             220 |***                                           -
#
#                342           > 95% |**************                        222.48246
#
#        mean of 95%       205.46316
#          95th %ile             220
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.6% of elapsed time.
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
exp10l   1   1          217982         5208        0       10   exp10l
# bin/../bin-riscv64/exp -N exp10l -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp10l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    207532                     207532
#                        max   1221988                     230392
#                       mean    219677.56502               217635.55799
#                     median    218262                     217982*
#                     stddev     24479.34542                 4301.50427
#             standard error       334.61218                   59.60530
#       99% confidence level       861.96098                  153.54325
#                       skew        22.94030                    0.11886
#                   kurtosis       704.81726                   -0.69597
#           time correlation         4.87368                    2.83255
#
#               elapsed time        20.00711
#                   run time        11.76472
#          getnsecs overhead      1416
#
#          number of samples      5352
#         number of outliers       144
#    number of final samples      5208
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          207532 |*                                  207737.00000
#                 11          208060 |*                                  208392.90909
#                 15          208588 |*                                  208805.33333
#                 35          209116 |****                               209399.14286
#                 38          209644 |****                               209932.26316
#                 71          210172 |********                           210439.88732
#                121          210700 |**************                     210993.65289
#                146          211228 |*****************                  211507.61644
#                182          211756 |*********************              212037.32967
#                194          212284 |**********************             212543.59794
#                203          212812 |************************           213065.79310
#                231          213340 |***************************        213604.46753
#                254          213868 |******************************     214130.14961
#                200          214396 |***********************            214650.25000
#                189          214924 |**********************             215180.99471
#                173          215452 |********************               215720.03468
#                122          215980 |**************                     216239.21311
#                116          216508 |*************                      216767.77586
#                151          217036 |*****************                  217285.90728
#                172          217564 |********************               217822.23256
#                199          218092 |***********************            218374.51256
#                244          218620 |****************************       218891.22131
#                250          219148 |*****************************      219427.28000
#                266          219676 |*******************************    219948.24060
#                269          220204 |*******************************    220462.22305
#                270          220732 |********************************   220988.81481
#                208          221260 |************************           221496.23077
#                158          221788 |******************                 222054.02532
#                144          222316 |*****************                  222598.25000
#                120          222844 |**************                     223060.33333
#                105          223372 |************                       223637.33333
#                 86          223900 |**********                         224153.62791
#
#                261           > 95% |******************************     226310.62069
#
#        mean of 95%    217177.86820
#          95th %ile          224422
#
# WARNINGS
#     Actual benchmark run time only accounts for 58.8% of elapsed time.
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
exp2   1   1             205        20365        0     4012     exp2
# bin/../bin-riscv64/exp -N exp2 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp2 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       190                        190
#                        max    135241                        230
#                       mean       220.11123                  206.71166
#                     median       205                        205*
#                     stddev       950.94547                    7.74183
#             standard error         6.52282                    0.05425
#       99% confidence level        16.80278                    0.13975
#                       skew       136.27875                    0.91144
#                   kurtosis     19171.79755                    0.26907
#           time correlation         0.00485                    0.00125
#
#               elapsed time        20.00483
#                   run time        17.84208
#          getnsecs overhead      1416
#
#          number of samples     21254
#         number of outliers       889
#    number of final samples     20365
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8             190 |*                                     190.75000
#                  8             192 |*                                     192.75000
#                 80             194 |*                                     194.92500
#               1624             196 |******************                    196.72783
#               1687             198 |*******************                   198.41316
#               2120             200 |************************              200.46840
#               2491             202 |****************************          202.56443
#               2814             204 |********************************      204.43532
#               2110             206 |***********************               206.49479
#               1430             208 |****************                      208.43706
#               1573             210 |*****************                     210.50032
#                829             212 |*********                             212.41134
#                651             214 |*******                               214.44393
#                508             216 |*****                                 216.48819
#                526             218 |*****                                 218.51331
#                539             220 |******                                220.46939
#                348             222 |***                                   222.38506
#
#               1019           > 95% |***********                           225.94210
#
#        mean of 95%       205.69875
#          95th %ile             223
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp2f   1   1             120        20899        0     6641    exp2f
# bin/../bin-riscv64/exp -N exp2f -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp2f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       115                        115
#                        max     96950                        134
#                       mean       131.11083                  121.86478
#                     median       120                        120*
#                     stddev       667.35689                    3.95113
#             standard error         4.51805                    0.02733
#       99% confidence level        11.63849                    0.07041
#                       skew       140.85468                    1.32554
#                   kurtosis     20326.43568                    0.59431
#           time correlation         0.00303                    0.00057
#
#               elapsed time        20.00395
#                   run time        17.88535
#          getnsecs overhead      1416
#
#          number of samples     21818
#         number of outliers       919
#    number of final samples     20899
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             115 |*                                             -
#                 37             116 |*                                             -
#                341             117 |**                                            -
#               1540             118 |*********                                     -
#               4221             119 |***************************                   -
#               4940             120 |********************************              -
#               3188             121 |********************                          -
#               1638             122 |**********                                    -
#                573             123 |***                                           -
#                172             124 |*                                             -
#                 91             125 |*                                             -
#                229             126 |*                                             -
#                579             127 |***                                           -
#                932             128 |******                                        -
#                835             129 |*****                                         -
#                537             130 |***                                           -
#
#               1045           > 95% |******                                131.82297
#
#        mean of 95%       121.34064
#          95th %ile             130
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
exp2l   1   1            9254        17345        0      107    exp2l
# bin/../bin-riscv64/exp -N exp2l -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f exp2l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4539                       8483
#                        max    330395                      10274
#                       mean      9500.05944                 9377.55474
#                     median      9257                       9254*
#                     stddev      2822.05510                  299.79776
#             standard error        21.10187                    2.27636
#       99% confidence level        54.35843                    5.86391
#                       skew        89.74101                    0.96533
#                   kurtosis      9694.14182                    0.00862
#           time correlation         0.09484                    0.05429
#
#               elapsed time        20.00341
#                   run time        18.21467
#          getnsecs overhead      1416
#
#          number of samples     17885
#         number of outliers       540
#    number of final samples     17345
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            8483 |*                                    8483.00000
#                  6            8530 |*                                    8567.66667
#                 28            8577 |*                                    8591.85714
#                 26            8624 |*                                    8636.26923
#                 10            8671 |*                                    8695.00000
#                 10            8718 |*                                    8742.70000
#                 16            8765 |*                                    8790.37500
#                 58            8812 |*                                    8834.01724
#                 76            8859 |*                                    8880.53947
#                 69            8906 |*                                    8932.10145
#                 71            8953 |*                                    8973.66197
#                 67            9000 |*                                    9029.29851
#                363            9047 |****                                 9072.55923
#               1801            9094 |*******************                  9120.80122
#               1938            9141 |*********************                9162.09907
#               2885            9188 |********************************     9211.78128
#               2333            9235 |*************************            9253.80969
#               1241            9282 |*************                        9303.09186
#               1111            9329 |************                         9351.39244
#                496            9376 |*****                                9395.06855
#                270            9423 |**                                   9443.47037
#                142            9470 |*                                    9489.25352
#                 73            9517 |*                                    9539.49315
#                 54            9564 |*                                    9587.70370
#                143            9611 |*                                    9638.58042
#                304            9658 |***                                  9681.45066
#                448            9705 |****                                 9729.28795
#                616            9752 |******                               9775.06331
#                634            9799 |*******                              9820.95899
#                538            9846 |*****                                9867.57435
#                440            9893 |****                                 9916.15455
#                209            9940 |**                                   9953.14833
#
#                868           > 95% |*********                           10070.00691
#
#        mean of 95%      9341.07671
#          95th %ile            9966
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
expf   1   1             144        20706        0     5478     expf
# bin/../bin-riscv64/exp -N expf -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f expf 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       137                        137
#                        max    121171                        159
#                       mean       158.26387                  145.70129
#                     median       144                        144*
#                     stddev       841.41347                    4.47118
#             standard error         5.69251                    0.03107
#       99% confidence level        14.66390                    0.08004
#                       skew       137.79783                    1.37033
#                   kurtosis     19633.96658                    0.86705
#           time correlation         0.00397                    0.00065
#
#               elapsed time        20.00351
#                   run time        17.76571
#          getnsecs overhead      1416
#
#          number of samples     21848
#         number of outliers      1142
#    number of final samples     20706
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             137 |*                                             -
#                 21             138 |*                                             -
#                 82             139 |*                                             -
#                447             140 |***                                           -
#               1107             141 |********                                      -
#               1742             142 |*************                                 -
#               3864             143 |****************************                  -
#               4284             144 |********************************              -
#               2670             145 |*******************                           -
#               1670             146 |************                                  -
#                853             147 |******                                        -
#                272             148 |**                                            -
#                114             149 |*                                             -
#                 76             150 |*                                             -
#                121             151 |*                                             -
#                320             152 |**                                            -
#                569             153 |****                                          -
#                699             154 |*****                                         -
#                639             155 |****                                          -
#                118             156 |*                                             -
#
#               1036           > 95% |*******                               157.11583
#
#        mean of 95%       145.10010
#          95th %ile             156
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
expl   1   1            8770        18292        0      107     expl
# bin/../bin-riscv64/exp -N expl -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f expl 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8492                       8492
#                        max    436317                       9758
#                       mean      9058.03384                 8883.74929
#                     median      8777                       8770*
#                     stddev      3424.57216                  291.25776
#             standard error        24.86475                    2.15351
#       99% confidence level        64.05160                    5.54744
#                       skew       103.42716                    1.21822
#                   kurtosis     12778.56156                    0.16658
#           time correlation         0.09833                    0.04896
#
#               elapsed time        20.00388
#                   run time        18.29132
#          getnsecs overhead      1416
#
#          number of samples     18969
#         number of outliers       677
#    number of final samples     18292
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19            8492 |*                                    8510.00000
#                110            8524 |*                                    8542.95455
#                529            8556 |******                               8572.99433
#                543            8588 |******                               8603.56169
#                953            8620 |************                         8638.48583
#               2504            8652 |********************************     8667.58826
#               2174            8684 |***************************          8698.96504
#               1374            8716 |*****************                    8731.47817
#               1346            8748 |*****************                    8763.86553
#               1586            8780 |********************                 8795.25851
#               1128            8812 |**************                       8825.85550
#                659            8844 |********                             8858.53263
#                483            8876 |******                               8891.41822
#                373            8908 |****                                 8922.23056
#                196            8940 |**                                   8952.27551
#                 94            8972 |*                                    8985.61702
#                 41            9004 |*                                    9017.00000
#                 36            9036 |*                                    9049.69444
#                 27            9068 |*                                    9082.29630
#                 47            9100 |*                                    9118.70213
#                 74            9132 |*                                    9147.75676
#                106            9164 |*                                    9179.90566
#                193            9196 |**                                   9214.24870
#                313            9228 |****                                 9245.08626
#                351            9260 |****                                 9275.52422
#                400            9292 |*****                                9307.02250
#                389            9324 |****                                 9339.32391
#                356            9356 |****                                 9371.04213
#                388            9388 |****                                 9403.50000
#                304            9420 |***                                  9435.06250
#                228            9452 |**                                   9465.99123
#                 53            9484 |*                                    9486.92453
#
#                915           > 95% |***********                          9585.91148
#
#        mean of 95%      8846.77637
#          95th %ile            9492
#
# Usage: exp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'exp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <exp func> (exp[fl],exp2[fl],exp10[fl], default exp)]
# note: measures exp[2|10][fl]() family of functions
             prc thr      nsecs/call      samples   errors cnt/samp 
fcntl_ndelay   1   1            2232        18674        0      400 
# bin/../bin-riscv64/fcntl_ndelay -N fcntl_ndelay -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2130                       2130
#                        max    137949                       2724
#                       mean      2366.42414                 2300.02040
#                     median      2234                       2232*
#                     stddev      1158.35513                  141.20737
#             standard error         8.29856                    1.03333
#       99% confidence level        21.37709                    2.66186
#                       skew        90.61048                    1.38026
#                   kurtosis     10034.41293                    0.41812
#           time correlation         0.03936                    0.02190
#
#               elapsed time        20.00575
#                   run time        18.22237
#          getnsecs overhead      1416
#
#          number of samples     19484
#         number of outliers       810
#    number of final samples     18674
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            2130 |*                                    2130.00000
#                  5            2145 |*                                    2154.20000
#                117            2160 |*                                    2170.07692
#                787            2175 |*******                              2183.47395
#               2205            2190 |********************                 2197.90703
#               3526            2205 |********************************     2212.27198
#               3147            2220 |****************************         2226.53352
#               2100            2235 |*******************                  2241.36619
#               1202            2250 |**********                           2255.91597
#                594            2265 |*****                                2271.27946
#                234            2280 |**                                   2285.91026
#                142            2295 |*                                    2301.42958
#                 83            2310 |*                                    2316.56627
#                 57            2325 |*                                    2330.85965
#                 51            2340 |*                                    2345.90196
#                 31            2355 |*                                    2362.48387
#                 44            2370 |*                                    2376.79545
#                 60            2385 |*                                    2392.51667
#                 67            2400 |*                                    2406.29851
#                 64            2415 |*                                    2422.03125
#                 69            2430 |*                                    2437.84058
#                154            2445 |*                                    2452.90909
#                268            2460 |**                                   2467.96269
#                390            2475 |***                                  2482.13333
#                439            2490 |***                                  2497.04100
#                373            2505 |***                                  2512.17962
#                358            2520 |***                                  2526.51676
#                295            2535 |**                                   2540.92203
#                250            2550 |**                                   2556.67200
#                261            2565 |**                                   2571.60920
#                216            2580 |*                                    2587.25000
#                150            2595 |*                                    2600.49333
#
#                934           > 95% |********                             2653.03854
#
#        mean of 95%      2281.43422
#          95th %ile            2606
#
# Usage: fcntl_ndelay
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fcntl_ndelay')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures F_GETFL/F_SETFL O_NDELAY on socket
          prc thr      nsecs/call      samples   errors cnt/samp 
fcntl_tmp   1   1            5765         7316        0      148 
# bin/../bin-riscv64/fcntl -N fcntl_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5484                       5484
#                        max    208847                       6919
#                       mean      6146.94989                 5911.44396
#                     median      5770                       5765*
#                     stddev      2991.20165                  336.27232
#             standard error        34.34988                    3.93146
#       99% confidence level        88.48528                   10.12745
#                       skew        47.10541                    1.32074
#                   kurtosis      2954.66050                    0.26795
#           time correlation         0.30594                    0.13630
#
#               elapsed time        20.00436
#                   run time         6.77817
#          getnsecs overhead      1416
#
#          number of samples      7583
#         number of outliers       267
#    number of final samples      7316
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            5484 |*                                    5500.25000
#                 22            5520 |*                                    5540.00000
#                 92            5556 |***                                  5577.66304
#                321            5592 |**********                           5612.78816
#                602            5628 |*******************                  5647.12458
#                924            5664 |******************************       5682.16667
#                965            5700 |********************************     5717.18342
#                892            5736 |*****************************        5753.30830
#                694            5772 |***********************              5788.18588
#                514            5808 |*****************                    5824.90078
#                317            5844 |**********                           5861.64984
#                161            5880 |*****                                5894.85714
#                 74            5916 |**                                   5931.70270
#                 38            5952 |*                                    5967.47368
#                 29            5988 |*                                    6003.62069
#                 21            6024 |*                                    6041.80952
#                 15            6060 |*                                    6078.46667
#                 14            6096 |*                                    6117.50000
#                 13            6132 |*                                    6152.76923
#                 15            6168 |*                                    6187.46667
#                 22            6204 |*                                    6224.72727
#                 35            6240 |*                                    6259.37143
#                 44            6276 |*                                    6295.22727
#                 56            6312 |*                                    6330.32143
#                 93            6348 |***                                  6367.04301
#                124            6384 |****                                 6403.57258
#                179            6420 |*****                                6437.87709
#                194            6456 |******                               6472.55155
#                197            6492 |******                               6509.75127
#                152            6528 |*****                                6546.13816
#                107            6564 |***                                  6580.65421
#                 20            6600 |*                                    6602.85000
#
#                366           > 95% |************                         6722.88798
#
#        mean of 95%      5868.71180
#          95th %ile            6607
#
# WARNINGS
#     Actual benchmark run time only accounts for 33.9% of elapsed time.
#
# Usage: fcntl
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fcntl')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-fcntl (default /dev/null)]
# notes: measures fcntl()
          prc thr      nsecs/call      samples   errors cnt/samp 
file_lock   1   1          132984        14427        0        5 
# bin/../bin-riscv64/file_lock -N file_lock -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    129159                     129159
#                        max   3019428                     138200
#                       mean    152233.12700               133173.36050
#                     median    133984                     132984*
#                     stddev     62325.87939                 1680.13546
#             standard error       436.35774                   13.98802
#       99% confidence level      1124.05755                   36.03314
#                       skew        11.82941                    0.52717
#                   kurtosis       347.76863                   -0.14010
#           time correlation         5.06398                    0.39346
#
#               elapsed time        20.00609
#                   run time        17.75321
#          getnsecs overhead      1416
#
#          number of samples     20401
#         number of outliers      5974
#    number of final samples     14427
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          129159 |*                                  129240.40000
#                 11          129383 |*                                  129500.18182
#                 24          129607 |*                                  129742.00000
#                 63          129831 |**                                 129950.93651
#                111          130055 |****                               130189.62162
#                148          130279 |*****                              130405.38514
#                270          130503 |**********                         130619.50000
#                394          130727 |***************                    130847.13706
#                470          130951 |******************                 131068.55106
#                519          131175 |********************               131284.10597
#                687          131399 |***************************        131507.30568
#                699          131623 |***************************        131733.19456
#                801          131847 |********************************   131956.39700
#                762          132071 |******************************     132187.21654
#                763          132295 |******************************     132416.38925
#                671          132519 |**************************         132628.49627
#                734          132743 |*****************************      132847.74251
#                748          132967 |*****************************      133077.68316
#                702          133191 |****************************       133301.03419
#                739          133415 |*****************************      133530.01218
#                575          133639 |**********************             133752.18435
#                545          133863 |*********************              133971.59083
#                527          134087 |*********************              134197.03036
#                497          134311 |*******************                134412.90744
#                430          134535 |*****************                  134653.12326
#                362          134759 |**************                     134864.86740
#                344          134983 |*************                      135092.33430
#                270          135207 |**********                         135320.41481
#                226          135431 |*********                          135540.61062
#                253          135655 |**********                         135757.84190
#                208          135879 |********                           135984.78846
#                147          136103 |*****                              136200.99320
#
#                722           > 95% |****************************       137064.81440
#
#        mean of 95%    132968.35286
#          95th %ile          136300
#
# Usage: file_lock
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'file_lock')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
# 
         prc thr      nsecs/call      samples   errors cnt/samp 
fork_100   1   1         2346997          388        0       15 
# bin/../bin-riscv64/fork -N fork_100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 15 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1796431                    1796431
#                        max   4859991                    3040725
#                       mean   2420432.57531              2374131.11856
#                     median   2357804                    2346997*
#                     stddev    329433.84827               225857.65443
#             standard error     16369.69953                11466.18516
#       99% confidence level     42168.34599                29536.89298
#                       skew         2.66759                    0.87608
#                   kurtosis        12.64070                    0.78050
#           time correlation      2327.65020                 1892.76968
#
#               elapsed time        20.03586
#                   run time        14.70470
#          getnsecs overhead      1416
#
#          number of samples       405
#         number of outliers        17
#    number of final samples       388
#             ops per sample        15.00000 (-B 15)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1796431 |*                                 1796431.00000
#                  0         1831295 |                                              -
#                  0         1866159 |                                              -
#                  0         1901023 |                                              -
#                  0         1935887 |                                              -
#                  7         1970751 |******                            1987336.42857
#                  7         2005615 |******                            2020024.71429
#                  8         2040479 |*******                           2058699.62500
#                  9         2075343 |********                          2092780.77778
#                 12         2110207 |***********                       2125055.16667
#                 25         2145071 |************************          2161937.56000
#                 23         2179935 |**********************            2197527.60870
#                 23         2214799 |**********************            2232255.65217
#                 28         2249663 |***************************       2263855.35714
#                 26         2284527 |*************************         2299052.80769
#                 33         2319391 |********************************  2337108.27273
#                 31         2354255 |******************************    2374478.00000
#                 30         2389119 |*****************************     2405054.83333
#                 26         2423983 |*************************         2443134.23077
#                 15         2458847 |**************                    2477309.53333
#                 12         2493711 |***********                       2507206.91667
#                  9         2528575 |********                          2551294.33333
#                  8         2563439 |*******                           2584027.50000
#                 10         2598303 |*********                         2614409.80000
#                  4         2633167 |***                               2646953.25000
#                  6         2668031 |*****                             2689087.50000
#                  2         2702895 |*                                 2713578.00000
#                  1         2737759 |*                                 2768306.00000
#                  8         2772623 |*******                           2791574.87500
#                  1         2807487 |*                                 2815040.00000
#                  2         2842351 |*                                 2857301.50000
#                  1         2877215 |*                                 2893902.00000
#
#                 20           > 95% |*******************               2965414.45000
#
#        mean of 95%   2341996.15489
#          95th %ile         2912055
#
# WARNINGS
#     Actual benchmark run time only accounts for 73.4% of elapsed time.
#
# Usage: fork
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'fork')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures fork()
           prc thr      nsecs/call      samples   errors cnt/samp 
getcontext   1   1           32804         5228        0       29 
# bin/../bin-riscv64/getcontext -N getcontext -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     31717                      31717
#                        max    169392                      39560
#                       mean     34726.70285                33720.62452
#                     median     32847                      32804*
#                     stddev      7720.46213                 1951.89770
#             standard error       104.62714                   26.99537
#       99% confidence level       269.51951                   69.54007
#                       skew         8.98464                    1.22360
#                   kurtosis        94.12781                    0.06598
#           time correlation         2.08912                    1.13137
#
#               elapsed time        20.00951
#                   run time         5.48295
#          getnsecs overhead      1416
#
#          number of samples      5445
#         number of outliers       217
#    number of final samples      5228
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 16           31717 |*                                   31830.81250
#                204           31905 |*******                             32026.39706
#                876           32093 |********************************    32191.24315
#                678           32281 |************************            32366.45575
#                455           32469 |****************                    32551.84396
#                492           32657 |*****************                   32756.06098
#                369           32845 |*************                       32928.65583
#                223           33033 |********                            33120.12556
#                220           33221 |********                            33318.06818
#                182           33409 |******                              33490.53297
#                 65           33597 |**                                  33683.87692
#                 62           33785 |**                                  33877.41935
#                 43           33973 |*                                   34062.16279
#                 20           34161 |*                                   34255.30000
#                 13           34349 |*                                   34434.76923
#                  4           34537 |*                                   34590.25000
#                 11           34725 |*                                   34839.45455
#                 18           34913 |*                                   35014.88889
#                 28           35101 |*                                   35213.14286
#                 33           35289 |*                                   35384.96970
#                 39           35477 |*                                   35578.28205
#                 67           35665 |**                                  35764.04478
#                 76           35853 |**                                  35951.55263
#                 91           36041 |***                                 36132.10989
#                102           36229 |***                                 36323.79412
#                 79           36417 |**                                  36517.06329
#                 91           36605 |***                                 36702.58242
#                 79           36793 |**                                  36880.53165
#                 97           36981 |***                                 37075.45361
#                 87           37169 |***                                 37267.74713
#                 76           37357 |**                                  37440.13158
#                 70           37545 |**                                  37626.38571
#
#                262           > 95% |*********                           38388.51908
#
#        mean of 95%     33474.35219
#          95th %ile           37730
#
# WARNINGS
#     Actual benchmark run time only accounts for 27.4% of elapsed time.
#
# Usage: getcontext
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getcontext')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getcontext()
       prc thr      nsecs/call      samples   errors cnt/samp 
getenv   1   1             359        20258        0     2359 
# bin/../bin-riscv64/getenv -N getenv -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       317                        317
#                        max     80560                        462
#                       mean       376.78335                  363.51264
#                     median       364                        359*
#                     stddev       578.70864                   32.88811
#             standard error         4.01185                    0.23107
#       99% confidence level        10.33453                    0.59523
#                       skew       129.89091                    0.31687
#                   kurtosis     17779.86752                   -0.99980
#           time correlation         0.00888                    0.00551
#
#               elapsed time        20.00461
#                   run time        17.97968
#          getnsecs overhead      1416
#
#          number of samples     20808
#         number of outliers       550
#    number of final samples     20258
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                196             317 |**                                    319.63265
#               1657             321 |*****************                     322.50513
#               2974             325 |********************************      326.39173
#               1455             329 |***************                       330.29141
#                366             333 |***                                   333.96721
#                 53             337 |*                                     338.39623
#                371             341 |***                                   343.31806
#               1248             345 |*************                         346.63542
#               1108             349 |***********                           350.28971
#                554             353 |*****                                 354.20939
#                196             357 |**                                    358.32653
#                277             361 |**                                    362.67870
#                416             365 |****                                  366.67067
#                584             369 |******                                370.53938
#                423             373 |****                                  374.36879
#                455             377 |****                                  378.50110
#                675             381 |*******                               382.66074
#               1136             385 |************                          386.65317
#               1601             389 |*****************                     390.59900
#               1536             393 |****************                      394.30078
#                780             397 |********                              398.22179
#                316             401 |***                                   402.16456
#                200             405 |**                                    406.43500
#                209             409 |**                                    410.39234
#                239             413 |**                                    414.50628
#                220             417 |**                                    418.23182
#
#               1013           > 95% |**********                            431.07799
#
#        mean of 95%       359.95620
#          95th %ile             420
#
# Usage: getenv
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getenv')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s search-size (default = 100)]
# notes: measures time to search env for missing string
            prc thr      nsecs/call      samples   errors cnt/samp 
getpeername   1   1           39809        18336        0       22 
# bin/../bin-riscv64/getpeername -N getpeername -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     38471                      38471
#                        max    290999                      47580
#                       mean     41549.79831                40922.50082
#                     median     39839                      39809*
#                     stddev      6064.92997                 2222.42697
#             standard error        44.10421                   16.41252
#       99% confidence level       113.61244                   42.27864
#                       skew        12.98866                    1.38515
#                   kurtosis       277.52168                    0.31801
#           time correlation         0.50860                    0.34289
#
#               elapsed time        20.00429
#                   run time        17.90767
#          getnsecs overhead      1416
#
#          number of samples     18910
#         number of outliers       574
#    number of final samples     18336
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7           38471 |*                                   38594.28571
#                 13           38695 |*                                   38842.92308
#                 23           38919 |*                                   39049.69565
#                568           39143 |***                                 39303.41373
#               5595           39367 |********************************    39484.06756
#               3015           39591 |*****************                   39672.03184
#               2407           39815 |*************                       39928.49065
#               1283           40039 |*******                             40124.86906
#                516           40263 |**                                  40359.90310
#                243           40487 |*                                   40586.68724
#                188           40711 |*                                   40814.53723
#                 91           40935 |*                                   41035.23077
#                 52           41159 |*                                   41245.90385
#                 37           41383 |*                                   41496.67568
#                 27           41607 |*                                   41715.37037
#                 18           41831 |*                                   41944.00000
#                 19           42055 |*                                   42160.68421
#                 24           42279 |*                                   42382.41667
#                 19           42503 |*                                   42580.84211
#                 28           42727 |*                                   42862.42857
#                 76           42951 |*                                   43081.44737
#                142           43175 |*                                   43283.78169
#                242           43399 |*                                   43514.97107
#                246           43623 |*                                   43742.49187
#                274           43847 |*                                   43965.25912
#                337           44071 |*                                   44182.81306
#                330           44295 |*                                   44402.72424
#                408           44519 |**                                  44633.52451
#                371           44743 |**                                  44856.10782
#                355           44967 |**                                  45075.30423
#                282           45191 |*                                   45300.84397
#                183           45415 |*                                   45507.95082
#
#                917           > 95% |*****                               46349.93021
#
#        mean of 95%     40636.78104
#          95th %ile           45613
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: getpeername
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpeername')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getpeername()
       prc thr      nsecs/call      samples   errors cnt/samp   method
getpid   1   1            1772        18427        0      500     libc
# bin/../bin-riscv64/getpid -N getpid -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1683                       1683
#                        max    113195                       2141
#                       mean      1881.81227                 1820.63103
#                     median      1774                       1772*
#                     stddev       978.18017                  106.70550
#             standard error         6.98558                    0.78607
#       99% confidence level        17.99484                    2.02491
#                       skew        88.91738                    1.44906
#                   kurtosis      9401.45348                    0.68553
#           time correlation         0.03209                    0.01673
#
#               elapsed time        20.00493
#                   run time        18.24157
#          getnsecs overhead      1416
#
#          number of samples     19608
#         number of outliers      1181
#    number of final samples     18427
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            1683 |*                                    1683.00000
#                  2            1695 |*                                    1700.50000
#                 35            1707 |*                                    1715.48571
#                322            1719 |***                                  1726.46584
#               1534            1731 |**************                       1737.54368
#               2776            1743 |**************************           1748.80331
#               3303            1755 |********************************     1760.53436
#               2649            1767 |*************************            1772.11325
#               1788            1779 |*****************                    1783.89206
#                905            1791 |********                             1795.78453
#                463            1803 |****                                 1807.77970
#                196            1815 |*                                    1819.61735
#                118            1827 |*                                    1831.83898
#                 89            1839 |*                                    1843.29213
#                 65            1851 |*                                    1856.04615
#                 60            1863 |*                                    1868.78333
#                 50            1875 |*                                    1880.28000
#                 56            1887 |*                                    1892.19643
#                 53            1899 |*                                    1904.00000
#                 57            1911 |*                                    1916.52632
#                 84            1923 |*                                    1928.91667
#                171            1935 |*                                    1940.89474
#                304            1947 |**                                   1953.02961
#                416            1959 |****                                 1964.47356
#                388            1971 |***                                  1976.36082
#                384            1983 |***                                  1988.80729
#                332            1995 |***                                  2000.83434
#                265            2007 |**                                   2012.24906
#                263            2019 |**                                   2024.10646
#                164            2031 |*                                    2036.77439
#                175            2043 |*                                    2048.26857
#                 37            2055 |*                                    2055.78378
#
#                922           > 95% |********                             2096.45987
#
#        mean of 95%      1806.10294
#          95th %ile            2057
#
# Usage: getpid
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpid')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (skip libc making system call directly)
# note: measures getpid()
         prc thr      nsecs/call      samples   errors cnt/samp   method
getpid_s   1   1            2274         5840        0      367  syscall
# bin/../bin-riscv64/getpid -N getpid_s -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2181                       2181
#                        max    121995                       2738
#                       mean      2454.59866                 2334.78699
#                     median      2277                       2274*
#                     stddev      1713.04962                  134.30201
#             standard error        21.87605                    1.75742
#       99% confidence level        56.35270                    4.52712
#                       skew        56.91965                    1.41949
#                   kurtosis      3884.97255                    0.48942
#           time correlation         0.17246                    0.06636
#
#               elapsed time        20.00460
#                   run time         5.35910
#          getnsecs overhead      1416
#
#          number of samples      6132
#         number of outliers       292
#    number of final samples      5840
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7            2181 |*                                    2185.28571
#                 38            2195 |*                                    2203.28947
#                168            2209 |*****                                2216.86310
#                404            2223 |*************                        2229.83911
#                703            2237 |***********************              2243.98009
#                951            2251 |********************************     2257.58149
#                860            2265 |****************************         2271.04884
#                595            2279 |********************                 2284.80672
#                403            2293 |*************                        2298.82134
#                219            2307 |*******                              2312.48402
#                 98            2321 |***                                  2326.97959
#                 54            2335 |*                                    2340.64815
#                 43            2349 |*                                    2354.79070
#                 26            2363 |*                                    2370.23077
#                 16            2377 |*                                    2383.43750
#                 16            2391 |*                                    2398.18750
#                  7            2405 |*                                    2412.57143
#                 13            2419 |*                                    2424.61538
#                 12            2433 |*                                    2439.91667
#                 10            2447 |*                                    2455.10000
#                 14            2461 |*                                    2469.50000
#                 15            2475 |*                                    2481.53333
#                 20            2489 |*                                    2497.10000
#                 44            2503 |*                                    2510.34091
#                 63            2517 |**                                   2523.68254
#                108            2531 |***                                  2537.93519
#                126            2545 |****                                 2551.42857
#                152            2559 |*****                                2565.16447
#                119            2573 |****                                 2579.31092
#                 96            2587 |***                                  2592.67708
#                104            2601 |***                                  2607.69231
#                 44            2615 |*                                    2617.84091
#
#                292           > 95% |*********                            2664.36644
#
#        mean of 95%      2317.44070
#          95th %ile            2621
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.8% of elapsed time.
#
# Usage: getpid
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getpid')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s] (skip libc making system call directly)
# note: measures getpid()
          prc thr      nsecs/call      samples   errors cnt/samp 
getrusage   1   1           29868        15189        0       37 
# bin/../bin-riscv64/getrusage -N getrusage -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     28763                      28763
#                        max    275625                      35018
#                       mean     31350.35867                30626.27671
#                     median     29893                      29868*
#                     stddev      5764.68627                 1464.34927
#             standard error        45.76878                   11.88174
#       99% confidence level       117.90037                   30.60736
#                       skew        14.40507                    1.13212
#                   kurtosis       363.44778                   -0.15569
#           time correlation         0.52525                    0.29287
#
#               elapsed time        20.00515
#                   run time        18.49992
#          getnsecs overhead      1416
#
#          number of samples     15864
#         number of outliers       675
#    number of final samples     15189
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           28763 |*                                   28832.33333
#                  6           28912 |*                                   28955.00000
#                 44           29061 |*                                   29187.11364
#                598           29210 |********                            29306.96321
#               1588           29359 |*********************               29439.97607
#               2097           29508 |****************************        29581.76776
#               2321           29657 |********************************    29729.43128
#               1991           29806 |***************************         29874.61226
#               1131           29955 |***************                     30023.03714
#                525           30104 |*******                             30163.32571
#                188           30253 |**                                  30317.59043
#                128           30402 |*                                   30461.66406
#                100           30551 |*                                   30616.34000
#                 44           30700 |*                                   30769.38636
#                 45           30849 |*                                   30919.22222
#                 51           30998 |*                                   31065.35294
#                 36           31147 |*                                   31212.50000
#                 35           31296 |*                                   31372.08571
#                 55           31445 |*                                   31521.43636
#                 92           31594 |*                                   31677.23913
#                139           31743 |*                                   31823.43165
#                199           31892 |**                                  31973.33668
#                294           32041 |****                                32122.77211
#                376           32190 |*****                               32262.85904
#                402           32339 |*****                               32411.41045
#                392           32488 |*****                               32563.97194
#                373           32637 |*****                               32709.41287
#                320           32786 |****                                32857.11875
#                287           32935 |***                                 33007.60279
#                220           33084 |***                                 33153.68636
#                200           33233 |**                                  33300.80500
#                149           33382 |**                                  33450.55034
#
#                760           > 95% |**********                          34096.46974
#
#        mean of 95%     30443.49574
#          95th %ile           33510
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: getrusage
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getrusage')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getrusage(RUSAGE_SELF)
            prc thr      nsecs/call      samples   errors cnt/samp 
getsockname   1   1           46850         6355        0       18 
# bin/../bin-riscv64/getsockname -N getsockname -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     45105                      45105
#                        max    459803                      56131
#                       mean     49810.46506                48142.53092
#                     median     46900                      46850*
#                     stddev     13203.72344                 2689.80181
#             standard error       162.37905                   33.74135
#       99% confidence level       418.28843                   86.91773
#                       skew        12.47600                    1.36921
#                   kurtosis       243.38722                    0.37658
#           time correlation         2.58299                    1.23548
#
#               elapsed time        20.00428
#                   run time         5.86453
#          getnsecs overhead      1416
#
#          number of samples      6612
#         number of outliers       257
#    number of final samples      6355
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           45105 |*                                   45192.00000
#                  6           45383 |*                                   45468.33333
#                 77           45661 |*                                   45867.81818
#                715           45939 |*****************                   46113.50769
#               1318           46217 |********************************    46363.13126
#                884           46495 |*********************               46613.84842
#                656           46773 |***************                     46910.09451
#                505           47051 |************                        47172.68713
#                280           47329 |******                              47460.52143
#                158           47607 |***                                 47747.57595
#                111           47885 |**                                  48012.74775
#                 49           48163 |*                                   48285.10204
#                 13           48441 |*                                   48567.92308
#                 23           48719 |*                                   48862.26087
#                 59           48997 |*                                   49143.37288
#                 49           49275 |*                                   49422.75510
#                 35           49553 |*                                   49670.02857
#                 26           49831 |*                                   49928.30769
#                 24           50109 |*                                   50253.95833
#                 25           50387 |*                                   50514.88000
#                 35           50665 |*                                   50810.14286
#                 43           50943 |*                                   51069.88372
#                 90           51221 |**                                  51365.80000
#                 80           51499 |*                                   51639.85000
#                 81           51777 |*                                   51918.71605
#                107           52055 |**                                  52202.91589
#                 92           52333 |**                                  52458.73913
#                103           52611 |**                                  52755.09709
#                127           52889 |***                                 53020.00787
#                106           53167 |**                                  53300.75472
#                 85           53445 |**                                  53572.94118
#                 73           53723 |*                                   53854.60274
#
#                318           > 95% |*******                             54756.78302
#
#        mean of 95%     47794.12407
#          95th %ile           53995
#
# WARNINGS
#     Actual benchmark run time only accounts for 29.3% of elapsed time.
#
# Usage: getsockname
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'getsockname')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures getsockname()()
             prc thr      nsecs/call      samples   errors cnt/samp 
gettimeofday   1   1            1425        18086        0      668 
# bin/../bin-riscv64/gettimeofday -N gettimeofday -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1405                       1405
#                        max     60137                       1597
#                       mean      1464.82669                 1447.94371
#                     median      1426                       1425*
#                     stddev       452.77347                   49.64661
#             standard error         3.31296                    0.36916
#       99% confidence level         8.53418                    0.95096
#                       skew       117.76147                    1.21692
#                   kurtosis     15126.14291                    0.01771
#           time correlation         0.01284                    0.00825
#
#               elapsed time        20.00457
#                   run time        18.20905
#          getnsecs overhead      1416
#
#          number of samples     18678
#         number of outliers       592
#    number of final samples     18086
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1654            1405 |*********                            1407.33615
#               5350            1410 |********************************     1412.83888
#               1119            1415 |******                               1416.49955
#                825            1420 |****                                 1421.80970
#               1452            1425 |********                             1427.23003
#               1237            1430 |*******                              1431.98626
#                644            1435 |***                                  1436.77484
#                376            1440 |**                                   1441.84043
#                302            1445 |*                                    1447.05298
#                274            1450 |*                                    1451.72993
#                165            1455 |*                                    1456.98788
#                127            1460 |*                                    1461.98425
#                 98            1465 |*                                    1466.60204
#                 55            1470 |*                                    1471.80000
#                 38            1475 |*                                    1477.02632
#                 41            1480 |*                                    1482.04878
#                 45            1485 |*                                    1486.88889
#                 53            1490 |*                                    1492.16981
#                 63            1495 |*                                    1496.90476
#                114            1500 |*                                    1502.42105
#                267            1505 |*                                    1507.47940
#                542            1510 |***                                  1512.26753
#                482            1515 |**                                   1516.92324
#                388            1520 |**                                   1522.04639
#                391            1525 |**                                   1527.01279
#                377            1530 |**                                   1531.96817
#                276            1535 |*                                    1536.89130
#                262            1540 |*                                    1542.06107
#                164            1545 |*                                    1546.64634
#
#                905           > 95% |*****                                1566.39448
#
#        mean of 95%      1441.70438
#          95th %ile            1549
#
# Usage: gettimeofday
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'gettimeofday')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures gettimeofday()
          prc thr      nsecs/call      samples   errors cnt/samp 
isatty_no   1   1            2051        19341        0      415 
# bin/../bin-riscv64/isatty -N isatty_no -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.1285/ifile 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1978                       1978
#                        max    458830                       2519
#                       mean      2203.46141                 2113.57200
#                     median      2053                       2051*
#                     stddev      3530.79318                  134.97681
#             standard error        24.76485                    0.97055
#       99% confidence level        63.79424                    2.50015
#                       skew       115.58495                    1.53445
#                   kurtosis     14280.98550                    0.91696
#           time correlation         0.04309                    0.01970
#
#               elapsed time        20.00503
#                   run time        18.14254
#          getnsecs overhead      1416
#
#          number of samples     20327
#         number of outliers       986
#    number of final samples     19341
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23            1978 |*                                    1988.21739
#                603            1993 |****                                 2002.74959
#               2015            2008 |***************                      2015.69330
#               3061            2023 |**********************               2030.72362
#               4259            2038 |********************************     2044.76215
#               2621            2053 |*******************                  2058.91873
#               1401            2068 |**********                           2074.58315
#                594            2083 |****                                 2088.59091
#                213            2098 |*                                    2103.85915
#                104            2113 |*                                    2118.95192
#                 73            2128 |*                                    2134.50685
#                 62            2143 |*                                    2150.25806
#                 51            2158 |*                                    2164.66667
#                 63            2173 |*                                    2180.41270
#                 67            2188 |*                                    2195.67164
#                 67            2203 |*                                    2209.88060
#                 94            2218 |*                                    2225.32979
#                 82            2233 |*                                    2240.62195
#                106            2248 |*                                    2256.33962
#                189            2263 |*                                    2270.30688
#                315            2278 |**                                   2285.51429
#                396            2293 |**                                   2300.26263
#                386            2308 |**                                   2314.74093
#                333            2323 |**                                   2329.93093
#                268            2338 |**                                   2345.27612
#                188            2353 |*                                    2359.66489
#                191            2368 |*                                    2374.87435
#                177            2383 |*                                    2389.70621
#                184            2398 |*                                    2404.91304
#                187            2413 |*                                    2419.45455
#
#                968           > 95% |*******                              2468.75413
#
#        mean of 95%      2094.85887
#          95th %ile            2427
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
                prc thr      nsecs/call      samples   errors cnt/samp 
isatty_no_badfd   1   1            1889        18994        0      448 
# bin/../bin-riscv64/isatty -N isatty_no_badfd -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -b 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1810                       1810
#                        max    382733                       2264
#                       mean      2036.33192                 1936.78061
#                     median      1892                       1889*
#                     stddev      2966.87889                  108.93832
#             standard error        20.85270                    0.79045
#       99% confidence level        53.71657                    2.03619
#                       skew       113.25052                    1.50816
#                   kurtosis     13884.26868                    0.80218
#           time correlation         0.04239                    0.01636
#
#               elapsed time        20.00558
#                   run time        17.99907
#          getnsecs overhead      1416
#
#          number of samples     20243
#         number of outliers      1249
#    number of final samples     18994
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5            1810 |*                                    1817.80000
#                 60            1822 |*                                    1829.68333
#                442            1834 |****                                 1841.13348
#               1519            1846 |***************                      1852.11718
#               2148            1858 |*********************                1863.70251
#               3179            1870 |*******************************      1875.79648
#               3197            1882 |********************************     1887.13669
#               2039            1894 |********************                 1899.00638
#               1244            1906 |************                         1910.93810
#                626            1918 |******                               1922.54792
#                242            1930 |**                                   1934.78926
#                113            1942 |*                                    1946.63717
#                 76            1954 |*                                    1959.30263
#                 71            1966 |*                                    1970.95775
#                 62            1978 |*                                    1983.61290
#                 54            1990 |*                                    1995.42593
#                 54            2002 |*                                    2008.48148
#                 50            2014 |*                                    2019.14000
#                 66            2026 |*                                    2031.78788
#                 75            2038 |*                                    2043.36000
#                108            2050 |*                                    2055.94444
#                131            2062 |*                                    2067.42748
#                188            2074 |*                                    2079.71809
#                197            2086 |*                                    2091.80711
#                280            2098 |**                                   2103.82857
#                325            2110 |***                                  2115.69231
#                375            2122 |***                                  2127.51467
#                346            2134 |***                                  2139.30925
#                298            2146 |**                                   2151.32215
#                282            2158 |**                                   2162.93972
#                192            2170 |*                                    2173.95833
#
#                950           > 95% |*********                            2216.01474
#
#        mean of 95%      1922.07920
#          95th %ile            2179
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
           prc thr      nsecs/call      samples   errors cnt/samp 
isatty_yes   1   1           25602        18372        0       35 
# bin/../bin-riscv64/isatty -N isatty_yes -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     24888                      24888
#                        max    910971                      30865
#                       mean     26838.98944                26369.05868
#                     median     25627                      25602*
#                     stddev      9592.25226                 1499.38724
#             standard error        69.71069                   11.06205
#       99% confidence level       179.57475                   28.49584
#                       skew        76.60544                    1.37133
#                   kurtosis      6813.37912                    0.25765
#           time correlation         0.35672                    0.22949
#
#               elapsed time        20.00400
#                   run time        17.87805
#          getnsecs overhead      1416
#
#          number of samples     18934
#         number of outliers       562
#    number of final samples     18372
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           24888 |*                                   24954.33333
#                  7           25033 |*                                   25092.71429
#                549           25178 |**                                  25293.65209
#               5902           25323 |********************************    25411.34260
#               2838           25468 |***************                     25519.10289
#               2699           25613 |**************                      25694.11078
#               1124           25758 |******                              25809.34964
#                363           25903 |*                                   25970.33609
#                209           26048 |*                                   26111.19139
#                102           26193 |*                                   26256.57843
#                 69           26338 |*                                   26408.88406
#                 51           26483 |*                                   26547.80392
#                 47           26628 |*                                   26690.14894
#                 45           26773 |*                                   26833.71111
#                 46           26918 |*                                   26993.47826
#                 39           27063 |*                                   27145.74359
#                 36           27208 |*                                   27286.27778
#                 25           27353 |*                                   27421.56000
#                 36           27498 |*                                   27567.83333
#                 35           27643 |*                                   27731.97143
#                 59           27788 |*                                   27857.16949
#                 81           27933 |*                                   28015.07407
#                153           28078 |*                                   28161.30719
#                228           28223 |*                                   28299.78070
#                347           28368 |*                                   28445.47839
#                407           28513 |**                                  28585.82064
#                446           28658 |**                                  28737.94619
#                421           28803 |**                                  28870.85748
#                374           28948 |**                                  29015.56417
#                312           29093 |*                                   29162.75962
#                225           29238 |*                                   29306.44889
#                175           29383 |*                                   29441.12571
#
#                919           > 95% |****                                30007.80305
#
#        mean of 95%     26177.45803
#          95th %ile           29505
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: isatty
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'isatty')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-isatty (default /dev/tty)]
#     [-b] (try to isatty an unopened fd)
# notes: measures isatty()
       prc thr      nsecs/call      samples   errors cnt/samp 
listen   1   1            3318        18887        0      268 
# bin/../bin-riscv64/listen -N listen -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      3175                       3175
#                        max    294286                       4042
#                       mean      3514.01734                 3419.21999
#                     median      3321                       3318*
#                     stddev      2238.29381                  207.49742
#             standard error        16.01029                    1.50984
#       99% confidence level        41.24251                    3.88935
#                       skew       113.90644                    1.32688
#                   kurtosis     14614.31131                    0.24500
#           time correlation         0.05772                    0.03215
#
#               elapsed time        20.00358
#                   run time        18.14118
#          getnsecs overhead      1416
#
#          number of samples     19545
#         number of outliers       658
#    number of final samples     18887
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1            3175 |*                                    3175.00000
#                 29            3197 |*                                    3212.51724
#                372            3219 |***                                  3232.78226
#               1261            3241 |***********                          3253.29659
#               2642            3263 |************************             3274.50454
#               3491            3285 |********************************     3295.38356
#               2714            3307 |************************             3316.56448
#               1685            3329 |***************                      3338.61543
#               1093            3351 |**********                           3360.79597
#                499            3373 |****                                 3382.03407
#                249            3395 |**                                   3404.92369
#                139            3417 |*                                    3427.16547
#                 88            3439 |*                                    3449.00000
#                 69            3461 |*                                    3470.76812
#                 64            3483 |*                                    3493.06250
#                 41            3505 |*                                    3516.63415
#                 41            3527 |*                                    3538.21951
#                 56            3549 |*                                    3561.67857
#                 67            3571 |*                                    3581.34328
#                 84            3593 |*                                    3604.39286
#                 73            3615 |*                                    3625.94521
#                129            3637 |*                                    3648.15504
#                211            3659 |*                                    3670.46445
#                318            3681 |**                                   3692.10063
#                447            3703 |****                                 3713.75168
#                456            3725 |****                                 3735.81360
#                414            3747 |***                                  3756.96860
#                393            3769 |***                                  3779.08906
#                321            3791 |**                                   3800.92212
#                314            3813 |**                                   3822.74841
#                181            3835 |*                                    3842.58564
#
#                945           > 95% |********                             3924.02751
#
#        mean of 95%      3392.63193
#          95th %ile            3851
#
# Usage: listen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'listen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures listen()()
            prc thr      nsecs/call      samples   errors cnt/samp 
localtime_r   1   1           14195         7383        0       65 
# bin/../bin-riscv64/localtime_r -N localtime_r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     13307                      13307
#                        max   1764913                      15767
#                       mean     14980.33973                14349.04781
#                     median     14208                      14195*
#                     stddev     20382.99503                  472.74611
#             standard error       232.81552                    5.50189
#       99% confidence level       599.73277                   14.17286
#                       skew        82.75469                    1.03035
#                   kurtosis      7087.22063                    0.06054
#           time correlation         0.67256                    0.20479
#
#               elapsed time        20.00436
#                   run time         7.28716
#          getnsecs overhead      1416
#
#          number of samples      7665
#         number of outliers       282
#    number of final samples      7383
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1           13307 |*                                   13307.00000
#                  1           13370 |*                                   13431.00000
#                  3           13433 |*                                   13473.00000
#                  9           13496 |*                                   13527.77778
#                 19           13559 |*                                   13591.36842
#                 52           13622 |**                                  13655.61538
#                101           13685 |****                                13721.42574
#                179           13748 |********                            13780.80447
#                281           13811 |************                        13843.71530
#                387           13874 |*****************                   13905.35917
#                516           13937 |***********************             13970.29457
#                649           14000 |*****************************       14030.12635
#                708           14063 |********************************    14094.57910
#                703           14126 |*******************************     14157.40541
#                615           14189 |***************************         14218.62114
#                528           14252 |***********************             14281.43939
#                391           14315 |*****************                   14343.79795
#                256           14378 |***********                         14405.73828
#                164           14441 |*******                             14470.00610
#                 93           14504 |****                                14529.89247
#                 56           14567 |**                                  14598.75000
#                 40           14630 |*                                   14661.80000
#                 33           14693 |*                                   14727.21212
#                 60           14756 |**                                  14787.00000
#                 99           14819 |****                                14854.12121
#                139           14882 |******                              14915.51079
#                160           14945 |*******                             14977.13125
#                168           15008 |*******                             15035.75000
#                180           15071 |********                            15100.17778
#                162           15134 |*******                             15165.76543
#                156           15197 |*******                             15228.07692
#                104           15260 |****                                15281.56731
#
#                370           > 95% |****************                    15467.62162
#
#        mean of 95%     14290.03280
#          95th %ile           15308
#
# WARNINGS
#     Actual benchmark run time only accounts for 36.4% of elapsed time.
#
# Usage: localtime_r
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'localtime_r')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures localtime_r()
    prc thr      nsecs/call      samples   errors cnt/samp     func
log   1   1             136        20381        0     5955      log
# bin/../bin-riscv64/log -N log -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       132                        132
#                        max     95487                        151
#                       mean       147.69039                  138.27447
#                     median       137                        136*
#                     stddev       660.19850                    4.19077
#             standard error         4.51155                    0.02935
#       99% confidence level        11.62175                    0.07562
#                       skew       141.17874                    1.48640
#                   kurtosis     20319.19971                    0.86305
#           time correlation         0.00313                    0.00060
#
#               elapsed time        20.00447
#                   run time        17.86564
#          getnsecs overhead      1416
#
#          number of samples     21414
#         number of outliers      1033
#    number of final samples     20381
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             132 |*                                             -
#                 20             133 |*                                             -
#                290             134 |*                                             -
#               3844             135 |*******************                           -
#               6226             136 |********************************              -
#               3109             137 |***************                               -
#               1939             138 |*********                                     -
#                821             139 |****                                          -
#                205             140 |*                                             -
#                 55             141 |*                                             -
#                 30             142 |*                                             -
#                101             143 |*                                             -
#                441             144 |**                                            -
#                831             145 |****                                          -
#                772             146 |***                                           -
#                657             147 |***                                           -
#                 14             148 |*                                             -
#
#               1020           > 95% |*****                                 149.04902
#
#        mean of 95%       137.70683
#          95th %ile             148
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log10   1   1            1508         5168        0      548    log10
# bin/../bin-riscv64/log -N log10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1448                       1448
#                        max    157986                       1680
#                       mean      1619.84044                 1522.19930
#                     median      1510                       1508*
#                     stddev      2196.81918                   52.59255
#             standard error        29.85349                    0.73158
#       99% confidence level        76.90259                    1.88456
#                       skew        66.93079                    1.06131
#                   kurtosis      4741.08383                    0.23567
#           time correlation         0.13524                    0.03283
#
#               elapsed time        20.00848
#                   run time         4.58943
#          getnsecs overhead      1416
#
#          number of samples      5415
#         number of outliers       247
#    number of final samples      5168
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10            1448 |*                                    1451.50000
#                 59            1454 |****                                 1457.66102
#                244            1460 |****************                     1463.03279
#                460            1466 |********************************     1468.65870
#                376            1472 |**************************           1474.39362
#                251            1478 |*****************                    1480.38645
#                203            1484 |**************                       1486.61084
#                219            1490 |***************                      1492.48858
#                293            1496 |********************                 1498.68259
#                423            1502 |*****************************        1504.64775
#                403            1508 |****************************         1510.31266
#                318            1514 |**********************               1516.28302
#                208            1520 |**************                       1522.37019
#                185            1526 |************                         1528.56216
#                124            1532 |********                             1534.54839
#                104            1538 |*******                              1540.25000
#                 96            1544 |******                               1546.34375
#                 59            1550 |****                                 1552.23729
#                 37            1556 |**                                   1558.16216
#                 60            1562 |****                                 1564.65000
#                 57            1568 |***                                  1570.68421
#                 70            1574 |****                                 1576.71429
#                 77            1580 |*****                                1582.87013
#                 74            1586 |*****                                1588.33784
#                 71            1592 |****                                 1594.49296
#                 89            1598 |******                               1600.20225
#                 65            1604 |****                                 1606.89231
#                 86            1610 |*****                                1612.55814
#                 64            1616 |****                                 1618.50000
#                 75            1622 |*****                                1624.32000
#                 49            1628 |***                                  1629.85714
#
#                259           > 95% |******************                   1651.86873
#
#        mean of 95%      1515.35791
#          95th %ile            1633
#
# WARNINGS
#     Actual benchmark run time only accounts for 22.9% of elapsed time.
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
log10f   1   1             351        17585        0     2431   log10f
# bin/../bin-riscv64/log -N log10f -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log10f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       340                        340
#                        max    702876                        388
#                       mean       414.39990                  355.57930
#                     median       351                        351*
#                     stddev      5234.10593                   10.81055
#             standard error        38.42277                    0.08152
#       99% confidence level        98.97704                    0.21000
#                       skew       130.92161                    1.36797
#                   kurtosis     17495.58619                    0.53965
#           time correlation         0.02049                    0.00184
#
#               elapsed time        20.00561
#                   run time        18.29513
#          getnsecs overhead      1416
#
#          number of samples     18557
#         number of outliers       972
#    number of final samples     17585
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3             340 |*                                     340.66667
#                 57             342 |*                                     342.75439
#                466             344 |***                                   344.71888
#               2130             346 |******************                    346.69437
#               3770             348 |********************************      348.53581
#               3068             350 |**************************            350.42634
#               1706             352 |**************                        352.46659
#               1356             354 |***********                           354.48746
#                964             356 |********                              356.42842
#                365             358 |***                                   358.30685
#                117             360 |*                                     360.29060
#                 45             362 |*                                     362.35556
#                 41             364 |*                                     364.51220
#                 69             366 |*                                     366.65217
#                217             368 |*                                     368.65438
#                428             370 |***                                   370.57710
#                551             372 |****                                  372.56261
#                551             374 |****                                  374.49728
#                479             376 |****                                  376.51775
#                322             378 |**                                    378.35404
#
#                880           > 95% |*******                               382.52727
#
#        mean of 95%       354.15971
#          95th %ile             379
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
       prc thr      nsecs/call      samples   errors cnt/samp     func
log10l   1   1          294765         3549        0       10   log10l
# bin/../bin-riscv64/log -N log10l -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log10l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    275645                     275645
#                        max    907966                     314924
#                       mean    296785.46647               294234.46379
#                     median    295075                     294765*
#                     stddev     18843.70887                 6930.89653
#             standard error       309.24587                  116.34197
#       99% confidence level       796.61737                  299.69692
#                       skew        12.93999                    0.01793
#                   kurtosis       324.82742                   -0.01375
#           time correlation         9.75359                    6.57060
#
#               elapsed time        20.00797
#                   run time        11.02489
#          getnsecs overhead      1416
#
#          number of samples      3713
#         number of outliers       164
#    number of final samples      3549
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          275645 |*                                  276021.66667
#                  5          276575 |*                                  277073.00000
#                 12          277505 |*                                  277954.16667
#                 14          278435 |*                                  278997.14286
#                 27          279365 |***                                279868.70370
#                 40          280295 |*****                              280767.00000
#                 62          281225 |********                           281698.54839
#                 63          282155 |********                           282645.31746
#                102          283085 |*************                      283583.23529
#                 92          284015 |************                       284495.65217
#                102          284945 |*************                      285418.72549
#                107          285875 |**************                     286332.10280
#                 78          286805 |**********                         287261.41026
#                 69          287735 |*********                          288179.20290
#                 76          288665 |**********                         289106.40789
#                 95          289595 |************                       290065.61053
#                132          290525 |*****************                  290975.75758
#                144          291455 |*******************                291926.47222
#                219          292385 |*****************************      292906.46575
#                228          293315 |******************************     293789.53070
#                209          294245 |****************************       294736.47368
#                237          295175 |********************************   295653.66667
#                221          296105 |*****************************      296573.71493
#                222          297035 |*****************************      297473.99099
#                185          297965 |************************           298416.63784
#                146          298895 |*******************                299333.25342
#                130          299825 |*****************                  300266.08462
#                 97          300755 |*************                      301197.52577
#                 90          301685 |************                       302114.41111
#                 66          302615 |********                           303050.10606
#                 48          303545 |******                             303965.25000
#                 50          304475 |******                             304875.64000
#
#                178           > 95% |************************           309218.87640
#
#        mean of 95%    293443.23702
#          95th %ile          305404
#
# WARNINGS
#     Actual benchmark run time only accounts for 55.1% of elapsed time.
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
log2   1   1             563         4165        0     1499     log2
# bin/../bin-riscv64/log -N log2 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log2 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       548                        548
#                        max     82647                        664
#                       mean       611.39861                  576.52173
#                     median       564                        563*
#                     stddev      1237.38744                   29.14413
#             standard error        18.52219                    0.45159
#       99% confidence level        47.71315                    1.16329
#                       skew        65.37717                    1.39012
#                   kurtosis      4327.15100                    0.58713
#           time correlation         0.06292                    0.02070
#
#               elapsed time        20.00645
#                   run time         3.95519
#          getnsecs overhead      1416
#
#          number of samples      4463
#         number of outliers       298
#    number of final samples      4165
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 50             548 |**                                    549.42000
#                193             551 |********                              552.35233
#                613             554 |*************************             555.20718
#                771             557 |********************************      557.95071
#                452             560 |******************                    560.77876
#                253             563 |**********                            563.92885
#                275             566 |***********                           567.04727
#                249             569 |**********                            570.04016
#                127             572 |*****                                 572.96850
#                 89             575 |***                                   575.97753
#                 46             578 |*                                     578.86957
#                 37             581 |*                                     581.78378
#                 28             584 |*                                     584.60714
#                 19             587 |*                                     587.89474
#                 18             590 |*                                     591.00000
#                 17             593 |*                                     594.11765
#                 14             596 |*                                     597.21429
#                  8             599 |*                                     600.25000
#                 20             602 |*                                     603.20000
#                 44             605 |*                                     606.20455
#                 51             608 |**                                    609.11765
#                 69             611 |**                                    611.79710
#                 86             614 |***                                   614.87209
#                 67             617 |**                                    618.01493
#                 50             620 |**                                    621.10000
#                 69             623 |**                                    624.04348
#                 50             626 |**                                    627.06000
#                 63             629 |**                                    629.85714
#                 46             632 |*                                     633.00000
#                 39             635 |*                                     635.92308
#                 36             638 |*                                     639.16667
#                  7             641 |*                                     641.00000
#
#                209           > 95% |********                              651.21053
#
#        mean of 95%       572.57583
#          95th %ile             641
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.8% of elapsed time.
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log2f   1   1             320        16625        0     2693    log2f
# bin/../bin-riscv64/log -N log2f -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log2f 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       314                        314
#                        max    121777                        370
#                       mean       343.83248                  326.68006
#                     median       321                        320*
#                     stddev       913.85356                   14.31073
#             standard error         6.79506                    0.11099
#       99% confidence level        17.50408                    0.28591
#                       skew       130.13513                    1.48449
#                   kurtosis     17243.37665                    0.78420
#           time correlation         0.00747                    0.00249
#
#               elapsed time        20.00631
#                   run time        16.34611
#          getnsecs overhead      1416
#
#          number of samples     18087
#         number of outliers      1462
#    number of final samples     16625
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                782             314 |*******                               314.82353
#               3158             316 |****************************          316.53230
#               3544             318 |********************************      318.31264
#               2001             320 |******************                    320.34933
#               1302             322 |***********                           322.44777
#               1149             324 |**********                            324.49608
#                759             326 |******                                326.37945
#                353             328 |***                                   328.41360
#                148             330 |*                                     330.36486
#                 61             332 |*                                     332.44262
#                 51             334 |*                                     334.47059
#                 32             336 |*                                     336.53125
#                 27             338 |*                                     338.62963
#                 22             340 |*                                     340.63636
#                 17             342 |*                                     342.41176
#                120             344 |*                                     344.65833
#                333             346 |***                                   346.56757
#                491             348 |****                                  348.47658
#                422             350 |***                                   350.49526
#                326             352 |**                                    352.51227
#                316             354 |**                                    354.52848
#                299             356 |**                                    356.50167
#                 80             358 |*                                     358.00000
#
#                832           > 95% |*******                               363.45192
#
#        mean of 95%       324.74286
#          95th %ile             358
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
      prc thr      nsecs/call      samples   errors cnt/samp     func
log2l   1   1           22604        15131        0       41    log2l
# bin/../bin-riscv64/log -N log2l -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f log2l 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     22099                      22099
#                        max    552463                      26797
#                       mean     24869.83959                23188.50116
#                     median     22687                      22604*
#                     stddev     11498.14053                 1202.85041
#             standard error        90.08803                    9.77863
#       99% confidence level       232.06675                   25.18974
#                       skew        12.45786                    1.33232
#                   kurtosis       321.77273                    0.36351
#           time correlation         0.79114                    0.23496
#
#               elapsed time        20.00632
#                   run time        16.79833
#          getnsecs overhead      1416
#
#          number of samples     16290
#         number of outliers      1159
#    number of final samples     15131
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                179           22099 |*                                   22188.31844
#               2233           22213 |*********************               22281.34483
#               3308           22327 |********************************    22381.73156
#               1552           22441 |***************                     22482.35503
#                723           22555 |******                              22614.50346
#                958           22669 |*********                           22726.91441
#               1042           22783 |**********                          22837.32342
#                665           22897 |******                              22947.40752
#                335           23011 |***                                 23061.56716
#                198           23125 |*                                   23175.08081
#                102           23239 |*                                   23293.62745
#                 62           23353 |*                                   23403.53226
#                 68           23467 |*                                   23514.50000
#                 49           23581 |*                                   23640.40816
#                 50           23695 |*                                   23748.14000
#                 35           23809 |*                                   23862.08571
#                 22           23923 |*                                   23988.68182
#                 47           24037 |*                                   24096.21277
#                 86           24151 |*                                   24212.47674
#                101           24265 |*                                   24321.11881
#                 83           24379 |*                                   24430.53012
#                122           24493 |*                                   24556.05738
#                294           24607 |**                                  24673.01361
#                368           24721 |***                                 24774.48641
#                310           24835 |**                                  24888.78065
#                221           24949 |**                                  25004.34389
#                264           25063 |**                                  25115.62500
#                235           25177 |**                                  25236.82128
#                213           25291 |**                                  25348.47887
#                172           25405 |*                                   25458.21512
#                145           25519 |*                                   25574.35862
#                132           25633 |*                                   25684.74242
#
#                757           > 95% |*******                             26201.70013
#
#        mean of 95%     23029.81244
#          95th %ile           25744
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
logf   1   1             320        17133        0     2772     logf
# bin/../bin-riscv64/log -N logf -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f logf 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       304                        304
#                        max     98078                        371
#                       mean       336.42077                  325.98459
#                     median       320                        320*
#                     stddev       739.03582                   15.00059
#             standard error         5.52042                    0.11460
#       99% confidence level        14.22061                    0.29521
#                       skew       129.52124                    1.21646
#                   kurtosis     17077.90646                    0.29215
#           time correlation         0.00581                    0.00271
#
#               elapsed time        20.00641
#                   run time        16.37357
#          getnsecs overhead      1416
#
#          number of samples     17922
#         number of outliers       789
#    number of final samples     17133
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10             304 |*                                     304.90000
#                132             306 |*                                     306.75758
#                438             308 |****                                  308.66210
#                684             310 |*******                               310.57164
#                936             312 |**********                            312.49786
#               1128             314 |************                          314.59309
#               2122             316 |************************              316.53299
#               2822             318 |********************************      318.53296
#               1638             320 |******************                    320.41575
#                918             322 |**********                            322.50654
#               1098             324 |************                          324.52550
#                753             326 |********                              326.40106
#                329             328 |***                                   328.41337
#                162             330 |*                                     330.41975
#                105             332 |*                                     332.38095
#                 85             334 |*                                     334.42353
#                 56             336 |*                                     336.41071
#                 88             338 |*                                     338.63636
#                108             340 |*                                     340.65741
#                178             342 |**                                    342.56180
#                234             344 |**                                    344.54274
#                375             346 |****                                  346.56800
#                491             348 |*****                                 348.50102
#                452             350 |*****                                 350.47788
#                380             352 |****                                  352.48158
#                335             354 |***                                   354.52239
#                219             356 |**                                    356.31050
#
#                857           > 95% |*********                             362.67328
#
#        mean of 95%       324.05278
#          95th %ile             357
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
     prc thr      nsecs/call      samples   errors cnt/samp     func
logl   1   1           21934        14446        0       49     logl
# bin/../bin-riscv64/log -N logl -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f logl 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     19278                      19378
#                        max    479545                      25532
#                       mean     22926.13477                22413.41742
#                     median     21982                      21934*
#                     stddev      4743.63026                 1040.59047
#             standard error        38.29370                    8.65777
#       99% confidence level        98.64458                   22.30242
#                       skew        60.52551                    1.09623
#                   kurtosis      5621.65209                   -0.14548
#           time correlation         0.37884                    0.22139
#
#               elapsed time        20.00757
#                   run time        17.45816
#          getnsecs overhead      1416
#
#          number of samples     15345
#         number of outliers       899
#    number of final samples     14446
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           19378 |*                                   19423.00000
#                  0           19537 |                                              -
#                  2           19696 |*                                   19808.00000
#                  0           19855 |                                              -
#                  0           20014 |                                              -
#                  0           20173 |                                              -
#                  1           20332 |*                                   20399.00000
#                 10           20491 |*                                   20550.40000
#                  1           20650 |*                                   20799.00000
#                  0           20809 |                                              -
#                 45           20968 |*                                   21076.53333
#                133           21127 |*                                   21205.51880
#                 55           21286 |*                                   21399.92727
#               1428           21445 |**********                          21554.44118
#               4261           21604 |********************************    21676.77728
#               1179           21763 |********                            21834.96098
#               1674           21922 |************                        22005.66607
#               1098           22081 |********                            22142.67942
#                310           22240 |**                                  22309.03871
#                140           22399 |*                                   22467.55714
#                 64           22558 |*                                   22632.00000
#                 40           22717 |*                                   22795.30000
#                 41           22876 |*                                   22943.51220
#                 28           23035 |*                                   23110.71429
#                 56           23194 |*                                   23298.57143
#                413           23353 |***                                 23449.16223
#                734           23512 |*****                               23589.63624
#                535           23671 |****                                23745.73832
#                565           23830 |****                                23907.76991
#                425           23989 |***                                 24064.85647
#                288           24148 |**                                  24224.67361
#                195           24307 |*                                   24377.00513
#
#                723           > 95% |*****                               24885.56985
#
#        mean of 95%     22283.17139
#          95th %ile           24442
#
# Usage: log
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'log')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f <log func> (log[fl],log2[fl],log10[fl], default log)]
# note: measures log[2|10][fl]() family of functions
        prc thr      nsecs/call      samples   errors cnt/samp 
longjmp   1   1             266        18282        0     3037 
# bin/../bin-riscv64/longjmp -N longjmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       238                        238
#                        max    198491                        308
#                       mean       289.77720                  271.37944
#                     median       266                        266*
#                     stddev      1511.73472                   12.07775
#             standard error        10.86287                    0.08933
#       99% confidence level        27.98274                    0.23010
#                       skew       121.55145                    1.41282
#                   kurtosis     15494.96145                    0.74379
#           time correlation         0.00725                    0.00190
#
#               elapsed time        20.00767
#                   run time        16.15471
#          getnsecs overhead      1416
#
#          number of samples     19367
#         number of outliers      1085
#    number of final samples     18282
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             238 |*                                     238.00000
#                  4             240 |*                                     240.50000
#                  1             242 |*                                     243.00000
#                  3             244 |*                                     244.33333
#                  9             246 |*                                     246.66667
#                 18             248 |*                                     248.72222
#                 23             250 |*                                     250.39130
#                 26             252 |*                                     252.61538
#                149             254 |*                                     254.67114
#                187             256 |*                                     256.50267
#                104             258 |*                                     258.45192
#                144             260 |*                                     260.66667
#               1197             262 |*****                                 262.77444
#               7195             264 |********************************      264.59708
#               2062             266 |*********                             266.23909
#               1167             268 |*****                                 268.64524
#               1661             270 |*******                               270.38952
#                461             272 |**                                    272.37744
#                132             274 |*                                     274.37879
#                 76             276 |*                                     276.38158
#                 46             278 |*                                     278.58696
#                 30             280 |*                                     280.23333
#                 27             282 |*                                     282.55556
#                 30             284 |*                                     284.60000
#                115             286 |*                                     286.67826
#                416             288 |*                                     288.64663
#                714             290 |***                                   290.49720
#                539             292 |**                                    292.42486
#                401             294 |*                                     294.48130
#                368             296 |*                                     296.46467
#                 61             298 |*                                     298.00000
#
#                915           > 95% |****                                  301.95082
#
#        mean of 95%       269.76876
#          95th %ile             298
#
# Usage: longjmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'longjmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures longjmp()
        prc thr      nsecs/call      samples   errors cnt/samp 
lrand48   1   1             386        17410        0     2254 
# bin/../bin-riscv64/lrand48 -N lrand48 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       376                        376
#                        max    147988                        448
#                       mean       409.65979                  394.57226
#                     median       386                        386*
#                     stddev      1163.51622                   17.74469
#             standard error         8.63286                    0.13448
#       99% confidence level        22.23825                    0.34643
#                       skew       117.50026                    1.40595
#                   kurtosis     14480.48699                    0.48411
#           time correlation         0.00754                    0.00295
#
#               elapsed time        20.00825
#                   run time        16.32422
#          getnsecs overhead      1416
#
#          number of samples     18165
#         number of outliers       755
#    number of final samples     17410
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9             376 |*                                     376.55556
#                138             378 |*                                     378.79710
#               1135             380 |*********                             380.71894
#               3846             382 |********************************      382.57514
#               3498             384 |*****************************         384.40709
#               1104             386 |*********                             386.34239
#                941             388 |*******                               388.56642
#               1417             390 |***********                           390.50882
#                986             392 |********                              392.37221
#                318             394 |**                                    394.35535
#                 99             396 |*                                     396.37374
#                 63             398 |*                                     398.39683
#                 40             400 |*                                     400.42500
#                 36             402 |*                                     402.58333
#                 19             404 |*                                     404.52632
#                 20             406 |*                                     406.50000
#                 16             408 |*                                     408.56250
#                 11             410 |*                                     410.36364
#                 16             412 |*                                     412.68750
#                 43             414 |*                                     414.67442
#                150             416 |*                                     416.63333
#                375             418 |***                                   418.61067
#                499             420 |****                                  420.49499
#                439             422 |***                                   422.44419
#                334             424 |**                                    424.47605
#                332             426 |**                                    426.53313
#                345             428 |**                                    428.40580
#                264             430 |**                                    430.45833
#                 46             432 |*                                     432.00000
#
#                871           > 95% |*******                               438.90241
#
#        mean of 95%       392.23768
#          95th %ile             432
#
# Usage: lrand48
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'lrand48')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures lrand48()
          prc thr      nsecs/call      samples   errors cnt/samp     size
lseek_t8k   1   1            4592        16475        0      200     8192
# bin/../bin-riscv64/lseek -N lseek_t8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 8k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4435                       4435
#                        max    173692                       5990
#                       mean      4895.49040                 4800.12467
#                     median      4600                       4592*
#                     stddev      1447.06588                  396.53813
#             standard error        11.03570                    3.08939
#       99% confidence level        28.42796                    7.95826
#                       skew        93.62452                    1.31548
#                   kurtosis     10794.53988                    0.29457
#           time correlation         0.09432                    0.07047
#
#               elapsed time        20.00759
#                   run time        16.80970
#          getnsecs overhead      1416
#
#          number of samples     17194
#         number of outliers       719
#    number of final samples     16475
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                142            4435 |*                                    4463.88028
#               1520            4473 |***************                      4495.90789
#               3072            4511 |******************************       4531.05697
#               3196            4549 |********************************     4565.47090
#               1579            4587 |***************                      4603.73971
#               1257            4625 |************                         4643.05887
#                710            4663 |*******                              4678.28732
#                292            4701 |**                                   4716.25685
#                146            4739 |*                                    4755.76712
#                106            4777 |*                                    4795.31132
#                 78            4815 |*                                    4831.47436
#                 69            4853 |*                                    4870.52174
#                 46            4891 |*                                    4908.10870
#                 41            4929 |*                                    4947.68293
#                 49            4967 |*                                    4986.32653
#                 46            5005 |*                                    5023.69565
#                 68            5043 |*                                    5061.45588
#                 63            5081 |*                                    5097.84127
#                 60            5119 |*                                    5137.11667
#                 79            5157 |*                                    5178.82278
#                199            5195 |*                                    5215.50754
#                346            5233 |***                                  5253.07514
#                387            5271 |***                                  5291.13178
#                426            5309 |****                                 5327.21127
#                367            5347 |***                                  5364.91553
#                336            5385 |***                                  5402.57143
#                209            5423 |**                                   5440.93780
#                188            5461 |*                                    5478.48936
#                160            5499 |*                                    5516.61250
#                160            5537 |*                                    5555.38750
#                130            5575 |*                                    5594.63077
#                124            5613 |*                                    5630.87903
#
#                824           > 95% |********                             5796.38107
#
#        mean of 95%      4747.67338
#          95th %ile            5649
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: lseek
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'lseek')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
# notes: measures lseek()
          prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_10   1   1             531         1986        0    16188     10 10 
# bin/../bin-riscv64/malloc -N malloc_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       507                        507
#                        max     39839                        582
#                       mean       567.70746                  535.95569
#                     median       534                        531*
#                     stddev       834.26395                   15.46710
#             standard error        17.63098                    0.34707
#       99% confidence level        45.41740                    0.89406
#                       skew        46.63271                    0.91524
#                   kurtosis      2191.04576                   -0.00972
#           time correlation         0.10009                    0.02556
#
#               elapsed time        20.00939
#                   run time        19.89650
#          getnsecs overhead      1416
#
#          number of samples      2239
#         number of outliers       253
#    number of final samples      1986
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             507 |*                                     507.50000
#                  3             509 |*                                     509.33333
#                  3             511 |*                                     511.33333
#                 11             513 |**                                    513.45455
#                 29             515 |*****                                 515.51724
#                 44             517 |********                              517.59091
#                114             519 |*********************                 519.56140
#                162             521 |******************************        521.54321
#                163             523 |******************************        523.52761
#                170             525 |********************************      525.48824
#                148             527 |***************************           527.44595
#                128             529 |************************              529.46875
#                 95             531 |*****************                     531.37895
#                 68             533 |************                          533.45588
#                 80             535 |***************                       535.52500
#                 75             537 |**************                        537.40000
#                 57             539 |**********                            539.56140
#                 51             541 |*********                             541.35294
#                 62             543 |***********                           543.48387
#                 55             545 |**********                            545.45455
#                 46             547 |********                              547.47826
#                 45             549 |********                              549.55556
#                 35             551 |******                                551.48571
#                 33             553 |******                                553.33333
#                 44             555 |********                              555.40909
#                 36             557 |******                                557.44444
#                 28             559 |*****                                 559.46429
#                 30             561 |*****                                 561.43333
#                 35             563 |******                                563.45714
#                 20             565 |***                                   565.45000
#                 14             567 |**                                    567.00000
#
#                100           > 95% |******************                    573.16000
#
#        mean of 95%       533.98303
#          95th %ile             567
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
           prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_100   1   1             522         2155        0    15718     10 100 
# bin/../bin-riscv64/malloc -N malloc_100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100 -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       505                        505
#                        max     55784                        557
#                       mean       560.92521                  525.25615
#                     median       524                        522*
#                     stddev      1146.67948                   10.48872
#             standard error        23.50464                    0.22594
#       99% confidence level        60.54795                    0.58203
#                       skew        47.12631                    0.99540
#                   kurtosis      2259.41258                    0.28070
#           time correlation         0.10037                    0.01590
#
#               elapsed time        20.01144
#                   run time        19.89232
#          getnsecs overhead      1416
#
#          number of samples      2380
#         number of outliers       225
#    number of final samples      2155
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             505 |*                                     505.50000
#                  1             507 |*                                     507.00000
#                  7             509 |*                                     509.85714
#                 37             511 |****                                  511.67568
#                157             513 |******************                    513.70064
#                278             515 |********************************      515.51439
#                228             517 |**************************            517.49561
#                203             519 |***********************               519.43350
#                179             521 |********************                  521.42458
#                151             523 |*****************                     523.45033
#                135             525 |***************                       525.52593
#                117             527 |*************                         527.49573
#                 81             529 |*********                             529.44444
#                104             531 |***********                           531.42308
#                 66             533 |*******                               533.37879
#                 70             535 |********                              535.50000
#                 47             537 |*****                                 537.40426
#                 53             539 |******                                539.50943
#                 51             541 |*****                                 541.43137
#                 36             543 |****                                  543.52778
#                 37             545 |****                                  545.70270
#                  7             547 |*                                     547.00000
#
#                108           > 95% |************                          551.64815
#
#        mean of 95%       523.86370
#          95th %ile             547
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
            prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_100k   1   1          301310         1802        0       29     10 102400 
# bin/../bin-riscv64/malloc -N malloc_100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    281176                     281176
#                        max    650976                     348553
#                       mean    308455.89392               304794.47669
#                     median    302103                     301310*
#                     stddev     26360.24767                14611.52814
#             standard error       608.60157                  344.20585
#       99% confidence level      1567.75765                  886.67427
#                       skew         4.99680                    0.76607
#                   kurtosis        41.75679                   -0.09897
#           time correlation        35.41497                   27.09771
#
#               elapsed time        20.01063
#                   run time        17.23205
#          getnsecs overhead      1416
#
#          number of samples      1876
#         number of outliers        74
#    number of final samples      1802
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          281176 |**                                 281851.87500
#                 14          282817 |****                               283794.00000
#                 57          284458 |*****************                  285332.68421
#                 78          286099 |************************           287039.02564
#                 87          287740 |***************************        288558.43678
#                 80          289381 |************************           290217.81250
#                 91          291022 |****************************       291834.02198
#                 93          292663 |****************************       293575.51613
#                103          294304 |********************************   295203.66019
#                 94          295945 |*****************************      296689.94681
#                 98          297586 |******************************     298381.64286
#                 82          299227 |*************************          300013.36585
#                 68          300868 |*********************              301701.41176
#                 61          302509 |******************                 303328.18033
#                 52          304150 |****************                   305032.05769
#                 48          305791 |**************                     306544.33333
#                 61          307432 |******************                 308238.32787
#                 61          309073 |******************                 309951.32787
#                 51          310714 |***************                    311586.11765
#                 57          312355 |*****************                  313199.15789
#                 53          313996 |****************                   314841.50943
#                 47          315637 |**************                     316406.97872
#                 46          317278 |**************                     318078.76087
#                 36          318919 |***********                        319717.88889
#                 32          320560 |*********                          321256.09375
#                 24          322201 |*******                            323011.87500
#                 34          323842 |**********                         324549.47059
#                 19          325483 |*****                              326301.31579
#                 13          327124 |****                               327868.15385
#                 30          328765 |*********                          329500.00000
#                 15          330406 |****                               331132.46667
#                 18          332047 |*****                              333002.00000
#
#                 91           > 95% |****************************       339760.85714
#
#        mean of 95%    302934.78025
#          95th %ile          333676
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
           prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_10k   1   1            6325         2128        0     1412     10 10240 
# bin/../bin-riscv64/malloc -N malloc_10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6036                       6036
#                        max    244574                       6830
#                       mean      6525.00815                 6357.90414
#                     median      6336                       6325*
#                     stddev      5139.94975                  160.51069
#             standard error       109.36063                    3.47951
#       99% confidence level       281.71299                    8.96322
#                       skew        45.16938                    0.58159
#                   kurtosis      2081.98029                   -0.11174
#           time correlation         0.67660                    0.25253
#
#               elapsed time        20.01253
#                   run time        19.90238
#          getnsecs overhead      1416
#
#          number of samples      2209
#         number of outliers        81
#    number of final samples      2128
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14            6036 |**                                   6047.78571
#                 26            6056 |****                                 6067.19231
#                 39            6076 |******                               6083.87179
#                 27            6096 |****                                 6105.07407
#                 32            6116 |*****                                6126.53125
#                 32            6136 |*****                                6145.06250
#                 15            6156 |**                                   6166.00000
#                 20            6176 |***                                  6188.85000
#                 89            6196 |***************                      6206.64045
#                177            6216 |*******************************      6226.57062
#                182            6236 |********************************     6244.92857
#                139            6256 |************************             6264.56835
#                122            6276 |*********************                6285.63115
#                107            6296 |******************                   6305.60748
#                 78            6316 |*************                        6324.78205
#                 76            6336 |*************                        6346.47368
#                107            6356 |******************                   6365.86916
#                 80            6376 |**************                       6383.86250
#                 67            6396 |***********                          6405.86567
#                108            6416 |******************                   6426.14815
#                 84            6436 |**************                       6444.17857
#                 46            6456 |********                             6464.71739
#                 44            6476 |*******                              6485.36364
#                 38            6496 |******                               6504.21053
#                 28            6516 |****                                 6523.25000
#                 38            6536 |******                               6544.13158
#                 49            6556 |********                             6565.28571
#                 50            6576 |********                             6584.78000
#                 45            6596 |*******                              6605.33333
#                 28            6616 |****                                 6624.03571
#                 31            6636 |*****                                6644.80645
#                  3            6656 |*                                    6657.66667
#
#                107           > 95% |******************                   6727.67290
#
#        mean of 95%      6338.32707
#          95th %ile            6660
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
          prc thr      nsecs/call      samples   errors cnt/samp   glob  sizes
malloc_1k   1   1             628         2113        0    12970     10 1024 
# bin/../bin-riscv64/malloc -N malloc_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -g 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       606                        610
#                        max     75259                        650
#                       mean       674.37012                  629.48982
#                     median       629                        628*
#                     stddev      1532.59053                    6.78443
#             standard error        31.21890                    0.14759
#       99% confidence level        80.41989                    0.38020
#                       skew        47.94061                    0.81009
#                   kurtosis      2325.98062                    0.63512
#           time correlation         0.11728                    0.01053
#
#               elapsed time        20.00936
#                   run time        19.89427
#          getnsecs overhead      1416
#
#          number of samples      2410
#         number of outliers       297
#    number of final samples      2113
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             610 |*                                     610.66667
#                  3             612 |*                                     612.33333
#                  3             614 |*                                     614.66667
#                  5             616 |*                                     617.00000
#                 21             618 |**                                    618.42857
#                106             620 |***********                           620.59434
#                257             622 |**************************            622.57198
#                249             624 |*************************             624.46988
#                261             626 |***************************           626.57471
#                308             628 |********************************      628.51623
#                243             630 |*************************             630.44856
#                182             632 |******************                    632.50549
#                111             634 |***********                           634.47748
#                 88             636 |*********                             636.54545
#                 66             638 |******                                638.45455
#                 55             640 |*****                                 640.45455
#                 43             642 |****                                  642.44186
#
#                106           > 95% |***********                           646.72642
#
#        mean of 95%       628.57947
#          95th %ile             643
#
# Usage: malloc
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'malloc')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-g number of mallocs before free (default 100)]
#     [-s size to malloc (default 32). Up to 32 sizes accepted
# notes: measures malloc()/free()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10   1   1             161        17270        0     5113       10
# bin/../bin-riscv64/memcpy -N memcpy_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       152                        152
#                        max    103793                        190
#                       mean       175.71134                  165.05819
#                     median       162                        161*
#                     stddev       788.63839                    8.22720
#             standard error         5.75480                    0.06260
#       99% confidence level        14.82436                    0.16127
#                       skew       123.89292                    1.44644
#                   kurtosis     15986.70183                    0.79805
#           time correlation         0.00442                    0.00140
#
#               elapsed time        20.00707
#                   run time        16.15756
#          getnsecs overhead      1416
#
#          number of samples     18780
#         number of outliers      1510
#    number of final samples     17270
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             152 |*                                             -
#                  1             153 |*                                             -
#                  9             154 |*                                             -
#                 27             155 |*                                             -
#                 51             156 |*                                             -
#                131             157 |*                                             -
#                604             158 |*****                                         -
#               2502             159 |*********************                         -
#               3664             160 |********************************              -
#               2073             161 |******************                            -
#               1228             162 |**********                                    -
#               1256             163 |**********                                    -
#                920             164 |********                                      -
#                487             165 |****                                          -
#                271             166 |**                                            -
#                150             167 |*                                             -
#                110             168 |*                                             -
#                 80             169 |*                                             -
#                 55             170 |*                                             -
#                 48             171 |*                                             -
#                 49             172 |*                                             -
#                 42             173 |*                                             -
#                125             174 |*                                             -
#                293             175 |**                                            -
#                414             176 |***                                           -
#                378             177 |***                                           -
#                289             178 |**                                            -
#                325             179 |**                                            -
#                246             180 |**                                            -
#                237             181 |**                                            -
#                215             182 |*                                             -
#                124             183 |*                                             -
#
#                864           > 95% |*******                               186.53125
#
#        mean of 95%       163.92734
#          95th %ile             183
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10k   1   1            4977        17173        0      182    10240
# bin/../bin-riscv64/memcpy -N memcpy_10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4850                       4850
#                        max    624344                       5735
#                       mean      5196.26092                 5080.90899
#                     median      4982                       4977*
#                     stddev      5574.56253                  217.99790
#             standard error        41.68604                    1.66352
#       99% confidence level       107.38323                    4.28524
#                       skew        99.06470                    1.34580
#                   kurtosis     10162.18676                    0.31540
#           time correlation         0.07123                    0.03732
#
#               elapsed time        20.00640
#                   run time        16.69984
#          getnsecs overhead      1416
#
#          number of samples     17883
#         number of outliers       710
#    number of final samples     17173
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 37            4850 |*                                    4861.75676
#                378            4872 |****                                 4886.06085
#               1098            4894 |*************                        4904.68670
#               2697            4916 |********************************     4927.64145
#               2651            4938 |*******************************      4947.85025
#               2037            4960 |************************             4969.60334
#               1147            4982 |*************                        4991.31299
#                874            5004 |**********                           5014.84211
#               1014            5026 |************                         5036.20809
#                815            5048 |*********                            5057.44294
#                351            5070 |****                                 5078.62963
#                138            5092 |*                                    5099.60870
#                 72            5114 |*                                    5123.93056
#                 27            5136 |*                                    5146.07407
#                 24            5158 |*                                    5167.62500
#                 13            5180 |*                                    5188.30769
#                 23            5202 |*                                    5212.43478
#                 13            5224 |*                                    5236.38462
#                  9            5246 |*                                    5253.00000
#                 15            5268 |*                                    5277.86667
#                 13            5290 |*                                    5303.07692
#                 44            5312 |*                                    5326.18182
#                110            5334 |*                                    5345.96364
#                250            5356 |**                                   5368.15600
#                409            5378 |****                                 5389.12958
#                423            5400 |*****                                5409.94326
#                423            5422 |*****                                5432.43499
#                330            5444 |***                                  5453.97576
#                349            5466 |****                                 5476.77937
#                279            5488 |***                                  5498.04301
#                247            5510 |**                                   5519.89879
#                  4            5532 |*                                    5532.00000
#
#                859           > 95% |**********                           5612.81490
#
#        mean of 95%      5052.90192
#          95th %ile            5532
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_10m   1   1         8757319         1898        0        1 10485760
# bin/../bin-riscv64/memcpy -N memcpy_10m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   5325807                    8578221
#                        max 212890283                    9053021
#                       mean   8652579.53985              8783665.30190
#                     median   8749120                    8757319*
#                     stddev   4370075.13067                90156.60564
#             standard error     91702.32279                 2069.42384
#       99% confidence level    236225.18351                 5330.83582
#                       skew        44.95624                    0.85051
#                   kurtosis      2098.67529                    0.00352
#           time correlation      1073.91622                  156.85188
#
#               elapsed time        20.02502
#                   run time        19.86611
#          getnsecs overhead      1416
#
#          number of samples      2271
#         number of outliers       373
#    number of final samples      1898
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         8578221 |*                                 8578221.00000
#                  0         8590350 |                                              -
#                  1         8602479 |*                                 8612220.00000
#                  5         8614608 |*                                 8619518.60000
#                  5         8626737 |*                                 8631717.20000
#                 16         8638866 |***                               8645923.56250
#                 25         8650995 |*****                             8657550.04000
#                 40         8663124 |********                          8670466.07500
#                 74         8675253 |**************                    8682249.27027
#                103         8687382 |********************              8694327.94175
#                153         8699511 |******************************    8705520.54248
#                160         8711640 |********************************  8717965.69375
#                141         8723769 |****************************      8729915.51064
#                132         8735898 |**************************        8741823.43939
#                116         8748027 |***********************           8753494.90517
#                 92         8760156 |******************                8766111.73913
#                 87         8772285 |*****************                 8778081.49425
#                 79         8784414 |***************                   8790743.50633
#                 63         8796543 |************                      8802994.15873
#                 44         8808672 |********                          8813955.65909
#                 60         8820801 |************                      8826777.76667
#                 45         8832930 |*********                         8839652.46667
#                 47         8845059 |*********                         8851151.53191
#                 39         8857188 |*******                           8862842.33333
#                 43         8869317 |********                          8875519.27907
#                 54         8881446 |**********                        8887211.98148
#                 40         8893575 |********                          8900419.30000
#                 36         8905704 |*******                           8911905.61111
#                 41         8917833 |********                          8922731.87805
#                 22         8929962 |****                              8935365.00000
#                 22         8942091 |****                              8946370.50000
#                 17         8954220 |***                               8959155.47059
#
#                 95           > 95% |*******************               9002753.84211
#
#        mean of 95%   8772121.53522
#          95th %ile         8966322
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_1k   1   1             780        18472        0     1004     1024
# bin/../bin-riscv64/memcpy -N memcpy_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       718                        718
#                        max    601995                        897
#                       mean       861.60946                  793.55121
#                     median       781                        780*
#                     stddev      5214.20370                   34.38653
#             standard error        37.26047                    0.25301
#       99% confidence level        95.98298                    0.65174
#                       skew       103.63270                    1.50046
#                   kurtosis     11028.86250                    0.93426
#           time correlation         0.02525                    0.00542
#
#               elapsed time        20.00830
#                   run time        15.89052
#          getnsecs overhead      1416
#
#          number of samples     19583
#         number of outliers      1111
#    number of final samples     18472
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             718 |*                                     718.00000
#                  2             723 |*                                     726.50000
#                 29             728 |*                                     731.37931
#                  9             733 |*                                     734.22222
#                  7             738 |*                                     741.28571
#                 23             743 |*                                     744.30435
#                  4             748 |*                                     749.50000
#                 29             753 |*                                     756.24138
#                437             758 |****                                  760.73684
#               1393             763 |*************                         765.32448
#               2742             768 |***************************           770.21080
#               3230             773 |********************************      774.94861
#               2570             778 |*************************             779.86148
#               1642             783 |****************                      784.89708
#               1368             788 |*************                         789.77997
#                922             793 |*********                             794.86659
#                462             798 |****                                  799.62771
#                194             803 |*                                     804.62887
#                 48             808 |*                                     809.10417
#                 25             813 |*                                     814.52000
#                  9             818 |*                                     818.88889
#                 13             823 |*                                     824.38462
#                 16             828 |*                                     830.43750
#                 69             833 |*                                     835.39130
#                164             838 |*                                     840.22561
#                280             843 |**                                    845.03929
#                335             848 |***                                   850.09254
#                363             853 |***                                   854.95317
#                475             858 |****                                  859.98105
#                429             863 |****                                  864.83450
#                257             868 |**                                    869.33463
#
#                924           > 95% |*********                             881.44913
#
#        mean of 95%       788.92290
#          95th %ile             871
#
# WARNINGS
#     Actual benchmark run time only accounts for 79.4% of elapsed time.
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
memcpy_1m   1   1          498186        18151        0        1  1048576
# bin/../bin-riscv64/memcpy -N memcpy_1m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    489486                     489486
#                        max  55857379                     518487
#                       mean    548372.36544               500210.46135
#                     median    500686                     498186*
#                     stddev    365395.28666                 6102.30904
#             standard error      2321.52647                   45.29434
#       99% confidence level      5980.25218                  116.67822
#                       skew       140.05795                    1.32191
#                   kurtosis     21189.00597                    1.00876
#           time correlation        10.26069                    1.04238
#
#               elapsed time        20.00973
#                   run time        13.67576
#          getnsecs overhead      1416
#
#          number of samples     24773
#         number of outliers      6622
#    number of final samples     18151
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 33          489486 |*                                  489923.06061
#                154          490271 |**                                 490702.20779
#                165          491056 |**                                 491360.01818
#                103          491841 |*                                  492229.33010
#                174          492626 |**                                 493079.75862
#                255          493411 |***                                493845.07451
#                923          494196 |************                       494683.93499
#               2224          494981 |*****************************      495337.20144
#               1387          495766 |******************                 496074.44845
#               1160          496551 |***************                    497003.08621
#               2431          497336 |********************************   497751.09749
#               1563          498121 |********************               498495.78951
#                802          498906 |**********                         499294.79551
#                652          499691 |********                           500132.59356
#               1194          500476 |***************                    500811.37270
#                513          501261 |******                             501562.91618
#                369          502046 |****                               502462.86721
#                516          502831 |******                             503227.58915
#                298          503616 |***                                503993.10403
#                146          504401 |*                                  504778.54795
#                129          505186 |*                                  505553.41860
#                212          505971 |**                                 506387.09906
#                232          506756 |***                                507106.11638
#                127          507541 |*                                  507916.61417
#                169          508326 |**                                 508785.01775
#                169          509111 |**                                 509534.11243
#                149          509896 |*                                  510255.94631
#                177          510681 |**                                 511002.06215
#                170          511466 |**                                 511832.69412
#                199          512251 |**                                 512641.50251
#                221          513036 |**                                 513454.65611
#                227          513821 |**                                 514185.85022
#
#                908           > 95% |***********                        516332.73128
#
#        mean of 95%    499361.47793
#          95th %ile          514587
#
# WARNINGS
#     Actual benchmark run time only accounts for 68.3% of elapsed time.
#
# Usage: memcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memcpy()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10   1   1            4372         4353        0      205       10
# bin/../bin-riscv64/memmove -N memmove_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4148                       4148
#                        max    166143                       5140
#                       mean      4592.96337                 4462.19825
#                     median      4381                       4372*
#                     stddev      2546.97380                  225.85338
#             standard error        37.49606                    3.42320
#       99% confidence level        96.58986                    8.81816
#                       skew        57.22154                    1.33582
#                   kurtosis      3543.81216                    0.62084
#           time correlation         0.29828                    0.15796
#
#               elapsed time        20.01255
#                   run time         4.29153
#          getnsecs overhead      1416
#
#          number of samples      4614
#         number of outliers       261
#    number of final samples      4353
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12            4148 |*                                    4161.41667
#                 24            4174 |*                                    4190.20833
#                 63            4200 |***                                  4212.74603
#                139            4226 |********                             4239.39568
#                266            4252 |****************                     4266.30075
#                386            4278 |***********************              4291.52332
#                483            4304 |*****************************        4316.94203
#                518            4330 |********************************     4342.34363
#                426            4356 |**************************           4368.02113
#                330            4382 |********************                 4394.37576
#                267            4408 |****************                     4419.75655
#                201            4434 |************                         4445.54229
#                117            4460 |*******                              4471.88034
#                 72            4486 |****                                 4495.50000
#                 51            4512 |***                                  4520.76471
#                 25            4538 |*                                    4551.20000
#                 22            4564 |*                                    4576.54545
#                 13            4590 |*                                    4604.15385
#                 14            4616 |*                                    4627.57143
#                 27            4642 |*                                    4656.55556
#                 31            4668 |*                                    4681.06452
#                 53            4694 |***                                  4708.56604
#                 80            4720 |****                                 4731.36250
#                 77            4746 |****                                 4759.66234
#                 70            4772 |****                                 4781.77143
#                 82            4798 |*****                                4810.12195
#                 65            4824 |****                                 4835.00000
#                 64            4850 |***                                  4862.32812
#                 49            4876 |***                                  4889.10204
#                 39            4902 |**                                   4915.89744
#                 50            4928 |***                                  4941.70000
#                 19            4954 |*                                    4961.10526
#
#                218           > 95% |*************                        5042.38991
#
#        mean of 95%      4431.61016
#          95th %ile            4966
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.4% of elapsed time.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
            prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10k   1   1            4949        16325        0      179    10240
# bin/../bin-riscv64/memmove -N memmove_10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      4856                       4856
#                        max    762447                       5722
#                       mean      5263.82930                 5062.30407
#                     median      4959                       4949*
#                     stddev      6612.69915                  219.97207
#             standard error        49.85643                    1.72163
#       99% confidence level       128.43016                    4.43493
#                       skew       101.17536                    1.40541
#                   kurtosis     10802.14069                    0.46572
#           time correlation         0.09793                    0.03902
#
#               elapsed time        20.00682
#                   run time        16.41856
#          getnsecs overhead      1416
#
#          number of samples     17592
#         number of outliers      1267
#    number of final samples     16325
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 48            4856 |*                                    4873.02083
#                663            4878 |*****                                4891.90498
#               4135            4900 |********************************     4911.55961
#               2840            4922 |*********************                4931.28063
#               1373            4944 |**********                           4952.46395
#                522            4966 |****                                 4976.69732
#                801            4988 |******                               5000.15231
#               1015            5010 |*******                              5019.78325
#                645            5032 |****                                 5041.58605
#                326            5054 |**                                   5063.45399
#                211            5076 |*                                    5085.92891
#                135            5098 |*                                    5106.28889
#                 91            5120 |*                                    5130.45055
#                 57            5142 |*                                    5152.45614
#                 29            5164 |*                                    5173.34483
#                 32            5186 |*                                    5194.75000
#                 13            5208 |*                                    5219.46154
#                 14            5230 |*                                    5242.00000
#                 14            5252 |*                                    5262.78571
#                  6            5274 |*                                    5282.50000
#                  9            5296 |*                                    5308.66667
#                 44            5318 |*                                    5331.52273
#                150            5340 |*                                    5352.58667
#                333            5362 |**                                   5373.09610
#                424            5384 |***                                  5394.17217
#                315            5406 |**                                   5416.06349
#                295            5428 |**                                   5438.24746
#                286            5450 |**                                   5460.41259
#                288            5472 |**                                   5482.02083
#                244            5494 |*                                    5504.35656
#                150            5516 |*                                    5523.24000
#
#                817           > 95% |******                               5606.52387
#
#        mean of 95%      5033.63322
#          95th %ile            5532
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
            prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_10m   1   1         8738647         2456        0        1 10485760
# bin/../bin-riscv64/memmove -N memmove_10m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   5323724                    5323724
#                        max 240946580                   11956171
#                       mean   7930254.27629              7804602.20888
#                     median   8739947                    8738647*
#                     stddev   4914813.24011              1422884.98244
#             standard error     98851.39132                28711.48229
#       99% confidence level    254641.18405                73960.77839
#                       skew        43.11432                   -0.60054
#                   kurtosis      2041.79217                   -1.13974
#           time correlation      2094.95115                 1825.79594
#
#               elapsed time        20.02588
#                   run time        19.84804
#          getnsecs overhead      1416
#
#          number of samples      2472
#         number of outliers        16
#    number of final samples      2456
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                132         5323724 |******                            5386496.88636
#                183         5440547 |********                          5502851.25683
#                131         5557370 |******                            5609890.80153
#                 61         5674193 |**                                5722813.59016
#                 26         5791016 |*                                 5843700.76923
#                  5         5907839 |*                                 5975268.40000
#                  4         6024662 |*                                 6091079.00000
#                  4         6141485 |*                                 6195880.25000
#                  3         6258308 |*                                 6276897.66667
#                  0         6375131 |                                              -
#                  1         6491954 |*                                 6504232.00000
#                 59         6608777 |**                                6695131.76271
#                 70         6725600 |***                               6784849.82857
#                209         6842423 |*********                         6891373.65072
#                 23         6959246 |*                                 6995940.00000
#                 22         7076069 |*                                 7129732.00000
#                 10         7192892 |*                                 7232527.40000
#                  3         7309715 |*                                 7362904.66667
#                  1         7426538 |*                                 7445739.00000
#                  4         7543361 |*                                 7590390.25000
#                  7         7660184 |*                                 7705626.57143
#                  1         7777007 |*                                 7789242.00000
#                  2         7893830 |*                                 7951993.50000
#                  2         8010653 |*                                 8090244.50000
#                  0         8127476 |                                              -
#                  2         8244299 |*                                 8306495.50000
#                  3         8361122 |*                                 8454847.33333
#                  2         8477945 |*                                 8515747.50000
#                110         8594768 |*****                             8687695.20909
#                674         8711591 |********************************  8768856.88724
#                383         8828414 |******************                8879817.25849
#                196         8945237 |*********                         8993037.92347
#
#                123           > 95% |*****                             9489967.89431
#
#        mean of 95%   7715746.66695
#          95th %ile         9062050
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_1k   1   1             726        18431        0     1048     1024
# bin/../bin-riscv64/memmove -N memmove_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       685                        685
#                        max    688748                        834
#                       mean       812.04440                  738.99680
#                     median       729                        726*
#                     stddev      5744.71413                   31.50571
#             standard error        40.59691                    0.23207
#       99% confidence level       104.57765                    0.59781
#                       skew       107.06055                    1.59983
#                   kurtosis     11870.10315                    1.30711
#           time correlation         0.02546                    0.00492
#
#               elapsed time        20.00728
#                   run time        15.78401
#          getnsecs overhead      1416
#
#          number of samples     20024
#         number of outliers      1593
#    number of final samples     18431
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             685 |*                                     687.66667
#                  5             690 |*                                     693.20000
#                 45             695 |*                                     697.75556
#                184             700 |*                                     701.92935
#                327             705 |**                                    707.14679
#                440             710 |***                                   712.60000
#               3482             715 |**************************            717.76709
#               4165             720 |********************************      721.61465
#               1510             725 |***********                           726.77351
#               1943             730 |**************                        732.20278
#               1732             735 |*************                         736.70843
#                692             740 |*****                                 741.72832
#                415             745 |***                                   746.82169
#                273             750 |**                                    751.69963
#                112             755 |*                                     756.54464
#                 45             760 |*                                     762.04444
#                 23             765 |*                                     766.69565
#                 59             770 |*                                     772.00000
#                 59             775 |*                                     777.40678
#                114             780 |*                                     782.21053
#                214             785 |*                                     787.05140
#                312             790 |**                                    792.04167
#                345             795 |**                                    797.22609
#                373             800 |**                                    802.13673
#                394             805 |***                                   806.99239
#                240             810 |*                                     811.28333
#
#                922           > 95% |*******                               822.71150
#
#        mean of 95%       734.58850
#          95th %ile             813
#
# WARNINGS
#     Actual benchmark run time only accounts for 78.9% of elapsed time.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
           prc thr      nsecs/call      samples   errors cnt/samp     size
memmove_1m   1   1          499488        19795        0        1  1048576
# bin/../bin-riscv64/memmove -N memmove_1m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    489888                     489888
#                        max  39268461                     521489
#                       mean    529691.95366               501583.10654
#                     median    502488                     499488*
#                     stddev    253679.04674                 6636.65881
#             standard error      1595.74977                   47.17064
#       99% confidence level      4110.65141                  121.51156
#                       skew       141.01431                    1.15419
#                   kurtosis     21516.26890                    0.65978
#           time correlation         6.36490                    1.06896
#
#               elapsed time        20.00863
#                   run time        13.46143
#          getnsecs overhead      1416
#
#          number of samples     25272
#         number of outliers      5477
#    number of final samples     19795
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 25          489888 |*                                  490348.08000
#                125          490723 |*                                  491237.67200
#                263          491558 |***                                491958.84030
#                212          492393 |**                                 492766.42453
#                142          493228 |*                                  493644.41549
#                295          494063 |***                                494554.56271
#                948          494898 |***********                        495428.11709
#               2628          495733 |********************************   496154.17732
#               2212          496568 |**************************         496936.27939
#               1139          497403 |*************                      497818.20018
#               1231          498238 |**************                     498655.93176
#               1309          499073 |***************                    499457.63560
#               1017          499908 |************                       500338.11898
#                666          500743 |********                           501095.99249
#                406          501578 |****                               501929.82020
#                451          502413 |*****                              502892.82483
#               1142          503248 |*************                      503688.43870
#               1383          504083 |****************                   504454.27983
#                535          504918 |******                             505290.26168
#                288          505753 |***                                506089.57639
#                221          506588 |**                                 506980.95475
#                145          507423 |*                                  507830.32414
#                162          508258 |*                                  508694.42593
#                192          509093 |**                                 509527.81771
#                177          509928 |**                                 510349.31073
#                222          510763 |**                                 511183.79730
#                212          511598 |**                                 512036.42453
#                164          512433 |*                                  512871.21951
#                223          513268 |**                                 513677.60538
#                244          514103 |**                                 514546.47131
#                226          514938 |**                                 515320.63717
#                200          515773 |**                                 516167.81000
#
#                990           > 95% |************                       518779.45455
#
#        mean of 95%    500677.79495
#          95th %ile          516588
#
# WARNINGS
#     Actual benchmark run time only accounts for 67.3% of elapsed time.
#
# Usage: memmove
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memmove')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a relative alignment (default page aligned)]
#     [-f (rotate "from" buffer to keep it out of cache)]
#     [-t (rotate "to" buffer to keep it out of cache)]
# notes: measures memmove()
        prc thr      nsecs/call      samples   errors cnt/samp     size
memrand   1   1       114862567           88        0        2 134217728 
# bin/../bin-riscv64/memrand -N memrand -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 128m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 103718294                  111769066
#                        max 124550230                  119219538
#                       mean 115126713.42857            115276827.86364
#                     median 114703616                  114862567*
#                     stddev   2667940.41071              1837256.32114
#             standard error    279676.14778               195852.18190
#       99% confidence level    720445.75669               504515.22057
#                       skew        -0.88703                    0.76700
#                   kurtosis         6.52928                   -0.51745
#           time correlation     84661.76003                68295.62872
#
#               elapsed time        25.24113
#                   run time        20.95319
#          getnsecs overhead      1416
#
#          number of samples        91
#         number of outliers         3
#    number of final samples        88
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1       111769066 |**                              111769066.00000
#                  0       111993414 |                                              -
#                  0       112217762 |                                              -
#                  0       112442110 |                                              -
#                  0       112666458 |                                              -
#                  0       112890806 |                                              -
#                  0       113115154 |                                              -
#                 11       113339502 |***************************     113471108.00000
#                 13       113563850 |********************************113676627.46154
#                  5       113788198 |************                    113886706.80000
#                  8       114012546 |*******************             114107375.25000
#                  1       114236894 |**                              114396168.00000
#                  2       114461242 |****                            114494649.00000
#                  4       114685590 |*********                       114740448.50000
#                  6       114909938 |**************                  115038073.00000
#                  5       115134286 |************                    115246373.40000
#                  2       115358634 |****                            115440092.50000
#                  1       115582982 |**                              115770766.00000
#                  0       115807330 |                                              -
#                  6       116031678 |**************                  116143685.16667
#                  4       116256026 |*********                       116440681.25000
#                  1       116480374 |**                              116688361.00000
#                  1       116704722 |**                              116909821.00000
#                  0       116929070 |                                              -
#                  3       117153418 |*******                         117282014.66667
#                  0       117377766 |                                              -
#                  2       117602114 |****                            117652684.50000
#                  0       117826462 |                                              -
#                  2       118050810 |****                            118229320.50000
#                  1       118275158 |**                              118489079.00000
#                  2       118499506 |****                            118591905.00000
#                  2       118723854 |****                            118855941.00000
#
#                  5           > 95% |************                    119128909.20000
#
#        mean of 95% 115044774.77108
#          95th %ile       118948186
#
# WARNINGS
#     Too few samples, 91 < 100, consider running test longer, or for a least 100 samples
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_128k   1   1          111674        17293        0        7   131072 
# bin/../bin-riscv64/memrand -N memrand_128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 128k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    108137                     108137
#                        max    292645                     130237
#                       mean    114809.67147               114024.64014
#                     median    111699                     111674*
#                     stddev      7532.03381                 5405.10382
#             standard error        56.48831                   41.10256
#       99% confidence level       145.51389                  105.88019
#                       skew         3.78598                    1.28727
#                   kurtosis        37.63673                    0.28745
#           time correlation         1.12605                    0.94173
#
#               elapsed time        20.00814
#                   run time        16.32565
#          getnsecs overhead      1416
#
#          number of samples     17779
#         number of outliers       486
#    number of final samples     17293
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                172          108137 |*                                  108480.06395
#               1398          108677 |**********                         108993.90057
#               1665          109217 |************                       109488.19039
#                699          109757 |*****                              109932.18741
#                511          110297 |***                                110601.74560
#               1185          110837 |********                           111139.76962
#               4224          111377 |********************************   111622.81084
#               1079          111917 |********                           112126.43744
#                410          112457 |***                                112710.02927
#                526          112997 |***                                113288.79468
#                789          113537 |*****                              113844.54626
#                631          114077 |****                               114289.73376
#                134          114617 |*                                  114840.51493
#                 63          115157 |*                                  115365.93651
#                 14          115697 |*                                  115969.85714
#                  7          116237 |*                                  116352.71429
#                  5          116777 |*                                  116891.80000
#                  3          117317 |*                                  117586.66667
#                  6          117857 |*                                  118140.83333
#                  7          118397 |*                                  118799.71429
#                 43          118937 |*                                  119192.41860
#                103          119477 |*                                  119795.39806
#                185          120017 |*                                  120301.45946
#                207          120557 |*                                  120784.59420
#                193          121097 |*                                  121369.03109
#                288          121637 |**                                 121900.75347
#                412          122177 |***                                122480.06311
#                426          122717 |***                                122989.07277
#                343          123257 |**                                 123506.19534
#                249          123797 |*                                  124054.56225
#                220          124337 |*                                  124613.25455
#                231          124877 |*                                  125119.90476
#
#                865           > 95% |******                             127128.05549
#
#        mean of 95%    113334.69284
#          95th %ile          125387
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_16k   1   1           12188        16391        0       78    16384 
# bin/../bin-riscv64/memrand -N memrand_16k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 16k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     12049                      12049
#                        max    150044                      14122
#                       mean     12602.03667                12514.55659
#                     median     12193                      12188*
#                     stddev      1369.35571                  535.92990
#             standard error        10.54756                    4.18606
#       99% confidence level        27.17051                   10.78329
#                       skew        64.28304                    1.27267
#                   kurtosis      6141.25291                    0.06712
#           time correlation         0.11827                    0.09536
#
#               elapsed time        20.00632
#                   run time        16.70610
#          getnsecs overhead      1416
#
#          number of samples     16855
#         number of outliers       464
#    number of final samples     16391
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                275           12049 |*                                   12087.35636
#               1956           12098 |*********                           12132.68354
#               6301           12147 |********************************    12163.57784
#                390           12196 |*                                   12208.08205
#                 56           12245 |*                                   12273.19643
#                373           12294 |*                                   12325.87131
#                838           12343 |****                                12369.92124
#               1610           12392 |********                            12416.04161
#                565           12441 |**                                  12457.32212
#                 95           12490 |*                                   12505.33684
#                 19           12539 |*                                   12558.15789
#                 12           12588 |*                                   12607.16667
#                  3           12637 |*                                   12672.66667
#                  4           12686 |*                                   12705.00000
#                  0           12735 |                                              -
#                  1           12784 |*                                   12829.00000
#                  3           12833 |*                                   12864.33333
#                  2           12882 |*                                   12916.00000
#                  1           12931 |*                                   12956.00000
#                  4           12980 |*                                   13015.25000
#                  1           13029 |*                                   13061.00000
#                 13           13078 |*                                   13116.15385
#                126           13127 |*                                   13152.56349
#                452           13176 |**                                  13202.95354
#                582           13225 |**                                  13247.79210
#                450           13274 |**                                  13297.52222
#                239           13323 |*                                   13344.09623
#                214           13372 |*                                   13396.46262
#                293           13421 |*                                   13446.10580
#                321           13470 |*                                   13493.05296
#                271           13519 |*                                   13540.87823
#                101           13568 |*                                   13578.21782
#
#                820           > 95% |****                                13790.19146
#
#        mean of 95%     12447.37910
#          95th %ile           13592
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_16m   1   1        16464814          573        0        2 16777216 
# bin/../bin-riscv64/memrand -N memrand_16m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 16m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  16101062                   16101062
#                        max  19204940                   17180517
#                       mean  16547316.83219             16524396.43805
#                     median  16470214                   16464814*
#                     stddev    285205.01508               221691.70693
#             standard error     11801.86750                 9261.30392
#       99% confidence level     30401.61067                23857.11890
#                       skew         2.62689                    0.65549
#                   kurtosis        15.72322                   -0.27000
#           time correlation      1459.30483                 1299.28431
#
#               elapsed time        20.04257
#                   run time        19.32809
#          getnsecs overhead      1416
#
#          number of samples       584
#         number of outliers        11
#    number of final samples       573
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        16101062 |*                                16101062.00000
#                  3        16126547 |**                               16132778.66667
#                  2        16152032 |*                                16166488.00000
#                  6        16177517 |****                             16189137.00000
#                  9        16203002 |*******                          16213673.55556
#                 15        16228487 |************                     16240465.40000
#                 18        16253972 |**************                   16264831.11111
#                 37        16279457 |******************************   16293393.62162
#                 28        16304942 |**********************           16320187.71429
#                 28        16330427 |**********************           16342320.07143
#                 34        16355912 |***************************      16368052.58824
#                 38        16381397 |*******************************  16392600.05263
#                 39        16406882 |******************************** 16419015.92308
#                 24        16432367 |*******************              16443617.75000
#                 19        16457852 |***************                  16470390.26316
#                 16        16483337 |*************                    16493157.68750
#                 16        16508822 |*************                    16521560.87500
#                 14        16534307 |***********                      16546867.21429
#                 10        16559792 |********                         16571978.20000
#                 15        16585277 |************                     16596473.73333
#                 20        16610762 |****************                 16621565.95000
#                 23        16636247 |******************               16649126.34783
#                 15        16661732 |************                     16669560.13333
#                 22        16687217 |******************               16698777.36364
#                 16        16712702 |*************                    16727104.81250
#                 13        16738187 |**********                       16752702.61538
#                 14        16763672 |***********                      16775561.07143
#                  9        16789157 |*******                          16798653.33333
#                  8        16814642 |******                           16825420.75000
#                 12        16840127 |*********                        16851131.75000
#                 14        16865612 |***********                      16882283.07143
#                  6        16891097 |****                             16902690.83333
#
#                 29           > 95% |***********************          17036719.65517
#
#        mean of 95%  16497085.09007
#          95th %ile        16916564
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_1k   1   1             765        17290        0     1181     1024 
# bin/../bin-riscv64/memrand -N memrand_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       756                        756
#                        max    143544                        884
#                       mean       800.22150                  783.93956
#                     median       765                        765*
#                     stddev      1118.03932                   33.33788
#             standard error         8.37653                    0.25354
#       99% confidence level        21.57794                    0.65311
#                       skew       119.99028                    1.32131
#                   kurtosis     15033.81789                    0.18647
#           time correlation         0.01055                    0.00559
#
#               elapsed time        20.00782
#                   run time        16.59857
#          getnsecs overhead      1416
#
#          number of samples     17815
#         number of outliers       525
#    number of final samples     17290
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                770             756 |***                                   758.23117
#               7013             760 |********************************      761.82675
#               1719             764 |*******                               764.88540
#                253             768 |*                                     769.19763
#                638             772 |**                                    773.74295
#               1823             776 |********                              777.81624
#                972             780 |****                                  780.93107
#                154             784 |*                                     785.20130
#                 28             788 |*                                     788.85714
#                 14             792 |*                                     793.42857
#                  4             796 |*                                     796.75000
#                  6             800 |*                                     801.66667
#                  2             804 |*                                     805.50000
#                  1             808 |*                                     810.00000
#                  3             812 |*                                     815.00000
#                  8             816 |*                                     818.00000
#                 14             820 |*                                     822.21429
#                158             824 |*                                     825.96835
#                602             828 |**                                    829.76412
#                664             832 |***                                   833.50151
#                435             836 |*                                     837.19770
#                276             840 |*                                     841.57971
#                423             844 |*                                     845.59338
#                366             848 |*                                     849.33607
#                 79             852 |*                                     852.00000
#
#                865           > 95% |***                                   863.42197
#
#        mean of 95%       779.75373
#          95th %ile             852
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_1m   1   1          802252        10864        0        2  1048576 
# bin/../bin-riscv64/memrand -N memrand_1m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    787201                     787201
#                        max   1968914                     898402
#                       mean    825819.34901               817438.05376
#                     median    802551                     802252*
#                     stddev     67492.72956                27062.45294
#             standard error       636.92230                  259.64041
#       99% confidence level      1640.71183                  668.83369
#                       skew         7.62879                    0.65822
#                   kurtosis        76.23839                   -0.87770
#           time correlation        11.73163                    8.09904
#
#               elapsed time        20.00936
#                   run time        18.56215
#          getnsecs overhead      1416
#
#          number of samples     11229
#         number of outliers       365
#    number of final samples     10864
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                213          787201 |***                                788825.88263
#               1869          789583 |********************************   790958.57089
#               1048          791965 |*****************                  792830.34160
#                254          794347 |****                               795293.91732
#                351          796729 |******                             798218.67806
#               1180          799111 |********************               800501.00678
#               1150          801493 |*******************                802460.52174
#                248          803875 |****                               804797.64516
#                 53          806257 |*                                  807364.22642
#                 39          808639 |*                                  809803.61538
#                 47          811021 |*                                  811958.59574
#                 26          813403 |*                                  814601.26923
#                 17          815785 |*                                  817177.58824
#                 16          818167 |*                                  819407.31250
#                  4          820549 |*                                  821088.50000
#                  3          822931 |*                                  823935.00000
#                  5          825313 |*                                  825731.60000
#                  2          827695 |*                                  829276.50000
#                 26          830077 |*                                  831655.26923
#                166          832459 |**                                 833958.87952
#                625          834841 |**********                         836153.42880
#                387          837223 |******                             838249.44703
#                220          839605 |***                                840843.85455
#                435          841987 |*******                            843264.50345
#                551          844369 |*********                          845557.25771
#                437          846751 |*******                            847843.66362
#                286          849133 |****                               850188.81818
#                199          851515 |***                                852652.71859
#                155          853897 |**                                 855070.35484
#                134          856279 |**                                 857487.44030
#                 94          858661 |*                                  859681.77660
#                 80          861043 |*                                  862184.50000
#
#                544           > 95% |*********                          876211.47794
#
#        mean of 95%    814339.91977
#          95th %ile          863402
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_256k   1   1        19040565          508        0        2   262144 
# bin/../bin-riscv64/memrand -N memrand_256k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 256k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  18329005                   18329005
#                        max  23745369                   19891569
#                       mean  19004756.25243             18978856.45866
#                     median  19065660                   19040565*
#                     stddev    402873.01769               309012.36375
#             standard error     17752.70626                13710.20662
#       99% confidence level     45730.97131                35317.49226
#                       skew         3.60464                    0.00984
#                   kurtosis        37.01733                   -1.14338
#           time correlation      2287.70671                 2072.31560
#
#               elapsed time        20.04528
#                   run time        19.57563
#          getnsecs overhead      1416
#
#          number of samples       515
#         number of outliers         7
#    number of final samples       508
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5        18329005 |*****                            18345175.80000
#                  1        18362462 |*                                18385006.00000
#                  2        18395919 |**                               18417832.00000
#                  2        18429376 |**                               18448757.00000
#                  0        18462833 |                                              -
#                 13        18496290 |*************                    18515792.46154
#                 15        18529747 |***************                  18549667.73333
#                 21        18563204 |*********************            18581359.85714
#                 24        18596661 |************************         18614543.12500
#                 18        18630118 |******************               18645070.72222
#                 18        18663575 |******************               18678862.55556
#                 29        18697032 |*****************************    18715837.31034
#                 27        18730489 |***************************      18745142.14815
#                 21        18763946 |*********************            18785702.04762
#                 19        18797403 |*******************              18818137.73684
#                 16        18830860 |****************                 18846031.06250
#                 14        18864317 |**************                   18877138.28571
#                  1        18897774 |*                                18920159.00000
#                  3        18931231 |***                              18941726.66667
#                  2        18964688 |**                               18984264.00000
#                  2        18998145 |**                               19016387.00000
#                  4        19031602 |****                             19049300.75000
#                  4        19065059 |****                             19081951.25000
#                 25        19098516 |*************************        19116496.12000
#                 32        19131973 |******************************** 19149910.37500
#                 25        19165430 |*************************        19182069.40000
#                 25        19198887 |*************************        19215544.28000
#                 31        19232344 |*******************************  19248234.67742
#                 23        19265801 |***********************          19283098.60870
#                 22        19299258 |**********************           19317822.36364
#                 19        19332715 |*******************              19352673.52632
#                 19        19366172 |*******************              19378881.42105
#
#                 26           > 95% |**************************       19496834.26923
#
#        mean of 95%  18950915.74689
#          95th %ile        19399615
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_2k   1   1            1521        17138        0      607     2048 
# bin/../bin-riscv64/memrand -N memrand_2k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 2k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1509                       1509
#                        max    147344                       1762
#                       mean      1584.56121                 1562.90722
#                     median      1521                       1521*
#                     stddev      1153.05535                   66.30554
#             standard error         8.69642                    0.50649
#       99% confidence level        22.40199                    1.30471
#                       skew       117.98727                    1.27501
#                   kurtosis     14638.95477                    0.07083
#           time correlation         0.01776                    0.01126
#
#               elapsed time        20.00701
#                   run time        16.80615
#          getnsecs overhead      1416
#
#          number of samples     17580
#         number of outliers       442
#    number of final samples     17138
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                925            1509 |****                                 1511.98162
#               7239            1515 |********************************     1518.80646
#               1176            1521 |*****                                1521.80017
#                135            1527 |*                                    1528.94074
#                109            1533 |*                                    1536.27523
#                442            1539 |*                                    1541.67421
#                911            1545 |****                                 1548.33919
#               1565            1551 |******                               1553.26965
#                458            1557 |**                                   1558.82969
#                117            1563 |*                                    1564.92308
#                 35            1569 |*                                    1571.14286
#                 13            1575 |*                                    1577.69231
#                 10            1581 |*                                    1583.90000
#                  5            1587 |*                                    1588.80000
#                  7            1593 |*                                    1595.14286
#                  6            1599 |*                                    1602.83333
#                  8            1605 |*                                    1608.75000
#                  1            1611 |*                                    1613.00000
#                  3            1617 |*                                    1621.33333
#                  1            1623 |*                                    1623.00000
#                  1            1629 |*                                    1634.00000
#                  5            1635 |*                                    1639.20000
#                163            1641 |*                                    1643.84663
#                447            1647 |*                                    1650.36689
#                471            1653 |**                                   1655.29512
#                515            1659 |**                                   1661.19417
#                276            1665 |*                                    1667.49638
#                230            1671 |*                                    1673.66522
#                308            1677 |*                                    1679.90584
#                356            1683 |*                                    1685.46067
#                266            1689 |*                                    1691.53383
#                 77            1695 |*                                    1695.31169
#
#                857           > 95% |***                                  1719.64877
#
#        mean of 95%      1554.65665
#          95th %ile            1696
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_2m   1   1        79603630          149        0        2  2097152 
# bin/../bin-riscv64/memrand -N memrand_2m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 2m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  77530900                   77530900
#                        max  88246778                   82129489
#                       mean  79761266.98052             79517500.94631
#                     median  79628566                   79603630*
#                     stddev   1626176.69384               935579.69823
#             standard error    131041.05235                76645.67530
#       99% confidence level    337561.75084               197439.25957
#                       skew         2.85032                    0.02494
#                   kurtosis        11.04505                   -0.57083
#           time correlation     28620.22698                21436.66963
#
#               elapsed time        25.10502
#                   run time        24.56669
#          getnsecs overhead      1416
#
#          number of samples       154
#         number of outliers         5
#    number of final samples       149
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        77530900 |***                              77530900.00000
#                  3        77637501 |**********                       77699590.33333
#                  0        77744102 |                                              -
#                  2        77850703 |*******                          77924608.00000
#                  5        77957304 |*****************                78013519.60000
#                  1        78063905 |***                              78133114.00000
#                  4        78170506 |**************                   78207010.25000
#                  3        78277107 |**********                       78319046.00000
#                  5        78383708 |*****************                78450386.00000
#                  6        78490309 |*********************            78528573.16667
#                  3        78596910 |**********                       78664501.00000
#                  7        78703511 |************************         78756328.28571
#                  3        78810112 |**********                       78889943.66667
#                  4        78916713 |**************                   78994161.25000
#                  5        79023314 |*****************                79086305.00000
#                  7        79129915 |************************         79196623.71429
#                  5        79236516 |*****************                79276061.20000
#                  5        79343117 |*****************                79404464.00000
#                  2        79449718 |*******                          79471420.50000
#                  9        79556319 |******************************** 79612361.00000
#                  7        79662920 |************************         79722046.28571
#                  7        79769521 |************************         79819401.71429
#                  6        79876122 |*********************            79936439.50000
#                  6        79982723 |*********************            80050082.66667
#                  5        80089324 |*****************                80132760.60000
#                  4        80195925 |**************                   80264749.75000
#                  5        80302526 |*****************                80370458.00000
#                  7        80409127 |************************         80475934.14286
#                  4        80515728 |**************                   80551864.25000
#                  6        80622329 |*********************            80681696.50000
#                  3        80728930 |**********                       80774345.33333
#                  1        80835531 |***                              80851832.00000
#
#                  8           > 95% |****************************     81316525.75000
#
#        mean of 95%  79415428.61702
#          95th %ile        80942127
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_32k   1   1           24642        16158        0       39    32768 
# bin/../bin-riscv64/memrand -N memrand_32k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 32k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     24327                      24327
#                        max    180895                      28595
#                       mean     25498.15264                25286.32467
#                     median     24675                      24642*
#                     stddev      2112.09447                 1104.46538
#             standard error        16.32483                    8.68877
#       99% confidence level        42.05275                   22.38227
#                       skew        29.96884                    1.26296
#                   kurtosis      1952.17824                    0.12333
#           time correlation         0.25628                    0.20266
#
#               elapsed time        20.00643
#                   run time        16.88389
#          getnsecs overhead      1416
#
#          number of samples     16739
#         number of outliers       581
#    number of final samples     16158
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                655           24327 |*****                               24396.02901
#               3657           24427 |********************************    24487.73640
#               3130           24527 |***************************         24577.78466
#               1115           24627 |*********                           24648.65112
#                135           24727 |*                                   24791.31111
#                462           24827 |****                                24880.27056
#                952           24927 |********                            24982.69643
#               1104           25027 |*********                           25072.92301
#                758           25127 |******                              25171.00264
#                194           25227 |*                                   25263.42784
#                 32           25327 |*                                   25362.71875
#                  9           25427 |*                                   25462.44444
#                  9           25527 |*                                   25577.22222
#                  5           25627 |*                                   25685.80000
#                  5           25727 |*                                   25788.20000
#                 13           25827 |*                                   25865.76923
#                  5           25927 |*                                   25973.80000
#                  6           26027 |*                                   26082.33333
#                  4           26127 |*                                   26185.75000
#                  7           26227 |*                                   26273.71429
#                 32           26327 |*                                   26404.87500
#                130           26427 |*                                   26494.76923
#                282           26527 |**                                  26574.57801
#                448           26627 |***                                 26674.80357
#                452           26727 |***                                 26775.49336
#                324           26827 |**                                  26875.33333
#                250           26927 |**                                  26973.41200
#                233           27027 |**                                  27074.44206
#                296           27127 |**                                  27178.06081
#                268           27227 |**                                  27276.85075
#                219           27327 |*                                   27373.47489
#                159           27427 |*                                   27474.05660
#
#                808           > 95% |*******                             27963.20916
#
#        mean of 95%     25145.41765
#          95th %ile           27520
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_32m   1   1        26271337          287        0        2 33554432 
# bin/../bin-riscv64/memrand -N memrand_32m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 32m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26067283                   26067283
#                        max  35171397                   26874191
#                       mean  26772479.56534             26322332.24739
#                     median  26361086                   26271337*
#                     stddev   1114885.74906               191594.16173
#             standard error     59423.61009                11309.44578
#       99% confidence level    153075.21959                29133.13232
#                       skew         2.89818                    0.82027
#                   kurtosis        11.38092                   -0.16692
#           time correlation      7839.40931                 2211.78698
#
#               elapsed time        20.09621
#                   run time        18.84832
#          getnsecs overhead      1416
#
#          number of samples       352
#         number of outliers        65
#    number of final samples       287
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        26067283 |******                           26080541.50000
#                 14        26088029 |**************                   26100647.85714
#                 18        26108775 |*******************              26118881.00000
#                 19        26129521 |********************             26141689.57895
#                 30        26150267 |******************************** 26161574.23333
#                 17        26171013 |******************               26180764.05882
#                  9        26191759 |*********                        26201879.00000
#                 13        26212505 |*************                    26221862.23077
#                 10        26233251 |**********                       26246100.60000
#                  8        26253997 |********                         26262511.00000
#                 13        26274743 |*************                    26286589.69231
#                  3        26295489 |***                              26307985.66667
#                 10        26316235 |**********                       26326505.70000
#                  4        26336981 |****                             26350774.25000
#                 13        26357727 |*************                    26369193.76923
#                  9        26378473 |*********                        26388696.66667
#                  6        26399219 |******                           26403393.50000
#                  5        26419965 |*****                            26435294.80000
#                 12        26440711 |************                     26450498.50000
#                  6        26461457 |******                           26472302.66667
#                  8        26482203 |********                         26488649.00000
#                  7        26502949 |*******                          26512751.14286
#                  9        26523695 |*********                        26536037.11111
#                  6        26544441 |******                           26552870.33333
#                  3        26565187 |***                              26572289.00000
#                  3        26585933 |***                              26594637.66667
#                  3        26606679 |***                              26625021.66667
#                  3        26627425 |***                              26641054.33333
#                  0        26648171 |                                              -
#                  2        26668917 |**                               26676237.50000
#                  2        26689663 |**                               26699388.00000
#                  1        26710409 |*                                26715838.00000
#
#                 15           > 95% |****************                 26782956.26667
#
#        mean of 95%  26296930.18750
#          95th %ile        26731139
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_4k   1   1            3044        16281        0      306     4096 
# bin/../bin-riscv64/memrand -N memrand_4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      3014                       3014
#                        max    136494                       3518
#                       mean      3165.04004                 3122.21866
#                     median      3045                       3044*
#                     stddev      1086.55060                  132.24912
#             standard error         8.33199                    1.03646
#       99% confidence level        21.46321                    2.66992
#                       skew       110.58979                    1.34776
#                   kurtosis     13382.03588                    0.26704
#           time correlation         0.03529                    0.02340
#
#               elapsed time        20.00783
#                   run time        16.44770
#          getnsecs overhead      1416
#
#          number of samples     17006
#         number of outliers       725
#    number of final samples     16281
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                636            3014 |***                                  3021.17453
#               5327            3026 |********************************     3034.47682
#               2944            3038 |*****************                    3041.64606
#                154            3050 |*                                    3053.11039
#                116            3062 |*                                    3069.54310
#                444            3074 |**                                   3080.25901
#                796            3086 |****                                 3092.79648
#               1525            3098 |*********                            3103.33770
#                546            3110 |***                                  3113.86996
#                110            3122 |*                                    3126.10909
#                 38            3134 |*                                    3138.65789
#                 12            3146 |*                                    3150.58333
#                  6            3158 |*                                    3163.66667
#                  5            3170 |*                                    3172.60000
#                  6            3182 |*                                    3187.16667
#                  3            3194 |*                                    3199.66667
#                  3            3206 |*                                    3213.00000
#                  3            3218 |*                                    3222.33333
#                  2            3230 |*                                    3231.50000
#                  2            3242 |*                                    3247.50000
#                  3            3254 |*                                    3259.66667
#                  4            3266 |*                                    3270.75000
#                 49            3278 |*                                    3285.75510
#                225            3290 |*                                    3296.44444
#                559            3302 |***                                  3307.50984
#                449            3314 |**                                   3319.78396
#                354            3326 |**                                   3330.77684
#                154            3338 |*                                    3343.36364
#                220            3350 |*                                    3355.77273
#                279            3362 |*                                    3367.64516
#                275            3374 |*                                    3379.21818
#                217            3386 |*                                    3389.79263
#
#                815           > 95% |****                                 3441.82945
#
#        mean of 95%      3105.37637
#          95th %ile            3394
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_4m   1   1         3450789         2401        0        2  4194304 
# bin/../bin-riscv64/memrand -N memrand_4m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   3349888                    3349888
#                        max   4991360                    3580141
#                       mean   3532769.26537              3446114.00583
#                     median   3456490                    3450789*
#                     stddev    239304.25802                44912.83197
#             standard error      4537.84787                  916.58841
#       99% confidence level     11689.49610                 2361.13174
#                       skew         2.46243                    0.04102
#                   kurtosis         5.18902                   -0.05864
#           time correlation       206.50950                   62.47839
#
#               elapsed time        20.01845
#                   run time        19.65320
#          getnsecs overhead      1416
#
#          number of samples      2781
#         number of outliers       380
#    number of final samples      2401
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  9         3349888 |*                                 3352404.66667
#                 16         3355184 |**                                3357638.00000
#                 40         3360480 |*******                           3363160.60000
#                 73         3365776 |*************                     3368762.10959
#                 75         3371072 |*************                     3373742.25333
#                 84         3376368 |***************                   3379307.90476
#                 58         3381664 |**********                        3384094.36207
#                 70         3386960 |************                      3389380.55714
#                 49         3392256 |*********                         3394968.18367
#                 43         3397552 |*******                           3400258.32558
#                 27         3402848 |****                              3405246.11111
#                 28         3408144 |*****                             3410560.10714
#                 12         3413440 |**                                3416201.25000
#                 26         3418736 |****                              3421540.88462
#                 63         3424032 |***********                       3426900.90476
#                 90         3429328 |****************                  3432239.05556
#                127         3434624 |***********************           3437403.26772
#                147         3439920 |***************************       3442603.38095
#                153         3445216 |****************************      3447895.15033
#                174         3450512 |********************************  3453003.94253
#                153         3455808 |****************************      3458494.96078
#                148         3461104 |***************************       3463855.93919
#                142         3466400 |**************************        3468933.97887
#                112         3471696 |********************              3474377.98214
#                 70         3476992 |************                      3479129.04286
#                 76         3482288 |*************                     3484839.67105
#                 53         3487584 |*********                         3490114.37736
#                 44         3492880 |********                          3494950.06818
#                 25         3498176 |****                              3500849.88000
#                 32         3503472 |*****                             3505793.09375
#                 35         3508768 |******                            3511034.28571
#                 26         3514064 |****                              3516576.69231
#
#                121           > 95% |**********************            3545066.87603
#
#        mean of 95%   3440862.55965
#          95th %ile         3519340
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
             prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_512k   1   1          409648        18548        0        2   524288 
# bin/../bin-riscv64/memrand -N memrand_512k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 512k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    404348                     404348
#                        max    926955                     478699
#                       mean    423156.63606               420356.19889
#                     median    409848                     409648*
#                     stddev     26379.03187                19459.39893
#             standard error       190.75217                  142.88310
#       99% confidence level       491.37759                  368.06688
#                       skew         3.48614                    1.47811
#                   kurtosis        29.53930                    0.59018
#           time correlation         3.54018                    2.93959
#
#               elapsed time        20.00773
#                   run time        16.21196
#          getnsecs overhead      1416
#
#          number of samples     19124
#         number of outliers       576
#    number of final samples     18548
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                335          404348 |*                                  405668.44776
#               2617          406178 |************                       407433.32671
#               6583          408008 |********************************   408754.03069
#               1477          409838 |*******                            410521.79824
#                131          411668 |*                                  412483.11450
#                357          413498 |*                                  414608.92437
#                986          415328 |****                               416347.08722
#               1373          417158 |******                             418038.56810
#                664          418988 |***                                419754.25000
#                160          420818 |*                                  421483.00000
#                 61          422648 |*                                  423406.19672
#                 18          424478 |*                                  425403.55556
#                 16          426308 |*                                  427263.62500
#                 25          428138 |*                                  428842.00000
#                 23          429968 |*                                  430782.78261
#                 11          431798 |*                                  432639.00000
#                 18          433628 |*                                  434559.11111
#                 12          435458 |*                                  436494.00000
#                  4          437288 |*                                  437885.50000
#                  5          439118 |*                                  439618.40000
#                  3          440948 |*                                  441681.33333
#                  3          442778 |*                                  443731.33333
#                  3          444608 |*                                  445431.33333
#                 47          446438 |*                                  447751.61702
#                224          448268 |*                                  449377.27679
#                549          450098 |**                                 451010.79053
#                550          451928 |**                                 452798.31455
#                428          453758 |**                                 454580.79439
#                238          455588 |*                                  456380.23109
#                176          457418 |*                                  458318.63636
#                249          459248 |*                                  460149.78313
#                274          461078 |*                                  461891.50365
#
#                928           > 95% |****                               468445.40517
#
#        mean of 95%    417823.46430
#          95th %ile          462899
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_64k   1   1           49165        16179        0       19    65536 
# bin/../bin-riscv64/memrand -N memrand_64k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 64k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     48395                      48395
#                        max    375014                      57050
#                       mean     50668.56487                50360.54657
#                     median     49200                      49165*
#                     stddev      4160.03973                 2231.75257
#             standard error        32.32421                   17.54568
#       99% confidence level        83.26718                   45.19767
#                       skew        33.94492                    1.19090
#                   kurtosis      2385.15234                   -0.09117
#           time correlation         0.49523                    0.41350
#
#               elapsed time        20.00758
#                   run time        16.68957
#          getnsecs overhead      1416
#
#          number of samples     16563
#         number of outliers       384
#    number of final samples     16179
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                502           48395 |***                                 48505.69522
#               4359           48594 |********************************    48715.76852
#               2248           48793 |****************                    48872.17749
#               1136           48992 |********                            49117.89877
#                431           49191 |***                                 49260.87935
#                427           49390 |***                                 49498.18033
#                868           49589 |******                              49706.05530
#               1093           49788 |********                            49877.31930
#                586           49987 |****                                50079.22184
#                282           50186 |**                                  50267.09220
#                 94           50385 |*                                   50467.39362
#                 30           50584 |*                                   50654.33333
#                 10           50783 |*                                   50830.50000
#                 20           50982 |*                                   51116.75000
#                 11           51181 |*                                   51301.81818
#                 40           51380 |*                                   51449.42500
#                 14           51579 |*                                   51669.71429
#                  5           51778 |*                                   51863.00000
#                  8           51977 |*                                   52085.62500
#                  8           52176 |*                                   52289.37500
#                 13           52375 |*                                   52464.23077
#                 48           52574 |*                                   52707.33333
#                238           52773 |*                                   52903.21429
#                395           52972 |**                                  53059.17722
#                452           53171 |***                                 53268.58186
#                380           53370 |**                                  53470.83158
#                268           53569 |*                                   53674.18657
#                309           53768 |**                                  53869.12621
#                344           53967 |**                                  54066.86047
#                338           54166 |**                                  54265.26627
#                246           54365 |*                                   54457.23577
#                167           54564 |*                                   54648.94012
#
#                809           > 95% |*****                               55603.88010
#
#        mean of 95%     50084.56370
#          95th %ile           54739
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
            prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_64m   1   1        64385226          184        0        2 67108864 
# bin/../bin-riscv64/memrand -N memrand_64m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 64m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  53266067                   53266067
#                        max  69501988                   69501988
#                       mean  62096891.34783             62096891.34783
#                     median  64385226                   64385226*
#                     stddev   5056091.60656              5056091.60656
#             standard error    372740.01848               372740.01848
#       99% confidence level    960178.28762               960178.28762
#                       skew        -0.99382                   -0.99382
#                   kurtosis        -0.78015                   -0.78015
#           time correlation     82082.03404                82082.03404
#
#               elapsed time        25.13832
#                   run time        22.85192
#          getnsecs overhead      1416
#
#          number of samples       184
#         number of outliers         0
#    number of final samples       184
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 38        53266067 |******************************** 53455485.28947
#                  6        53689315 |*****                            53772423.83333
#                  0        54112563 |                                              -
#                  0        54535811 |                                              -
#                  0        54959059 |                                              -
#                  1        55382307 |*                                55402447.00000
#                  0        55805555 |                                              -
#                  1        56228803 |*                                56382210.00000
#                  0        56652051 |                                              -
#                  0        57075299 |                                              -
#                  0        57498547 |                                              -
#                  0        57921795 |                                              -
#                  1        58345043 |*                                58506091.00000
#                  0        58768291 |                                              -
#                  1        59191539 |*                                59534507.00000
#                  0        59614787 |                                              -
#                  0        60038035 |                                              -
#                  0        60461283 |                                              -
#                  0        60884531 |                                              -
#                  0        61307779 |                                              -
#                  0        61731027 |                                              -
#                  0        62154275 |                                              -
#                  0        62577523 |                                              -
#                  0        63000771 |                                              -
#                 19        63424019 |****************                 63716330.63158
#                 23        63847267 |*******************              63967246.39130
#                 18        64270515 |***************                  64544932.22222
#                 25        64693763 |*********************            64911143.28000
#                 15        65117011 |************                     65286052.20000
#                  9        65540259 |*******                          65686848.44444
#                  2        65963507 |*                                66203497.50000
#                 15        66386755 |************                     66624328.00000
#
#                 10           > 95% |********                         67337112.40000
#
#        mean of 95%  61795729.21839
#          95th %ile        66810001
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_8k   1   1            6089        16440        0      155     8192 
# bin/../bin-riscv64/memrand -N memrand_8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 8k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6026                       6026
#                        max    153594                       7100
#                       mean      6309.09555                 6257.83650
#                     median      6093                       6089*
#                     stddev      1257.85737                  280.97538
#             standard error         9.67840                    2.19138
#       99% confidence level        24.93157                    5.64499
#                       skew        98.72726                    1.28078
#                   kurtosis     11265.92713                    0.13553
#           time correlation         0.06410                    0.05009
#
#               elapsed time        20.00712
#                   run time        16.58202
#          getnsecs overhead      1416
#
#          number of samples     16891
#         number of outliers       451
#    number of final samples     16440
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                912            6026 |****                                 6039.10746
#               5996            6052 |********************************     6066.87175
#               1712            6078 |*********                            6085.29556
#                135            6104 |*                                    6113.17037
#                311            6130 |*                                    6146.07074
#                643            6156 |***                                  6168.85070
#               1501            6182 |********                             6195.59027
#                965            6208 |*****                                6217.35130
#                220            6234 |*                                    6243.83182
#                 59            6260 |*                                    6271.15254
#                 28            6286 |*                                    6296.53571
#                 19            6312 |*                                    6323.52632
#                  5            6338 |*                                    6349.80000
#                  3            6364 |*                                    6379.66667
#                  5            6390 |*                                    6407.60000
#                  3            6416 |*                                    6437.66667
#                  2            6442 |*                                    6452.50000
#                  3            6468 |*                                    6481.66667
#                  2            6494 |*                                    6509.00000
#                  7            6520 |*                                    6535.42857
#                 30            6546 |*                                    6565.10000
#                211            6572 |*                                    6586.45972
#                523            6598 |**                                   6611.15870
#                479            6624 |**                                   6636.73486
#                304            6650 |*                                    6660.26645
#                244            6676 |*                                    6689.55738
#                282            6702 |*                                    6713.99291
#                385            6728 |**                                   6740.90130
#                283            6754 |*                                    6765.51590
#                210            6780 |*                                    6790.86667
#                136            6806 |*                                    6817.49265
#
#                822           > 95% |****                                 6938.36131
#
#        mean of 95%      6222.01940
#          95th %ile            6830
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
           prc thr      nsecs/call      samples   errors cnt/samp     size
memrand_8m   1   1       365105384           32        0        2  8388608 
# bin/../bin-riscv64/memrand -N memrand_8m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 8m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 361154413                  361154413
#                        max 372565426                  372565426
#                       mean 365696540.62500            365696540.62500
#                     median 365105384                  365105384*
#                     stddev   3328309.55896              3328309.55896
#             standard error    588367.56476               588367.56476
#       99% confidence level   1515634.84681              1515634.84681
#                       skew         0.53545                    0.53545
#                   kurtosis        -0.83496                   -0.83496
#           time correlation    343732.46701               343732.46701
#
#               elapsed time        25.29947
#                   run time        23.40462
#          getnsecs overhead      1416
#
#          number of samples        32
#         number of outliers         0
#    number of final samples        32
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2       361154413 |****************                361278807.00000
#                  2       361473164 |****************                361529032.50000
#                  1       361791915 |********                        361865421.00000
#                  0       362110666 |                                              -
#                  1       362429417 |********                        362459664.00000
#                  3       362748168 |************************        362896203.66667
#                  1       363066919 |********                        363070937.00000
#                  1       363385670 |********                        363701011.00000
#                  0       363704421 |                                              -
#                  0       364023172 |                                              -
#                  1       364341923 |********                        364649523.00000
#                  4       364660674 |********************************364886482.75000
#                  1       364979425 |********                        365105384.00000
#                  2       365298176 |****************                365536964.00000
#                  0       365616927 |                                              -
#                  0       365935678 |                                              -
#                  3       366254429 |************************        366337891.33333
#                  2       366573180 |****************                366804266.50000
#                  1       366891931 |********                        366924863.00000
#                  0       367210682 |                                              -
#                  0       367529433 |                                              -
#                  0       367848184 |                                              -
#                  0       368166935 |                                              -
#                  0       368485686 |                                              -
#                  0       368804437 |                                              -
#                  0       369123188 |                                              -
#                  0       369441939 |                                              -
#                  0       369760690 |                                              -
#                  2       370079441 |****************                370247961.00000
#                  2       370398192 |****************                370605845.00000
#                  0       370716943 |                                              -
#                  1       371035694 |********                        371338664.00000
#
#                  2           > 95% |****************                371959932.50000
#
#        mean of 95% 365278981.16667
#          95th %ile       371354439
#
# WARNINGS
#     Too few samples, 32 < 100, consider running test longer, or for a least 100 samples
#
# Usage: memrand
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memrand')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s size] number of bytes to access (default 1048576)
# notes: measures "random" memory access times
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10   1   1             108        18073        0     7487       10          4k
# bin/../bin-riscv64/memset -N memset_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       103                        103
#                        max     78310                        128
#                       mean       117.58453                  110.71753
#                     median       108                        108*
#                     stddev       577.14167                    5.66771
#             standard error         4.19310                    0.04216
#       99% confidence level        10.80142                    0.10860
#                       skew       132.00818                    1.21108
#                   kurtosis     17799.82426                    0.13338
#           time correlation         0.00298                    0.00095
#
#               elapsed time        20.00723
#                   run time        15.86735
#          getnsecs overhead      1416
#
#          number of samples     18945
#         number of outliers       872
#    number of final samples     18073
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12             103 |*                                             -
#                207             104 |*                                             -
#               1095             105 |*******                                       -
#                921             106 |******                                        -
#               4523             107 |********************************              -
#               3204             108 |**********************                        -
#               1724             109 |************                                  -
#               1450             110 |**********                                    -
#                383             111 |**                                            -
#                139             112 |*                                             -
#                 29             113 |*                                             -
#                 23             114 |*                                             -
#                 76             115 |*                                             -
#                185             116 |*                                             -
#                417             117 |**                                            -
#                654             118 |****                                          -
#                585             119 |****                                          -
#                647             120 |****                                          -
#                721             121 |*****                                         -
#                174             122 |*                                             -
#
#                904           > 95% |******                                124.29093
#
#        mean of 95%       110.00285
#          95th %ile             122
#
# WARNINGS
#     Actual benchmark run time only accounts for 79.3% of elapsed time.
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10k   1   1            2754        16461        0      344    10240          4k
# bin/../bin-riscv64/memset -N memset_10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      2609                       2609
#                        max     83440                       3179
#                       mean      2854.25918                 2806.46480
#                     median      2757                       2754*
#                     stddev       718.27662                  124.26938
#             standard error         5.49151                    0.96858
#       99% confidence level        14.14614                    2.49507
#                       skew        84.64615                    1.14983
#                   kurtosis      9292.19721                   -0.01424
#           time correlation         0.03726                    0.02336
#
#               elapsed time        20.00753
#                   run time        16.81159
#          getnsecs overhead      1416
#
#          number of samples     17108
#         number of outliers       647
#    number of final samples     16461
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3            2609 |*                                    2617.00000
#                 25            2623 |*                                    2633.36000
#                 90            2637 |*                                    2644.25556
#                114            2651 |*                                    2655.66667
#                128            2665 |*                                    2673.00781
#                551            2679 |********                             2687.01996
#               1319            2693 |*******************                  2699.90751
#               1786            2707 |**************************           2714.15062
#               2131            2721 |********************************     2726.61473
#               1543            2735 |***********************              2741.04796
#               1291            2749 |*******************                  2755.15182
#               1148            2763 |*****************                    2769.84756
#                903            2777 |*************                        2783.11406
#                636            2791 |*********                            2796.77987
#                431            2805 |******                               2810.56381
#                192            2819 |**                                   2824.64062
#                115            2833 |*                                    2838.22609
#                 60            2847 |*                                    2853.91667
#                 47            2861 |*                                    2867.95745
#                 21            2875 |*                                    2881.47619
#                 25            2889 |*                                    2896.24000
#                 15            2903 |*                                    2910.73333
#                 62            2917 |*                                    2924.54839
#                157            2931 |**                                   2938.30573
#                291            2945 |****                                 2951.76289
#                423            2959 |******                               2965.84634
#                420            2973 |******                               2979.75952
#                462            2987 |******                               2993.60173
#                385            3001 |*****                                3007.07273
#                356            3015 |*****                                3021.39045
#                292            3029 |****                                 3035.69521
#                215            3043 |***                                  3048.20000
#
#                824           > 95% |************                         3100.13350
#
#        mean of 95%      2790.98977
#          95th %ile            3055
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_10m   1   1         5120259          345        0       10 10485760          4k
# bin/../bin-riscv64/memset -N memset_10m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   5044297                    5044297
#                        max   6064243                    5269201
#                       mean   5143824.50685              5128236.08406
#                     median   5123268                    5120259*
#                     stddev     91276.53198                47511.77656
#             standard error      4777.63204                 2557.94806
#       99% confidence level     12307.18014                 6589.27421
#                       skew         4.59165                    0.75107
#                   kurtosis        34.51343                    0.11716
#           time correlation       633.51651                  458.48328
#
#               elapsed time        20.02501
#                   run time        18.77548
#          getnsecs overhead      1416
#
#          number of samples       365
#         number of outliers        20
#    number of final samples       345
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4         5044297 |*****                             5046779.50000
#                  2         5049744 |**                                5052167.00000
#                  6         5055191 |*******                           5058024.00000
#                  6         5060638 |*******                           5064542.66667
#                 16         5066085 |********************              5068699.43750
#                 11         5071532 |**************                    5075244.90909
#                  5         5076979 |******                            5079525.80000
#                 15         5082426 |*******************               5084648.00000
#                 25         5087873 |********************************  5090700.40000
#                 19         5093320 |************************          5096743.78947
#                 10         5098767 |************                      5101247.00000
#                 23         5104214 |*****************************     5106548.08696
#                 18         5109661 |***********************           5112203.72222
#                 14         5115108 |*****************                 5118491.92857
#                 16         5120555 |********************              5123407.12500
#                 15         5126002 |*******************               5128051.73333
#                 13         5131449 |****************                  5134268.46154
#                 14         5136896 |*****************                 5139260.14286
#                 12         5142343 |***************                   5145235.58333
#                 11         5147790 |**************                    5150100.81818
#                  9         5153237 |***********                       5155597.88889
#                 11         5158684 |**************                    5160833.54545
#                  3         5164131 |***                               5165532.33333
#                 11         5169578 |**************                    5171891.72727
#                  5         5175025 |******                            5177349.20000
#                  5         5180472 |******                            5183137.60000
#                  7         5185919 |********                          5188113.57143
#                  1         5191366 |*                                 5193809.00000
#                  3         5196813 |***                               5199543.33333
#                  4         5202260 |*****                             5203897.25000
#                  8         5207707 |**********                        5209163.25000
#                  5         5213154 |******                            5216896.00000
#
#                 18           > 95% |***********************           5241485.22222
#
#        mean of 95%   5122002.18654
#          95th %ile         5218580
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_1k   1   1             441         4423        0     1827     1024          4k
# bin/../bin-riscv64/memset -N memset_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       420                        420
#                        max     83460                        511
#                       mean       480.06411                  448.26068
#                     median       442                        441*
#                     stddev      1240.52155                   20.85889
#             standard error        18.01456                    0.31364
#       99% confidence level        46.40549                    0.80794
#                       skew        63.99066                    1.22584
#                   kurtosis      4233.57672                    0.41184
#           time correlation         0.05160                    0.01473
#
#               elapsed time        20.00940
#                   run time         3.93811
#          getnsecs overhead      1416
#
#          number of samples      4742
#         number of outliers       319
#    number of final samples      4423
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 28             420 |*                                     421.32143
#                 87             423 |*****                                 424.10345
#                191             426 |***********                           427.02618
#                414             429 |************************              430.10386
#                550             432 |********************************      432.99818
#                460             435 |**************************            436.03478
#                450             438 |**************************            439.00667
#                392             441 |**********************                441.91582
#                294             444 |*****************                     444.92517
#                234             447 |*************                         447.90598
#                169             450 |*********                             450.95266
#                111             453 |******                                453.80180
#                 61             456 |***                                   456.81967
#                 57             459 |***                                   459.78947
#                 25             462 |*                                     463.16000
#                 23             465 |*                                     466.26087
#                 28             468 |*                                     469.17857
#                 55             471 |***                                   472.07273
#                 78             474 |****                                  475.11538
#                103             477 |*****                                 478.10680
#                121             480 |*******                               481.00000
#                 86             483 |*****                                 484.02326
#                 90             486 |*****                                 486.90000
#                 68             489 |***                                   489.89706
#                 26             492 |*                                     492.11538
#
#                222           > 95% |************                          500.40541
#
#        mean of 95%       445.50512
#          95th %ile             493
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.7% of elapsed time.
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_1m   1   1          314813         5424        0       10  1048576          4k
# bin/../bin-riscv64/memset -N memset_1m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1m 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    299863                     299863
#                        max    636709                     328964
#                       mean    324496.32547               313899.70538
#                     median    314993                     314813*
#                     stddev     40741.65338                 5049.74245
#             standard error       530.86122                   68.56609
#       99% confidence level      1367.49851                  176.62625
#                       skew         3.69363                   -0.34915
#                   kurtosis        12.36462                   -0.01690
#           time correlation        12.50990                    3.03048
#
#               elapsed time        20.00968
#                   run time        19.12118
#          getnsecs overhead      1416
#
#          number of samples      5890
#         number of outliers       466
#    number of final samples      5424
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          299863 |*                                  300053.00000
#                  9          300553 |*                                  301009.66667
#                 25          301243 |*                                  301693.80000
#                 39          301933 |*                                  302219.41026
#                 21          302623 |*                                  303005.85714
#                 30          303313 |*                                  303701.66667
#                 51          304003 |*                                  304370.25490
#                 91          304693 |***                                305130.91209
#                356          305383 |*************                      305789.79775
#                337          306073 |************                       306358.99407
#                 94          306763 |***                                307018.00000
#                 41          307453 |*                                  307701.04878
#                 43          308143 |*                                  308473.69767
#                 21          308833 |*                                  309178.23810
#                 20          309523 |*                                  309895.00000
#                 33          310213 |*                                  310624.81818
#                 60          310903 |**                                 311235.00000
#                116          311593 |****                               311954.64655
#                143          312283 |*****                              312660.28671
#                205          312973 |*******                            313310.96098
#                402          313663 |**************                     314055.59701
#                862          314353 |********************************   314710.02668
#                645          315043 |***********************            315341.88992
#                304          315733 |***********                        316038.47368
#                316          316423 |***********                        316780.80380
#                289          317113 |**********                         317422.98962
#                183          317803 |******                             318101.19672
#                106          318493 |***                                318807.40566
#                 97          319183 |***                                319514.82474
#                 94          319873 |***                                320178.67021
#                 64          320563 |**                                 320922.43750
#                 50          321253 |*                                  321583.00000
#
#                272           > 95% |**********                         324084.36765
#
#        mean of 95%    313362.00582
#          95th %ile          321914
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
           prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_256   1   1             158        17586        0     5105      256          4k
# bin/../bin-riscv64/memset -N memset_256 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       152                        152
#                        max    123960                        182
#                       mean       172.41147                  160.68390
#                     median       158                        158*
#                     stddev       939.09266                    7.09023
#             standard error         6.81110                    0.05347
#       99% confidence level        17.54540                    0.13773
#                       skew       123.92477                    1.43395
#                   kurtosis     16017.70970                    0.74226
#           time correlation         0.00459                    0.00119
#
#               elapsed time        20.00771
#                   run time        15.85181
#          getnsecs overhead      1416
#
#          number of samples     19010
#         number of outliers      1424
#    number of final samples     17586
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             152 |*                                             -
#                106             153 |*                                             -
#                539             154 |****                                          -
#               1751             155 |**************                                -
#               3972             156 |********************************              -
#               2163             157 |*****************                             -
#               1184             158 |*********                                     -
#               1874             159 |***************                               -
#               1081             160 |********                                      -
#                641             161 |*****                                         -
#                431             162 |***                                           -
#                239             163 |*                                             -
#                134             164 |*                                             -
#                 68             165 |*                                             -
#                 58             166 |*                                             -
#                 36             167 |*                                             -
#                 28             168 |*                                             -
#                 43             169 |*                                             -
#                187             170 |*                                             -
#                352             171 |**                                            -
#                478             172 |***                                           -
#                416             173 |***                                           -
#                355             174 |**                                            -
#                364             175 |**                                            -
#                204             176 |*                                             -
#
#                880           > 95% |*******                               178.75682
#
#        mean of 95%       159.73189
#          95th %ile             176
#
# WARNINGS
#     Actual benchmark run time only accounts for 79.2% of elapsed time.
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
             prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_256_u   1   1             198        17941        0     4227      256           1
# bin/../bin-riscv64/memset -N memset_256_u -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 256 -a 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       189                        189
#                        max    107240                        230
#                       mean       212.95526                  202.15005
#                     median       199                        198*
#                     stddev       832.71915                    9.13752
#             standard error         6.05890                    0.06822
#       99% confidence level        15.60774                    0.17573
#                       skew       118.46623                    1.36476
#                   kurtosis     14738.62121                    0.54839
#           time correlation         0.00470                    0.00152
#
#               elapsed time        20.00752
#                   run time        16.33600
#          getnsecs overhead      1416
#
#          number of samples     18889
#         number of outliers       948
#    number of final samples     17941
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15             189 |*                                     189.80000
#                174             191 |*                                     191.76437
#               1072             193 |********                              193.69683
#               3963             195 |********************************      195.57633
#               3907             197 |*******************************       197.39160
#               2617             199 |*********************                 199.49255
#               1628             201 |*************                         201.36978
#                568             203 |****                                  203.33451
#                191             205 |*                                     205.40314
#                100             207 |*                                     207.57000
#                 66             209 |*                                     209.46970
#                 95             211 |*                                     211.61053
#                355             213 |**                                    213.63662
#                738             215 |*****                                 215.51084
#                622             217 |*****                                 217.48875
#                601             219 |****                                  219.50915
#                331             221 |**                                    221.15106
#
#                898           > 95% |*******                               224.98218
#
#        mean of 95%       200.94702
#          95th %ile             222
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
          prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_4k   1   1            1240        16178        0      771     4096          4k
# bin/../bin-riscv64/memset -N memset_4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1143                       1143
#                        max     84640                       1435
#                       mean      1278.34523                 1260.32204
#                     median      1242                       1240*
#                     stddev       663.76388                   58.28784
#             standard error         5.12273                    0.45826
#       99% confidence level        13.19614                    1.18049
#                       skew       119.12635                    1.01291
#                   kurtosis     14845.72799                   -0.04817
#           time correlation         0.01664                    0.01153
#
#               elapsed time        20.00665
#                   run time        16.48133
#          getnsecs overhead      1416
#
#          number of samples     16789
#         number of outliers       611
#    number of final samples     16178
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4            1143 |*                                    1143.75000
#                  4            1151 |*                                    1153.25000
#                 23            1159 |*                                    1162.56522
#                 47            1167 |*                                    1171.34043
#                133            1175 |**                                   1178.85714
#                332            1183 |******                               1186.82229
#                550            1191 |**********                           1194.83818
#                843            1199 |***************                      1202.75563
#               1105            1207 |********************                 1210.73756
#               1371            1215 |*************************            1218.68125
#               1594            1223 |*****************************        1226.52509
#               1732            1231 |********************************     1234.58025
#               1509            1239 |***************************          1242.34592
#               1154            1247 |*********************                1250.32236
#                812            1255 |***************                      1258.07266
#                548            1263 |**********                           1266.05109
#                284            1271 |*****                                1274.32042
#                169            1279 |***                                  1281.93491
#                109            1287 |**                                   1290.47706
#                 67            1295 |*                                    1298.56716
#                100            1303 |*                                    1307.05000
#                176            1311 |***                                  1315.00568
#                233            1319 |****                                 1322.63948
#                380            1327 |*******                              1330.72105
#                421            1335 |*******                              1338.57957
#                479            1343 |********                             1346.60125
#                466            1351 |********                             1354.46781
#                377            1359 |******                               1362.18568
#                291            1367 |*****                                1370.32302
#                 56            1375 |*                                    1375.37500
#
#                809           > 95% |**************                       1397.21755
#
#        mean of 95%      1253.11608
#          95th %ile            1376
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
             prc thr      nsecs/call      samples   errors cnt/samp     size       alignment
memset_4k_uc   1   1            1415        13657        0      577     4096          4k
# bin/../bin-riscv64/memset -N memset_4k_uc -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -u 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1323                       1323
#                        max    408949                       1753
#                       mean      1547.93701                 1456.23146
#                     median      1421                       1415*
#                     stddev      3428.11627                   98.84944
#             standard error        27.66770                    0.84586
#       99% confidence level        71.27200                    2.17893
#                       skew       111.96247                    1.25170
#                   kurtosis     13080.65671                    0.27286
#           time correlation         0.04925                    0.02200
#
#               elapsed time        20.10000
#                   run time        13.26869
#          getnsecs overhead      1416
#
#          number of samples     15352
#         number of outliers      1695
#    number of final samples     13657
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 30            1323 |*                                    1329.83333
#                198            1334 |**                                   1340.65657
#                485            1345 |*******                              1350.44948
#                476            1356 |*******                              1360.70168
#                496            1367 |*******                              1372.40927
#                840            1378 |************                         1383.42976
#               1438            1389 |*********************                1394.41168
#               2169            1400 |********************************     1405.22960
#               1596            1411 |***********************              1415.49185
#                827            1422 |************                         1426.41112
#                752            1433 |***********                          1438.05319
#                702            1444 |**********                           1448.64672
#                314            1455 |****                                 1459.07325
#                104            1466 |*                                    1471.00962
#                 86            1477 |*                                    1481.68605
#                 77            1488 |*                                    1492.92208
#                 44            1499 |*                                    1503.29545
#                 26            1510 |*                                    1515.38462
#                 19            1521 |*                                    1526.42105
#                 18            1532 |*                                    1536.00000
#                 15            1543 |*                                    1548.73333
#                 24            1554 |*                                    1560.25000
#                 54            1565 |*                                    1570.38889
#                204            1576 |***                                  1581.86765
#                370            1587 |*****                                1592.37838
#                431            1598 |******                               1602.83063
#                316            1609 |****                                 1613.56646
#                280            1620 |****                                 1625.13571
#                274            1631 |****                                 1635.81022
#                180            1642 |**                                   1646.25556
#                129            1653 |*                                    1656.55039
#
#                683           > 95% |**********                           1697.89751
#
#        mean of 95%      1443.50925
#          95th %ile            1661
#
# WARNINGS
#     Actual benchmark run time only accounts for 66.0% of elapsed time.
#
# Usage: memset
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'memset')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s buffer-size (default 8192)]
#     [-a alignment (force buffer alignment)]
#     [-u (try to always use uncached memory)]notes: measures memset()
       prc thr      nsecs/call      samples   errors cnt/samp 
mktime   1   1          264263         6872        0       10 
# bin/../bin-riscv64/mktime -N mktime -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    242052                     242052
#                        max    765301                     300243
#                       mean    265819.88610               262878.22075
#                     median    264663                     264263*
#                     stddev     21564.65661                12457.09217
#             standard error       254.46019                  150.27097
#       99% confidence level       655.48945                  387.09803
#                       skew         6.51685                    0.19176
#                   kurtosis        99.33349                   -0.75710
#           time correlation         7.75294                    6.13125
#
#               elapsed time        20.00877
#                   run time        19.10134
#          getnsecs overhead      1416
#
#          number of samples      7182
#         number of outliers       310
#    number of final samples      6872
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          242052 |*                                  242582.66667
#                 36          243341 |*                                  244218.44444
#                240          244630 |***********                        245404.45417
#                579          245919 |**************************         246624.24352
#                698          247208 |********************************   247806.51003
#                417          248497 |*******************                249078.29976
#                186          249786 |********                           250365.79570
#                 80          251075 |***                                251597.00000
#                 44          252364 |**                                 252865.95455
#                 26          253653 |*                                  254223.76923
#                 17          254942 |*                                  255391.23529
#                 19          256231 |*                                  256998.26316
#                 12          257520 |*                                  258257.16667
#                 24          258809 |*                                  259679.66667
#                110          260098 |*****                              260912.09091
#                333          261387 |***************                    262104.68168
#                502          262676 |***********************            263359.81275
#                466          263965 |*********************              264596.73391
#                381          265254 |*****************                  265897.93438
#                301          266543 |*************                      267168.54817
#                255          267832 |***********                        268477.15686
#                237          269121 |**********                         269798.27426
#                221          270410 |**********                         271002.36652
#                264          271699 |************                       272352.62121
#                190          272988 |********                           273646.57895
#                161          274277 |*******                            274898.21739
#                149          275566 |******                             276248.50336
#                158          276855 |*******                            277503.63291
#                133          278144 |******                             278787.21053
#                113          279433 |*****                              280108.13274
#                 98          280722 |****                               281310.85714
#                 75          282011 |***                                282648.20000
#
#                344           > 95% |***************                    288655.24709
#
#        mean of 95%    261519.87255
#          95th %ile          283293
#
# Usage: mktime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mktime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures mktime()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_a128k   1   1          108128         2702        0        6   131072   a---
# bin/../bin-riscv64/mmap -N mmap_a128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    100099                     100099
#                        max    817940                     119871
#                       mean    126186.48868               108513.46003
#                     median    109928                     108128*
#                     stddev     42252.72634                 3800.95355
#             standard error       697.74910                   73.12231
#       99% confidence level      1797.40167                  188.36306
#                       skew         4.25608                    0.51679
#                   kurtosis        38.19147                   -0.08973
#           time correlation        26.46293                    4.74473
#
#               elapsed time        20.01153
#                   run time         3.21742
#          getnsecs overhead      1416
#
#          number of samples      3667
#         number of outliers       965
#    number of final samples      2702
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          100099 |*                                  100311.42857
#                 11          100587 |**                                 100823.90909
#                  6          101075 |*                                  101302.50000
#                 32          101563 |*******                            101839.93750
#                 35          102051 |*******                            102296.05714
#                 46          102539 |**********                         102747.32609
#                 50          103027 |***********                        103288.94000
#                 79          103515 |*****************                  103779.43038
#                 98          104003 |*********************              104286.65306
#                142          104491 |*******************************    104734.71831
#                120          104979 |**************************         105220.42500
#                130          105467 |*****************************      105716.00000
#                128          105955 |****************************       106186.00000
#                142          106443 |*******************************    106684.64085
#                125          106931 |***************************        107178.42400
#                134          107419 |*****************************      107675.32836
#                143          107907 |********************************   108153.76224
#                134          108395 |*****************************      108612.65672
#                129          108883 |****************************       109129.19380
#                130          109371 |*****************************      109623.66923
#                113          109859 |*************************          110106.54867
#                 90          110347 |********************               110611.47778
#                 83          110835 |******************                 111059.97590
#                 86          111323 |*******************                111532.87209
#                 70          111811 |***************                    112055.50000
#                 66          112299 |**************                     112563.53030
#                 55          112787 |************                       113018.83636
#                 35          113275 |*******                            113516.25714
#                 45          113763 |**********                         113998.24444
#                 39          114251 |********                           114526.74359
#                 35          114739 |*******                            114962.20000
#                 28          115227 |******                             115416.42857
#
#                136           > 95% |******************************     117332.39706
#
#        mean of 95%    108046.04949
#          95th %ile          115685
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.1% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_a8k   1   1          103485         5041        0        6     8192   a---
# bin/../bin-riscv64/mmap -N mmap_a8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     94228                      94228
#                        max   1941902                     142143
#                       mean    125415.28207               107931.96509
#                     median    104728                     103485*
#                     stddev     57771.41951                11406.10647
#             standard error       756.03831                  160.64939
#       99% confidence level      1947.55468                  413.83282
#                       skew         8.19050                    1.33917
#                   kurtosis       182.48308                    0.60092
#           time correlation        20.71104                    6.90257
#
#               elapsed time        20.01216
#                   run time         5.07811
#          getnsecs overhead      1416
#
#          number of samples      5839
#         number of outliers       798
#    number of final samples      5041
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 31           94228 |*                                   95045.90323
#                133           95445 |********                            96149.06015
#                283           96662 |*****************                   97326.64664
#                357           97879 |**********************              98496.89076
#                440           99096 |***************************         99696.66136
#                486          100313 |******************************     100932.97531
#                514          101530 |********************************   102111.53113
#                446          102747 |***************************        103326.57175
#                352          103964 |*********************              104556.28125
#                276          105181 |*****************                  105735.13043
#                215          106398 |*************                      106966.87907
#                147          107615 |*********                          108154.87075
#                 96          108832 |*****                              109354.60417
#                 83          110049 |*****                              110592.81928
#                 59          111266 |***                                111802.15254
#                 38          112483 |**                                 113045.78947
#                 19          113700 |*                                  114196.73684
#                 33          114917 |**                                 115498.51515
#                 25          116134 |*                                  116806.80000
#                 34          117351 |**                                 117981.97059
#                 33          118568 |**                                 119164.66667
#                 39          119785 |**                                 120397.30769
#                 50          121002 |***                                121593.30000
#                 63          122219 |***                                122861.76190
#                 62          123436 |***                                124138.59677
#                 71          124653 |****                               125243.15493
#                 75          125870 |****                               126486.56000
#                 66          127087 |****                               127655.33333
#                 67          128304 |****                               128826.44776
#                 84          129521 |*****                              130129.97619
#                 62          130738 |***                                131330.33871
#                 49          131955 |***                                132656.46939
#
#                253           > 95% |***************                    136901.92490
#
#        mean of 95%    106401.17982
#          95th %ile          133157
#
# WARNINGS
#     Actual benchmark run time only accounts for 25.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_ra128k   1   1         1696913         8296        0        1   131072   ar--
# bin/../bin-riscv64/mmap -N mmap_ra128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1596411                    1596411
#                        max   4087554                    2222822
#                       mean   1806472.25658              1773559.76880
#                     median   1711913                    1696913*
#                     stddev    222604.03847               150105.89174
#             standard error      2392.07115                 1648.02337
#       99% confidence level      6161.97528                 4245.30821
#                       skew         2.42443                    0.74648
#                   kurtosis         9.64084                   -0.54231
#           time correlation        74.31545                   59.48160
#
#               elapsed time        20.00700
#                   run time        15.65905
#          getnsecs overhead      1416
#
#          number of samples      8660
#         number of outliers       364
#    number of final samples      8296
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                205         1596411 |******                            1606880.79024
#                541         1610740 |******************                1618359.82810
#                943         1625069 |********************************  1632457.09968
#                913         1639398 |******************************    1646456.42497
#                805         1653727 |***************************       1660422.21739
#                480         1668056 |****************                  1674776.30208
#                260         1682385 |********                          1688944.56538
#                174         1696714 |*****                             1703373.56897
#                100         1711043 |***                               1717379.54000
#                 71         1725372 |**                                1733158.80282
#                 63         1739701 |**                                1745434.65079
#                 40         1754030 |*                                 1761586.72500
#                 63         1768359 |**                                1776420.87302
#                115         1782688 |***                               1790561.72174
#                176         1797017 |*****                             1804538.26705
#                197         1811346 |******                            1818419.27919
#                230         1825675 |*******                           1833544.56087
#                239         1840004 |********                          1847005.28033
#                246         1854333 |********                          1861330.61789
#                229         1868662 |*******                           1875764.27074
#                253         1882991 |********                          1890122.01976
#                204         1897320 |******                            1904242.63725
#                225         1911649 |*******                           1918780.06222
#                200         1925978 |******                            1932958.16000
#                174         1940307 |*****                             1947265.17241
#                155         1954636 |*****                             1961288.07742
#                123         1968965 |****                              1976442.29268
#                131         1983294 |****                              1990444.91603
#                108         1997623 |***                               2004667.51852
#                 86         2011952 |**                                2018846.59302
#                 65         2026281 |**                                2033500.43077
#                 67         2040610 |**                                2046920.71642
#
#                415           > 95% |**************                    2118737.97108
#
#        mean of 95%   1755383.27420
#          95th %ile         2054919
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 78.3% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_ra8k   1   1          288897         6583        0        2     8192   ar--
# bin/../bin-riscv64/mmap -N mmap_ra8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    268347                     268347
#                        max   3194297                     323498
#                       mean    332230.65824               290595.70363
#                     median    293397                     288897*
#                     stddev    155079.64848                10991.66212
#             standard error      1681.48160                  135.47259
#       99% confidence level      4331.49660                  348.97740
#                       skew        10.31178                    0.66886
#                   kurtosis       142.35824                   -0.09955
#           time correlation        28.53050                    5.60821
#
#               elapsed time        20.00878
#                   run time         6.16849
#          getnsecs overhead      1416
#
#          number of samples      8506
#         number of outliers      1923
#    number of final samples      6583
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          268347 |*                                  269180.33333
#                 15          269704 |*                                  270362.86667
#                 47          271061 |****                               271702.06383
#                 68          272418 |*****                              273219.11765
#                 91          273775 |*******                            274541.63736
#                178          275132 |***************                    275880.72472
#                231          276489 |********************               277207.11688
#                300          277846 |**************************         278579.33000
#                335          279203 |*****************************      279941.97910
#                365          280560 |********************************   281272.65753
#                336          281917 |*****************************      282624.71726
#                310          283274 |***************************        283920.49677
#                348          284631 |******************************     285306.99425
#                317          285988 |***************************        286649.57098
#                298          287345 |**************************         287991.15772
#                317          288702 |***************************        289340.41325
#                290          290059 |*************************          290763.67586
#                278          291416 |************************           292058.46763
#                268          292773 |***********************            293439.79478
#                266          294130 |***********************            294801.00000
#                203          295487 |*****************                  296133.26601
#                204          296844 |*****************                  297496.96078
#                179          298201 |***************                    298931.49721
#                166          299558 |**************                     300210.87349
#                136          300915 |***********                        301622.97794
#                126          302272 |***********                        302970.71429
#                107          303629 |*********                          304303.77570
#                113          304986 |*********                          305632.29204
#                100          306343 |********                           307035.76000
#                 99          307700 |********                           308390.31313
#                 80          309057 |*******                            309799.72500
#                 76          310414 |******                             311078.81579
#
#                330           > 95% |****************************       316609.17576
#
#        mean of 95%    289222.85127
#          95th %ile          311748
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.8% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rt128k   1   1         3024736         5313        0        1   131072   -r--
# bin/../bin-riscv64/mmap -N mmap_rt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2760332                    2760332
#                        max   5529880                    3439444
#                       mean   3061207.95728              3027316.69565
#                     median   3031237                    3024736*
#                     stddev    221160.20648               138212.15349
#             standard error      2969.19527                 1896.16587
#       99% confidence level      7648.64702                 4884.52329
#                       skew         2.92068                    0.18217
#                   kurtosis        16.61272                   -0.23732
#           time correlation       112.47402                   87.74130
#
#               elapsed time        20.00799
#                   run time        16.99570
#          getnsecs overhead      1416
#
#          number of samples      5548
#         number of outliers       235
#    number of final samples      5313
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         2760332 |*                                 2770160.78571
#                 71         2776033 |******                            2785807.07042
#                212         2791734 |******************                2800161.51887
#                242         2807435 |********************              2814816.44628
#                217         2823136 |******************                2830606.07834
#                145         2838837 |************                      2846062.44828
#                114         2854538 |*********                         2861847.00000
#                 87         2870239 |*******                           2877393.88506
#                 40         2885940 |***                               2892764.47500
#                 37         2901641 |***                               2910594.16216
#                 30         2917342 |**                                2925748.20000
#                 42         2933043 |***                               2943180.42857
#                108         2948744 |*********                         2957381.71296
#                284         2964445 |************************          2973050.84155
#                366         2980146 |*******************************   2988124.78415
#                371         2995847 |********************************  3003704.47978
#                322         3011548 |***************************       3019400.81988
#                320         3027249 |***************************       3035495.26875
#                251         3042950 |*********************             3050708.80876
#                211         3058651 |******************                3066236.93365
#                189         3074352 |****************                  3082092.60317
#                183         3090053 |***************                   3097817.13115
#                194         3105754 |****************                  3113541.30412
#                193         3121455 |****************                  3129170.14508
#                163         3137156 |**************                    3144848.52761
#                137         3152857 |***********                       3160159.42336
#                120         3168558 |**********                        3175865.05000
#                 97         3184259 |********                          3192393.12371
#                 92         3199960 |*******                           3207684.39130
#                 64         3215661 |*****                             3222869.73438
#                 74         3231362 |******                            3238747.18919
#                 57         3247063 |****                              3255005.66667
#
#                266           > 95% |**********************            3331206.28195
#
#        mean of 95%   3011300.32356
#          95th %ile         3262741
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rt8k   1   1          403849         8466        0        1     8192   -r--
# bin/../bin-riscv64/mmap -N mmap_rt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    356690                     356690
#                        max   3190298                     567802
#                       mean    453535.39766               422417.92346
#                     median    408049                     403849*
#                     stddev    154606.07369                48464.66345
#             standard error      1609.78140                  526.72759
#       99% confidence level      4146.79688                 1356.85028
#                       skew         7.29162                    1.23315
#                   kurtosis        78.95766                    0.41957
#           time correlation        33.08228                   17.89281
#
#               elapsed time        20.01001
#                   run time         8.33339
#          getnsecs overhead      1416
#
#          number of samples      9224
#         number of outliers       758
#    number of final samples      8466
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          356690 |*                                  359564.66667
#                 34          362030 |*                                  365818.97059
#                216          367370 |********                           370461.00926
#                505          372710 |********************               375608.07327
#                654          378050 |**************************         380800.45260
#                793          383390 |********************************   386042.48550
#                772          388730 |*******************************    391326.64508
#                735          394070 |*****************************      396660.73469
#                603          399410 |************************           401967.31841
#                495          404750 |*******************                407492.32323
#                452          410090 |******************                 412595.02655
#                369          415430 |**************                     418043.72087
#                287          420770 |***********                        423072.31010
#                207          426110 |********                           428720.76329
#                188          431450 |*******                            433961.43617
#                133          436790 |*****                              439531.95489
#                 97          442130 |***                                444723.71134
#                 77          447470 |***                                450463.10390
#                 63          452810 |**                                 455284.15873
#                 54          458150 |**                                 460890.74074
#                 65          463490 |**                                 466300.30769
#                 75          468830 |***                                471450.85333
#                104          474170 |****                               476691.28846
#                 94          479510 |***                                482474.73404
#                128          484850 |*****                              487497.09375
#                148          490190 |*****                              493015.04730
#                159          495530 |******                             498142.83019
#                120          500870 |****                               503455.10000
#                109          506210 |****                               508665.53211
#                118          511550 |****                               513926.67797
#                 90          516890 |***                                519425.56667
#                 86          522230 |***                                524380.98837
#
#                424           > 95% |*****************                  544682.75943
#
#        mean of 95%    415971.72967
#          95th %ile          527552
#
# WARNINGS
#     Actual benchmark run time only accounts for 41.6% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rz128k   1   1         1710314         7976        0        1   131072   -r--
# bin/../bin-riscv64/mmap -N mmap_rz128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1613513                    1613513
#                        max   4314860                    2210723
#                       mean   1824292.62530              1788202.74649
#                     median   1725114                    1710314*
#                     stddev    222585.75290               141056.10808
#             standard error      2432.66750                 1579.42615
#       99% confidence level      6266.55148                 4068.60176
#                       skew         2.74365                    0.76549
#                   kurtosis        12.99428                   -0.48521
#           time correlation        74.95925                   57.90776
#
#               elapsed time        20.00939
#                   run time        15.28701
#          getnsecs overhead      1416
#
#          number of samples      8372
#         number of outliers       396
#    number of final samples      7976
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 46         1613513 |*                                 1622714.82609
#                284         1627379 |********                          1636658.62676
#                685         1641245 |*********************             1648367.21168
#               1016         1655111 |********************************  1662193.99606
#                943         1668977 |*****************************     1675677.90668
#                651         1682843 |********************              1689299.20276
#                371         1696709 |***********                       1703326.40162
#                180         1710575 |*****                             1716756.46667
#                102         1724441 |***                               1731044.90196
#                 48         1738307 |*                                 1745614.77083
#                 34         1752173 |*                                 1758467.91176
#                 20         1766039 |*                                 1771590.30000
#                 35         1779905 |*                                 1788115.48571
#                 66         1793771 |**                                1801694.53030
#                127         1807637 |****                              1815573.48819
#                193         1821503 |******                            1828367.02073
#                281         1835369 |********                          1842544.23132
#                323         1849235 |**********                        1856032.80805
#                294         1863101 |*********                         1869580.92857
#                261         1876967 |********                          1883890.76245
#                230         1890833 |*******                           1897290.93043
#                211         1904699 |******                            1912330.94313
#                192         1918565 |******                            1925007.01562
#                177         1932431 |*****                             1939457.11299
#                140         1946297 |****                              1952709.08571
#                140         1960163 |****                              1966747.19286
#                111         1974029 |***                               1980736.03604
#                104         1987895 |***                               1994875.89423
#                 99         2001761 |***                               2007668.87879
#                106         2015627 |***                               2022500.80189
#                 54         2029493 |*                                 2036123.50000
#                 53         2043359 |*                                 2050193.73585
#
#                399           > 95% |************                      2117238.48371
#
#        mean of 95%   1770875.93388
#          95th %ile         2057221
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 76.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_rz8k   1   1          353748         3326        0        1     8192   -r--
# bin/../bin-riscv64/mmap -N mmap_rz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    321698                     321698
#                        max   1557520                     451950
#                       mean    388016.32769               364178.06133
#                     median    357948                     353748*
#                     stddev     77267.74166                29302.25470
#             standard error      1247.06521                  508.08915
#       99% confidence level      3212.43998                 1308.83764
#                       skew         3.76012                    1.50236
#                   kurtosis        26.46240                    1.38552
#           time correlation        51.00840                   26.72586
#
#               elapsed time        20.01283
#                   run time         2.98326
#          getnsecs overhead      1416
#
#          number of samples      3839
#         number of outliers       513
#    number of final samples      3326
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          321698 |*                                  322823.00000
#                 17          325274 |*                                  327233.29412
#                 33          328850 |**                                 330737.39394
#                 81          332426 |*******                            334705.40741
#                234          336002 |********************               337911.64103
#                328          339578 |****************************       341424.94512
#                366          343154 |********************************   344845.21858
#                331          346730 |****************************       348634.81269
#                275          350306 |************************           352077.57455
#                227          353882 |*******************                355764.69163
#                186          357458 |****************                   359095.72581
#                144          361034 |************                       362753.04167
#                146          364610 |************                       366179.08904
#                105          368186 |*********                          370057.97143
#                112          371762 |*********                          373551.67857
#                 83          375338 |*******                            377012.25301
#                 62          378914 |*****                              380420.77419
#                 54          382490 |****                               384156.40741
#                 32          386066 |**                                 387697.43750
#                 27          389642 |**                                 391187.88889
#                 21          393218 |*                                  394934.71429
#                 33          396794 |**                                 398455.12121
#                 14          400370 |*                                  401731.28571
#                 19          403946 |*                                  405404.47368
#                 13          407522 |*                                  409053.53846
#                 26          411098 |**                                 412791.84615
#                 21          414674 |*                                  416521.14286
#                 20          418250 |*                                  419779.95000
#                 34          421826 |**                                 423826.47059
#                 35          425402 |***                                427074.28571
#                 43          428978 |***                                430593.02326
#                 33          432554 |**                                 434246.96970
#
#                167           > 95% |**************                     444224.25150
#
#        mean of 95%    359946.43305
#          95th %ile          436100
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.9% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_t128k   1   1          165124         7319        0        4   131072   ----
# bin/../bin-riscv64/mmap -N mmap_t128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    147049                     147049
#                        max   5229039                     190660
#                       mean    225870.14206               166083.77060
#                     median    169699                     165124*
#                     stddev    167223.10923                 8201.11900
#             standard error      1636.69157                   95.86217
#       99% confidence level      4216.11748                  246.94094
#                       skew         9.62808                    0.62461
#                   kurtosis       194.48218                    0.18147
#           time correlation        30.62624                    3.74857
#
#               elapsed time        20.00857
#                   run time         9.77986
#          getnsecs overhead      1416
#
#          number of samples     10439
#         number of outliers      3120
#    number of final samples      7319
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          147049 |*                                  147486.50000
#                  9          148142 |*                                  148807.33333
#                 25          149235 |*                                  149872.00000
#                 48          150328 |***                                151032.33333
#                 68          151421 |*****                              151982.45588
#                115          152514 |********                           153037.35652
#                169          153607 |************                       154126.64497
#                199          154700 |**************                     155273.09045
#                235          155793 |*****************                  156338.43404
#                286          156886 |*********************              157468.79021
#                307          157979 |**********************             158540.59283
#                330          159072 |************************           159608.85152
#                368          160165 |***************************        160758.98098
#                427          161258 |*******************************    161791.57611
#                429          162351 |********************************   162921.67599
#                415          163444 |******************************     163962.95181
#                425          164537 |*******************************    165076.90588
#                416          165630 |*******************************    166187.24760
#                344          166723 |*************************          167239.91860
#                346          167816 |*************************          168362.78613
#                341          168909 |*************************          169439.27273
#                281          170002 |********************               170519.76512
#                247          171095 |******************                 171613.28745
#                197          172188 |**************                     172736.02030
#                169          173281 |************                       173768.46154
#                173          174374 |************                       174915.53179
#                115          175467 |********                           176007.26087
#                117          176560 |********                           177075.48718
#                107          177653 |*******                            178179.77570
#                 89          178746 |******                             179311.41573
#                 90          179839 |******                             180359.93333
#                 64          180932 |****                               181428.65625
#
#                366           > 95% |***************************        186101.61202
#
#        mean of 95%    165030.04847
#          95th %ile          181999
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.9% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_t8k   1   1          162540         7521        0        4     8192   ----
# bin/../bin-riscv64/mmap -N mmap_t8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    146997                     148524
#                        max   1120212                     177749
#                       mean    193259.78628               162992.70828
#                     median    164940                     162540*
#                     stddev     70829.16239                 4926.16725
#             standard error       699.70300                   56.80301
#       99% confidence level      1802.43494                  146.32456
#                       skew         2.67928                    0.40181
#                   kurtosis         8.84139                    0.02998
#           time correlation        15.98577                    2.20696
#
#               elapsed time        20.00965
#                   run time         9.62123
#          getnsecs overhead      1416
#
#          number of samples     10247
#         number of outliers      2726
#    number of final samples      7521
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          148524 |*                                  148690.66667
#                  5          149255 |*                                  149599.00000
#                  5          149986 |*                                  150487.00000
#                 11          150717 |*                                  151137.81818
#                 17          151448 |*                                  151912.05882
#                 31          152179 |*                                  152582.70968
#                 45          152910 |**                                 153334.97778
#                 70          153641 |****                               154037.58571
#                105          154372 |******                             154743.09524
#                132          155103 |********                           155481.72727
#                167          155834 |**********                         156199.03593
#                240          156565 |***************                    156951.10417
#                294          157296 |******************                 157682.92177
#                339          158027 |*********************              158393.93510
#                389          158758 |*************************          159140.14396
#                428          159489 |***************************        159836.82944
#                460          160220 |*****************************      160583.64783
#                497          160951 |********************************   161325.98793
#                444          161682 |****************************       162056.94595
#                464          162413 |*****************************      162786.21767
#                402          163144 |*************************          163514.14925
#                403          163875 |*************************          164240.08189
#                359          164606 |***********************            164962.33148
#                316          165337 |********************               165707.12658
#                307          166068 |*******************                166413.14658
#                260          166799 |****************                   167141.36923
#                242          167530 |***************                    167896.91736
#                176          168261 |***********                        168612.44318
#                176          168992 |***********                        169328.78409
#                149          169723 |*********                          170068.67785
#                105          170454 |******                             170798.48571
#                103          171185 |******                             171522.34951
#
#                377           > 95% |************************           174359.72679
#
#        mean of 95%    162392.85302
#          95th %ile          171900
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.1% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wa128k   1   1         3386545         4539        0        1   131072   a-w-
# bin/../bin-riscv64/mmap -N mmap_wa128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   3128140                    3128140
#                        max   6306597                    3750651
#                       mean   3445252.38095              3390995.21260
#                     median   3393145                    3386545*
#                     stddev    283545.75761               119998.42509
#             standard error      4088.79903                 1781.12933
#       99% confidence level     10532.74631                 4588.18915
#                       skew         4.48874                    0.05704
#                   kurtosis        28.69445                    0.13931
#           time correlation       138.60775                   87.53105
#
#               elapsed time        20.01015
#                   run time        16.58005
#          getnsecs overhead      1416
#
#          number of samples      4809
#         number of outliers       270
#    number of final samples      4539
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 11         3128140 |*                                 3137849.45455
#                 90         3143094 |*******                           3152007.34444
#                126         3158048 |**********                        3166046.56349
#                146         3173002 |************                      3180197.36301
#                131         3187956 |**********                        3195067.47328
#                 95         3202910 |*******                           3209810.16842
#                 50         3217864 |****                              3224916.08000
#                 39         3232818 |***                               3239173.12821
#                 18         3247772 |*                                 3253909.27778
#                 12         3262726 |*                                 3271626.25000
#                 10         3277680 |*                                 3285853.10000
#                 15         3292634 |*                                 3300656.60000
#                100         3307588 |********                          3316286.64000
#                244         3322542 |********************              3330520.15984
#                336         3337496 |***************************       3345436.12500
#                386         3352450 |********************************  3359997.78497
#                376         3367404 |*******************************   3374955.36702
#                334         3382358 |***************************       3390374.34431
#                262         3397312 |*********************             3404781.11832
#                235         3412266 |*******************               3419757.51064
#                205         3427220 |****************                  3435335.09268
#                154         3442174 |************                      3449518.15584
#                158         3457128 |*************                     3464553.86709
#                144         3472082 |***********                       3478860.43056
#                149         3487036 |************                      3493820.66443
#                116         3501990 |*********                         3509512.61207
#                 90         3516944 |*******                           3524051.82222
#                 80         3531898 |******                            3539158.87500
#                 61         3546852 |*****                             3554375.81967
#                 51         3561806 |****                              3568985.43137
#                 42         3576760 |***                               3583767.64286
#                 46         3591714 |***                               3599142.08696
#
#                227           > 95% |******************                3656201.75771
#
#        mean of 95%   3377033.73632
#          95th %ile         3606649
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wa8k   1   1          410700         7852        0        1     8192   a-w-
# bin/../bin-riscv64/mmap -N mmap_wa8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    379499                     379499
#                        max   4397063                     561452
#                       mean    462879.62675               428982.16594
#                     median    414150                     410700*
#                     stddev    167999.65706                44175.43348
#             standard error      1806.23910                  498.52928
#       99% confidence level      4652.87192                 1284.21144
#                       skew         8.71595                    1.31334
#                   kurtosis       113.89255                    0.49511
#           time correlation        35.12768                   17.19970
#
#               elapsed time        20.00975
#                   run time         7.73173
#          getnsecs overhead      1416
#
#          number of samples      8651
#         number of outliers       799
#    number of final samples      7852
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 37          379499 |*                                  382754.40541
#                297          384065 |***********                        386926.19529
#                723          388631 |***************************        391002.42877
#                798          393197 |******************************     395405.96491
#                828          397763 |********************************   399979.89734
#                732          402329 |****************************       404521.79508
#                605          406895 |***********************            409099.97851
#                495          411461 |*******************                413691.77778
#                428          416027 |****************                   418214.70794
#                347          420593 |*************                      422784.48415
#                253          425159 |*********                          427403.30830
#                179          429725 |******                             432020.92737
#                145          434291 |*****                              436395.61379
#                118          438857 |****                               441068.29661
#                 83          443423 |***                                445365.60241
#                 60          447989 |**                                 450161.31667
#                 54          452555 |**                                 454672.74074
#                 31          457121 |*                                  459192.48387
#                 34          461687 |*                                  463466.64706
#                 29          466253 |*                                  468694.27586
#                 42          470819 |*                                  473129.16667
#                 61          475385 |**                                 477872.29508
#                116          479951 |****                               482200.85345
#                116          484517 |****                               486924.06897
#                107          489083 |****                               491362.06542
#                119          493649 |****                               495867.11765
#                151          498215 |*****                              500389.23179
#                104          502781 |****                               505201.11538
#                108          507347 |****                               509638.95370
#                 96          511913 |***                                514354.68750
#                 93          516479 |***                                518581.22581
#                 70          521045 |**                                 523194.08571
#
#                393           > 95% |***************                    540679.27481
#
#        mean of 95%    423097.06556
#          95th %ile          525602
#
# WARNINGS
#     Actual benchmark run time only accounts for 38.6% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wt128k   1   1         4131359         3672        0        1   131072   --w-
# bin/../bin-riscv64/mmap -N mmap_wt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   3870254                    3921656
#                        max   9783469                    4424664
#                       mean   4220699.30902              4154959.99646
#                     median   4142559                    4131359*
#                     stddev    273290.42545                90283.62793
#             standard error      4296.99802                 1489.90187
#       99% confidence level     11069.06690                 3837.98722
#                       skew         5.83992                    0.86684
#                   kurtosis        65.09635                    0.13747
#           time correlation       152.31108                   81.14722
#
#               elapsed time        20.00796
#                   run time        17.08824
#          getnsecs overhead      1416
#
#          number of samples      4045
#         number of outliers       373
#    number of final samples      3672
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         3921656 |*                                 3921656.00000
#                  1         3934622 |*                                 3943555.00000
#                  0         3947588 |                                              -
#                  3         3960554 |*                                 3971822.66667
#                  2         3973520 |*                                 3984556.50000
#                  8         3986486 |*                                 3995869.00000
#                 11         3999452 |*                                 4006938.36364
#                 28         4012418 |**                                4020685.57143
#                 78         4025384 |********                          4031443.20513
#                137         4038350 |**************                    4045480.11679
#                197         4051316 |********************              4058645.05584
#                232         4064282 |************************          4071132.46121
#                251         4077248 |**************************        4083903.17530
#                307         4090214 |********************************  4097104.31270
#                275         4103180 |****************************      4109687.66182
#                265         4116146 |***************************       4122301.12830
#                219         4129112 |**********************            4135149.90411
#                183         4142078 |*******************               4148555.49180
#                181         4155044 |******************                4161800.94475
#                136         4168010 |**************                    4175317.84559
#                126         4180976 |*************                     4186732.97619
#                111         4193942 |***********                       4200633.26126
#                107         4206908 |***********                       4213166.13084
#                 92         4219874 |*********                         4226758.54348
#                105         4232840 |**********                        4239186.66667
#                 66         4245806 |******                            4252580.86364
#                 75         4258772 |*******                           4265432.04000
#                 60         4271738 |******                            4277906.60000
#                 62         4284704 |******                            4290963.43548
#                 53         4297670 |*****                             4304030.01887
#                 64         4310636 |******                            4317349.81250
#                 52         4323602 |*****                             4329945.32692
#
#                184           > 95% |*******************               4375475.91848
#
#        mean of 95%   4143327.27580
#          95th %ile         4336563
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wt8k   1   1          488093        14292        0        1     8192   --w-
# bin/../bin-riscv64/mmap -N mmap_wt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    448292                     448292
#                        max   3960256                     550894
#                       mean    538391.51787               489292.01924
#                     median    493093                     488093*
#                     stddev    163354.99344                20558.83669
#             standard error      1251.51441                  171.96974
#       99% confidence level      3223.90111                  442.99405
#                       skew         6.25813                    0.49506
#                   kurtosis        64.13241                   -0.32150
#           time correlation        18.53065                    4.88352
#
#               elapsed time        20.00917
#                   run time         9.19778
#          getnsecs overhead      1416
#
#          number of samples     17037
#         number of outliers      2745
#    number of final samples     14292
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          448292 |*                                  449817.16667
#                 19          450755 |*                                  452008.15789
#                 35          453218 |*                                  454455.20000
#                135          455681 |******                             457126.44444
#                449          458144 |********************               459619.36303
#                662          460607 |******************************     461901.33082
#                700          463070 |*******************************    464279.64000
#                686          465533 |*******************************    466828.09475
#                660          467996 |******************************     469251.84848
#                532          470459 |************************           471648.99436
#                411          472922 |******************                 474106.31144
#                405          475385 |******************                 476612.69630
#                485          477848 |**********************             479119.14639
#                571          480311 |*************************          481581.58144
#                605          482774 |***************************        483986.88264
#                673          485237 |******************************     486567.31947
#                675          487700 |******************************     488945.24444
#                703          490163 |********************************   491385.01991
#                618          492626 |****************************       493857.10032
#                590          495089 |**************************         496229.19492
#                564          497552 |*************************          498812.08688
#                481          500015 |*********************              501233.27443
#                476          502478 |*********************              503662.52731
#                437          504941 |*******************                506182.49428
#                364          507404 |****************                   508631.21703
#                343          509867 |***************                    511040.59767
#                279          512330 |************                       513471.54480
#                263          514793 |***********                        515892.25475
#                215          517256 |*********                          518460.41395
#                199          519719 |*********                          520925.69849
#                172          522182 |*******                            523398.21512
#                158          524645 |*******                            525787.28481
#
#                715           > 95% |********************************   536230.71888
#
#        mean of 95%    486820.10569
#          95th %ile          527093
#
# WARNINGS
#     Actual benchmark run time only accounts for 46.0% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wz128k   1   1         3484348         3102        0        1   131072   --w-
# bin/../bin-riscv64/mmap -N mmap_wz128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   3196443                    3196443
#                        max   7030213                    3868455
#                       mean   3524570.90144              3491391.70052
#                     median   3486948                    3484348*
#                     stddev    266686.68244               127471.09192
#             standard error      4717.34830                 2288.71022
#       99% confidence level     12151.88923                 5895.71753
#                       skew         6.12011                    0.09974
#                   kurtosis        53.84798                    0.30399
#           time correlation       185.22859                  135.71044
#
#               elapsed time        20.01261
#                   run time        11.27419
#          getnsecs overhead      1416
#
#          number of samples      3196
#         number of outliers        94
#    number of final samples      3102
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 20         3196443 |**                                3208012.90000
#                 70         3212884 |*******                           3221807.27143
#                 53         3229325 |*****                             3237794.22642
#                 70         3245766 |*******                           3253659.14286
#                 42         3262207 |****                              3269796.14286
#                 36         3278648 |***                               3287463.55556
#                 31         3295089 |***                               3302831.48387
#                 26         3311530 |**                                3319671.53846
#                 22         3327971 |**                                3335072.36364
#                 14         3344412 |*                                 3351745.57143
#                 32         3360853 |***                               3369608.15625
#                 63         3377294 |******                            3386782.39683
#                140         3393735 |**************                    3402904.88571
#                143         3410176 |***************                   3418704.49650
#                183         3426617 |*******************               3435309.71585
#                194         3443058 |********************              3451882.71134
#                245         3459499 |**************************        3467974.40816
#                301         3475940 |********************************  3483905.93355
#                231         3492381 |************************          3499804.74459
#                143         3508822 |***************                   3516841.44056
#                136         3525263 |**************                    3532794.99265
#                130         3541704 |*************                     3549454.33077
#                 99         3558145 |**********                        3565907.82828
#                 89         3574586 |*********                         3582993.43820
#                 78         3591027 |********                          3599676.78205
#                 61         3607468 |******                            3615645.24590
#                 56         3623909 |*****                             3631325.48214
#                 63         3640350 |******                            3649026.92063
#                 63         3656791 |******                            3663805.01587
#                 39         3673232 |****                              3679512.82051
#                 33         3689673 |***                               3697039.63636
#                 40         3706114 |****                              3712564.42500
#
#                156           > 95% |****************                  3775011.37821
#
#        mean of 95%   3476373.14325
#          95th %ile         3722552
#
# WARNINGS
#     Actual benchmark run time only accounts for 56.3% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_wz8k   1   1          469393        14033        0        1     8192   --w-
# bin/../bin-riscv64/mmap -N mmap_wz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    407792                     407792
#                        max   4490767                     569194
#                       mean    518787.44071               468192.62453
#                     median    476793                     469393*
#                     stddev    176416.96377                33767.12878
#             standard error      1372.15735                  285.04857
#       99% confidence level      3534.67734                  734.28512
#                       skew         6.89822                    0.23445
#                   kurtosis        81.64229                   -0.64060
#           time correlation        21.72230                    8.25079
#
#               elapsed time        20.00724
#                   run time         9.08426
#          getnsecs overhead      1416
#
#          number of samples     16530
#         number of outliers      2497
#    number of final samples     14033
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 26          407792 |*                                  410149.03846
#                253          411389 |************                       413660.75889
#                557          414986 |***************************        416809.48294
#                567          418583 |***************************        420413.07407
#                591          422180 |****************************       423865.23519
#                440          425777 |*********************              427530.04773
#                270          429374 |*************                      431025.25556
#                334          432971 |****************                   434877.33234
#                415          436568 |********************               438407.47711
#                499          440165 |************************           441950.24449
#                524          443762 |*************************          445572.94275
#                519          447359 |*************************          449080.88825
#                403          450956 |*******************                452634.03474
#                346          454553 |****************                   456275.05780
#                319          458150 |***************                    459926.33229
#                364          461747 |*****************                  463605.35440
#                513          465344 |************************           467196.55750
#                582          468941 |****************************       470752.87285
#                657          472538 |********************************   474373.06088
#                534          476135 |**************************         477892.40262
#                445          479732 |*********************              481492.77303
#                439          483329 |*********************              485218.87244
#                460          486926 |**********************             488821.37391
#                490          490523 |***********************            492338.21429
#                516          494120 |*************************          495951.89535
#                517          497717 |*************************          499512.65764
#                435          501314 |*********************              502995.80690
#                380          504911 |******************                 506582.56053
#                292          508508 |**************                     510212.19863
#                274          512105 |*************                      513937.82482
#                197          515702 |*********                          517598.20305
#                173          519299 |********                           521060.54335
#
#                702           > 95% |**********************************   538472.83333
#
#        mean of 95%    464491.72388
#          95th %ile          522893
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_z128k   1   1          174580         2251        0        4   131072   ----
# bin/../bin-riscv64/mmap -N mmap_z128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    160649                     160649
#                        max    759535                     215021
#                       mean    191468.04778               178757.06753
#                     median    176099                     174580*
#                     stddev     42762.88373                12111.40645
#             standard error       839.45671                  255.27415
#       99% confidence level      2162.44048                  657.58620
#                       skew         4.59215                    1.26497
#                   kurtosis        33.48986                    0.62362
#           time correlation        37.76997                   16.80507
#
#               elapsed time        20.02091
#                   run time         2.28674
#          getnsecs overhead      1416
#
#          number of samples      2595
#         number of outliers       344
#    number of final samples      2251
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          160649 |*                                  161374.00000
#                 12          162051 |*                                  162741.33333
#                 34          163453 |*****                              164270.64706
#                 50          164855 |*******                            165625.94000
#                120          166257 |******************                 167003.59167
#                163          167659 |*************************          168430.67485
#                174          169061 |**************************         169765.01724
#                208          170463 |********************************   171173.95192
#                194          171865 |*****************************      172526.51031
#                175          173267 |**************************         173983.90857
#                158          174669 |************************           175312.29747
#                133          176071 |********************               176714.08271
#                112          177473 |*****************                  178115.40179
#                 78          178875 |************                       179466.03846
#                 52          180277 |********                           180949.94231
#                 39          181679 |******                             182414.79487
#                 40          183081 |******                             183772.00000
#                 25          184483 |***                                185176.48000
#                 24          185885 |***                                186472.33333
#                 23          187287 |***                                187987.91304
#                 24          188689 |***                                189518.95833
#                 23          190091 |***                                190868.69565
#                 19          191493 |**                                 192081.57895
#                 30          192895 |****                               193561.16667
#                 26          194297 |****                               194952.11538
#                 25          195699 |***                                196320.80000
#                 29          197101 |****                               197781.82759
#                 24          198503 |***                                199259.00000
#                 37          199905 |*****                              200632.75676
#                 23          201307 |***                                201957.21739
#                 31          202709 |****                               203477.48387
#                 29          204111 |****                               204885.86207
#
#                113           > 95% |*****************                  209753.05310
#
#        mean of 95%    177118.83255
#          95th %ile          205501
#
# WARNINGS
#     Actual benchmark run time only accounts for 11.4% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
         prc thr      nsecs/call      samples   errors cnt/samp   length  flags
mmap_z8k   1   1          166360         2851        0        4     8192   ----
# bin/../bin-riscv64/mmap -N mmap_z8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    153780                     153780
#                        max    568827                     184020
#                       mean    185820.30013               167210.30866
#                     median    169220                     166360*
#                     stddev     41833.89369                 5619.72594
#             standard error       668.59389                  105.24865
#       99% confidence level      1722.29787                  271.12052
#                       skew         2.87665                    0.64251
#                   kurtosis         9.77314                    0.18216
#           time correlation        26.48051                    6.58828
#
#               elapsed time        20.01474
#                   run time         3.58085
#          getnsecs overhead      1416
#
#          number of samples      3915
#         number of outliers      1064
#    number of final samples      2851
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          153780 |*                                  154010.00000
#                  5          154539 |*                                  154965.60000
#                  5          155298 |*                                  155732.00000
#                 15          156057 |**                                 156479.93333
#                 18          156816 |**                                 157165.16667
#                 30          157575 |****                               157901.33333
#                 45          158334 |*******                            158671.95556
#                 71          159093 |***********                        159512.02817
#                 84          159852 |*************                      160226.97619
#                 98          160611 |****************                   160980.60204
#                143          161370 |***********************            161787.55245
#                144          162129 |***********************            162515.88194
#                140          162888 |**********************             163275.67857
#                179          163647 |*****************************      164018.22346
#                169          164406 |***************************        164783.27219
#                196          165165 |********************************   165549.18878
#                138          165924 |**********************             166293.46377
#                155          166683 |*************************          167067.41935
#                130          167442 |*********************              167826.10000
#                131          168201 |*********************              168572.13740
#                130          168960 |*********************              169286.55385
#                113          169719 |******************                 170081.58407
#                 87          170478 |**************                     170853.91954
#                 85          171237 |*************                      171592.58824
#                 80          171996 |*************                      172361.53750
#                 63          172755 |**********                         173113.09524
#                 72          173514 |***********                        173921.13889
#                 40          174273 |******                             174651.12500
#                 49          175032 |********                           175400.91837
#                 29          175791 |****                               176106.65517
#                 28          176550 |****                               176881.92857
#                 34          177309 |*****                              177699.32353
#
#                143           > 95% |***********************            180904.11189
#
#        mean of 95%    166487.18685
#          95th %ile          178040
#
# WARNINGS
#     Actual benchmark run time only accounts for 17.9% of elapsed time.
#
# Usage: mmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures mmap()
             prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_tw128k   1   1          455403          105        0      500   131072 --w-t
# bin/../bin-riscv64/mprotect -N mprot_tw128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -t -f /dev/zero -B 500 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    436704                     436704
#                        max    499917                     477191
#                       mean    458168.21101               457008.46667
#                     median    455765                     455403*
#                     stddev      9480.74671                 7361.25652
#             standard error       908.09084                  718.38508
#       99% confidence level      2339.24201                 1850.55996
#                       skew         1.64547                    0.89513
#                   kurtosis         3.80190                    1.13946
#           time correlation       259.40130                  221.05354
#
#               elapsed time        25.05037
#                   run time        24.97032
#          getnsecs overhead      1416
#
#          number of samples       109
#         number of outliers         4
#    number of final samples       105
#             ops per sample       500.00000 (-B 500)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          436704 |**                                 436704.00000
#                  0          437886 |                                              -
#                  0          439068 |                                              -
#                  0          440250 |                                              -
#                  0          441432 |                                              -
#                  0          442614 |                                              -
#                  0          443796 |                                              -
#                  1          444978 |**                                 445728.00000
#                  2          446160 |****                               446445.50000
#                  4          447342 |*********                          448019.00000
#                  5          448524 |***********                        449281.60000
#                  5          449706 |***********                        450152.80000
#                  1          450888 |**                                 451216.00000
#                  8          452070 |******************                 452632.62500
#                 14          453252 |********************************   453857.50000
#                 12          454434 |***************************        454948.75000
#                 11          455616 |*************************          456230.27273
#                  7          456798 |****************                   457453.00000
#                  7          457980 |****************                   458523.00000
#                  4          459162 |*********                          459739.25000
#                  2          460344 |****                               460930.00000
#                  4          461526 |*********                          461926.75000
#                  1          462708 |**                                 463868.00000
#                  2          463890 |****                               464860.00000
#                  4          465072 |*********                          465449.75000
#                  0          466254 |                                              -
#                  0          467436 |                                              -
#                  1          468618 |**                                 469591.00000
#                  1          469800 |**                                 470196.00000
#                  0          470982 |                                              -
#                  0          472164 |                                              -
#                  2          473346 |****                               473550.00000
#
#                  6           > 95% |*************                      475748.00000
#
#        mean of 95%    455872.73737
#          95th %ile          474500
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
           prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_tw4m   1   1         2091464          231        0       40  4194304 --w-t
# bin/../bin-riscv64/mprotect -N mprot_tw4m -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 4m -w -t -f /dev/zero -B 40 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2049705                    2049705
#                        max   2558980                    2165287
#                       mean   2101267.56723              2094385.77489
#                     median   2092604                    2091464*
#                     stddev     52724.43356                24128.93215
#             standard error      3417.61742                 1587.56718
#       99% confidence level      8803.78246                 4089.57306
#                       skew         5.60355                    0.53145
#                   kurtosis        40.74566                   -0.03522
#           time correlation       491.47022                  351.41284
#
#               elapsed time        20.12129
#                   run time        20.00440
#          getnsecs overhead      1416
#
#          number of samples       238
#         number of outliers         7
#    number of final samples       231
#             ops per sample        40.00000 (-B 40)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3         2049705 |*******                           2050423.66667
#                  3         2052509 |*******                           2053899.66667
#                  3         2055313 |*******                           2057309.33333
#                  6         2058117 |**************                    2059682.00000
#                  7         2060921 |*****************                 2061803.71429
#                  7         2063725 |*****************                 2064725.14286
#                  8         2066529 |*******************               2067609.00000
#                  5         2069333 |************                      2070902.40000
#                  7         2072137 |*****************                 2074026.00000
#                 10         2074941 |************************          2075985.70000
#                 10         2077745 |************************          2079579.80000
#                 13         2080549 |********************************  2081961.84615
#                 12         2083353 |*****************************     2084289.75000
#                 11         2086157 |***************************       2087942.90909
#                 12         2088961 |*****************************     2090266.58333
#                 13         2091765 |********************************  2093192.38462
#                  6         2094569 |**************                    2096160.50000
#                  8         2097373 |*******************               2098744.37500
#                 11         2100177 |***************************       2101519.27273
#                 11         2102981 |***************************       2104559.90909
#                  6         2105785 |**************                    2107083.16667
#                  3         2108589 |*******                           2109936.00000
#                  5         2111393 |************                      2112892.40000
#                  7         2114197 |*****************                 2115656.00000
#                  7         2117001 |*****************                 2118158.42857
#                 12         2119805 |*****************************     2121343.33333
#                  2         2122609 |****                              2123954.00000
#                  2         2125413 |****                              2127048.00000
#                  4         2128217 |*********                         2129123.50000
#                  2         2131021 |****                              2132728.00000
#                  2         2133825 |****                              2134396.50000
#                  1         2136629 |**                                2138692.00000
#
#                 12           > 95% |*****************************     2150944.16667
#
#        mean of 95%   2091286.68493
#          95th %ile         2139402
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
            prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_twz8k   1   1          675164           40        0      900     8192 --w-t
# bin/../bin-riscv64/mprotect -N mprot_twz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -t -f /dev/zero -B 900 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    426265                     534730
#                        max    727170                     727170
#                       mean    660816.18605               673723.82500
#                     median    672142                     675164*
#                     stddev     58748.47992                33430.37516
#             standard error      8959.05920                 5285.80643
#       99% confidence level     23078.53649                13616.23735
#                       skew        -2.25115                   -1.68071
#                   kurtosis         5.28010                    5.41533
#           time correlation      3722.62806                 2524.64625
#
#               elapsed time        25.64222
#                   run time        25.57365
#          getnsecs overhead      1416
#
#          number of samples        43
#         number of outliers         3
#    number of final samples        40
#             ops per sample       900.00000 (-B 900)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          534730 |*****                              534730.00000
#                  0          540683 |                                              -
#                  0          546636 |                                              -
#                  0          552589 |                                              -
#                  0          558542 |                                              -
#                  0          564495 |                                              -
#                  0          570448 |                                              -
#                  0          576401 |                                              -
#                  0          582354 |                                              -
#                  0          588307 |                                              -
#                  0          594260 |                                              -
#                  0          600213 |                                              -
#                  0          606166 |                                              -
#                  0          612119 |                                              -
#                  1          618072 |*****                              620513.00000
#                  0          624025 |                                              -
#                  0          629978 |                                              -
#                  2          635931 |**********                         639341.50000
#                  2          641884 |**********                         643254.50000
#                  0          647837 |                                              -
#                  6          653790 |********************************   656607.50000
#                  3          659743 |****************                   663254.33333
#                  2          665696 |**********                         667888.50000
#                  5          671649 |**************************         673986.40000
#                  2          677602 |**********                         679948.00000
#                  1          683555 |*****                              687813.00000
#                  5          689508 |**************************         692829.20000
#                  3          695461 |****************                   697195.66667
#                  2          701414 |**********                         705463.50000
#                  3          707367 |****************                   708886.33333
#
#                  2           > 95% |**********                         726186.50000
#
#        mean of 95%    670962.63158
#          95th %ile          725203
#
# WARNINGS
#     Too few samples, 43 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
             prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_wz128k   1   1          706680           44        0      800   131072 --w--
# bin/../bin-riscv64/mprotect -N mprot_wz128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero -B 800 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    464284                     621050
#                        max    759324                     759324
#                       mean    693916.80000               699135.72727
#                     median    705185                     706680*
#                     stddev     47798.58472                32918.97988
#             standard error      7125.39231                 4962.72294
#       99% confidence level     18355.01059                12783.97430
#                       skew        -2.65503                   -0.90262
#                   kurtosis         9.74731                    0.33509
#           time correlation      2865.04361                 2336.70796
#
#               elapsed time        25.07620
#                   run time        24.98107
#          getnsecs overhead      1416
#
#          number of samples        45
#         number of outliers         1
#    number of final samples        44
#             ops per sample       800.00000 (-B 800)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          621050 |****                               621050.00000
#                  2          624911 |*********                          626566.00000
#                  1          628772 |****                               629868.00000
#                  0          632633 |                                              -
#                  0          636494 |                                              -
#                  1          640355 |****                               640634.00000
#                  1          644216 |****                               644819.00000
#                  0          648077 |                                              -
#                  0          651938 |                                              -
#                  0          655799 |                                              -
#                  0          659660 |                                              -
#                  1          663521 |****                               664950.00000
#                  1          667382 |****                               670120.00000
#                  0          671243 |                                              -
#                  1          675104 |****                               675585.00000
#                  1          678965 |****                               680815.00000
#                  0          682826 |                                              -
#                  1          686687 |****                               687784.00000
#                  1          690548 |****                               693965.00000
#                  1          694409 |****                               697448.00000
#                  2          698270 |*********                          701220.00000
#                  7          702131 |********************************   704100.42857
#                  5          705992 |**********************             707544.20000
#                  4          709853 |******************                 711654.75000
#                  2          713714 |*********                          714123.00000
#                  2          717575 |*********                          719629.00000
#                  2          721436 |*********                          724715.00000
#                  3          725297 |*************                      725799.33333
#                  0          729158 |                                              -
#                  1          733019 |****                               736693.00000
#
#                  3           > 95% |*************                      751764.66667
#
#        mean of 95%    695284.82927
#          95th %ile          744584
#
# WARNINGS
#     Too few samples, 45 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
           prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_wz8k   1   1          408396           56        0     1024     8192 --w--
# bin/../bin-riscv64/mprotect -N mprot_wz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    397254                     403310
#                        max    437520                     417629
#                       mean    409334.88333               408571.83929
#                     median    408513                     408396*
#                     stddev      5681.85247                 3236.80963
#             standard error       733.52400                  432.53688
#       99% confidence level      1889.55782                 1114.21501
#                       skew         2.34140                    0.69419
#                   kurtosis         8.92562                    0.13230
#           time correlation       265.72662                  191.72321
#
#               elapsed time        25.21139
#                   run time        25.14962
#          getnsecs overhead      1416
#
#          number of samples        60
#         number of outliers         4
#    number of final samples        56
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          403310 |******                             403310.00000
#                  1          403670 |******                             403985.00000
#                  3          404030 |*******************                404260.00000
#                  1          404390 |******                             404735.00000
#                  2          404750 |************                       404879.00000
#                  0          405110 |                                              -
#                  5          405470 |********************************   405547.80000
#                  2          405830 |************                       406081.50000
#                  1          406190 |******                             406284.00000
#                  4          406550 |*************************          406789.75000
#                  2          406910 |************                       407126.50000
#                  2          407270 |************                       407378.00000
#                  2          407630 |************                       407807.00000
#                  2          407990 |************                       408016.50000
#                  4          408350 |*************************          408502.00000
#                  2          408710 |************                       408941.00000
#                  3          409070 |*******************                409299.66667
#                  0          409430 |                                              -
#                  3          409790 |*******************                409978.66667
#                  3          410150 |*******************                410370.66667
#                  1          410510 |******                             410595.00000
#                  2          410870 |************                       411086.00000
#                  0          411230 |                                              -
#                  2          411590 |************                       411802.50000
#                  1          411950 |******                             412111.00000
#                  1          412310 |******                             412417.00000
#                  0          412670 |                                              -
#                  1          413030 |******                             413145.00000
#                  1          413390 |******                             413468.00000
#                  1          413750 |******                             413787.00000
#
#                  3           > 95% |*******************                416439.00000
#
#        mean of 95%    408126.52830
#          95th %ile          414811
#
# WARNINGS
#     Too few samples, 60 < 100, consider running test longer, or for a least 100 samples
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
            prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_z128k   1   1          223999          103        0     1024   131072 -----
# bin/../bin-riscv64/mprotect -N mprot_z128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    216833                     216833
#                        max    276077                     240627
#                       mean    227127.08333               225715.38835
#                     median    224654                     223999*
#                     stddev      8535.47329                 5247.10239
#             standard error       821.32630                  517.01236
#       99% confidence level      2115.73655                 1331.82384
#                       skew         2.69475                    0.93036
#                   kurtosis        10.22058                    0.11619
#           time correlation       219.54696                  166.13026
#
#               elapsed time        25.15736
#                   run time        25.11859
#          getnsecs overhead      1416
#
#          number of samples       108
#         number of outliers         5
#    number of final samples       103
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         4
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          216833 |**                                 216833.00000
#                  0          217450 |                                              -
#                  0          218067 |                                              -
#                  0          218684 |                                              -
#                  5          219301 |*************                      219728.60000
#                  6          219918 |****************                   220290.66667
#                  6          220535 |****************                   220810.00000
#                 12          221152 |********************************   221500.58333
#                  5          221769 |*************                      222021.00000
#                  8          222386 |*********************              222671.75000
#                  5          223003 |*************                      223231.40000
#                  5          223620 |*************                      223947.60000
#                  4          224237 |**********                         224594.75000
#                  2          224854 |*****                              225164.00000
#                  3          225471 |********                           225877.33333
#                  5          226088 |*************                      226427.80000
#                  2          226705 |*****                              226922.00000
#                  2          227322 |*****                              227780.00000
#                  3          227939 |********                           228290.66667
#                  4          228556 |**********                         228879.00000
#                  4          229173 |**********                         229502.25000
#                  2          229790 |*****                              230299.50000
#                  4          230407 |**********                         230628.75000
#                  2          231024 |*****                              231440.00000
#                  2          231641 |*****                              231896.00000
#                  0          232258 |                                              -
#                  1          232875 |**                                 233135.00000
#                  1          233492 |**                                 234048.00000
#                  0          234109 |                                              -
#                  0          234726 |                                              -
#                  1          235343 |**                                 235378.00000
#                  2          235960 |*****                              236392.00000
#
#                  6           > 95% |****************                   238302.33333
#
#        mean of 95%    224936.81443
#          95th %ile          236575
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
          prc thr      nsecs/call      samples   errors cnt/samp     size flags
mprot_z8k   1   1          233232           96        0     1024     8192 -----
# bin/../bin-riscv64/mprotect -N mprot_z8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero -B 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    218841                     218841
#                        max    330513                     276185
#                       mean    241984.81188               238688.87500
#                     median    233483                     233232*
#                     stddev     20245.91025                13835.05610
#             standard error      2014.54336                 1412.03450
#       99% confidence level      5189.46371                 3637.40087
#                       skew         2.00379                    0.94460
#                   kurtosis         4.90437                   -0.36528
#           time correlation       581.82310                  459.11252
#
#               elapsed time        25.07485
#                   run time        25.02718
#          getnsecs overhead      1416
#
#          number of samples       101
#         number of outliers         5
#    number of final samples        96
#             ops per sample      1024.00000 (-B 1024)
#
#       recommended -B value         4
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          218841 |**                                 218841.00000
#                  0          220219 |                                              -
#                  0          221597 |                                              -
#                  1          222975 |**                                 224308.00000
#                  2          224353 |****                               225274.00000
#                 14          225731 |********************************   226773.07143
#                 11          227109 |*************************          227661.36364
#                  9          228487 |********************               229074.88889
#                  6          229865 |*************                      230566.83333
#                  3          231243 |******                             231546.66667
#                  4          232621 |*********                          233334.50000
#                  5          233999 |***********                        234621.00000
#                  4          235377 |*********                          236165.00000
#                  2          236755 |****                               237317.50000
#                  3          238133 |******                             238770.33333
#                  1          239511 |**                                 239633.00000
#                  0          240889 |                                              -
#                  1          242267 |**                                 242851.00000
#                  0          243645 |                                              -
#                  1          245023 |**                                 246267.00000
#                  0          246401 |                                              -
#                  3          247779 |******                             248695.33333
#                  3          249157 |******                             250076.66667
#                  1          250535 |**                                 250724.00000
#                  0          251913 |                                              -
#                  2          253291 |****                               253936.50000
#                  4          254669 |*********                          255275.25000
#                  1          256047 |**                                 256336.00000
#                  0          257425 |                                              -
#                  4          258803 |*********                          259480.75000
#                  2          260181 |****                               260868.00000
#                  3          261559 |******                             262770.33333
#
#                  5           > 95% |***********                        270100.40000
#
#        mean of 95%    236962.96703
#          95th %ile          262934
#
# Usage: mprotect
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mprotect')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte on each page)
#     [-s] (use MAP_SHARED)
#     [-t] (touch each page after restoring permissions)
# notes: measures mprotect()
               prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rait128k   1   1           31024         4538        0       26   131072  air--
# bin/../bin-riscv64/msync -N msync_rait128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     29763                      29763
#                        max   2576493                      38108
#                       mean     33448.39458                31954.68907
#                     median     31104                      31024*
#                     stddev     37906.54888                 2052.37214
#             standard error       543.13174                   30.46659
#       99% confidence level      1399.10736                   78.48194
#                       skew        62.81575                    1.52860
#                   kurtosis      4166.73128                    0.85173
#           time correlation         2.83245                    1.28737
#
#               elapsed time        20.00727
#                   run time         4.28693
#          getnsecs overhead      1416
#
#          number of samples      4871
#         number of outliers       333
#    number of final samples      4538
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           29763 |*                                   29883.00000
#                 35           29976 |*                                   30131.20000
#                188           30189 |*******                             30321.30851
#                609           30402 |***********************             30518.54023
#                838           30615 |********************************    30719.48807
#                638           30828 |************************            30927.53448
#                416           31041 |***************                     31144.66346
#                348           31254 |*************                       31351.94253
#                220           31467 |********                            31562.64545
#                131           31680 |*****                               31772.19084
#                 72           31893 |**                                  31991.62500
#                 49           32106 |*                                   32209.79592
#                 39           32319 |*                                   32411.74359
#                 23           32532 |*                                   32656.52174
#                 26           32745 |*                                   32871.76923
#                  9           32958 |*                                   33068.22222
#                  4           33171 |*                                   33323.50000
#                  8           33384 |*                                   33504.62500
#                 13           33597 |*                                   33700.76923
#                 10           33810 |*                                   33898.30000
#                 21           34023 |*                                   34154.47619
#                 23           34236 |*                                   34364.00000
#                 25           34449 |*                                   34548.16000
#                 32           34662 |*                                   34763.50000
#                 50           34875 |*                                   34992.72000
#                 66           35088 |**                                  35197.92424
#                 78           35301 |**                                  35404.28205
#                 70           35514 |**                                  35612.50000
#                 70           35727 |**                                  35847.08571
#                 70           35940 |**                                  36051.81429
#                 62           36153 |**                                  36255.35484
#                 65           36366 |**                                  36468.12308
#
#                227           > 95% |********                            37194.12335
#
#        mean of 95%     31678.80144
#          95th %ile           36575
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.4% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rait8k   1   1           10004         5328        0       86     8192  air--
# bin/../bin-riscv64/msync -N msync_rait8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      9593                       9593
#                        max    608205                      12798
#                       mean     10741.91704                10410.65841
#                     median     10020                      10004*
#                     stddev      9447.16365                  796.10293
#             standard error       126.86758                   10.90654
#       99% confidence level       326.81089                   28.09525
#                       skew        54.96568                    1.32861
#                   kurtosis      3224.29460                    0.22665
#           time correlation         0.73760                    0.43290
#
#               elapsed time        20.00689
#                   run time         5.06667
#          getnsecs overhead      1416
#
#          number of samples      5545
#         number of outliers       217
#    number of final samples      5328
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            9593 |*                                    9643.16667
#                 57            9670 |*                                    9725.26316
#                310            9747 |*********                            9796.70968
#                970            9824 |****************************         9866.73608
#               1082            9901 |********************************     9935.88262
#                525            9978 |***************                     10009.93143
#                436           10055 |************                        10094.55505
#                374           10132 |***********                         10166.42246
#                134           10209 |***                                 10242.46269
#                 53           10286 |*                                   10320.56604
#                 34           10363 |*                                   10394.79412
#                 26           10440 |*                                   10475.34615
#                 17           10517 |*                                   10553.58824
#                 15           10594 |*                                   10634.40000
#                 14           10671 |*                                   10699.07143
#                 12           10748 |*                                   10784.33333
#                  4           10825 |*                                   10871.25000
#                 12           10902 |*                                   10945.41667
#                 14           10979 |*                                   11022.71429
#                 17           11056 |*                                   11096.29412
#                 19           11133 |*                                   11173.10526
#                 20           11210 |*                                   11250.60000
#                 28           11287 |*                                   11325.50000
#                 55           11364 |*                                   11403.94545
#                 83           11441 |**                                  11485.37349
#                136           11518 |****                                11561.23529
#                175           11595 |*****                               11633.38857
#                129           11672 |***                                 11708.68217
#                134           11749 |***                                 11786.27612
#                 74           11826 |**                                  11859.75676
#                 54           11903 |*                                   11940.96296
#                 42           11980 |*                                   12006.61905
#
#                267           > 95% |*******                             12352.10861
#
#        mean of 95%     10308.23454
#          95th %ile           12039
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 25.3% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rat128k   1   1            6802        16986        0      124   131072  a-r--
# bin/../bin-riscv64/msync -N msync_rat128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6599                       6599
#                        max   2176470                       8657
#                       mean      7365.63323                 7072.02820
#                     median      6816                       6802*
#                     stddev     16658.08324                  528.89498
#             standard error       124.41456                    4.05811
#       99% confidence level       320.49191                   10.45369
#                       skew       124.27617                    1.45891
#                   kurtosis     16058.77408                    0.53384
#           time correlation         0.17076                    0.08734
#
#               elapsed time        20.00763
#                   run time        16.08807
#          getnsecs overhead      1416
#
#          number of samples     17927
#         number of outliers       941
#    number of final samples     16986
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 39            6599 |*                                    6638.61538
#                936            6650 |******                               6683.41880
#               3198            6701 |***********************              6729.80988
#               4328            6752 |********************************     6773.46811
#               1406            6803 |**********                           6825.80299
#               1449            6854 |**********                           6880.26846
#               1044            6905 |*******                              6925.89368
#                369            6956 |**                                   6978.25474
#                190            7007 |*                                    7029.17368
#                110            7058 |*                                    7082.87273
#                 91            7109 |*                                    7131.45055
#                 62            7160 |*                                    7178.98387
#                 43            7211 |*                                    7235.60465
#                 34            7262 |*                                    7281.58824
#                 29            7313 |*                                    7332.93103
#                 28            7364 |*                                    7392.50000
#                 22            7415 |*                                    7439.40909
#                 24            7466 |*                                    7492.75000
#                 43            7517 |*                                    7540.90698
#                 47            7568 |*                                    7593.91489
#                 33            7619 |*                                    7644.00000
#                 40            7670 |*                                    7692.42500
#                 73            7721 |*                                    7748.45205
#                208            7772 |*                                    7799.94231
#                332            7823 |**                                   7848.41566
#                390            7874 |**                                   7900.30000
#                342            7925 |**                                   7949.26316
#                306            7976 |**                                   8000.40850
#                306            8027 |**                                   8051.83987
#                287            8078 |**                                   8103.23693
#                235            8129 |*                                    8153.36170
#                 92            8180 |*                                    8191.85870
#
#                850           > 95% |******                               8386.74235
#
#        mean of 95%      7002.77268
#          95th %ile            8205
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rat8k   1   1            5768        16796        0      157     8192  a-r--
# bin/../bin-riscv64/msync -N msync_rat8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5576                       5576
#                        max    320346                       7420
#                       mean      6122.39080                 6014.75464
#                     median      5775                       5768*
#                     stddev      2637.76689                  468.43020
#             standard error        19.96018                    3.61445
#       99% confidence level        51.41744                    9.31082
#                       skew       102.20584                    1.36858
#                   kurtosis     11763.10582                    0.37428
#           time correlation         0.10743                    0.08016
#
#               elapsed time        20.00747
#                   run time        16.80179
#          getnsecs overhead      1416
#
#          number of samples     17464
#         number of outliers       668
#    number of final samples     16796
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 38            5576 |*                                    5608.57895
#                866            5621 |******                               5649.77598
#               2292            5666 |****************                     5691.64485
#               4402            5711 |********************************     5732.69241
#               1813            5756 |*************                        5772.49366
#               1188            5801 |********                             5824.83838
#               1342            5846 |*********                            5866.04396
#                358            5891 |**                                   5907.01397
#                136            5936 |*                                    5956.98529
#                 90            5981 |*                                    6001.78889
#                 87            6026 |*                                    6048.48276
#                 49            6071 |*                                    6089.79592
#                 53            6116 |*                                    6136.90566
#                 42            6161 |*                                    6178.83333
#                 35            6206 |*                                    6227.74286
#                 38            6251 |*                                    6273.15789
#                 35            6296 |*                                    6317.94286
#                 42            6341 |*                                    6365.07143
#                 57            6386 |*                                    6408.70175
#                 44            6431 |*                                    6452.06818
#                 50            6476 |*                                    6499.30000
#                 91            6521 |*                                    6545.49451
#                214            6566 |*                                    6590.90654
#                404            6611 |**                                   6633.57921
#                486            6656 |***                                  6677.64403
#                413            6701 |***                                  6722.63680
#                374            6746 |**                                   6767.30214
#                285            6791 |**                                   6811.86667
#                215            6836 |*                                    6856.67442
#                179            6881 |*                                    6903.80447
#                145            6926 |*                                    6947.06897
#                 93            6971 |*                                    6986.92473
#
#                840           > 95% |******                               7189.41905
#
#        mean of 95%      5952.91470
#          95th %ile            7004
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rit128k   1   1            6832        17042        0      125   131072  -ir--
# bin/../bin-riscv64/msync -N msync_rit128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6635                       6635
#                        max   2137779                       8710
#                       mean      7377.55992                 7101.58485
#                     median      6847                       6832*
#                     stddev     16142.01696                  536.11852
#             standard error       120.34224                    4.10677
#       99% confidence level       310.00160                   10.57904
#                       skew       128.40473                    1.44975
#                   kurtosis     16874.84920                    0.56245
#           time correlation         0.16578                    0.08893
#
#               elapsed time        20.00712
#                   run time        16.27594
#          getnsecs overhead      1416
#
#          number of samples     17992
#         number of outliers       950
#    number of final samples     17042
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                134            6635 |*                                    6672.67910
#               1500            6686 |***********                          6716.29267
#               4205            6737 |********************************     6763.35410
#               2898            6788 |**********************               6809.61974
#               1363            6839 |**********                           6862.69626
#               1471            6890 |***********                          6914.66349
#                871            6941 |******                               6961.70953
#                363            6992 |**                                   7012.75207
#                141            7043 |*                                    7063.59574
#                103            7094 |*                                    7116.49515
#                 64            7145 |*                                    7169.01562
#                 60            7196 |*                                    7217.38333
#                 38            7247 |*                                    7272.94737
#                 36            7298 |*                                    7323.08333
#                 35            7349 |*                                    7374.80000
#                 24            7400 |*                                    7426.83333
#                 24            7451 |*                                    7476.70833
#                 48            7502 |*                                    7527.97917
#                 42            7553 |*                                    7577.61905
#                 49            7604 |*                                    7629.46939
#                 35            7655 |*                                    7682.40000
#                 54            7706 |*                                    7732.33333
#                138            7757 |*                                    7785.72464
#                307            7808 |**                                   7835.14658
#                384            7859 |**                                   7886.17448
#                408            7910 |***                                  7933.32598
#                344            7961 |**                                   7985.35174
#                286            8012 |**                                   8037.96853
#                284            8063 |**                                   8086.55634
#                198            8114 |*                                    8137.72222
#                152            8165 |*                                    8189.84211
#                130            8216 |*                                    8240.26923
#
#                853           > 95% |******                               8460.33646
#
#        mean of 95%      7029.99209
#          95th %ile            8264
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rit8k   1   1            5926        16529        0      155     8192  -ir--
# bin/../bin-riscv64/msync -N msync_rit8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5599                       5599
#                        max    344694                       7622
#                       mean      6257.91080                 6167.66544
#                     median      5930                       5926*
#                     stddev      2979.43010                  485.14836
#             standard error        22.86868                    3.77356
#       99% confidence level        58.90972                    9.72069
#                       skew        97.61089                    1.26667
#                   kurtosis     10452.40840                    0.09570
#           time correlation         0.11122                    0.08638
#
#               elapsed time        20.00741
#                   run time        16.42087
#          getnsecs overhead      1416
#
#          number of samples     16974
#         number of outliers       445
#    number of final samples     16529
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 24            5599 |*                                    5629.33333
#                275            5648 |**                                   5676.72000
#                507            5697 |****                                 5721.15582
#                454            5746 |****                                 5772.92070
#               1536            5795 |**************                       5824.20312
#               3395            5844 |********************************     5869.90574
#               2749            5893 |*************************            5914.07967
#               1370            5942 |************                         5964.37445
#               1179            5991 |***********                          6012.51569
#                517            6040 |****                                 6057.87621
#                171            6089 |*                                    6111.67836
#                 99            6138 |*                                    6159.20202
#                 68            6187 |*                                    6208.75000
#                 54            6236 |*                                    6255.96296
#                 38            6285 |*                                    6307.71053
#                 32            6334 |*                                    6356.43750
#                 26            6383 |*                                    6405.96154
#                 27            6432 |*                                    6460.07407
#                 35            6481 |*                                    6505.05714
#                 33            6530 |*                                    6554.06061
#                 35            6579 |*                                    6607.22857
#                 45            6628 |*                                    6653.42222
#                108            6677 |*                                    6704.64815
#                230            6726 |**                                   6753.05217
#                373            6775 |***                                  6799.96247
#                509            6824 |****                                 6847.67191
#                482            6873 |****                                 6896.95851
#                389            6922 |***                                  6946.54499
#                360            6971 |***                                  6994.59167
#                262            7020 |**                                   7041.88931
#                197            7069 |*                                    7093.04061
#                123            7118 |*                                    7134.34146
#
#                827           > 95% |*******                              7335.52721
#
#        mean of 95%      6106.15597
#          95th %ile            7152
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rt128k   1   1            6857        17001        0      122   131072  --r--
# bin/../bin-riscv64/msync -N msync_rt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6629                       6629
#                        max   2254219                       8787
#                       mean      7572.11482                 7134.94665
#                     median      6871                       6857*
#                     stddev     20239.14328                  550.95496
#             standard error       150.04725                    4.22551
#       99% confidence level       386.52171                   10.88491
#                       skew        97.53807                    1.45231
#                   kurtosis      9972.66542                    0.55676
#           time correlation         0.21568                    0.09147
#
#               elapsed time        20.01142
#                   run time        16.50890
#          getnsecs overhead      1416
#
#          number of samples     18194
#         number of outliers      1193
#    number of final samples     17001
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 35            6629 |*                                    6669.57143
#                747            6682 |*****                                6717.01740
#               2510            6735 |******************                   6764.12709
#               4244            6788 |********************************     6813.42177
#               2200            6841 |****************                     6862.48091
#               1234            6894 |*********                            6919.82739
#               1118            6947 |********                             6971.15385
#                565            7000 |****                                 7022.07080
#                191            7053 |*                                    7074.64398
#                147            7106 |*                                    7130.28571
#                 95            7159 |*                                    7184.12632
#                 69            7212 |*                                    7235.72464
#                 58            7265 |*                                    7288.20690
#                 35            7318 |*                                    7344.82857
#                 38            7371 |*                                    7395.07895
#                 24            7424 |*                                    7447.33333
#                 17            7477 |*                                    7501.64706
#                 37            7530 |*                                    7554.70270
#                 39            7583 |*                                    7610.61538
#                 44            7636 |*                                    7660.70455
#                 33            7689 |*                                    7716.15152
#                 47            7742 |*                                    7773.19149
#                 97            7795 |*                                    7823.23711
#                193            7848 |*                                    7877.50777
#                352            7901 |**                                   7927.54261
#                401            7954 |***                                  7979.15212
#                394            8007 |**                                   8031.67005
#                336            8060 |**                                   8086.18155
#                292            8113 |**                                   8137.91438
#                203            8166 |*                                    8190.39409
#                184            8219 |*                                    8244.93478
#                171            8272 |*                                    8294.02339
#
#                851           > 95% |******                               8521.33373
#
#        mean of 95%      7061.89307
#          95th %ile            8318
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_rt8k   1   1            5929        17052        0      153     8192  --r--
# bin/../bin-riscv64/msync -N msync_rt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5702                       5702
#                        max    384548                       7676
#                       mean      6282.15801                 6189.21388
#                     median      5935                       5929*
#                     stddev      3214.48594                  495.68178
#             standard error        24.30896                    3.79590
#       99% confidence level        62.61987                    9.77825
#                       skew       102.00881                    1.29131
#                   kurtosis     11432.47636                    0.19570
#           time correlation         0.11042                    0.08511
#
#               elapsed time        20.00742
#                   run time        16.81161
#          getnsecs overhead      1416
#
#          number of samples     17486
#         number of outliers       434
#    number of final samples     17052
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22            5702 |*                                    5736.90909
#                539            5750 |****                                 5783.62894
#               2119            5798 |*****************                    5823.82303
#               3923            5846 |********************************     5870.86515
#               2345            5894 |*******************                  5913.64350
#               1437            5942 |***********                          5965.86987
#               1205            5990 |*********                            6010.76183
#                503            6038 |****                                 6058.31014
#                240            6086 |*                                    6107.98333
#                125            6134 |*                                    6154.19200
#                 75            6182 |*                                    6202.32000
#                 58            6230 |*                                    6250.62069
#                 42            6278 |*                                    6299.23810
#                 43            6326 |*                                    6351.86047
#                 32            6374 |*                                    6398.25000
#                 37            6422 |*                                    6445.35135
#                 38            6470 |*                                    6499.42105
#                 53            6518 |*                                    6540.79245
#                 50            6566 |*                                    6590.46000
#                 36            6614 |*                                    6636.50000
#                130            6662 |*                                    6687.02308
#                254            6710 |**                                   6736.06693
#                385            6758 |***                                  6783.54286
#                480            6806 |***                                  6829.58125
#                443            6854 |***                                  6876.30700
#                381            6902 |***                                  6925.77165
#                299            6950 |**                                   6972.17391
#                259            6998 |**                                   7020.23166
#                217            7046 |*                                    7068.62212
#                160            7094 |*                                    7116.59375
#                175            7142 |*                                    7162.15429
#                 94            7190 |*                                    7204.41489
#
#                853           > 95% |******                               7415.05275
#
#        mean of 95%      6124.66418
#          95th %ile            7219
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_t128k   1   1            5788        16607        0      159   131072  -----
# bin/../bin-riscv64/msync -N msync_t128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5565                       5565
#                        max    149345                       7444
#                       mean      6126.70857                 6028.22731
#                     median      5796                       5788*
#                     stddev      1392.78720                  472.13054
#             standard error        10.60358                    3.66367
#       99% confidence level        27.31482                    9.43762
#                       skew        69.43787                    1.32111
#                   kurtosis      6712.21815                    0.27641
#           time correlation         0.10732                    0.08290
#
#               elapsed time        20.00808
#                   run time        16.80395
#          getnsecs overhead      1416
#
#          number of samples     17253
#         number of outliers       646
#    number of final samples     16607
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 43            5565 |*                                    5599.13953
#                713            5611 |******                               5639.74334
#               1739            5657 |***************                      5683.14031
#               3522            5703 |********************************     5725.84668
#               2558            5749 |***********************              5768.73495
#               1567            5795 |**************                       5817.88258
#               1194            5841 |**********                           5860.80318
#                537            5887 |****                                 5906.01304
#                245            5933 |**                                   5951.48163
#                132            5979 |*                                    5998.34091
#                 84            6025 |*                                    6044.89286
#                 54            6071 |*                                    6095.31481
#                 39            6117 |*                                    6138.56410
#                 33            6163 |*                                    6184.72727
#                 31            6209 |*                                    6232.00000
#                 28            6255 |*                                    6278.60714
#                 36            6301 |*                                    6324.22222
#                 50            6347 |*                                    6369.80000
#                 49            6393 |*                                    6415.22449
#                 51            6439 |*                                    6461.33333
#                 93            6485 |*                                    6510.77419
#                152            6531 |*                                    6557.35526
#                311            6577 |**                                   6601.43408
#                488            6623 |****                                 6646.54508
#                464            6669 |****                                 6691.11853
#                401            6715 |***                                  6736.24938
#                347            6761 |***                                  6781.59942
#                267            6807 |**                                   6830.21723
#                163            6853 |*                                    6873.71779
#                152            6899 |*                                    6921.61184
#                144            6945 |*                                    6965.78472
#                 89            6991 |*                                    7004.76404
#
#                831           > 95% |*******                              7204.77377
#
#        mean of 95%      5966.25279
#          95th %ile            7022
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_t8k   1   1            5776        16677        0      160     8192  -----
# bin/../bin-riscv64/msync -N msync_t8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5578                       5578
#                        max    150795                       7408
#                       mean      6076.39535                 6016.42670
#                     median      5781                       5776*
#                     stddev      1430.86145                  463.78419
#             standard error        10.96518                    3.59134
#       99% confidence level        28.24630                    9.25130
#                       skew        71.60343                    1.26691
#                   kurtosis      6651.72954                    0.05523
#           time correlation         0.09708                    0.08111
#
#               elapsed time        20.00625
#                   run time        16.62005
#          getnsecs overhead      1416
#
#          number of samples     17028
#         number of outliers       351
#    number of final samples     16677
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 73            5578 |*                                    5608.20548
#                823            5622 |*******                              5650.48967
#               2941            5666 |***************************          5690.77389
#               3454            5710 |********************************     5729.91749
#               1837            5754 |*****************                    5774.20958
#               1589            5798 |**************                       5819.68911
#               1026            5842 |*********                            5860.38207
#                257            5886 |**                                   5902.62646
#                157            5930 |*                                    5949.45223
#                107            5974 |*                                    5993.77570
#                 62            6018 |*                                    6041.03226
#                 54            6062 |*                                    6084.59259
#                 34            6106 |*                                    6127.38235
#                 22            6150 |*                                    6171.04545
#                 16            6194 |*                                    6217.87500
#                 27            6238 |*                                    6257.96296
#                 31            6282 |*                                    6303.00000
#                 46            6326 |*                                    6349.28261
#                 66            6370 |*                                    6388.09091
#                 46            6414 |*                                    6437.28261
#                 59            6458 |*                                    6482.42373
#                117            6502 |*                                    6527.16239
#                266            6546 |**                                   6570.32331
#                414            6590 |***                                  6612.51932
#                471            6634 |****                                 6654.98726
#                425            6678 |***                                  6698.57412
#                365            6722 |***                                  6743.64384
#                331            6766 |***                                  6787.88218
#                243            6810 |**                                   6830.71193
#                207            6854 |*                                    6875.25604
#                193            6898 |*                                    6917.84974
#                 84            6942 |*                                    6951.14286
#
#                834           > 95% |*******                              7127.92686
#
#        mean of 95%      5957.91561
#          95th %ile            6962
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ta128k   1   1            5768        16462        0      159   131072  a----
# bin/../bin-riscv64/msync -N msync_ta128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5564                       5564
#                        max    147086                       7358
#                       mean      6116.79046                 5997.38343
#                     median      5777                       5768*
#                     stddev      1325.97496                  453.54609
#             standard error        10.07858                    3.53492
#       99% confidence level        25.96242                    9.10597
#                       skew        72.56505                    1.33480
#                   kurtosis      7478.16866                    0.26106
#           time correlation         0.10852                    0.07969
#
#               elapsed time        20.00671
#                   run time        16.88445
#          getnsecs overhead      1416
#
#          number of samples     17309
#         number of outliers       847
#    number of final samples     16462
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 45            5564 |*                                    5594.24444
#                726            5607 |******                               5634.46006
#               2103            5650 |********************                 5673.24061
#               3320            5693 |********************************     5714.71747
#               2525            5736 |************************             5754.87446
#               1465            5779 |**************                       5798.53788
#               1273            5822 |************                         5841.73684
#                509            5865 |****                                 5882.60118
#                194            5908 |*                                    5926.38660
#                 88            5951 |*                                    5968.21591
#                 73            5994 |*                                    6013.09589
#                 42            6037 |*                                    6055.80952
#                 35            6080 |*                                    6101.25714
#                 39            6123 |*                                    6144.07692
#                 26            6166 |*                                    6190.88462
#                 22            6209 |*                                    6231.04545
#                 39            6252 |*                                    6276.66667
#                 40            6295 |*                                    6317.92500
#                 61            6338 |*                                    6359.45902
#                 67            6381 |*                                    6401.50746
#                 44            6424 |*                                    6443.81818
#                 86            6467 |*                                    6491.73256
#                160            6510 |*                                    6534.73125
#                231            6553 |**                                   6576.19913
#                398            6596 |***                                  6618.39447
#                474            6639 |****                                 6659.43882
#                411            6682 |***                                  6702.34793
#                342            6725 |***                                  6745.82164
#                279            6768 |**                                   6787.84229
#                234            6811 |**                                   6830.49573
#                155            6854 |*                                    6876.09677
#                132            6897 |*                                    6916.18939
#
#                824           > 95% |*******                              7114.85437
#
#        mean of 95%      5938.50147
#          95th %ile            6936
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ta8k   1   1            5763        16794        0      161     8192  a----
# bin/../bin-riscv64/msync -N msync_ta8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5554                       5554
#                        max    147488                       7452
#                       mean      6073.05950                 6014.02173
#                     median      5766                       5763*
#                     stddev      1303.99359                  479.29682
#             standard error         9.95473                    3.69852
#       99% confidence level        25.64338                    9.52738
#                       skew        79.13086                    1.28282
#                   kurtosis      8253.75903                    0.15954
#           time correlation         0.09885                    0.08372
#
#               elapsed time        20.00678
#                   run time        16.78704
#          getnsecs overhead      1416
#
#          number of samples     17159
#         number of outliers       365
#    number of final samples     16794
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                157            5554 |*                                    5588.25478
#               1223            5600 |**********                           5625.82829
#               1601            5646 |**************                       5670.27233
#               3618            5692 |********************************     5716.24793
#               2675            5738 |***********************              5756.57421
#               1262            5784 |***********                          5807.03724
#               1028            5830 |*********                            5849.37938
#                401            5876 |***                                  5894.75810
#                207            5922 |*                                    5943.55556
#                117            5968 |*                                    5989.93162
#                 95            6014 |*                                    6035.55789
#                 53            6060 |*                                    6075.49057
#                 38            6106 |*                                    6127.97368
#                 34            6152 |*                                    6177.26471
#                 23            6198 |*                                    6215.73913
#                 34            6244 |*                                    6267.35294
#                 28            6290 |*                                    6314.46429
#                 51            6336 |*                                    6359.74510
#                 65            6382 |*                                    6404.84615
#                 48            6428 |*                                    6451.39583
#                128            6474 |*                                    6501.02344
#                215            6520 |*                                    6545.13953
#                354            6566 |***                                  6592.02825
#                488            6612 |****                                 6635.65779
#                418            6658 |***                                  6680.42823
#                359            6704 |***                                  6726.03064
#                321            6750 |**                                   6772.61994
#                239            6796 |**                                   6818.16736
#                213            6842 |*                                    6862.11737
#                188            6888 |*                                    6908.78723
#                157            6934 |*                                    6956.47771
#                116            6980 |*                                    6995.44828
#
#                840           > 95% |*******                              7189.90714
#
#        mean of 95%      5952.10975
#          95th %ile            7010
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_tai128k   1   1            8453         5288        0      107   131072  ai---
# bin/../bin-riscv64/msync -N msync_tai128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8156                       8156
#                        max    165940                      10788
#                       mean      8984.79812                 8797.41736
#                     median      8467                       8453*
#                     stddev      2471.49747                  663.38128
#             standard error        33.27127                    9.12258
#       99% confidence level        85.70678                   23.49976
#                       skew        48.40198                    1.24263
#                   kurtosis      2978.87374                    0.02715
#           time correlation         0.52449                    0.37019
#
#               elapsed time        20.01231
#                   run time         5.30695
#          getnsecs overhead      1416
#
#          number of samples      5518
#         number of outliers       230
#    number of final samples      5288
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 31            8156 |*                                    8198.16129
#                295            8218 |********                             8256.59322
#                702            8280 |*********************                8314.61681
#               1063            8342 |********************************     8372.28128
#                654            8404 |*******************                  8431.68960
#                404            8466 |************                         8493.60891
#                362            8528 |**********                           8557.52210
#                202            8590 |******                               8615.77723
#                 81            8652 |**                                   8680.96296
#                 58            8714 |*                                    8743.93103
#                 30            8776 |*                                    8802.40000
#                 27            8838 |*                                    8873.37037
#                 17            8900 |*                                    8922.41176
#                  9            8962 |*                                    8996.11111
#                  6            9024 |*                                    9051.83333
#                 14            9086 |*                                    9117.28571
#                  6            9148 |*                                    9166.83333
#                 14            9210 |*                                    9242.78571
#                 12            9272 |*                                    9303.25000
#                 21            9334 |*                                    9363.76190
#                 17            9396 |*                                    9424.76471
#                 26            9458 |*                                    9487.65385
#                 29            9520 |*                                    9558.86207
#                101            9582 |***                                  9616.44554
#                144            9644 |****                                 9674.96528
#                148            9706 |****                                 9734.95946
#                143            9768 |****                                 9798.18182
#                136            9830 |****                                 9856.75735
#                112            9892 |***                                  9924.03571
#                 69            9954 |**                                   9985.17391
#                 65           10016 |*                                   10042.24615
#                 25           10078 |*                                   10095.20000
#
#                265           > 95% |*******                             10386.90189
#
#        mean of 95%      8713.56042
#          95th %ile           10119
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 26.5% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_tai8k   1   1            9618         4512        0       94     8192  ai---
# bin/../bin-riscv64/msync -N msync_tai8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      9328                       9328
#                        max    204291                      12222
#                       mean     10177.41030                10006.91844
#                     median      9635                       9618*
#                     stddev      3205.49632                  740.10299
#             standard error        46.95721                   11.01812
#       99% confidence level       120.96178                   28.38268
#                       skew        50.36584                    1.31942
#                   kurtosis      2943.62941                    0.16433
#           time correlation         0.64528                    0.47315
#
#               elapsed time        20.01085
#                   run time         4.44413
#          getnsecs overhead      1416
#
#          number of samples      4660
#         number of outliers       148
#    number of final samples      4512
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13            9328 |*                                    9383.61538
#                238            9397 |*******                              9440.51261
#                943            9466 |******************************       9506.06045
#                983            9535 |********************************     9563.06307
#                312            9604 |**********                           9636.49359
#                377            9673 |************                         9712.08223
#                330            9742 |**********                           9770.21818
#                 98            9811 |***                                  9836.09184
#                 44            9880 |*                                    9912.81818
#                 28            9949 |*                                    9985.89286
#                 23           10018 |*                                   10054.95652
#                 16           10087 |*                                   10123.68750
#                  7           10156 |*                                   10195.00000
#                  6           10225 |*                                   10259.66667
#                  7           10294 |*                                   10323.42857
#                  2           10363 |*                                   10371.00000
#                  6           10432 |*                                   10476.50000
#                 16           10501 |*                                   10535.37500
#                 24           10570 |*                                   10610.37500
#                 16           10639 |*                                   10672.68750
#                 15           10708 |*                                   10735.13333
#                 15           10777 |*                                   10813.20000
#                 16           10846 |*                                   10890.00000
#                 65           10915 |**                                  10949.06154
#                 98           10984 |***                                 11022.84694
#                119           11053 |***                                 11086.36134
#                111           11122 |***                                 11154.37838
#                100           11191 |***                                 11222.42000
#                 81           11260 |**                                  11291.14815
#                 72           11329 |**                                  11360.80556
#                 61           11398 |*                                   11428.36066
#                 44           11467 |*                                   11501.02273
#
#                226           > 95% |*******                             11791.89823
#
#        mean of 95%      9912.79678
#          95th %ile           11533
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 22.2% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ti128k   1   1            9446         5316        0      101   131072  -i---
# bin/../bin-riscv64/msync -N msync_ti128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8234                       8234
#                        max    134842                      12054
#                       mean      9507.79237                 9412.67193
#                     median      9453                       9446*
#                     stddev      2066.79369                  886.40242
#             standard error        28.12810                   12.15734
#       99% confidence level        72.45800                   31.31730
#                       skew        42.61805                    0.71492
#                   kurtosis      2521.48357                   -0.37878
#           time correlation         0.63061                    0.55082
#
#               elapsed time        20.00798
#                   run time         5.21775
#          getnsecs overhead      1416
#
#          number of samples      5399
#         number of outliers        83
#    number of final samples      5316
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5            8234 |*                                    8289.40000
#                143            8325 |******                               8391.81818
#                754            8416 |********************************     8468.77321
#                671            8507 |****************************         8542.97765
#                299            8598 |************                         8645.80602
#                233            8689 |*********                            8727.86695
#                 41            8780 |*                                    8807.14634
#                 30            8871 |*                                    8911.90000
#                 20            8962 |*                                    9007.90000
#                  8            9053 |*                                    9086.62500
#                  7            9144 |*                                    9183.85714
#                 26            9235 |*                                    9295.76923
#                238            9326 |**********                           9381.39076
#                602            9417 |*************************            9462.65282
#                394            9508 |****************                     9546.02792
#                279            9599 |***********                          9641.49104
#                141            9690 |*****                                9724.44681
#                 76            9781 |***                                  9825.51316
#                121            9872 |*****                                9921.61157
#                140            9963 |*****                               10009.03571
#                105           10054 |****                                10095.07619
#                 96           10145 |****                                10185.28125
#                 47           10236 |*                                   10279.95745
#                 44           10327 |*                                   10370.02273
#                 36           10418 |*                                   10468.13889
#                 30           10509 |*                                   10550.30000
#                 25           10600 |*                                   10652.24000
#                 46           10691 |*                                   10742.91304
#                 72           10782 |***                                 10822.50000
#                121           10873 |*****                               10920.13223
#                118           10964 |*****                               11009.89831
#                 82           11055 |***                                 11092.54878
#
#                266           > 95% |***********                         11398.86466
#
#        mean of 95%      9308.05267
#          95th %ile           11139
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.1% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_ti8k   1   1            5781        16894        0      160     8192  -i---
# bin/../bin-riscv64/msync -N msync_ti8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5552                       5552
#                        max    165542                       7375
#                       mean      6084.65836                 6017.98982
#                     median      5786                       5781*
#                     stddev      1407.35307                  452.61094
#             standard error        10.69929                    3.48224
#       99% confidence level        27.56137                    8.97025
#                       skew        86.62276                    1.25141
#                   kurtosis      9593.91145                   -0.03085
#           time correlation         0.09531                    0.07791
#
#               elapsed time        20.00729
#                   run time        16.88668
#          getnsecs overhead      1416
#
#          number of samples     17302
#         number of outliers       408
#    number of final samples     16894
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6            5552 |*                                    5573.16667
#                133            5595 |*                                    5624.84211
#               1060            5638 |*********                            5663.84528
#               2737            5681 |***********************              5704.79503
#               3684            5724 |********************************     5743.73208
#               1952            5767 |****************                     5785.82838
#               1568            5810 |*************                        5830.94643
#                854            5853 |*******                              5870.23419
#                290            5896 |**                                   5912.40345
#                128            5939 |*                                    5957.50000
#                 70            5982 |*                                    6002.95714
#                 54            6025 |*                                    6046.51852
#                 35            6068 |*                                    6088.00000
#                 24            6111 |*                                    6133.00000
#                 25            6154 |*                                    6174.48000
#                 21            6197 |*                                    6215.38095
#                 25            6240 |*                                    6262.44000
#                 24            6283 |*                                    6303.70833
#                 50            6326 |*                                    6342.76000
#                 47            6369 |*                                    6391.87234
#                 49            6412 |*                                    6430.75510
#                 52            6455 |*                                    6476.82692
#                 75            6498 |*                                    6520.24000
#                187            6541 |*                                    6564.59358
#                375            6584 |***                                  6605.88800
#                484            6627 |****                                 6648.74793
#                503            6670 |****                                 6690.99602
#                440            6713 |***                                  6733.75909
#                387            6756 |***                                  6777.25581
#                332            6799 |**                                   6818.26205
#                211            6842 |*                                    6862.55924
#                167            6885 |*                                    6900.80240
#
#                845           > 95% |*******                              7083.15621
#
#        mean of 95%      5961.90747
#          95th %ile            6919
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
               prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wait128k   1   1            6576        17280        0      128   131072  ai-w-
# bin/../bin-riscv64/msync -N msync_wait128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6386                       6386
#                        max   2822651                       8394
#                       mean      7144.35010                 6840.38744
#                     median      6585                       6576*
#                     stddev     21039.64489                  517.85262
#             standard error       155.89200                    3.93944
#       99% confidence level       401.57778                   10.14799
#                       skew       131.82178                    1.40745
#                   kurtosis     17607.49735                    0.41867
#           time correlation         0.17119                    0.08523
#
#               elapsed time        20.00711
#                   run time        16.26031
#          getnsecs overhead      1416
#
#          number of samples     18215
#         number of outliers       935
#    number of final samples     17280
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                219            6386 |*                                    6423.24658
#               1807            6435 |**************                       6461.53348
#               2953            6484 |***********************              6512.25229
#               3963            6533 |********************************     6554.25486
#               1434            6582 |***********                          6602.54114
#               1346            6631 |**********                           6656.39376
#                906            6680 |*******                              6698.70419
#                252            6729 |**                                   6750.63889
#                114            6778 |*                                    6798.26316
#                103            6827 |*                                    6851.05825
#                 80            6876 |*                                    6900.85000
#                 58            6925 |*                                    6948.12069
#                 58            6974 |*                                    6999.86207
#                 47            7023 |*                                    7046.06383
#                 45            7072 |*                                    7093.97778
#                 26            7121 |*                                    7148.15385
#                 39            7170 |*                                    7196.71795
#                 46            7219 |*                                    7248.41304
#                 57            7268 |*                                    7285.89474
#                 46            7317 |*                                    7339.95652
#                 49            7366 |*                                    7389.67347
#                 58            7415 |*                                    7443.17241
#                137            7464 |*                                    7492.57664
#                244            7513 |*                                    7540.37295
#                371            7562 |**                                   7584.72237
#                359            7611 |**                                   7635.89136
#                371            7660 |**                                   7682.62803
#                343            7709 |**                                   7732.64723
#                312            7758 |**                                   7781.65385
#                275            7807 |**                                   7829.14909
#                188            7856 |*                                    7879.79255
#                110            7905 |*                                    7924.45455
#
#                864           > 95% |******                               8124.31366
#
#        mean of 95%      6772.81238
#          95th %ile            7945
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wait8k   1   1            5869        17134        0      155     8192  ai-w-
# bin/../bin-riscv64/msync -N msync_wait8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data -a -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5627                       5627
#                        max    444244                       7568
#                       mean      6199.60136                 6115.77764
#                     median      5872                       5869*
#                     stddev      3589.92253                  484.42188
#             standard error        27.13184                    3.70079
#       99% confidence level        69.89161                    9.53323
#                       skew       109.34307                    1.30992
#                   kurtosis     12915.45964                    0.21743
#           time correlation         0.10554                    0.08224
#
#               elapsed time        20.00665
#                   run time        16.80578
#          getnsecs overhead      1416
#
#          number of samples     17507
#         number of outliers       373
#    number of final samples     17134
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19            5627 |*                                    5663.78947
#                404            5674 |***                                  5706.15099
#               1610            5721 |**************                       5745.44161
#               2564            5768 |***********************              5794.24805
#               3556            5815 |********************************     5836.87655
#               2001            5862 |******************                   5882.31534
#               1457            5909 |*************                        5930.94578
#                713            5956 |******                               5974.96914
#                215            6003 |*                                    6021.74884
#                 78            6050 |*                                    6071.37179
#                 79            6097 |*                                    6119.73418
#                 47            6144 |*                                    6165.91489
#                 51            6191 |*                                    6212.92157
#                 32            6238 |*                                    6260.90625
#                 32            6285 |*                                    6311.75000
#                 27            6332 |*                                    6358.81481
#                 28            6379 |*                                    6399.53571
#                 37            6426 |*                                    6448.08108
#                 48            6473 |*                                    6496.70833
#                 47            6520 |*                                    6544.34043
#                 69            6567 |*                                    6595.10145
#                164            6614 |*                                    6640.32927
#                247            6661 |**                                   6685.94332
#                428            6708 |***                                  6732.32944
#                495            6755 |****                                 6778.33333
#                407            6802 |***                                  6824.56020
#                373            6849 |***                                  6872.15818
#                310            6896 |**                                   6917.24839
#                241            6943 |**                                   6965.72614
#                214            6990 |*                                    7011.48131
#                152            7037 |*                                    7060.36842
#                132            7084 |*                                    7103.22727
#
#                857           > 95% |*******                              7308.28471
#
#        mean of 95%      6052.99097
#          95th %ile            7123
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wat128k   1   1            6564        17042        0      127   131072  a--w-
# bin/../bin-riscv64/msync -N msync_wat128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      6388                       6388
#                        max   3027160                       8301
#                       mean      7137.21683                 6814.38440
#                     median      6576                       6564*
#                     stddev     22613.06984                  495.75951
#             standard error       168.05377                    3.79761
#       99% confidence level       432.90652                    9.78265
#                       skew       131.78002                    1.50893
#                   kurtosis     17571.60770                    0.67571
#           time correlation         0.17213                    0.08066
#
#               elapsed time        20.00674
#                   run time        16.03066
#          getnsecs overhead      1416
#
#          number of samples     18106
#         number of outliers      1064
#    number of final samples     17042
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 73            6388 |*                                    6421.76712
#               1299            6435 |**********                           6465.15012
#               3821            6482 |*******************************      6508.53991
#               3844            6529 |********************************     6547.92248
#               1336            6576 |***********                          6597.99925
#               1373            6623 |***********                          6646.89439
#                921            6670 |*******                              6688.23236
#                321            6717 |**                                   6736.41121
#                134            6764 |*                                    6784.77612
#                 91            6811 |*                                    6832.97802
#                 72            6858 |*                                    6880.22222
#                 74            6905 |*                                    6928.18919
#                 55            6952 |*                                    6976.78182
#                 54            6999 |*                                    7021.55556
#                 34            7046 |*                                    7068.52941
#                 32            7093 |*                                    7117.81250
#                 27            7140 |*                                    7165.92593
#                 25            7187 |*                                    7215.52000
#                 38            7234 |*                                    7258.60526
#                 44            7281 |*                                    7305.56818
#                 41            7328 |*                                    7351.56098
#                 42            7375 |*                                    7397.33333
#                 40            7422 |*                                    7445.45000
#                 85            7469 |*                                    7495.48235
#                230            7516 |*                                    7542.21739
#                341            7563 |**                                   7585.91789
#                345            7610 |**                                   7634.14203
#                346            7657 |**                                   7677.63584
#                321            7704 |**                                   7725.83489
#                268            7751 |**                                   7772.34701
#                269            7798 |**                                   7819.11152
#                193            7845 |*                                    7866.59067
#
#                853           > 95% |*******                              8061.54982
#
#        mean of 95%      6748.67113
#          95th %ile            7891
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wat8k   1   1            5810        16875        0      156     8192  a--w-
# bin/../bin-riscv64/msync -N msync_wat8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data -a 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5623                       5623
#                        max    431195                       7495
#                       mean      6170.33435                 6062.54181
#                     median      5816                       5810*
#                     stddev      3553.50087                  477.85016
#             standard error        26.92664                    3.67849
#       99% confidence level        69.36303                    9.47580
#                       skew       105.51622                    1.29856
#                   kurtosis     12112.24346                    0.16729
#           time correlation         0.11139                    0.08229
#
#               elapsed time        20.00738
#                   run time        16.68279
#          getnsecs overhead      1416
#
#          number of samples     17416
#         number of outliers       541
#    number of final samples     16875
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                115            5623 |*                                    5656.70435
#               1272            5668 |***********                          5696.15330
#               2994            5713 |*************************            5736.91650
#               3690            5758 |********************************     5778.18618
#               1600            5803 |*************                        5822.25250
#               1346            5848 |***********                          5871.19465
#                872            5893 |*******                              5910.81078
#                318            5938 |**                                   5957.90566
#                148            5983 |*                                    6003.89865
#                120            6028 |*                                    6047.11667
#                 54            6073 |*                                    6095.00000
#                 43            6118 |*                                    6136.83721
#                 33            6163 |*                                    6183.33333
#                 32            6208 |*                                    6230.40625
#                 33            6253 |*                                    6274.12121
#                 28            6298 |*                                    6323.21429
#                 36            6343 |*                                    6368.33333
#                 49            6388 |*                                    6408.34694
#                 52            6433 |*                                    6453.11538
#                 42            6478 |*                                    6497.95238
#                 59            6523 |*                                    6545.08475
#                139            6568 |*                                    6594.00000
#                255            6613 |**                                   6638.12941
#                452            6658 |***                                  6681.29646
#                448            6703 |***                                  6724.02232
#                398            6748 |***                                  6769.95477
#                351            6793 |***                                  6814.46724
#                325            6838 |**                                   6860.01538
#                250            6883 |**                                   6903.50400
#                212            6928 |*                                    6949.33962
#                187            6973 |*                                    6993.83957
#                 78            7018 |*                                    7027.96154
#
#                844           > 95% |*******                              7226.54147
#
#        mean of 95%      6001.25956
#          95th %ile            7038
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
              prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wit128k   1   1           34299         4342        0       24   131072  -i-w-
# bin/../bin-riscv64/msync -N msync_wit128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     33028                      33028
#                        max   2991615                      42444
#                       mean     36787.88662                35398.60525
#                     median     34369                      34299*
#                     stddev     44149.32494                 2354.88997
#             standard error       651.30035                   35.73763
#       99% confidence level      1677.74969                   92.06013
#                       skew        65.41319                    1.38632
#                   kurtosis      4365.95204                    0.44100
#           time correlation         3.11585                    1.58752
#
#               elapsed time        20.01240
#                   run time         4.06088
#          getnsecs overhead      1416
#
#          number of samples      4595
#         number of outliers       253
#    number of final samples      4342
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 24           33028 |*                                   33168.91667
#                123           33260 |*****                               33399.13008
#                473           33492 |********************                33624.43552
#                751           33724 |********************************    33839.26631
#                595           33956 |*************************           34059.71429
#                407           34188 |*****************                   34298.00246
#                322           34420 |*************                       34526.03106
#                218           34652 |*********                           34758.09633
#                183           34884 |*******                             34994.21858
#                127           35116 |*****                               35222.10236
#                 58           35348 |**                                  35437.00000
#                 36           35580 |*                                   35677.11111
#                 28           35812 |*                                   35908.10714
#                 16           36044 |*                                   36174.06250
#                 12           36276 |*                                   36366.33333
#                 15           36508 |*                                   36633.46667
#                 13           36740 |*                                   36853.92308
#                 13           36972 |*                                   37088.61538
#                 20           37204 |*                                   37291.55000
#                 12           37436 |*                                   37579.66667
#                 22           37668 |*                                   37781.22727
#                 18           37900 |*                                   38032.05556
#                 34           38132 |*                                   38269.61765
#                 58           38364 |**                                  38489.58621
#                 59           38596 |**                                  38708.79661
#                 75           38828 |***                                 38943.80000
#                 69           39060 |**                                  39176.94203
#                 69           39292 |**                                  39414.63768
#                 63           39524 |**                                  39638.04762
#                 71           39756 |***                                 39872.08451
#                 74           39988 |***                                 40095.25676
#                 66           40220 |**                                  40328.46970
#
#                218           > 95% |*********                           41196.66055
#
#        mean of 95%     35092.11251
#          95th %ile           40448
#
# WARNINGS
#     Actual benchmark run time only accounts for 20.3% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wit8k   1   1            5881        16317        0      148     8192  -i-w-
# bin/../bin-riscv64/msync -N msync_wit8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data -i 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5664                       5664
#                        max    609593                       7459
#                       mean      6325.03381                 6102.60599
#                     median      5890                       5881*
#                     stddev      5571.64493                  453.50564
#             standard error        42.35676                    3.55028
#       99% confidence level       109.11101                    9.14552
#                       skew        91.86228                    1.42733
#                   kurtosis      9168.90189                    0.46827
#           time correlation         0.14147                    0.07914
#
#               elapsed time        20.00752
#                   run time        16.09889
#          getnsecs overhead      1416
#
#          number of samples     17303
#         number of outliers       986
#    number of final samples     16317
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 58            5664 |*                                    5695.84483
#                752            5708 |******                               5734.41755
#               1414            5752 |************                         5773.42857
#               2503            5796 |**********************               5821.20056
#               3546            5840 |********************************     5859.95347
#               1587            5884 |**************                       5901.56774
#               1107            5928 |*********                            5950.74616
#                955            5972 |********                             5990.81885
#                387            6016 |***                                  6033.25581
#                172            6060 |*                                    6081.33140
#                110            6104 |*                                    6125.86364
#                 62            6148 |*                                    6168.59677
#                 52            6192 |*                                    6216.32692
#                 33            6236 |*                                    6256.30303
#                 17            6280 |*                                    6298.00000
#                 25            6324 |*                                    6345.04000
#                 22            6368 |*                                    6395.77273
#                 22            6412 |*                                    6432.77273
#                 32            6456 |*                                    6477.00000
#                 38            6500 |*                                    6522.13158
#                 41            6544 |*                                    6568.29268
#                 46            6588 |*                                    6609.34783
#                 58            6632 |*                                    6657.87931
#                133            6676 |*                                    6700.09774
#                239            6720 |**                                   6743.59414
#                343            6764 |***                                  6786.29738
#                337            6808 |***                                  6829.92582
#                396            6852 |***                                  6872.62121
#                325            6896 |**                                   6917.11692
#                302            6940 |**                                   6961.79139
#                218            6984 |*                                    7003.18349
#                169            7028 |*                                    7044.29586
#
#                816           > 95% |*******                              7223.94853
#
#        mean of 95%      6043.57654
#          95th %ile            7063
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wt128k   1   1           28420         4820        0       29   131072  ---w-
# bin/../bin-riscv64/msync -N msync_wt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     27189                      27189
#                        max   3295650                      35125
#                       mean     30754.63232                29318.13071
#                     median     28478                      28420*
#                     stddev     47215.04678                 1937.68458
#             standard error       659.59274                   27.90998
#       99% confidence level      1699.11089                   71.89612
#                       skew        65.59373                    1.41728
#                   kurtosis      4478.39749                    0.57640
#           time correlation         2.62581                    1.17326
#
#               elapsed time        20.00916
#                   run time         4.44510
#          getnsecs overhead      1416
#
#          number of samples      5124
#         number of outliers       304
#    number of final samples      4820
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19           27189 |*                                   27299.73684
#                 58           27387 |**                                  27506.50000
#                199           27585 |*******                             27698.94975
#                499           27783 |*******************                 27899.51503
#                802           27981 |********************************    28083.11596
#                699           28179 |***************************         28273.91416
#                487           28377 |*******************                 28466.98152
#                374           28575 |**************                      28665.28877
#                236           28773 |*********                           28865.93220
#                156           28971 |******                              29057.69231
#                 74           29169 |**                                  29253.78378
#                 60           29367 |**                                  29462.23333
#                 44           29565 |*                                   29651.31818
#                 26           29763 |*                                   29845.80769
#                 17           29961 |*                                   30042.58824
#                 12           30159 |*                                   30246.83333
#                 15           30357 |*                                   30444.53333
#                 11           30555 |*                                   30645.00000
#                 17           30753 |*                                   30845.76471
#                 18           30951 |*                                   31040.88889
#                 30           31149 |*                                   31236.73333
#                 46           31347 |*                                   31453.80435
#                 39           31545 |*                                   31642.61538
#                 50           31743 |*                                   31839.98000
#                 64           31941 |**                                  32043.60938
#                 68           32139 |**                                  32237.10294
#                 92           32337 |***                                 32433.94565
#                 87           32535 |***                                 32621.67816
#                 77           32733 |***                                 32830.45455
#                 73           32931 |**                                  33030.36986
#                 69           33129 |**                                  33217.44928
#                 61           33327 |**                                  33417.14754
#
#                241           > 95% |*********                           34196.46058
#
#        mean of 95%     29061.37650
#          95th %ile           33522
#
# WARNINGS
#     Actual benchmark run time only accounts for 22.2% of elapsed time.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
msync_wt8k   1   1            5863        16675        0      154     8192  ---w-
# bin/../bin-riscv64/msync -N msync_wt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5667                       5667
#                        max    430994                       7534
#                       mean      6220.40821                 6108.94735
#                     median      5869                       5863*
#                     stddev      3556.52613                  474.96396
#             standard error        27.06089                    3.67814
#       99% confidence level        69.70886                    9.47488
#                       skew       105.14024                    1.29811
#                   kurtosis     12085.52284                    0.15438
#           time correlation         0.11275                    0.08308
#
#               elapsed time        20.00678
#                   run time        16.53025
#          getnsecs overhead      1416
#
#          number of samples     17273
#         number of outliers       598
#    number of final samples     16675
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                179            5667 |*                                    5701.51397
#               1669            5712 |***************                      5737.00899
#               1749            5757 |****************                     5779.76043
#               3481            5802 |********************************     5825.54151
#               2413            5847 |**********************               5864.73477
#               1116            5892 |**********                           5913.79928
#               1050            5937 |*********                            5957.70381
#                460            5982 |****                                 5999.34130
#                135            6027 |*                                    6046.10370
#                 96            6072 |*                                    6092.50000
#                 55            6117 |*                                    6137.67273
#                 63            6162 |*                                    6180.95238
#                 49            6207 |*                                    6229.73469
#                 28            6252 |*                                    6275.67857
#                 29            6297 |*                                    6319.48276
#                 25            6342 |*                                    6365.32000
#                 50            6387 |*                                    6410.90000
#                 48            6432 |*                                    6455.77083
#                 48            6477 |*                                    6501.91667
#                 64            6522 |*                                    6541.82812
#                 57            6567 |*                                    6589.10526
#                124            6612 |*                                    6637.26613
#                214            6657 |*                                    6679.03271
#                301            6702 |**                                   6725.88040
#                423            6747 |***                                  6768.35697
#                439            6792 |****                                 6813.26196
#                385            6837 |***                                  6858.66753
#                340            6882 |***                                  6903.23235
#                278            6927 |**                                   6947.72302
#                214            6972 |*                                    6992.89720
#                173            7017 |*                                    7037.24855
#                 86            7062 |*                                    7072.80233
#
#                834           > 95% |*******                              7261.91487
#
#        mean of 95%      6048.24569
#          95th %ile            7085
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: msync
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'msync')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-a (specify MS_ASYNC rather than default MS_SYNC)
#     [-f file-to-map (default /dev/zero)]
#     [-i (specify MS_INVALIDATE)
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page between msyncs)
#     [-w] (write a byte to each page between msyncs)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures msync()
         prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_mt   1   1             277        15292        0     2649        0
# bin/../bin-riscv64/mutex -N mutex_mt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       247                        247
#                        max    323243                        326
#                       mean       309.92247                  274.87987
#                     median       279                        277*
#                     stddev      2848.86325                   17.10317
#             standard error        22.40908                    0.13831
#       99% confidence level        57.72579                    0.35628
#                       skew       101.89954                    0.83179
#                   kurtosis     10890.44393                   -0.06668
#           time correlation         0.01602                    0.00365
#
#               elapsed time        20.01071
#                   run time        11.90820
#          getnsecs overhead      1416
#
#          number of samples     16162
#         number of outliers       870
#    number of final samples     15292
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2             247 |*                                     247.50000
#                  3             249 |*                                     249.33333
#                  3             251 |*                                     251.33333
#                 28             253 |*                                     253.92857
#                497             255 |******                                255.84708
#               2044             257 |*************************             257.67515
#               2592             259 |********************************      259.37963
#                755             261 |*********                             261.44238
#                686             263 |********                              263.55685
#                584             265 |*******                               265.40925
#                187             267 |**                                    267.36898
#                 63             269 |*                                     269.38095
#                 29             271 |*                                     271.37931
#                 29             273 |*                                     273.68966
#                108             275 |*                                     275.64815
#                408             277 |*****                                 277.72059
#               1410             279 |*****************                     279.64965
#               1731             281 |*********************                 281.34142
#                415             283 |*****                                 283.46747
#                651             285 |********                              285.51920
#                496             287 |******                                287.40323
#                267             289 |***                                   289.42697
#                241             291 |**                                    291.46888
#                184             293 |**                                    293.48370
#                132             295 |*                                     295.51515
#                128             297 |*                                     297.42188
#                 86             299 |*                                     299.44186
#                 64             301 |*                                     301.43750
#                114             303 |*                                     303.64912
#                174             305 |**                                    305.44253
#                214             307 |**                                    307.55140
#                202             309 |**                                    309.43069
#
#                765           > 95% |*********                             316.41307
#
#        mean of 95%       272.69271
#          95th %ile             310
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.5% of elapsed time.
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_mts   1   1            9367         4701        0       99        0
# bin/../bin-riscv64/mutex -N mutex_mts -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -t -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      9019                       9019
#                        max    147543                      10814
#                       mean      9725.78162                 9537.27377
#                     median      9380                       9367*
#                     stddev      2209.46421                  429.39471
#             standard error        31.50596                    6.26270
#       99% confidence level        81.15935                   16.13271
#                       skew        50.13529                    1.21434
#                   kurtosis      3082.78706                    0.13506
#           time correlation         0.46958                    0.28126
#
#               elapsed time        20.00785
#                   run time         4.73879
#          getnsecs overhead      1416
#
#          number of samples      4918
#         number of outliers       217
#    number of final samples      4701
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7            9019 |*                                    9035.00000
#                 64            9064 |***                                  9094.48438
#                258            9109 |***************                      9133.74806
#                431            9154 |*************************            9177.41995
#                540            9199 |********************************     9219.58889
#                438            9244 |*************************            9265.23516
#                361            9289 |*********************                9310.42382
#                354            9334 |********************                 9356.86441
#                334            9379 |*******************                  9400.99701
#                303            9424 |*****************                    9444.68647
#                190            9469 |***********                          9486.34737
#                105            9514 |******                               9534.75238
#                 96            9559 |*****                                9579.89583
#                 63            9604 |***                                  9623.20635
#                 43            9649 |**                                   9670.34884
#                 36            9694 |**                                   9714.77778
#                 16            9739 |*                                    9760.31250
#                  6            9784 |*                                    9805.66667
#                  3            9829 |*                                    9849.33333
#                  7            9874 |*                                    9902.00000
#                 20            9919 |*                                    9947.70000
#                 32            9964 |*                                    9983.84375
#                 61           10009 |***                                 10033.86885
#                 80           10054 |****                                10076.53750
#                 88           10099 |*****                               10122.00000
#                 99           10144 |*****                               10163.64646
#                 95           10189 |*****                               10210.89474
#                 80           10234 |****                                10253.88750
#                 81           10279 |****                                10300.58025
#                 75           10324 |****                                10345.70667
#                 71           10369 |****                                10392.23944
#                 28           10414 |*                                   10423.00000
#
#                236           > 95% |*************                       10562.95763
#
#        mean of 95%      9483.06069
#          95th %ile           10432
#
# WARNINGS
#     Actual benchmark run time only accounts for 23.7% of elapsed time.
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
         prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_st   1   1             236        18421        0     3379        0
# bin/../bin-riscv64/mutex -N mutex_st -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       229                        229
#                        max    216793                        272
#                       mean       258.36492                  240.88280
#                     median       236                        236*
#                     stddev      1595.10581                   10.37666
#             standard error        11.42836                    0.07645
#       99% confidence level        29.43945                    0.19695
#                       skew       130.15425                    1.54867
#                   kurtosis     17485.77654                    0.87965
#           time correlation         0.00668                    0.00159
#
#               elapsed time        20.00663
#                   run time        16.03938
#          getnsecs overhead      1416
#
#          number of samples     19481
#         number of outliers      1060
#    number of final samples     18421
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4             229 |*                                     229.75000
#                247             231 |*                                     231.85020
#               3949             233 |*********************                 233.71436
#               5957             235 |********************************      235.29226
#               1726             237 |*********                             237.44786
#               2061             239 |***********                           239.48132
#                765             241 |****                                  241.34118
#                181             243 |*                                     243.35359
#                 47             245 |*                                     245.40426
#                 24             247 |*                                     247.41667
#                 11             249 |*                                     249.63636
#                 10             251 |*                                     251.70000
#                 32             253 |*                                     253.78125
#                226             255 |*                                     255.77876
#                717             257 |***                                   257.55230
#                588             259 |***                                   259.43878
#                586             261 |***                                   261.51877
#                368             263 |*                                     263.26359
#
#                922           > 95% |****                                  267.30477
#
#        mean of 95%       239.49066
#          95th %ile             264
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp holdtime
mutex_sts   1   1           17187         5242        0       54        0
# bin/../bin-riscv64/mutex -N mutex_sts -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     16583                      16583
#                        max    176943                      19973
#                       mean     17715.57087                17555.30179
#                     median     17205                      17187*
#                     stddev      2506.42418                  806.41866
#             standard error        34.13974                   11.13812
#       99% confidence level        87.94397                   28.69181
#                       skew        48.52750                    1.12521
#                   kurtosis      3030.28837                   -0.12514
#           time correlation         0.61393                    0.47667
#
#               elapsed time        20.00774
#                   run time         5.21364
#          getnsecs overhead      1416
#
#          number of samples      5390
#         number of outliers       148
#    number of final samples      5242
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6           16583 |*                                   16632.00000
#                 78           16664 |***                                 16715.92308
#                238           16745 |************                        16787.72269
#                402           16826 |********************                16869.92040
#                607           16907 |******************************      16948.46952
#                629           16988 |********************************    17026.75040
#                511           17069 |*************************           17105.13699
#                328           17150 |****************                    17189.99085
#                307           17231 |***************                     17270.91531
#                273           17312 |*************                       17349.95971
#                197           17393 |**********                          17427.45178
#                112           17474 |*****                               17509.14286
#                 90           17555 |****                                17593.67778
#                 65           17636 |***                                 17674.10769
#                 18           17717 |*                                   17737.66667
#                 17           17798 |*                                   17836.82353
#                 19           17879 |*                                   17919.68421
#                 17           17960 |*                                   18000.47059
#                 11           18041 |*                                   18073.72727
#                 32           18122 |*                                   18162.34375
#                 27           18203 |*                                   18250.18519
#                 28           18284 |*                                   18330.21429
#                 59           18365 |***                                 18406.25424
#                 85           18446 |****                                18491.25882
#                129           18527 |******                              18568.38760
#                148           18608 |*******                             18649.50676
#                115           18689 |*****                               18726.65217
#                103           18770 |*****                               18809.14563
#                 93           18851 |****                                18888.13978
#                109           18932 |*****                               18968.97248
#                 67           19013 |***                                 19048.41791
#                 59           19094 |***                                 19131.30508
#
#                263           > 95% |*************                       19444.91255
#
#        mean of 95%     17455.48905
#          95th %ile           19171
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.1% of elapsed time.
#
# Usage: mutex
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'mutex')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-t] (create dummy thread so we are multithreaded)
#     [-s] (use inter-process mutex (not support everywhere))
#     [-h usecs] (specify mutex hold time (default 0)
# notes: measures uncontended pthread_mutex_[un,]lock
          prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep   1   1         3887508         4969        0        1        1        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1915596                    3049903
#                        max   5048615                    4705112
#                       mean   3875536.30432              3876210.28839
#                     median   3887109                    3887508*
#                     stddev    285684.15257               276670.83078
#             standard error      4040.99231                 3924.90253
#       99% confidence level     10409.59619                10110.54891
#                       skew        -0.18338                   -0.13718
#                   kurtosis         0.87090                    0.20513
#           time correlation       189.61678                  186.22433
#
#               elapsed time        20.01201
#                   run time        19.37991
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        29
#    number of final samples      4969
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8         3049903 |*                                 3069040.87500
#                  9         3090007 |*                                 3114314.77778
#                 22         3130111 |*                                 3152376.40909
#                 21         3170215 |*                                 3192680.09524
#                 25         3210319 |*                                 3234608.28000
#                 49         3250423 |***                               3271384.08163
#                 52         3290527 |***                               3311383.59615
#                 65         3330631 |****                              3350354.18462
#                 61         3370735 |****                              3390965.75410
#                 58         3410839 |****                              3430498.53448
#                 97         3450943 |*******                           3472499.41237
#                 92         3491047 |******                            3511883.10870
#                126         3531151 |*********                         3551334.76984
#                124         3571255 |*********                         3590854.89516
#                157         3611359 |***********                       3631844.94904
#                166         3651463 |************                      3672504.56024
#                211         3691567 |***************                   3711261.68720
#                195         3731671 |**************                    3750841.35897
#                218         3771775 |***************                   3792080.27064
#                332         3811879 |************************          3833195.75000
#                439         3851983 |********************************  3871050.17540
#                403         3892087 |*****************************     3911733.46154
#                360         3932191 |**************************        3950583.59722
#                253         3972295 |******************                3991171.30040
#                203         4012399 |**************                    4031942.64039
#                204         4052503 |**************                    4071732.94608
#                202         4092607 |**************                    4113951.25248
#                201         4132711 |**************                    4151459.08955
#                125         4172815 |*********                         4191955.72800
#                 93         4212919 |******                            4232541.65591
#                 79         4253023 |*****                             4273848.53165
#                 70         4293127 |*****                             4311999.58571
#
#                249           > 95% |******************                4454671.16466
#
#        mean of 95%   3845694.02606
#          95th %ile         4333211
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
              prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d10   1   1         3863709         4951        0        1       10        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1157192                    3115704
#                        max   4873616                    4594014
#                       mean   3854858.14126              3857038.63260
#                     median   3863109                    3863709*
#                     stddev    261314.23992               247126.97050
#             standard error      3696.28075                 3512.15506
#       99% confidence level      9521.61922                 9047.31145
#                       skew        -0.44446                   -0.21738
#                   kurtosis         2.98970                    0.45767
#           time correlation       170.38041                  165.28287
#
#               elapsed time        20.01171
#                   run time        19.27664
#          getnsecs overhead      1416
#
#          number of samples      4998
#         number of outliers        47
#    number of final samples      4951
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12         3115704 |*                                 3132346.16667
#                 14         3151489 |*                                 3168690.35714
#                 21         3187274 |*                                 3206838.47619
#                 47         3223059 |***                               3240603.10638
#                 33         3258844 |**                                3276447.96970
#                 33         3294629 |**                                3310605.63636
#                 40         3330414 |**                                3348005.85000
#                 49         3366199 |***                               3384475.46939
#                 66         3401984 |****                              3423518.51515
#                 66         3437769 |****                              3456664.21212
#                 87         3473554 |******                            3492971.22989
#                 95         3509339 |******                            3526866.03158
#                 92         3545124 |******                            3562826.89130
#                106         3580909 |*******                           3600166.93396
#                100         3616694 |*******                           3634856.80000
#                156         3652479 |***********                       3672101.55128
#                168         3688264 |************                      3707779.08333
#                200         3724049 |**************                    3742669.02000
#                311         3759834 |**********************            3777554.77814
#                368         3795619 |**************************        3815443.78261
#                444         3831404 |********************************  3849268.46171
#                388         3867189 |***************************       3885033.30155
#                394         3902974 |****************************      3921456.19797
#                287         3938759 |********************              3957117.40767
#                204         3974544 |**************                    3992635.98529
#                184         4010329 |*************                     4027534.71196
#                159         4046114 |***********                       4063248.83648
#                160         4081899 |***********                       4098895.78750
#                156         4117684 |***********                       4135471.81410
#                130         4153469 |*********                         4169212.59231
#                 65         4189254 |****                              4207768.38462
#                 68         4225039 |****                              4242729.29412
#
#                248           > 95% |*****************                 4373210.42339
#
#        mean of 95%   3829819.70763
#          95th %ile         4260812
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
               prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d100   1   1         2781402         3649        0        1      100        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    326386                     326386
#                        max   5519422                    5328820
#                       mean   2670145.82881              2668618.32804
#                     median   2783603                    2781402*
#                     stddev    905851.01084               903744.02514
#             standard error     14991.69910                14960.92712
#       99% confidence level     38618.61688                38539.34827
#                       skew        -0.13247                   -0.14450
#                   kurtosis        -0.75383                   -0.78229
#           time correlation       852.15310                  851.04202
#
#               elapsed time        20.01344
#                   run time         9.75816
#          getnsecs overhead      1416
#
#          number of samples      3651
#         number of outliers         2
#    number of final samples      3649
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          326386 |*                                  367086.00000
#                 12          441665 |**                                 492878.91667
#                  9          556944 |*                                  635932.77778
#                 22          672223 |***                                714288.77273
#                 28          787502 |****                               851332.75000
#                 27          902781 |****                               971853.51852
#                 33         1018060 |*****                             1078118.57576
#                 47         1133339 |*******                           1195453.74468
#                132         1248618 |**********************            1314670.13636
#                135         1363897 |**********************            1418711.33333
#                128         1479176 |*********************             1533079.55469
#                119         1594455 |*******************               1650352.30252
#                108         1709734 |******************                1766996.74074
#                103         1825013 |*****************                 1877086.95146
#                127         1940292 |*********************             1997516.28346
#                132         2055571 |**********************            2110426.28788
#                105         2170850 |*****************                 2227618.04762
#                125         2286129 |********************              2341165.43200
#                138         2401408 |***********************           2452444.76812
#                138         2516687 |***********************           2576847.10870
#                124         2631966 |********************              2688630.42742
#                154         2747245 |*************************         2813665.38961
#                192         2862524 |********************************  2922730.85417
#                174         2977803 |*****************************     3034729.83333
#                177         3093082 |*****************************     3151978.18644
#                154         3208361 |*************************         3263026.24026
#                185         3323640 |******************************    3384894.46486
#                169         3438919 |****************************      3497112.94675
#                135         3554198 |**********************            3611692.84444
#                144         3669477 |************************          3728361.25694
#                110         3784756 |******************                3838820.82727
#                 78         3900035 |*************                     3952296.60256
#
#                183           > 95% |******************************    4287484.36066
#
#        mean of 95%   2583144.44345
#          95th %ile         4015311
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.8% of elapsed time.
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
                prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_d1000   1   1         3851411         4924        0        1     1000        no     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_d1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    948091                    3055905
#                        max   6856132                    4659817
#                       mean   3853192.92434              3855390.70735
#                     median   3851110                    3851411*
#                     stddev    320386.98809               268799.97464
#             standard error      4532.76971                 3830.62996
#       99% confidence level     11676.41477                 9867.70278
#                       skew        -0.28629                   -0.19896
#                   kurtosis        10.22702                    0.21793
#           time correlation       198.28816                  182.73230
#
#               elapsed time        20.01042
#                   run time        19.26124
#          getnsecs overhead      1416
#
#          number of samples      4996
#         number of outliers        72
#    number of final samples      4924
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 15         3055905 |*                                 3072585.46667
#                 16         3094834 |*                                 3116205.87500
#                 17         3133763 |*                                 3152800.11765
#                 29         3172692 |**                                3192192.55172
#                 40         3211621 |**                                3233316.52500
#                 40         3250550 |**                                3270274.32500
#                 30         3289479 |**                                3305387.03333
#                 52         3328408 |***                               3348557.34615
#                 59         3367337 |****                              3387390.79661
#                 76         3406266 |*****                             3425469.73684
#                 94         3445195 |******                            3464223.05319
#                 99         3484124 |*******                           3500540.68687
#                 87         3523053 |******                            3542774.19540
#                111         3561982 |********                          3581161.25225
#                158         3600911 |***********                       3620867.24051
#                156         3639840 |***********                       3661218.57051
#                200         3678769 |**************                    3698279.35500
#                254         3717698 |******************                3737977.36614
#                329         3756627 |************************          3776399.68997
#                435         3795556 |********************************  3815513.83218
#                325         3834485 |***********************           3851650.58769
#                289         3873414 |*********************             3893178.91003
#                294         3912343 |*********************             3931637.86054
#                248         3951272 |******************                3969326.50000
#                227         3990201 |****************                  4008916.36123
#                183         4029130 |*************                     4049598.55191
#                243         4068059 |*****************                 4085930.16461
#                196         4106988 |**************                    4126365.27041
#                145         4145917 |**********                        4163523.27586
#                 89         4184846 |******                            4203482.82022
#                 74         4223775 |*****                             4242883.78378
#                 67         4262704 |****                              4283300.37313
#
#                247           > 95% |******************                4400868.00810
#
#        mean of 95%   3826583.16121
#          95th %ile         4301614
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_r   1   1         2561002         3188        0        1        1       yes     libc
# bin/../bin-riscv64/nanosleep -N nanosleep_r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    334387                     334387
#                        max   5271422                    4963319
#                       mean   2549736.69684              2545648.89272
#                     median   2561502                    2561002*
#                     stddev    830360.51612               824556.15107
#             standard error     14694.92016                14603.63869
#       99% confidence level     37854.11434                37618.97326
#                       skew        -0.02527                   -0.06071
#                   kurtosis        -0.41104                   -0.49232
#           time correlation       888.75789                  885.24041
#
#               elapsed time        20.01394
#                   run time         8.14990
#          getnsecs overhead      1416
#
#          number of samples      3193
#         number of outliers         5
#    number of final samples      3188
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          334387 |*                                  405458.28571
#                  9          443123 |*                                  492920.88889
#                 12          551859 |**                                 607913.33333
#                 17          660595 |***                                699924.35294
#                 20          769331 |***                                822209.85000
#                 27          878067 |*****                              942872.11111
#                 37          986803 |******                            1049658.97297
#                 37         1095539 |******                            1152822.00000
#                 55         1204275 |**********                        1269747.61818
#                 62         1313011 |***********                       1362595.32258
#                 89         1421747 |****************                  1480839.56180
#                100         1530483 |******************                1590465.31000
#                107         1639219 |********************              1696455.87850
#                128         1747955 |************************          1796402.31250
#                127         1856691 |***********************           1911496.07087
#                119         1965427 |**********************            2021297.53782
#                133         2074163 |*************************         2130270.59398
#                170         2182899 |********************************  2236627.56471
#                123         2291635 |***********************           2348979.55285
#                142         2400371 |**************************        2450725.40141
#                167         2509107 |*******************************   2565461.56886
#                142         2617843 |**************************        2673698.83099
#                136         2726579 |*************************         2784206.78676
#                147         2835315 |***************************       2892205.85034
#                132         2944051 |************************          2999259.88636
#                134         3052787 |*************************         3101938.92537
#                128         3161523 |************************          3215272.51562
#                133         3270259 |*************************         3325357.29323
#                112         3378995 |*********************             3432848.58929
#                 97         3487731 |******************                3544594.75258
#                 93         3596467 |*****************                 3647414.24731
#                 86         3705203 |****************                  3755139.76744
#
#                160           > 95% |******************************    4109527.05625
#
#        mean of 95%   2463013.32266
#          95th %ile         3813912
#
# WARNINGS
#     Actual benchmark run time only accounts for 40.7% of elapsed time.
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
             prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_rs   1   1         2659103         2456        0        1        1       yes  syscall
# bin/../bin-riscv64/nanosleep -N nanosleep_rs -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s -r 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    391687                     391687
#                        max   5437923                    5437923
#                       mean   2631954.91083              2631954.91083
#                     median   2659103                    2659103*
#                     stddev    972200.94940               972200.94940
#             standard error     19617.41862                19617.41862
#       99% confidence level     50534.47036                50534.47036
#                       skew         0.02284                    0.02284
#                   kurtosis        -0.48066                   -0.48066
#           time correlation      1353.91127                 1353.91127
#
#               elapsed time        20.01930
#                   run time         6.47121
#          getnsecs overhead      1416
#
#          number of samples      2456
#         number of outliers         0
#    number of final samples      2456
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19          391687 |*****                              452166.21053
#                 14          510260 |***                                578116.85714
#                 22          628833 |******                             682998.13636
#                 20          747406 |*****                              822129.85000
#                 39          865979 |**********                         933380.51282
#                 31          984552 |********                          1033117.25806
#                 51         1103125 |**************                    1161439.43137
#                 61         1221698 |****************                  1285598.27869
#                 58         1340271 |****************                  1399697.55172
#                 66         1458844 |******************                1523299.59091
#                 99         1577417 |***************************       1640346.43434
#                 63         1695990 |*****************                 1755144.34921
#                 93         1814563 |*************************         1870993.27957
#                 85         1933136 |***********************           1994986.77647
#                 92         2051709 |*************************         2111655.84783
#                 91         2170282 |*************************         2229980.43956
#                 87         2288855 |************************          2344898.72414
#                114         2407428 |*******************************   2471171.21053
#                114         2526001 |*******************************   2587641.34211
#                100         2644574 |***************************       2711714.72000
#                113         2763147 |*******************************   2823408.90265
#                115         2881720 |*******************************   2939747.11304
#                116         3000293 |********************************  3058169.96552
#                107         3118866 |*****************************     3178066.89720
#                 94         3237439 |*************************         3289886.60638
#                 95         3356012 |**************************        3417091.95789
#                 90         3474585 |************************          3536200.86667
#                 73         3593158 |********************              3648746.27397
#                 59         3711731 |****************                  3776345.30508
#                 59         3830304 |****************                  3891283.55932
#                 63         3948877 |*****************                 4008770.23810
#                 30         4067450 |********                          4118840.63333
#
#                123           > 95% |*********************************  4581970.15447
#
#        mean of 95%   2529146.56322
#          95th %ile         4186014
#
# WARNINGS
#     Actual benchmark run time only accounts for 32.3% of elapsed time.
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta remainder   method
nanosleep_s   1   1         3897012         4877        0        1        1        no  syscall
# bin/../bin-riscv64/nanosleep -N nanosleep_s -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1373094                    3180807
#                        max   6128530                    4585318
#                       mean   3876382.18131              3885046.43285
#                     median   3894412                    3897012*
#                     stddev    287154.65149               236635.46254
#             standard error      4062.19887                 3388.46849
#       99% confidence level     10464.22429                 8728.69483
#                       skew        -0.54096                   -0.24782
#                   kurtosis         8.36157                    0.40522
#           time correlation       178.25050                  161.33876
#
#               elapsed time        20.01184
#                   run time        19.38123
#          getnsecs overhead      1416
#
#          number of samples      4997
#         number of outliers       120
#    number of final samples      4877
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 22         3180807 |*                                 3194730.50000
#                 21         3215139 |*                                 3232493.71429
#                 19         3249471 |*                                 3265660.84211
#                 34         3283803 |**                                3305214.32353
#                 40         3318135 |***                               3336713.55000
#                 41         3352467 |***                               3372267.48780
#                 41         3386799 |***                               3403184.78049
#                 45         3421131 |***                               3435847.24444
#                 40         3455463 |***                               3476094.62500
#                 51         3489795 |****                              3508955.01961
#                 53         3524127 |****                              3539234.67925
#                108         3558459 |********                          3576574.29630
#                112         3592791 |********                          3611337.49107
#                154         3627123 |************                      3647262.93506
#                142         3661455 |***********                       3678338.68310
#                187         3695787 |**************                    3711757.35829
#                197         3730119 |***************                   3747040.07107
#                187         3764451 |**************                    3783179.31551
#                263         3798783 |********************              3816466.21293
#                329         3833115 |**************************        3849918.20973
#                402         3867447 |********************************  3884027.08209
#                389         3901779 |******************************    3918510.08740
#                359         3936111 |****************************      3953319.26184
#                298         3970443 |***********************           3986430.54362
#                211         4004775 |****************                  4021152.98104
#                211         4039107 |****************                  4057133.34123
#                165         4073439 |*************                     4089714.18788
#                142         4107771 |***********                       4123082.05634
#                127         4142103 |**********                        4159243.00000
#                 93         4176435 |*******                           4193869.81720
#                 66         4210767 |*****                             4228677.43939
#                 84         4245099 |******                            4261251.22619
#
#                244           > 95% |*******************               4366971.97951
#
#        mean of 95%   3859665.50615
#          95th %ile         4279416
#
# Usage: nanosleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'nanosleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in nanoseconds (defaults to 1ns)
#     -r provide remainder argument
#     -s skip libc making system call directly
# note: measures nanosleep()
         prc thr      nsecs/call      samples   errors cnt/samp 
open_tmp   1   1          549888         3392        0        1 
# bin/../bin-riscv64/open -N open_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    526988                     526988
#                        max   3143207                     579989
#                       mean    594023.87627               551750.98261
#                     median    552988                     549888*
#                     stddev    103362.54188                 9449.55598
#             standard error      1571.88344                  162.24954
#       99% confidence level      4049.17174                  417.95482
#                       skew         5.91942                    0.61926
#                   kurtosis        96.00312                    0.29877
#           time correlation        54.19779                    9.18376
#
#               elapsed time        20.00971
#                   run time         2.57575
#          getnsecs overhead      1416
#
#          number of samples      4324
#         number of outliers       932
#    number of final samples      3392
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          526988 |*                                  527673.71429
#                  4          528342 |*                                  529563.00000
#                  8          529696 |*                                  530550.50000
#                 26          531050 |**                                 531795.53846
#                 26          532404 |**                                 533076.42308
#                 25          533758 |**                                 534576.00000
#                 28          535112 |**                                 535798.71429
#                 39          536466 |****                               537098.25641
#                 36          537820 |***                                538571.33333
#                 44          539174 |****                               539992.61364
#                 62          540528 |******                             541333.20968
#                142          541882 |***************                    542582.45070
#                205          543236 |*********************              543968.53659
#                259          544590 |***************************        545313.96911
#                302          545944 |********************************   546658.28808
#                270          547298 |****************************       547970.67407
#                240          548652 |*************************          549320.62500
#                190          550006 |********************               550659.14211
#                208          551360 |**********************             552047.32212
#                188          552714 |*******************                553317.38298
#                157          554068 |****************                   554688.83439
#                 92          555422 |*********                          556118.61957
#                 92          556776 |*********                          557464.35870
#                 65          558130 |******                             558758.92308
#                 79          559484 |********                           560086.87342
#                 77          560838 |********                           561568.68831
#                 73          562192 |*******                            562869.01370
#                 62          563546 |******                             564301.11290
#                 60          564900 |******                             565518.20000
#                 53          566254 |*****                              566982.54717
#                 49          567608 |*****                              568314.83673
#                 54          568962 |*****                              569614.11111
#
#                170           > 95% |******************                 574200.04118
#
#        mean of 95%    550566.51955
#          95th %ile          570289
#
# WARNINGS
#     Actual benchmark run time only accounts for 12.9% of elapsed time.
#
# Usage: open
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'open')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-open (default /dev/null)]
# notes: measures open()
          prc thr      nsecs/call      samples   errors cnt/samp 
open_zero   1   1          376395         3379        0        1 
# bin/../bin-riscv64/open -N open_zero -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    353245                     353245
#                        max   1837798                     404795
#                       mean    410038.43915               377246.28648
#                     median    380645                     376395*
#                     stddev     71844.14300                 9183.03940
#             standard error      1055.39092                  157.97645
#       99% confidence level      2718.68701                  406.94734
#                       skew         4.91269                    0.41699
#                   kurtosis        54.87914                    0.11388
#           time correlation        38.03142                    9.11844
#
#               elapsed time        20.01314
#                   run time         3.70959
#          getnsecs overhead      1416
#
#          number of samples      4634
#         number of outliers      1255
#    number of final samples      3379
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          353245 |*                                  353445.00000
#                  2          354539 |*                                  355470.00000
#                 10          355833 |*                                  356445.00000
#                 25          357127 |***                                357743.00000
#                 27          358421 |***                                359009.81481
#                 23          359715 |***                                360197.17391
#                 51          361009 |******                             361529.31373
#                 57          362303 |*******                            363055.52632
#                 56          363597 |*******                            364111.66071
#                 65          364891 |********                           365540.89231
#                122          366185 |***************                    366851.14754
#                138          367479 |******************                 368130.07971
#                143          368773 |******************                 369451.29371
#                164          370067 |*********************              370747.54878
#                198          371361 |*************************          372006.40404
#                180          372655 |***********************            373319.17222
#                198          373949 |*************************          374640.50505
#                245          375243 |********************************   375868.74694
#                220          376537 |****************************       377193.79091
#                189          377831 |************************           378473.53968
#                172          379125 |**********************             379724.36047
#                158          380419 |********************               381014.87975
#                135          381713 |*****************                  382337.53333
#                114          383007 |**************                     383728.77193
#                 98          384301 |************                       384935.22449
#                 86          385595 |***********                        386236.67442
#                 84          386889 |**********                         387522.88095
#                 69          388183 |*********                          388782.56522
#                 57          389477 |*******                            390126.43860
#                 41          390771 |*****                              391388.90244
#                 48          392065 |******                             392875.91667
#                 33          393359 |****                               394036.93939
#
#                169           > 95% |**********************             398607.15385
#
#        mean of 95%    376121.68006
#          95th %ile          394645
#
# WARNINGS
#     Actual benchmark run time only accounts for 18.5% of elapsed time.
#
# Usage: open
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'open')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-open (default /dev/null)]
# notes: measures open()
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmp1   1   1          839291          904        0        1 mp fifo
# bin/../bin-riscv64/pipe -N pipe_fmp1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    576688                     576688
#                        max   2943907                    1316294
#                       mean    953589.74248               883383.73783
#                     median    844290                     839291*
#                     stddev    274364.27527               146182.94633
#             standard error      8684.84938                 4861.97247
#       99% confidence level     22372.17200                12524.44109
#                       skew         2.49336                    1.44485
#                   kurtosis         8.65795                    1.39009
#           time correlation       748.14546                  481.85494
#
#               elapsed time        20.01773
#                   run time         0.95399
#          getnsecs overhead      1416
#
#          number of samples       998
#         number of outliers        94
#    number of final samples       904
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          576688 |*                                  578288.50000
#                  0          597617 |                                              -
#                  2          618546 |*                                  624088.00000
#                  1          639475 |*                                  648989.00000
#                 10          660404 |*                                  673359.00000
#                 11          681333 |*                                  692116.63636
#                 10          702262 |*                                  712849.20000
#                 29          723191 |*****                              733344.82759
#                 55          744120 |*********                          756833.40000
#                 54          765049 |*********                          774412.14815
#                 45          785978 |*******                            797552.31111
#                137          806907 |***********************            819111.49635
#                183          827836 |********************************   838740.14208
#                101          848765 |*****************                  858400.45545
#                 39          869694 |******                             879653.74359
#                 25          890623 |****                               900002.80000
#                 14          911552 |**                                 922848.28571
#                 11          932481 |*                                  941336.63636
#                  9          953410 |*                                  963891.44444
#                  5          974339 |*                                  980731.40000
#                 10          995268 |*                                 1004561.50000
#                  8         1016197 |*                                 1025642.00000
#                  8         1037126 |*                                 1052254.62500
#                  8         1058055 |*                                 1068942.25000
#                  8         1078984 |*                                 1087529.50000
#                 18         1099913 |***                               1110525.94444
#                 13         1120842 |**                                1131092.69231
#                 13         1141771 |**                                1154431.23077
#                 10         1162700 |*                                 1170952.90000
#                  8         1183629 |*                                 1195393.12500
#                  8         1204558 |*                                 1212930.75000
#                  3         1225487 |*                                 1235793.66667
#
#                 46           > 95% |********                          1284293.73913
#
#        mean of 95%    861889.72844
#          95th %ile         1246394
#
# WARNINGS
#     Actual benchmark run time only accounts for 4.8% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmp4k   1   1          844291          760        0        1 mp fifo
# bin/../bin-riscv64/pipe -N pipe_fmp4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    631889                     708589
#                        max   2191101                     967891
#                       mean    942868.59654               837927.80526
#                     median    854490                     844291*
#                     stddev    232922.38206                44638.25285
#             standard error      7425.29434                 1619.19961
#       99% confidence level     19127.55821                 4171.05821
#                       skew         2.16779                   -0.35618
#                   kurtosis         4.72981                    0.50292
#           time correlation       638.36976                  192.88343
#
#               elapsed time        20.03004
#                   run time         0.93021
#          getnsecs overhead      1416
#
#          number of samples       984
#         number of outliers       224
#    number of final samples       760
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          708589 |**                                 711869.40000
#                  3          714808 |*                                  718956.00000
#                  5          721027 |**                                 723469.40000
#                  2          727246 |*                                  732940.00000
#                  5          733465 |**                                 736769.60000
#                  3          739684 |*                                  743923.00000
#                 14          745903 |******                             748711.07143
#                 14          752122 |******                             755311.21429
#                  7          758341 |***                                761147.14286
#                 14          764560 |******                             767661.35714
#                 12          770779 |*****                              773798.25000
#                 18          776998 |********                           779540.00000
#                 12          783217 |*****                              786206.75000
#                 20          789436 |*********                          792205.10000
#                 15          795655 |*******                            799056.73333
#                 11          801874 |*****                              805126.36364
#                 16          808093 |*******                            811571.43750
#                 24          814312 |***********                        817177.87500
#                 39          820531 |******************                 823710.82051
#                 48          826750 |***********************            829629.91667
#                 50          832969 |************************           835548.32000
#                 57          839188 |***************************        842506.24561
#                 66          845407 |********************************   849011.80303
#                 55          851626 |**************************         854774.32727
#                 58          857845 |****************************       860675.12069
#                 42          864064 |********************               866747.80952
#                 40          870283 |*******************                873243.20000
#                 24          876502 |***********                        879090.70833
#                 12          882721 |*****                              885857.41667
#                 14          888940 |******                             892283.71429
#                  9          895159 |****                               898179.77778
#                  8          901378 |***                                904928.50000
#
#                 38           > 95% |******************                 930330.60526
#
#        mean of 95%    833064.50000
#          95th %ile          907591
#
# WARNINGS
#     Actual benchmark run time only accounts for 4.6% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmt1   1   1          768090         2133        0        1 mt fifo
# bin/../bin-riscv64/pipe -N pipe_fmt1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    419387                     419387
#                        max   2757105                    1178593
#                       mean    862751.01114               787119.18237
#                     median    774490                     768090*
#                     stddev    249779.45844               130970.27367
#             standard error      5073.29845                 2835.81116
#       99% confidence level     13068.81682                 7305.04955
#                       skew         1.89428                    0.90333
#                   kurtosis         4.57629                    1.54898
#           time correlation       297.40320                  189.06477
#
#               elapsed time        20.01484
#                   run time         2.09587
#          getnsecs overhead      1416
#
#          number of samples      2424
#         number of outliers       291
#    number of final samples      2133
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19          419387 |*                                  424334.63158
#                  5          440297 |*                                  453827.80000
#                  5          461207 |*                                  473227.80000
#                  5          482117 |*                                  491987.60000
#                  5          503027 |*                                  511248.00000
#                 12          523937 |*                                  536621.33333
#                  4          544847 |*                                  554638.50000
#                  9          565757 |*                                  578999.55556
#                 17          586667 |*                                  595000.47059
#                 29          607577 |**                                 617133.72414
#                 41          628487 |****                               640532.85366
#                 36          649397 |***                                659041.86111
#                 79          670307 |********                           681951.25316
#                248          691217 |*************************          702537.41935
#                235          712127 |************************           722235.98298
#                162          733037 |****************                   742879.88272
#                311          753947 |********************************   766948.45338
#                265          774857 |***************************        783798.74340
#                122          795767 |************                       804426.25410
#                 66          816677 |******                             827155.53030
#                 67          837587 |******                             848592.08955
#                 39          858497 |****                               867713.87179
#                 41          879407 |****                               888605.51220
#                 27          900317 |**                                 908916.96296
#                 22          921227 |**                                 931432.09091
#                 11          942137 |*                                  954536.81818
#                 21          963047 |**                                 973858.09524
#                 17          983957 |*                                  994503.35294
#                 26         1004867 |**                                1015134.07692
#                 26         1025777 |**                                1037030.46154
#                 22         1046687 |**                                1058342.27273
#                 32         1067597 |***                               1077520.40625
#
#                107           > 95% |***********                       1131479.27103
#
#        mean of 95%    768932.34650
#          95th %ile         1088493
#
# WARNINGS
#     Actual benchmark run time only accounts for 10.5% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fmt4k   1   1          797990         1779        0        1 mt fifo
# bin/../bin-riscv64/pipe -N pipe_fmt4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    462188                     462188
#                        max   3254309                    1372995
#                       mean    879326.70288               854464.63575
#                     median    800090                     797990*
#                     stddev    222259.33630               174075.90637
#             standard error      5180.04007                 4127.15416
#       99% confidence level     13343.78321                10631.54911
#                       skew         2.19351                    1.25324
#                   kurtosis         9.49129                    0.88596
#           time correlation       345.88224                  296.09731
#
#               elapsed time        20.01065
#                   run time         1.62271
#          getnsecs overhead      1416
#
#          number of samples      1841
#         number of outliers        62
#    number of final samples      1779
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13          462188 |*                                  468456.84615
#                  3          486889 |*                                  494021.00000
#                  3          511590 |*                                  526854.66667
#                  3          536291 |*                                  550554.66667
#                  2          560992 |*                                  576438.50000
#                  4          585693 |*                                  600913.50000
#                  6          610394 |*                                  621772.16667
#                 12          635095 |*                                  647089.16667
#                 27          659796 |**                                 670152.29630
#                 19          684497 |*                                  697726.36842
#                255          709198 |*************************          724956.29020
#                241          733899 |***********************            745376.53527
#                134          758600 |*************                      769292.97761
#                326          783301 |********************************   797669.36503
#                173          808002 |****************                   818310.64740
#                 84          832703 |********                           842415.46429
#                 21          857404 |**                                 869314.57143
#                 34          882105 |***                                895626.20588
#                 29          906806 |**                                 919991.17241
#                 16          931507 |*                                  943697.43750
#                 21          956208 |**                                 968367.76190
#                 16          980909 |*                                  995241.93750
#                 20         1005610 |*                                 1020111.85000
#                 20         1030311 |*                                 1042367.00000
#                 25         1055012 |**                                1068852.48000
#                 25         1079713 |**                                1092732.44000
#                 39         1104414 |***                               1118492.79487
#                 26         1129115 |**                                1142569.69231
#                 33         1153816 |***                               1165635.45455
#                 20         1178517 |*                                 1191193.40000
#                 18         1203218 |*                                 1218493.61111
#                 22         1227919 |**                                1238693.63636
#
#                 89           > 95% |********                          1304414.49438
#
#        mean of 95%    830769.05148
#          95th %ile         1252594
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.1% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fst1   1   1          132532         5682        0        5 st fifo
# bin/../bin-riscv64/pipe -N pipe_fst1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x fifo -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    129515                     129515
#                        max   1171390                     189065
#                       mean    147411.76898               140604.61246
#                     median    132732                     132532*
#                     stddev     40889.05168                16178.76605
#             standard error       526.95402                  214.63215
#       99% confidence level      1357.43356                  552.89242
#                       skew         7.59323                    1.68432
#                   kurtosis       103.36964                    1.16313
#           time correlation        12.80785                    7.44496
#
#               elapsed time        20.00947
#                   run time         5.33192
#          getnsecs overhead      1416
#
#          number of samples      6021
#         number of outliers       339
#    number of final samples      5682
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                454          129515 |******                             130451.63436
#               2394          131025 |********************************   131893.51713
#                599          132535 |********                           133045.58932
#                414          134045 |*****                              134963.96377
#                504          135555 |******                             136133.95833
#                129          137065 |*                                  137674.71318
#                 49          138575 |*                                  139372.67347
#                 29          140085 |*                                  140852.44828
#                 12          141595 |*                                  142515.33333
#                 13          143105 |*                                  143755.00000
#                 12          144615 |*                                  145250.08333
#                 11          146125 |*                                  146668.27273
#                  5          147635 |*                                  148245.40000
#                  4          149145 |*                                  150136.25000
#                  3          150655 |*                                  151004.00000
#                  4          152165 |*                                  153002.75000
#                  0          153675 |                                              -
#                  4          155185 |*                                  156194.50000
#                  2          156695 |*                                  158023.50000
#                  2          158205 |*                                  158665.50000
#                  4          159715 |*                                  160707.25000
#                  8          161225 |*                                  162073.62500
#                 20          162735 |*                                  163672.80000
#                 66          164245 |*                                  165080.69697
#                 69          165755 |*                                  166499.13043
#                 94          167265 |*                                  168070.46809
#                110          168775 |*                                  169554.10909
#                 92          170285 |*                                  170997.78261
#                 87          171795 |*                                  172580.29885
#                 84          173305 |*                                  174041.85714
#                 73          174815 |*                                  175521.08219
#                 46          176325 |*                                  177074.15217
#
#                285           > 95% |***                                182847.70526
#
#        mean of 95%    138373.87660
#          95th %ile          177815
#
# WARNINGS
#     Actual benchmark run time only accounts for 26.6% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_fst4k   1   1          137201         5522        0        5 st fifo
# bin/../bin-riscv64/pipe -N pipe_fst4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x fifo -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    134332                     134332
#                        max    756532                     198116
#                       mean    152690.58489               146168.98551
#                     median    137465                     137201*
#                     stddev     38140.98734                17343.86275
#             standard error       498.71350                  233.39827
#       99% confidence level      1284.68596                  601.23394
#                       skew         5.74463                    1.58537
#                   kurtosis        50.85416                    0.86562
#           time correlation        13.51082                    8.39355
#
#               elapsed time        20.01578
#                   run time         5.34889
#          getnsecs overhead      1416
#
#          number of samples      5849
#         number of outliers       327
#    number of final samples      5522
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                640          134332 |********                           135429.22031
#               2294          135913 |********************************   136508.73147
#                324          137494 |****                               138090.31481
#                659          139075 |*********                          139946.32473
#                286          140656 |***                                141252.59441
#                 80          142237 |*                                  142912.22500
#                 40          143818 |*                                  144475.47500
#                 27          145399 |*                                  146256.44444
#                 15          146980 |*                                  147690.66667
#                 10          148561 |*                                  149389.60000
#                 11          150142 |*                                  151061.27273
#                 13          151723 |*                                  152383.61538
#                 10          153304 |*                                  154034.60000
#                  8          154885 |*                                  155790.37500
#                  4          156466 |*                                  157152.25000
#                  3          158047 |*                                  158833.00000
#                  5          159628 |*                                  160782.60000
#                  0          161209 |                                              -
#                  0          162790 |                                              -
#                  2          164371 |*                                  164901.00000
#                  7          165952 |*                                  167300.85714
#                 22          167533 |*                                  168339.40909
#                 62          169114 |*                                  170085.19355
#                 82          170695 |*                                  171553.40244
#                 83          172276 |*                                  172995.45783
#                 99          173857 |*                                  174666.87879
#                 94          175438 |*                                  176200.72340
#                 89          177019 |*                                  177777.34831
#                 82          178600 |*                                  179325.82927
#                 70          180181 |*                                  180940.28571
#                 62          181762 |*                                  182577.77419
#                 62          183343 |*                                  184135.46774
#
#                277           > 95% |***                                190567.71119
#
#        mean of 95%    143824.19104
#          95th %ile          184916
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 26.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmp1   1   1          830904          858        0        1 mp pipe
# bin/../bin-riscv64/pipe -N pipe_pmp1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    511296                     728600
#                        max   2519643                     929706
#                       mean    930263.65878               828743.65035
#                     median    838904                     830904*
#                     stddev    214550.54620                33729.84678
#             standard error      6235.24860                 1151.51798
#       99% confidence level     16062.00039                 2966.31032
#                       skew         2.24944                   -0.22201
#                   kurtosis         6.71247                    1.08957
#           time correlation       493.91955                  126.81715
#
#               elapsed time        20.01804
#                   run time         1.10414
#          getnsecs overhead      1416
#
#          number of samples      1184
#         number of outliers       326
#    number of final samples       858
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          728600 |**                                 730584.00000
#                  6          733501 |**                                 736884.33333
#                  5          738402 |*                                  740741.00000
#                  3          743303 |*                                  747434.66667
#                  4          748204 |*                                  751076.25000
#                  6          753105 |**                                 755185.00000
#                 13          758006 |****                               760786.46154
#                 12          762907 |****                               764810.08333
#                  7          767808 |**                                 770187.28571
#                 14          772709 |*****                              775016.21429
#                  8          777610 |***                                780102.25000
#                 11          782511 |****                               784929.36364
#                 11          787412 |****                               789902.18182
#                 14          792313 |*****                              795245.21429
#                 14          797214 |*****                              800388.21429
#                 27          802115 |**********                         804924.77778
#                 34          807016 |************                       809741.08824
#                 45          811917 |****************                   814411.71111
#                 55          816818 |********************               819266.49091
#                 76          821719 |****************************       824254.40789
#                 67          826620 |*************************          829301.76119
#                 85          831521 |********************************   834133.95294
#                 80          836422 |******************************     838718.55000
#                 46          841323 |*****************                  843590.56522
#                 41          846224 |***************                    848423.17073
#                 36          851125 |*************                      853137.19444
#                 26          856026 |*********                          858334.73077
#                 15          860927 |*****                              863343.86667
#                 20          865828 |*******                            868944.10000
#                 12          870729 |****                               873237.50000
#                  8          875630 |***                                877766.50000
#                  8          880531 |***                                882417.12500
#
#                 43           > 95% |****************                   904097.95349
#
#        mean of 95%    824767.90184
#          95th %ile          885404
#
# WARNINGS
#     Actual benchmark run time only accounts for 5.5% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmp4k   1   1          827003          887        0        1 mp pipe
# bin/../bin-riscv64/pipe -N pipe_pmp4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    675899                     695099
#                        max   2175133                     955004
#                       mean    925439.19514               826013.56708
#                     median    834702                     827003*
#                     stddev    218880.75106                43652.66421
#             standard error      6446.03882                 1465.71302
#       99% confidence level     16604.99600                 3775.67673
#                       skew         2.23778                   -0.02679
#                   kurtosis         5.36713                    0.97035
#           time correlation       512.25789                  159.55279
#
#               elapsed time        20.02055
#                   run time         1.06975
#          getnsecs overhead      1416
#
#          number of samples      1153
#         number of outliers       266
#    number of final samples       887
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          695099 |*                                  696549.50000
#                  3          701597 |*                                  705066.00000
#                  6          708095 |*                                  711333.00000
#                  6          714593 |*                                  717116.50000
#                  1          721091 |*                                  725201.00000
#                  6          727589 |*                                  732433.50000
#                  8          734087 |**                                 737887.50000
#                 11          740585 |***                                743463.90909
#                  6          747083 |*                                  750867.16667
#                 20          753581 |*****                              757070.80000
#                 15          760079 |****                               763527.66667
#                 14          766577 |***                                769379.35714
#                 14          773075 |***                                776279.50000
#                 17          779573 |****                               782577.64706
#                 14          786071 |***                                789494.14286
#                 30          792569 |********                           795734.96667
#                 44          799067 |************                       802842.56818
#                 49          805565 |*************                      808917.95918
#                 67          812063 |******************                 815070.50746
#                 72          818561 |********************               821915.97222
#                114          825059 |********************************   828171.51754
#                 87          831557 |************************           834602.35632
#                 46          838055 |************                       840982.97826
#                 27          844553 |*******                            847569.48148
#                 39          851051 |**********                         854233.66667
#                 31          857549 |********                           860741.61290
#                 26          864047 |*******                            866845.38462
#                 20          870545 |*****                              873353.45000
#                 14          877043 |***                                879882.00000
#                 11          883541 |***                                886649.00000
#                  9          890039 |**                                 893114.77778
#                 11          896537 |***                                900822.09091
#
#                 45           > 95% |************                       926008.84444
#
#        mean of 95%    820669.40143
#          95th %ile          903004
#
# WARNINGS
#     Actual benchmark run time only accounts for 5.3% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmt1   1   1          746100         1843        0        1 mt pipe
# bin/../bin-riscv64/pipe -N pipe_pmt1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    443893                     592497
#                        max   2710340                     891403
#                       mean    840708.43928               742127.51329
#                     median    762200                     746100*
#                     stddev    233439.13299                49888.07148
#             standard error      4712.33745                 1162.07471
#       99% confidence level     12138.98126                 2993.50444
#                       skew         2.20244                    0.03465
#                   kurtosis         6.77317                    0.36250
#           time correlation       264.09436                   90.35941
#
#               elapsed time        20.01891
#                   run time         2.06770
#          getnsecs overhead      1416
#
#          number of samples      2454
#         number of outliers       611
#    number of final samples      1843
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          592497 |*                                  596013.00000
#                  5          599960 |*                                  604076.80000
#                  7          607423 |*                                  611611.28571
#                 12          614886 |**                                 619346.91667
#                  7          622349 |*                                  626125.71429
#                 12          629812 |**                                 633438.83333
#                 14          637275 |**                                 640526.00000
#                 15          644738 |***                                648417.60000
#                 13          652201 |**                                 655836.30769
#                  9          659664 |*                                  664742.11111
#                 10          667127 |**                                 671418.10000
#                 31          674590 |******                             679220.80645
#                 68          682053 |**************                     685510.16176
#                 92          689516 |*******************                693499.58696
#                143          696979 |*****************************      700906.41958
#                121          704442 |*************************          708125.29752
#                 94          711905 |*******************                715654.26596
#                 77          719368 |****************                   723079.61039
#                 64          726831 |*************                      730246.18750
#                 74          734294 |***************                    738248.13514
#                 95          741757 |*******************                745876.53684
#                116          749220 |************************           753202.42241
#                117          756683 |************************           760632.40171
#                154          764146 |********************************   768074.79221
#                117          771609 |************************           775039.64103
#                 90          779072 |******************                 782130.28889
#                 62          786535 |************                       789763.51613
#                 52          793998 |**********                         797468.07692
#                 24          801461 |****                               804559.16667
#                 20          808924 |****                               812326.00000
#                 17          816387 |***                                819766.11765
#                 12          823850 |**                                 829009.75000
#
#                 93           > 95% |*******************                853528.89247
#
#        mean of 95%    736207.32571
#          95th %ile          831302
#
# WARNINGS
#     Actual benchmark run time only accounts for 10.3% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pmt4k   1   1          766500         2020        0        1 mt pipe
# bin/../bin-riscv64/pipe -N pipe_pmt4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    451093                     590296
#                        max   3071745                     936303
#                       mean    877189.54449               763155.02475
#                     median    780700                     766500*
#                     stddev    249822.57568                57855.14629
#             standard error      4770.87410                 1287.26011
#       99% confidence level     12289.77169                 3315.98204
#                       skew         1.97704                    0.28533
#                   kurtosis         5.34877                    0.43174
#           time correlation       261.04748                   94.96592
#
#               elapsed time        20.01640
#                   run time         2.41013
#          getnsecs overhead      1416
#
#          number of samples      2742
#         number of outliers       722
#    number of final samples      2020
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          590296 |*                                  593967.42857
#                  6          599087 |*                                  603729.33333
#                  3          607878 |*                                  611529.66667
#                  7          616669 |*                                  619910.42857
#                  9          625460 |*                                  630141.00000
#                  9          634251 |*                                  638796.88889
#                 10          643042 |*                                  647976.80000
#                 14          651833 |**                                 656275.71429
#                 15          660624 |**                                 664490.60000
#                 14          669415 |**                                 673654.78571
#                 15          678206 |**                                 683424.26667
#                 29          686997 |****                               692828.86207
#                113          695788 |*****************                  700962.66372
#                142          704579 |*********************              708436.12676
#                180          713370 |***************************        717977.30556
#                102          722161 |***************                    726295.66667
#                 74          730952 |***********                        735189.32432
#                 56          739743 |********                           743438.03571
#                 58          748534 |********                           753105.96552
#                139          757325 |*********************              762600.00719
#                210          766116 |********************************   770576.61429
#                159          774907 |************************           779244.88050
#                158          783698 |************************           787793.45570
#                 98          792489 |**************                     796506.03061
#                 64          801280 |*********                          805818.93750
#                 41          810071 |******                             814431.95122
#                 31          818862 |****                               823135.87097
#                 28          827653 |****                               832739.96429
#                 34          836444 |*****                              841694.97059
#                 31          845235 |****                               849356.00000
#                 40          854026 |******                             857938.70000
#                 23          862817 |***                                867144.73913
#
#                101           > 95% |***************                    897906.89109
#
#        mean of 95%    756062.82126
#          95th %ile          871601
#
# WARNINGS
#     Actual benchmark run time only accounts for 12.0% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pst1   1   1          131400         7653        0        5 st pipe
# bin/../bin-riscv64/pipe -N pipe_pst1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x pipe -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    130066                     130066
#                        max    660510                     137167
#                       mean    145424.43423               132245.86319
#                     median    132133                     131400*
#                     stddev     30503.86868                 1644.46714
#             standard error       299.21576                   18.79790
#       99% confidence level       770.77979                   48.42339
#                       skew         4.30171                    1.15974
#                   kurtosis        30.39420                   -0.06714
#           time correlation         6.57192                    0.65858
#
#               elapsed time        20.00697
#                   run time         9.05770
#          getnsecs overhead      1416
#
#          number of samples     10393
#         number of outliers      2740
#    number of final samples      7653
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          130066 |*                                  130153.30000
#                  6          130238 |*                                  130344.50000
#                 14          130410 |*                                  130511.78571
#                135          130582 |***                                130705.00000
#                621          130754 |***************                    130855.72786
#               1210          130926 |******************************     131011.39174
#               1285          131098 |********************************   131179.54864
#                698          131270 |*****************                  131350.30516
#                375          131442 |*********                          131514.68800
#                257          131614 |******                             131691.49416
#                264          131786 |******                             131876.10606
#                320          131958 |*******                            132040.53125
#                226          132130 |*****                              132210.58407
#                119          132302 |**                                 132390.89076
#                 85          132474 |**                                 132549.30588
#                 66          132646 |*                                  132721.68182
#                 45          132818 |*                                  132902.02222
#                 32          132990 |*                                  133081.75000
#                 33          133162 |*                                  133242.84848
#                 19          133334 |*                                  133404.31579
#                 32          133506 |*                                  133592.75000
#                 25          133678 |*                                  133759.32000
#                 49          133850 |*                                  133936.40816
#                 78          134022 |*                                  134116.03846
#                115          134194 |**                                 134285.60000
#                201          134366 |*****                              134448.92040
#                247          134538 |******                             134617.98785
#                236          134710 |*****                              134780.50424
#                186          134882 |****                               134957.32258
#                117          135054 |**                                 135143.07692
#                 85          135226 |**                                 135310.02353
#                 79          135398 |*                                  135484.35443
#
#                383           > 95% |*********                          136132.34204
#
#        mean of 95%    132041.11472
#          95th %ile          135567
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 45.3% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_pst4k   1   1          140233         9077        0        5 st pipe
# bin/../bin-riscv64/pipe -N pipe_pst4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x pipe -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    137133                     137133
#                        max    557174                     188451
#                       mean    154160.53968               146939.26297
#                     median    140650                     140233*
#                     stddev     31643.66014                13837.60355
#             standard error       317.37424                  145.24116
#       99% confidence level       817.55604                  374.14123
#                       skew         4.40193                    1.74615
#                   kurtosis        29.67135                    1.37543
#           time correlation         7.11986                    3.97244
#
#               elapsed time        20.00753
#                   run time         9.17613
#          getnsecs overhead      1416
#
#          number of samples      9941
#         number of outliers       864
#    number of final samples      9077
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                634          137133 |******                             138081.39590
#               3022          138451 |********************************   139361.89444
#               1561          139769 |****************                   140234.73671
#                469          141087 |****                               141754.08742
#               1073          142405 |***********                        143065.97111
#                397          143723 |****                               144219.49874
#                113          145041 |*                                  145606.88496
#                 81          146359 |*                                  146990.83951
#                 50          147677 |*                                  148236.28000
#                 34          148995 |*                                  149459.58824
#                 22          150313 |*                                  150880.50000
#                 14          151631 |*                                  152206.28571
#                 16          152949 |*                                  153516.93750
#                 14          154267 |*                                  155039.85714
#                  7          155585 |*                                  156252.14286
#                  5          156903 |*                                  157810.20000
#                  8          158221 |*                                  159033.75000
#                  5          159539 |*                                  159923.80000
#                  3          160857 |*                                  161734.00000
#                  2          162175 |*                                  162425.50000
#                  5          163493 |*                                  164283.80000
#                  3          164811 |*                                  165956.00000
#                  0          166129 |                                              -
#                 33          167447 |*                                  168301.03030
#                 80          168765 |*                                  169500.55000
#                155          170083 |*                                  170755.80645
#                140          171401 |*                                  172053.59286
#                165          172719 |*                                  173374.61818
#                146          174037 |*                                  174649.67808
#                123          175355 |*                                  176005.80488
#                129          176673 |*                                  177258.92248
#                114          177991 |*                                  178580.85965
#
#                454           > 95% |****                               183384.10352
#
#        mean of 95%    145020.44613
#          95th %ile          179301
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smp1   1   1         1447810         1065        0        1 mp sock
# bin/../bin-riscv64/pipe -N pipe_smp1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1130904                    1130904
#                        max   3128539                    2264123
#                       mean   1573639.35596              1551433.70423
#                     median   1451109                    1447810*
#                     stddev    278157.77409               237753.60919
#             standard error      8425.15605                 7285.38177
#       99% confidence level     21703.20197                18767.14343
#                       skew         1.41991                    0.86376
#                   kurtosis         2.64708                   -0.14216
#           time correlation       801.39437                  730.76592
#
#               elapsed time        20.03164
#                   run time         1.71852
#          getnsecs overhead      1416
#
#          number of samples      1090
#         number of outliers        25
#    number of final samples      1065
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3         1130904 |*                                 1143304.00000
#                  8         1158202 |**                                1169704.62500
#                  6         1185500 |*                                 1198388.33333
#                 11         1212798 |**                                1230596.45455
#                 20         1240096 |*****                             1256686.10000
#                 22         1267394 |*****                             1281570.18182
#                 33         1294692 |********                          1308146.36364
#                 56         1321990 |**************                    1336464.60714
#                 96         1349288 |*************************         1363414.17708
#                121         1376586 |********************************  1390629.85950
#                107         1403884 |****************************      1417108.91589
#                 83         1431182 |*********************             1444614.12048
#                 38         1458480 |**********                        1470678.23684
#                 20         1485778 |*****                             1496470.30000
#                 10         1513076 |**                                1527121.10000
#                 20         1540374 |*****                             1555596.30000
#                 22         1567672 |*****                             1580857.13636
#                 23         1594970 |******                            1608542.52174
#                 28         1622268 |*******                           1635773.35714
#                 32         1649566 |********                          1663703.68750
#                 27         1676864 |*******                           1691639.51852
#                 24         1704162 |******                            1715995.58333
#                 25         1731460 |******                            1748686.68000
#                 26         1758758 |******                            1771707.53846
#                 24         1786056 |******                            1799948.87500
#                 19         1813354 |*****                             1828342.26316
#                 23         1840652 |******                            1853920.82609
#                 23         1867950 |******                            1882890.95652
#                 11         1895248 |**                                1912199.36364
#                 26         1922546 |******                            1935691.03846
#                 14         1949844 |***                               1964196.85714
#                 10         1977142 |**                                1990189.00000
#
#                 54           > 95% |**************                    2119174.83333
#
#        mean of 95%   1521109.25223
#          95th %ile         2004419
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.6% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smp4k   1   1         1674112         1040        0        1 mp sock
# bin/../bin-riscv64/pipe -N pipe_smp4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1115103                    1115103
#                        max   5262972                    2533426
#                       mean   1789475.26116              1773613.93269
#                     median   1683112                    1674112*
#                     stddev    306479.69447               261193.19888
#             standard error      9444.68593                 8099.25727
#       99% confidence level     24329.51094                20863.68674
#                       skew         2.32817                    0.59320
#                   kurtosis        17.29767                   -0.58526
#           time correlation       900.58498                  841.84311
#
#               elapsed time        20.01731
#                   run time         1.88782
#          getnsecs overhead      1416
#
#          number of samples      1053
#         number of outliers        13
#    number of final samples      1040
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1115103 |*                                 1115103.00000
#                  0         1150551 |                                              -
#                  0         1185999 |                                              -
#                  0         1221447 |                                              -
#                  0         1256895 |                                              -
#                  5         1292343 |*                                 1313085.80000
#                  6         1327791 |*                                 1347590.16667
#                 11         1363239 |**                                1380761.90909
#                 16         1398687 |***                               1418057.81250
#                 26         1434135 |******                            1453197.15385
#                 40         1469583 |*********                         1489089.07500
#                 64         1505031 |***************                   1524106.62500
#                126         1540479 |******************************    1559976.20635
#                133         1575927 |********************************  1592606.32331
#                 59         1611375 |**************                    1627970.84746
#                 39         1646823 |*********                         1662401.74359
#                 21         1682271 |*****                             1700588.71429
#                 22         1717719 |*****                             1732858.81818
#                 22         1753167 |*****                             1768509.18182
#                 28         1788615 |******                            1804167.92857
#                 34         1824063 |********                          1843818.02941
#                 39         1859511 |*********                         1879533.53846
#                 41         1894959 |*********                         1918150.53659
#                 37         1930407 |********                          1946216.81081
#                 36         1965855 |********                          1981320.19444
#                 32         2001303 |*******                           2015618.37500
#                 31         2036751 |*******                           2055444.51613
#                 31         2072199 |*******                           2088932.29032
#                 33         2107647 |*******                           2123910.72727
#                 19         2143095 |****                              2160752.10526
#                 23         2178543 |*****                             2198277.56522
#                 13         2213991 |***                               2228052.38462
#
#                 52           > 95% |************                      2344069.73077
#
#        mean of 95%   1743589.94332
#          95th %ile         2249422
#
# WARNINGS
#     Actual benchmark run time only accounts for 9.4% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smt1   1   1         1322106         2360        0        1 mt sock
# bin/../bin-riscv64/pipe -N pipe_smt1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    852697                     852697
#                        max   3824647                    2122619
#                       mean   1447451.79268              1420060.51737
#                     median   1327906                    1322106*
#                     stddev    287801.94779               238314.35637
#             standard error      5837.15532                 4905.62339
#       99% confidence level     15036.51210                12636.88586
#                       skew         1.58010                    0.78706
#                   kurtosis         4.72507                   -0.21497
#           time correlation       369.12891                  331.41561
#
#               elapsed time        20.00985
#                   run time         3.52400
#          getnsecs overhead      1416
#
#          number of samples      2431
#         number of outliers        71
#    number of final samples      2360
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          852697 |*                                  861958.00000
#                  5          884748 |*                                  895658.40000
#                  1          916799 |*                                  943500.00000
#                  3          948850 |*                                  964032.66667
#                  4          980901 |*                                 1002225.50000
#                  5         1012952 |*                                 1027421.00000
#                  9         1045003 |*                                 1059145.44444
#                 26         1077054 |**                                1094078.92308
#                 41         1109105 |****                              1125265.70732
#                 78         1141156 |********                          1161885.01282
#                145         1173207 |****************                  1189604.00000
#                177         1205258 |********************              1221529.37288
#                268         1237309 |******************************    1253325.64925
#                278         1269360 |********************************  1285180.07194
#                194         1301411 |**********************            1315829.13918
#                124         1333462 |**************                    1349443.12903
#                 67         1365513 |*******                           1379798.94030
#                 51         1397564 |*****                             1414312.88235
#                 47         1429615 |*****                             1444513.87234
#                 45         1461666 |*****                             1475036.80000
#                 41         1493717 |****                              1511972.04878
#                 54         1525768 |******                            1541677.59259
#                 65         1557819 |*******                           1575895.73846
#                 67         1589870 |*******                           1605674.28358
#                 79         1621921 |*********                         1638813.05063
#                 73         1653972 |********                          1669924.82192
#                 67         1686023 |*******                           1701195.11940
#                 68         1718074 |*******                           1734931.30882
#                 59         1750125 |******                            1768963.67797
#                 37         1782176 |****                              1796790.54054
#                 29         1814227 |***                               1829758.48276
#                 30         1846278 |***                               1859987.80000
#
#                118           > 95% |*************                     1976410.28814
#
#        mean of 95%   1390778.95049
#          95th %ile         1878315
#
# WARNINGS
#     Actual benchmark run time only accounts for 17.6% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_smt4k   1   1         1557108         2579        0        1 mt sock
# bin/../bin-riscv64/pipe -N pipe_smt4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    958299                     958299
#                        max   3689941                    2481623
#                       mean   1657565.95300              1641339.61264
#                     median   1564009                    1557108*
#                     stddev    312419.79913               281402.78941
#             standard error      6107.12329                 5541.18598
#       99% confidence level     15731.94959                14274.09509
#                       skew         1.24041                    0.71107
#                   kurtosis         2.86186                   -0.15551
#           time correlation       383.66638                  362.48851
#
#               elapsed time        20.01496
#                   run time         4.34270
#          getnsecs overhead      1416
#
#          number of samples      2617
#         number of outliers        38
#    number of final samples      2579
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7          958299 |*                                  970642.00000
#                  8          996713 |*                                 1020137.50000
#                  4         1035127 |*                                 1053850.50000
#                  0         1073541 |                                              -
#                  2         1111955 |*                                 1135156.00000
#                  7         1150369 |*                                 1170745.14286
#                 12         1188783 |*                                 1208527.83333
#                 26         1227197 |***                               1242795.80769
#                 39         1265611 |****                              1287804.15385
#                 89         1304025 |**********                        1325692.42697
#                163         1342439 |*******************               1362202.90798
#                251         1380853 |*****************************     1399425.11952
#                272         1419267 |********************************  1438601.40074
#                210         1457681 |************************          1475022.84286
#                127         1496095 |**************                    1514782.64567
#                125         1534509 |**************                    1554187.58400
#                100         1572923 |***********                       1591895.92000
#                 83         1611337 |*********                         1630679.43373
#                 72         1649751 |********                          1668447.61111
#                 86         1688165 |**********                        1708964.29070
#                 82         1726579 |*********                         1744713.84146
#                104         1764993 |************                      1786896.68269
#                 85         1803407 |**********                        1824268.00000
#                 73         1841821 |********                          1861391.27397
#                 70         1880235 |********                          1898346.74286
#                 72         1918649 |********                          1940764.48611
#                 77         1957063 |*********                         1975772.20779
#                 54         1995477 |******                            2014126.61111
#                 51         2033891 |******                            2053782.88235
#                 29         2072305 |***                               2088420.24138
#                 43         2110719 |*****                             2131236.06977
#                 27         2149133 |***                               2167769.77778
#
#                129           > 95% |***************                   2301336.33333
#
#        mean of 95%   1606588.76490
#          95th %ile         2187518
#
# WARNINGS
#     Actual benchmark run time only accounts for 21.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_sst1   1   1          294897         6739        0        2 st sock
# bin/../bin-riscv64/pipe -N pipe_sst1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x sock -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    282247                     282247
#                        max   2447729                     329197
#                       mean    333016.91943               299082.25197
#                     median    298897                     294897*
#                     stddev    116717.03214                10260.21870
#             standard error      1266.71931                  124.98529
#       99% confidence level      3263.06894                  321.96210
#                       skew         7.93770                    1.00321
#                   kurtosis        89.94447                   -0.09896
#           time correlation        23.73933                    4.90940
#
#               elapsed time        20.00833
#                   run time         6.24678
#          getnsecs overhead      1416
#
#          number of samples      8490
#         number of outliers      1751
#    number of final samples      6739
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          282247 |*                                  282763.33333
#                  5          283404 |*                                  284017.60000
#                 15          284561 |*                                  285349.00000
#                 61          285718 |**                                 286342.27869
#                166          286875 |*******                            287530.12048
#                315          288032 |*************                      288652.66032
#                513          289189 |*********************              289799.15984
#                751          290346 |********************************   290949.33023
#                617          291503 |**************************         292073.39060
#                506          292660 |*********************              293215.73123
#                448          293817 |*******************                294355.05580
#                341          294974 |**************                     295546.89150
#                240          296131 |**********                         296685.25417
#                202          297288 |********                           297860.30693
#                175          298445 |*******                            299038.21143
#                178          299602 |*******                            300193.49438
#                148          300759 |******                             301342.33784
#                179          301916 |*******                            302478.99441
#                117          303073 |****                               303584.94872
#                107          304230 |****                               304773.65421
#                103          305387 |****                               305973.84466
#                 66          306544 |**                                 307098.27273
#                 69          307701 |**                                 308266.39130
#                 70          308858 |**                                 309484.85714
#                 77          310015 |***                                310628.36364
#                112          311172 |****                               311814.55357
#                175          312329 |*******                            312902.19429
#                197          313486 |********                           314059.45685
#                157          314643 |******                             315229.77707
#                125          315800 |*****                              316397.20000
#                101          316957 |****                               317508.53465
#                 63          318114 |**                                 318624.11111
#
#                337           > 95% |**************                     323633.75371
#
#        mean of 95%    297789.86582
#          95th %ile          319266
#
# WARNINGS
#     Actual benchmark run time only accounts for 31.2% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_sst4k   1   1          351498         5749        0        2 st sock
# bin/../bin-riscv64/pipe -N pipe_sst4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x sock -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    336747                     336747
#                        max   2837684                     374298
#                       mean    397813.60731               353202.62602
#                     median    355748                     351498*
#                     stddev    137040.61629                 7059.30180
#             standard error      1565.79506                   93.10341
#       99% confidence level      4033.48807                  239.83439
#                       skew         6.73361                    0.69205
#                   kurtosis        63.88945                   -0.21423
#           time correlation        32.07817                    4.11842
#
#               elapsed time        20.00886
#                   run time         6.10535
#          getnsecs overhead      1416
#
#          number of samples      7660
#         number of outliers      1911
#    number of final samples      5749
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          336747 |*                                  337147.00000
#                  3          337691 |*                                  338363.66667
#                  8          338635 |*                                  339228.37500
#                  8          339579 |*                                  339840.87500
#                 18          340523 |*                                  341041.44444
#                 25          341467 |*                                  341915.08000
#                 73          342411 |*****                              343001.24658
#                140          343355 |**********                         343869.34286
#                210          344299 |****************                   344814.05714
#                355          345243 |***************************        345727.71268
#                419          346187 |********************************   346655.95704
#                398          347131 |******************************     347593.08543
#                359          348075 |***************************        348535.73538
#                377          349019 |****************************       349492.39788
#                325          349963 |************************           350446.55385
#                245          350907 |******************                 351396.70204
#                194          351851 |**************                     352318.49485
#                210          352795 |****************                   353233.56190
#                202          353739 |***************                    354214.78218
#                235          354683 |*****************                  355163.42979
#                211          355627 |****************                   356114.25592
#                206          356571 |***************                    357040.49515
#                197          357515 |***************                    358016.05076
#                185          358459 |**************                     358968.62162
#                158          359403 |************                       359849.43671
#                141          360347 |**********                         360771.39716
#                140          361291 |**********                         361691.27143
#                106          362235 |********                           362688.66981
#                 91          363179 |******                             363638.86813
#                 94          364123 |*******                            364597.20213
#                 63          365067 |****                               365551.77778
#                 63          366011 |****                               366491.38095
#
#                288           > 95% |*********************              369812.09722
#
#        mean of 95%    352326.68248
#          95th %ile          366947
#
# WARNINGS
#     Actual benchmark run time only accounts for 30.5% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmp1   1   1         2053013          833        0        1 mp  tcp
# bin/../bin-riscv64/pipe -N pipe_tmp1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1251502                    1251502
#                        max   3840140                    2997828
#                       mean   2095552.11702              2077370.82233
#                     median   2058814                    2053013*
#                     stddev    339333.52644               307059.00891
#             standard error     11666.52696                10638.96409
#       99% confidence level     30052.97344                27405.97150
#                       skew         1.01713                    0.57340
#                   kurtosis         1.71142                   -0.18441
#           time correlation      1311.91364                 1241.04939
#
#               elapsed time        20.02334
#                   run time         1.77642
#          getnsecs overhead      1416
#
#          number of samples       846
#         number of outliers        13
#    number of final samples       833
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1251502 |*                                 1251502.00000
#                  0         1295209 |                                              -
#                  0         1338916 |                                              -
#                  2         1382623 |*                                 1412654.00000
#                  1         1426330 |*                                 1458905.00000
#                  3         1470037 |*                                 1510672.33333
#                  2         1513744 |*                                 1525356.00000
#                  4         1557451 |*                                 1578157.00000
#                  8         1601158 |***                               1620007.12500
#                 25         1644865 |***********                       1670467.88000
#                 31         1688572 |**************                    1711240.67742
#                 57         1732279 |**************************        1759337.21053
#                 68         1775986 |********************************  1798365.52941
#                 67         1819693 |*******************************   1839175.89552
#                 54         1863400 |*************************         1882892.42593
#                 31         1907107 |**************                    1929376.03226
#                 27         1950814 |************                      1973467.62963
#                 28         1994521 |*************                     2018037.96429
#                 37         2038228 |*****************                 2063153.91892
#                 40         2081935 |******************                2103206.45000
#                 39         2125642 |******************                2148109.48718
#                 42         2169349 |*******************               2190210.69048
#                 34         2213056 |****************                  2233483.64706
#                 43         2256763 |********************              2281130.62791
#                 31         2300470 |**************                    2321571.96774
#                 24         2344177 |***********                       2370217.87500
#                 22         2387884 |**********                        2408359.72727
#                 15         2431591 |*******                           2451032.26667
#                 16         2475298 |*******                           2496113.25000
#                 18         2519005 |********                          2537903.61111
#                 15         2562712 |*******                           2582560.80000
#                  6         2606419 |**                                2634004.66667
#
#                 42           > 95% |*******************               2789385.73810
#
#        mean of 95%   2039564.72061
#          95th %ile         2650123
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmp4k   1   1         2099214          823        0        1 mp  tcp
# bin/../bin-riscv64/pipe -N pipe_tmp4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m mp 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1425904                    1425904
#                        max   4230742                    2971526
#                       mean   2130925.85646              2111431.25030
#                     median   2109213                    2099214*
#                     stddev    328067.06068               287051.26323
#             standard error     11346.43655                10005.97803
#       99% confidence level     29228.42055                25775.39940
#                       skew         1.39577                    0.64169
#                   kurtosis         4.04847                   -0.12382
#           time correlation      1253.54607                 1169.14137
#
#               elapsed time        20.02786
#                   run time         1.78470
#          getnsecs overhead      1416
#
#          number of samples       836
#         number of outliers        13
#    number of final samples       823
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1425904 |*                                 1425904.00000
#                  1         1464180 |*                                 1501105.00000
#                  0         1502456 |                                              -
#                  0         1540732 |                                              -
#                  2         1579008 |*                                 1616456.50000
#                  1         1617284 |*                                 1622607.00000
#                 10         1655560 |***                               1677217.40000
#                 14         1693836 |****                              1711272.14286
#                 25         1732112 |********                          1755000.40000
#                 48         1770388 |****************                  1791275.60417
#                 61         1808664 |*********************             1830112.67213
#                 91         1846940 |********************************  1865338.40659
#                 55         1885216 |*******************               1903792.27273
#                 20         1923492 |*******                           1939965.75000
#                 25         1961768 |********                          1977739.56000
#                 16         2000044 |*****                             2017393.25000
#                 20         2038320 |*******                           2061360.45000
#                 36         2076596 |************                      2096840.97222
#                 32         2114872 |***********                       2134238.62500
#                 47         2153148 |****************                  2169180.14894
#                 51         2191424 |*****************                 2211634.27451
#                 42         2229700 |**************                    2247717.54762
#                 37         2267976 |*************                     2289777.91892
#                 27         2306252 |*********                         2323368.00000
#                 24         2344528 |********                          2360079.41667
#                 29         2382804 |**********                        2399737.93103
#                 10         2421080 |***                               2440927.70000
#                  4         2459356 |*                                 2484418.75000
#                 13         2497632 |****                              2514888.30769
#                 20         2535908 |*******                           2554394.35000
#                  9         2574184 |***                               2598897.88889
#                 10         2612460 |***                               2631260.60000
#
#                 42           > 95% |**************                    2786920.40476
#
#        mean of 95%   2075105.32907
#          95th %ile         2650721
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.9% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmt1   1   1         1926111         1606        0        1 mt  tcp
# bin/../bin-riscv64/pipe -N pipe_tmt1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1150299                    1192600
#                        max   4263341                    2802722
#                       mean   1991901.65172              1978631.23288
#                     median   1929510                    1926111*
#                     stddev    301544.54988               274889.76017
#             standard error      7473.50420                 6859.39467
#       99% confidence level     19251.74683                17669.80068
#                       skew         1.00990                    0.50037
#                   kurtosis         2.52825                   -0.47826
#           time correlation       607.55871                  578.60911
#
#               elapsed time        20.02115
#                   run time         3.24731
#          getnsecs overhead      1416
#
#          number of samples      1628
#         number of outliers        22
#    number of final samples      1606
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1192600 |*                                 1192600.00000
#                  0         1232467 |                                              -
#                  0         1272334 |                                              -
#                  1         1312201 |*                                 1315302.00000
#                  0         1352068 |                                              -
#                  3         1391935 |*                                 1417636.33333
#                  7         1431802 |*                                 1448418.28571
#                  9         1471669 |*                                 1498626.55556
#                 14         1511536 |**                                1532533.35714
#                 24         1551403 |****                              1571984.45833
#                 30         1591270 |*****                             1615595.80000
#                 65         1631137 |***********                       1652312.44615
#                 70         1671004 |************                      1691636.97143
#                127         1710871 |**********************            1732552.36220
#                179         1750738 |********************************  1770193.43575
#                133         1790605 |***********************           1809237.08271
#                 74         1830472 |*************                     1847668.52703
#                 43         1870339 |*******                           1888437.46512
#                 62         1910206 |***********                       1930210.12903
#                 51         1950073 |*********                         1969095.05882
#                 56         1989940 |**********                        2008675.50000
#                 67         2029807 |***********                       2049287.86567
#                 63         2069674 |***********                       2089467.90476
#                 66         2109541 |***********                       2129076.43939
#                 63         2149408 |***********                       2169707.12698
#                 61         2189275 |**********                        2207661.39344
#                 63         2229142 |***********                       2249044.74603
#                 55         2269009 |*********                         2286564.07273
#                 43         2308876 |*******                           2328478.30233
#                 35         2348743 |******                            2364221.85714
#                 36         2388610 |******                            2409363.75000
#                 24         2428477 |****                              2445050.45833
#
#                 81           > 95% |**************                    2583086.90123
#
#        mean of 95%   1946525.71869
#          95th %ile         2468318
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.2% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tmt4k   1   1         1975710         1579        0        1 mt  tcp
# bin/../bin-riscv64/pipe -N pipe_tmt4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m mt 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1451904                    1451904
#                        max   4087537                    2833421
#                       mean   2033981.95943              2017898.48955
#                     median   1989310                    1975710*
#                     stddev    310042.81289               278881.44427
#             standard error      7746.23044                 7018.24547
#       99% confidence level     19954.28961                18079.00033
#                       skew         1.16085                    0.57943
#                   kurtosis         2.78730                   -0.42957
#           time correlation       630.31991                  596.12893
#
#               elapsed time        20.01234
#                   run time         3.26277
#          getnsecs overhead      1416
#
#          number of samples      1602
#         number of outliers        23
#    number of final samples      1579
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1451904 |*                                 1451904.00000
#                  3         1485355 |*                                 1486804.00000
#                  7         1518806 |*                                 1541204.42857
#                 13         1552257 |***                               1570297.15385
#                 18         1585708 |****                              1605033.05556
#                 29         1619159 |******                            1637009.03448
#                 48         1652610 |***********                       1673245.68750
#                 60         1686061 |**************                    1704391.46667
#                 81         1719512 |******************                1736185.95062
#                115         1752963 |**************************        1769663.91304
#                137         1786414 |********************************  1802080.70073
#                113         1819865 |**************************        1835263.93805
#                 72         1853316 |****************                  1868394.87500
#                 33         1886767 |*******                           1902127.30303
#                 40         1920218 |*********                         1937717.07500
#                 29         1953669 |******                            1971623.75862
#                 55         1987120 |************                      2005079.63636
#                 44         2020571 |**********                        2037331.43182
#                 62         2054022 |**************                    2072571.17742
#                 58         2087473 |*************                     2104520.36207
#                 61         2120924 |**************                    2137944.95082
#                 58         2154375 |*************                     2172552.34483
#                 60         2187826 |**************                    2203253.13333
#                 45         2221277 |**********                        2238155.64444
#                 50         2254728 |***********                       2272039.96000
#                 51         2288179 |***********                       2303228.17647
#                 29         2321630 |******                            2335483.79310
#                 30         2355081 |*******                           2371195.50000
#                 18         2388532 |****                              2402104.72222
#                 25         2421983 |*****                             2437404.20000
#                 32         2455434 |*******                           2473891.65625
#                 23         2488885 |*****                             2507434.52174
#
#                 79           > 95% |******************                2646237.92405
#
#        mean of 95%   1984805.94600
#          95th %ile         2522317
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.3% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
          prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tst1   1   1          796494         2486        0        1 st  tcp
# bin/../bin-riscv64/pipe -N pipe_tst1 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1 -x tcp -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    584192                     584192
#                        max   3098725                    1169999
#                       mean    902883.21393               830666.47586
#                     median    805794                     796494*
#                     stddev    245480.68928               113324.84425
#             standard error      4627.59441                 2272.86986
#       99% confidence level     11920.68319                 5854.91275
#                       skew         2.69344                    1.01212
#                   kurtosis        11.35143                    1.11228
#           time correlation       234.39605                  137.03678
#
#               elapsed time        20.01266
#                   run time         2.54567
#          getnsecs overhead      1416
#
#          number of samples      2814
#         number of outliers       328
#    number of final samples      2486
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 27          584192 |*                                  594117.62963
#                 47          599877 |**                                 608645.08511
#                 31          615562 |*                                  623321.03226
#                 19          631247 |*                                  637771.26316
#                 15          646932 |*                                  653585.73333
#                  6          662617 |*                                  667725.66667
#                  8          678302 |*                                  683168.00000
#                  1          693987 |*                                  702793.00000
#                  2          709672 |*                                  717943.00000
#                  2          725357 |*                                  729393.50000
#                 47          741042 |**                                 752759.72340
#                327          756727 |********************               765764.23547
#                519          772412 |********************************   780025.10790
#                317          788097 |*******************                795210.39432
#                246          803782 |***************                    811010.71545
#                163          819467 |**********                         826714.96319
#                104          835152 |******                             843078.55769
#                 84          850837 |*****                              858255.84524
#                 38          866522 |**                                 874103.21053
#                 35          882207 |**                                 890206.80000
#                 28          897892 |*                                  904927.75000
#                 16          913577 |*                                  920683.37500
#                 16          929262 |*                                  935908.50000
#                 15          944947 |*                                  954789.53333
#                 13          960632 |*                                  969939.38462
#                 24          976317 |*                                  984305.08333
#                 29          992002 |*                                  999755.48276
#                 29         1007687 |*                                 1015593.58621
#                 43         1023372 |**                                1031094.86047
#                 41         1039057 |**                                1047190.14634
#                 37         1054742 |**                                1062846.43243
#                 32         1070427 |*                                 1078035.46875
#
#                125           > 95% |*******                           1118633.59200
#
#        mean of 95%    815420.44049
#          95th %ile         1086098
#
# WARNINGS
#     Actual benchmark run time only accounts for 12.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
           prc thr      nsecs/call      samples   errors cnt/samp md xprt
pipe_tst4k   1   1          840495         2456        0        1 st  tcp
# bin/../bin-riscv64/pipe -N pipe_tst4k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 4k -x tcp -m st 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    607692                     607692
#                        max   4153237                    1491003
#                       mean    973696.71440               924872.09487
#                     median    847495                     840495*
#                     stddev    287668.66426               189304.99706
#             standard error      5636.22981                 3819.86397
#       99% confidence level     14518.92800                 9839.96957
#                       skew         2.88409                    1.20200
#                   kurtosis        16.37617                    0.68780
#           time correlation       307.08721                  238.38833
#
#               elapsed time        20.01191
#                   run time         2.54120
#          getnsecs overhead      1416
#
#          number of samples      2605
#         number of outliers       149
#    number of final samples      2456
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 49          607692 |***                                620761.22449
#                 25          631318 |*                                  643196.28000
#                 14          654944 |*                                  665392.42857
#                  6          678570 |*                                  688759.33333
#                  3          702196 |*                                  710559.66667
#                  3          725822 |*                                  736527.00000
#                 19          749448 |*                                  769304.15789
#                403          773074 |****************************       787137.37965
#                451          796700 |********************************   808074.70510
#                293          820326 |********************               831102.40614
#                177          843952 |************                       854386.88136
#                115          867578 |********                           878008.99130
#                 72          891204 |*****                              901685.70833
#                 46          914830 |***                                926684.95652
#                 33          938456 |**                                 947162.66667
#                 20          962082 |*                                  974326.30000
#                 61          985708 |****                               999573.73770
#                 47         1009334 |***                               1020603.42553
#                 67         1032960 |****                              1045504.71642
#                 67         1056586 |****                              1067758.74627
#                 60         1080212 |****                              1091211.18333
#                 40         1103838 |**                                1115610.60000
#                 49         1127464 |***                               1139651.44898
#                 25         1151090 |*                                 1163994.80000
#                 34         1174716 |**                                1188543.08824
#                 27         1198342 |*                                 1210092.00000
#                 28         1221968 |*                                 1231631.75000
#                 19         1245594 |*                                 1255868.31579
#                 22         1269220 |*                                 1282772.90909
#                 17         1292846 |*                                 1303112.23529
#                 22         1316472 |*                                 1329237.13636
#                 19         1340098 |*                                 1352148.42105
#
#                123           > 95% |********                          1419619.84553
#
#        mean of 95%    898788.09430
#          95th %ile         1363701
#
# WARNINGS
#     Actual benchmark run time only accounts for 12.7% of elapsed time.
#
# Usage: pipe
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pipe')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-m mode (st|mt|mp, default st)]
#     [-s buffer-size (default 1024)]
#     [-x transport (pipe|fifo|sock|tcp, default pipe)]
# notes: measures write()/read() across various transports
        prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_10   1   1          212131         3936        0        3       10   ---
# bin/../bin-riscv64/poll -N poll_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    206499                     206499
#                        max    684551                     280975
#                       mean    227224.92059               222118.62297
#                     median    212474                     212131*
#                     stddev     32156.86876                19650.69410
#             standard error       499.59293                  313.22062
#       99% confidence level      1286.95140                  806.85633
#                       skew         4.00031                    1.36896
#                   kurtosis        32.15617                    0.29120
#           time correlation        19.33644                   14.25322
#
#               elapsed time        20.01369
#                   run time         3.64216
#          getnsecs overhead      1416
#
#          number of samples      4143
#         number of outliers       207
#    number of final samples      3936
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                208          206499 |******                             207769.07212
#               1050          208278 |********************************   209079.51810
#                620          210057 |******************                 210953.25484
#                448          211836 |*************                      212623.48661
#                295          213615 |********                           214431.13559
#                183          215394 |*****                              216176.31148
#                 81          217173 |**                                 217927.07407
#                 35          218952 |*                                  219714.71429
#                 25          220731 |*                                  221591.60000
#                 17          222510 |*                                  223610.11765
#                  9          224289 |*                                  225026.77778
#                 13          226068 |*                                  226887.46154
#                  4          227847 |*                                  229149.00000
#                  6          229626 |*                                  230549.00000
#                  9          231405 |*                                  232154.55556
#                 48          233184 |*                                  234470.04167
#                 26          234963 |*                                  235575.53846
#                  9          236742 |*                                  237955.22222
#                 12          238521 |*                                  239637.50000
#                 12          240300 |*                                  241060.00000
#                  5          242079 |*                                  242666.60000
#                  4          243858 |*                                  244769.50000
#                 11          245637 |*                                  246888.27273
#                 47          247416 |*                                  248388.68085
#                 67          249195 |**                                 250027.23881
#                102          250974 |***                                251815.91176
#                 95          252753 |**                                 253617.42105
#                 66          254532 |**                                 255419.07576
#                 89          256311 |**                                 257213.32584
#                 53          258090 |*                                  258900.41509
#                 49          259869 |*                                  260699.65306
#                 41          261648 |*                                  262490.85366
#
#                197           > 95% |******                             269989.33503
#
#        mean of 95%    219596.41642
#          95th %ile          263424
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 18.2% of elapsed time.
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
         prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_100   1   1         1493302        11251        0        1      100   ---
# bin/../bin-riscv64/poll -N poll_100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1420401                    1420401
#                        max   3185623                    1847206
#                       mean   1567106.87982              1552130.90383
#                     median   1494102                    1493302*
#                     stddev    149672.41168                98626.19962
#             standard error      1396.24890                  929.81540
#       99% confidence level      3596.73717                 2395.20448
#                       skew         3.79058                    0.67957
#                   kurtosis        24.06595                   -0.94533
#           time correlation        34.25502                   28.29114
#
#               elapsed time        20.00712
#                   run time        18.02582
#          getnsecs overhead      1416
#
#          number of samples     11491
#         number of outliers       240
#    number of final samples     11251
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         1420401 |*                                 1422301.00000
#                 19         1429942 |*                                 1437964.84211
#                597         1439483 |*************                     1445496.40369
#                637         1449024 |**************                    1453545.02512
#                619         1458565 |*************                     1463073.21648
#               1449         1468106 |********************************  1473851.69427
#               1372         1477647 |******************************    1481741.23615
#               1385         1487188 |******************************    1491778.54296
#                514         1496729 |***********                       1500443.67121
#                124         1506270 |**                                1510682.21774
#                 47         1515811 |*                                 1520117.31915
#                 27         1525352 |*                                 1530287.85185
#                 19         1534893 |*                                 1538792.36842
#                 17         1544434 |*                                 1548655.70588
#                 14         1553975 |*                                 1557953.00000
#                  8         1563516 |*                                 1566840.50000
#                  5         1573057 |*                                 1576443.00000
#                  8         1582598 |*                                 1588478.12500
#                 44         1592139 |*                                 1597939.79545
#                117         1601680 |**                                1606824.10256
#                224         1611221 |****                              1616500.09821
#                331         1620762 |*******                           1625899.58308
#                490         1630303 |**********                        1635249.20000
#                647         1639844 |**************                    1644638.94127
#                533         1649385 |***********                       1653689.67167
#                373         1658926 |********                          1663080.90349
#                255         1668467 |*****                             1672947.86275
#                224         1678008 |****                              1683091.11161
#                200         1687549 |****                              1692486.58000
#                168         1697090 |***                               1701674.92262
#                125         1706631 |**                                1711280.82400
#                 94         1716172 |**                                1720680.50000
#
#                563           > 95% |************                      1762939.06572
#
#        mean of 95%   1541026.39455
#          95th %ile         1725705
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
          prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_1000   1   1        14426156         1265        0        1     1000   ---
# bin/../bin-riscv64/poll -N poll_1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  14093253                   14093253
#                        max  23537564                   15057965
#                       mean  14617787.60308             14461089.90988
#                     median  14446556                   14426156*
#                     stddev    815132.79440               199244.77915
#             standard error     22079.05280                 5601.98172
#       99% confidence level     56875.64002                14430.70492
#                       skew         6.29179                    0.72496
#                   kurtosis        47.01593                    0.11299
#           time correlation      1083.70219                  525.61239
#
#               elapsed time        20.02152
#                   run time        19.94263
#          getnsecs overhead      1416
#
#          number of samples      1363
#         number of outliers        98
#    number of final samples      1265
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        14093253 |*                                14106686.00000
#                 14        14117019 |*****                            14134303.28571
#                 18        14140785 |******                           14155658.61111
#                 29        14164551 |**********                       14178277.44828
#                 49        14188317 |******************               14199884.28571
#                 37        14212083 |*************                    14222764.40541
#                 43        14235849 |****************                 14248124.02326
#                 45        14259615 |****************                 14271392.42222
#                 40        14283381 |**************                   14295575.02500
#                 61        14307147 |**********************           14319500.91803
#                 74        14330913 |***************************      14342641.72973
#                 86        14354679 |******************************** 14366219.51163
#                 61        14378445 |**********************           14389831.09836
#                 70        14402211 |**************************       14414470.55714
#                 63        14425977 |***********************          14438518.34921
#                 66        14449743 |************************         14461053.57576
#                 43        14473509 |****************                 14484498.86047
#                 50        14497275 |******************               14508051.24000
#                 49        14521041 |******************               14531437.10204
#                 32        14544807 |***********                      14556226.59375
#                 34        14568573 |************                     14580031.58824
#                 36        14592339 |*************                    14602122.11111
#                 34        14616105 |************                     14626881.97059
#                 28        14639871 |**********                       14649741.10714
#                 22        14663637 |********                         14674668.50000
#                 22        14687403 |********                         14698723.13636
#                 16        14711169 |*****                            14722497.37500
#                 22        14734935 |********                         14747214.77273
#                 16        14758701 |*****                            14772310.37500
#                 10        14782467 |***                              14791020.10000
#                 15        14806233 |*****                            14817987.86667
#                 13        14829999 |****                             14841107.69231
#
#                 64           > 95% |***********************          14945493.76562
#
#        mean of 95%  14435276.54871
#          95th %ile        14853761
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
         prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w10   1   1          195924        17728        0        3       10   -w-
# bin/../bin-riscv64/poll -N poll_w10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 10 -w 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    187698                     187698
#                        max    629429                     261874
#                       mean    207752.32804               205474.29755
#                     median    196098                     195924*
#                     stddev     24013.36176                18800.13243
#             standard error       177.94511                  141.19881
#       99% confidence level       458.38661                  363.72813
#                       skew         2.78806                    1.54708
#                   kurtosis        15.54200                    0.80496
#           time correlation         3.43623                    2.92835
#
#               elapsed time        20.00738
#                   run time        15.12116
#          getnsecs overhead      1416
#
#          number of samples     18211
#         number of outliers       483
#    number of final samples     17728
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 24          187698 |*                                  189056.33333
#                574          189568 |****                               190803.58537
#               1464          191438 |***********                        192393.00751
#               4255          193308 |********************************   194624.53514
#               3392          195178 |*************************          195711.94192
#               1344          197048 |**********                         198086.76711
#               1779          198918 |*************                      199652.42777
#                497          200788 |***                                201615.40845
#                225          202658 |*                                  203596.24000
#                257          204528 |*                                  205304.78210
#                113          206398 |*                                  207322.19469
#                 96          208268 |*                                  209285.25000
#                 76          210138 |*                                  211055.59211
#                 49          212008 |*                                  212952.48980
#                 45          213878 |*                                  214725.44444
#                 37          215748 |*                                  216551.37838
#                 29          217618 |*                                  218355.55172
#                 15          219488 |*                                  220170.66667
#                 18          221358 |*                                  222215.50000
#                 14          223228 |*                                  223979.35714
#                  6          225098 |*                                  225803.16667
#                  9          226968 |*                                  227851.77778
#                 27          228838 |*                                  230058.25926
#                 91          230708 |*                                  231830.31868
#                329          232578 |**                                 233676.05167
#                389          234448 |**                                 235321.36504
#                452          236318 |***                                237296.45575
#                339          238188 |**                                 239043.98525
#                267          240058 |**                                 240988.13858
#                220          241928 |*                                  242831.04545
#                245          243798 |*                                  244682.67347
#                164          245668 |*                                  246507.38415
#
#                887           > 95% |******                             253383.49718
#
#        mean of 95%    202950.96402
#          95th %ile          247524
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 75.6% of elapsed time.
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
          prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w100   1   1         1455901        11518        0        1      100   -w-
# bin/../bin-riscv64/poll -N poll_w100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 100 -w 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1402900                    1402900
#                        max   2950919                    1812105
#                       mean   1538853.74585              1520398.43844
#                     median   1456701                    1455901*
#                     stddev    159906.63018                97588.85760
#             standard error      1471.81041                  909.30943
#       99% confidence level      3791.38362                 2342.38110
#                       skew         3.85343                    0.73991
#                   kurtosis        21.95921                   -0.92227
#           time correlation        33.97622                   26.65829
#
#               elapsed time        20.00711
#                   run time        18.18369
#          getnsecs overhead      1416
#
#          number of samples     11804
#         number of outliers       286
#    number of final samples     11518
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1402900 |*                                 1402900.00000
#                  4         1411882 |*                                 1419150.00000
#                 75         1420864 |*                                 1427864.56000
#               2132         1429846 |********************************  1435817.85460
#               1838         1438828 |***************************       1442471.13058
#               1865         1447810 |***************************       1452380.13727
#                766         1456792 |***********                       1460137.61097
#                177         1465774 |**                                1469867.71186
#                139         1474756 |**                                1478493.26619
#                 45         1483738 |*                                 1487610.31111
#                 17         1492720 |*                                 1496707.23529
#                 11         1501702 |*                                 1505310.72727
#                  7         1510684 |*                                 1515987.14286
#                 10         1519666 |*                                 1522412.00000
#                  9         1528648 |*                                 1532490.66667
#                 13         1537630 |*                                 1542324.92308
#                  7         1546612 |*                                 1551044.85714
#                 10         1555594 |*                                 1559722.10000
#                  9         1564576 |*                                 1569724.55556
#                 25         1573558 |*                                 1578466.16000
#                158         1582540 |**                                1588465.78481
#                478         1591522 |*******                           1596303.14644
#                653         1600504 |*********                         1605252.06279
#                583         1609486 |********                          1613712.64494
#                484         1618468 |*******                           1622420.99380
#                286         1627450 |****                              1631707.46154
#                237         1636432 |***                               1640749.03376
#                237         1645414 |***                               1649878.65823
#                212         1654396 |***                               1658843.74057
#                190         1663378 |**                                1667764.34737
#                150         1672360 |**                                1676972.78000
#                114         1681342 |*                                 1685716.63158
#
#                576           > 95% |********                          1730476.26910
#
#        mean of 95%   1509339.68954
#          95th %ile         1690303
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
           prc thr      nsecs/call      samples   errors cnt/samp     nfds flags
poll_w1000   1   1        14237047         1258        0        1     1000   -w-
# bin/../bin-riscv64/poll -N poll_w1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1000 -w 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  13953642                   13953642
#                        max  23187350                   14761853
#                       mean  14454795.44194             14253653.82750
#                     median  14255047                   14237047*
#                     stddev    954171.38917               169657.26993
#             standard error     25704.06326                 4783.34993
#       99% confidence level     66213.66695                12321.90943
#                       skew         5.79565                    0.70350
#                   kurtosis        37.56592                    0.19810
#           time correlation      1180.11065                  450.16635
#
#               elapsed time        20.02060
#                   run time        19.93951
#          getnsecs overhead      1416
#
#          number of samples      1378
#         number of outliers       120
#    number of final samples      1258
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        13953642 |**                               13964593.00000
#                 14        13973646 |*****                            13984657.85714
#                 32        13993650 |*************                    14003946.96875
#                 49        14013654 |********************             14024835.79592
#                 47        14033658 |*******************              14044110.36170
#                 54        14053662 |**********************           14063587.09259
#                 45        14073666 |******************               14083591.48889
#                 39        14093670 |****************                 14104075.89744
#                 45        14113674 |******************               14124816.48889
#                 42        14133678 |*****************                14145676.47619
#                 52        14153682 |*********************            14163303.50000
#                 64        14173686 |**************************       14184014.67188
#                 61        14193690 |*************************        14204354.37705
#                 65        14213694 |***************************      14223261.75385
#                 71        14233698 |*****************************    14243551.15493
#                 76        14253702 |******************************** 14263670.55263
#                 65        14273706 |***************************      14283724.12308
#                 45        14293710 |******************               14302987.53333
#                 52        14313714 |*********************            14323415.05769
#                 41        14333718 |*****************                14343130.78049
#                 26        14353722 |**********                       14363275.00000
#                 30        14373726 |************                     14383255.16667
#                 26        14393730 |**********                       14402256.15385
#                 28        14413734 |***********                      14423416.82143
#                 25        14433738 |**********                       14444505.16000
#                 20        14453742 |********                         14464079.50000
#                 19        14473746 |********                         14483165.31579
#                  6        14493750 |**                               14505316.50000
#                 23        14513754 |*********                        14525006.82609
#                 10        14533758 |****                             14544880.50000
#                  9        14553762 |***                              14563439.22222
#                  8        14573766 |***                              14582563.12500
#
#                 63           > 95% |**************************       14673954.85714
#
#        mean of 95%  14231495.69791
#          95th %ile        14593751
#
# Usage: poll
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'poll')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures poll()
            prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn   1   1        33606462          553        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26684684                   29972124
#                        max  60271676                   37473206
#                       mean  33774396.60611             33742587.08318
#                     median  33593365                   33606462*
#                     stddev   2297544.56030              1261622.40724
#             standard error     94668.67436                53649.64197
#       99% confidence level    243866.50516               138201.47773
#                       skew         3.33967                    0.34123
#                   kurtosis        33.98989                    0.10260
#           time correlation     10436.69329                 7640.94542
#
#               elapsed time        20.02359
#                   run time        19.95423
#          getnsecs overhead      1416
#
#          number of samples       589
#         number of outliers        36
#    number of final samples       553
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        29972124 |*                                29972124.00000
#                  0        30162295 |                                              -
#                  1        30352466 |*                                30506028.00000
#                  2        30542637 |*                                30616979.00000
#                  4        30732808 |***                              30849583.00000
#                  2        30922979 |*                                31046184.50000
#                  2        31113150 |*                                31234836.00000
#                  2        31303321 |*                                31451188.00000
#                  8        31493492 |******                           31601566.12500
#                  5        31683663 |****                             31788282.40000
#                  6        31873834 |****                             31987745.33333
#                 10        32064005 |********                         32181227.00000
#                 25        32254176 |********************             32347656.88000
#                 29        32444347 |***********************          32547120.27586
#                 36        32634518 |****************************     32738928.61111
#                 29        32824689 |***********************          32917969.24138
#                 40        33014860 |******************************** 33101987.42500
#                 40        33205031 |******************************** 33302532.30000
#                 29        33395202 |***********************          33484765.58621
#                 36        33585373 |****************************     33673124.86111
#                 33        33775544 |**************************       33882993.78788
#                 25        33965715 |********************             34042115.56000
#                 32        34155886 |*************************        34257611.43750
#                 25        34346057 |********************             34436656.32000
#                 19        34536228 |***************                  34608342.84211
#                 15        34726399 |************                     34809823.13333
#                 14        34916570 |***********                      35011349.71429
#                  8        35106741 |******                           35194355.75000
#                 13        35296912 |**********                       35405491.46154
#                 17        35487083 |*************                    35580590.64706
#                  7        35677254 |*****                            35756359.57143
#                 10        35867425 |********                         35957239.60000
#
#                 28           > 95% |**********************           36555413.46429
#
#        mean of 95%  33592569.67619
#          95th %ile        36057589
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_100r   1   1        33866362          520        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_100r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  27090485                   30145620
#                        max  62231089                   37867407
#                       mean  33826228.27562             34014690.55192
#                     median  33802060                   33866362*
#                     stddev   2388513.83319              1294782.98230
#             standard error    100396.72481                56779.98989
#       99% confidence level    258621.96311               146265.25397
#                       skew         2.91278                    0.37278
#                   kurtosis        37.37602                    0.22612
#           time correlation     11567.26412                 8314.72268
#
#               elapsed time        20.07202
#                   run time        19.20868
#          getnsecs overhead      1416
#
#          number of samples       566
#         number of outliers        46
#    number of final samples       520
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        30145620 |*                                30145620.00000
#                  1        30344767 |*                                30538826.00000
#                  1        30543914 |*                                30661724.00000
#                  0        30743061 |                                              -
#                  3        30942208 |**                               30977529.33333
#                  1        31141355 |*                                31298833.00000
#                  6        31340502 |****                             31459134.66667
#                  2        31539649 |*                                31671537.50000
#                  5        31738796 |***                              31836639.00000
#                  4        31937943 |***                              32034865.75000
#                  7        32137090 |*****                            32241200.57143
#                 15        32336237 |***********                      32427818.86667
#                 25        32535384 |*******************              32594839.32000
#                 29        32734531 |**********************           32824284.89655
#                 27        32933678 |*********************            33045578.11111
#                 34        33132825 |**************************       33227395.50000
#                 41        33331972 |******************************** 33443610.36585
#                 33        33531119 |*************************        33631762.03030
#                 37        33730266 |****************************     33827180.16216
#                 31        33929413 |************************         34039102.29032
#                 31        34128560 |************************         34230620.54839
#                 27        34327707 |*********************            34421023.11111
#                 24        34526854 |******************               34622328.41667
#                 18        34726001 |**************                   34818605.38889
#                 15        34925148 |***********                      35013881.26667
#                 21        35124295 |****************                 35220329.66667
#                 11        35323442 |********                         35446633.72727
#                 18        35522589 |**************                   35629998.22222
#                 12        35721736 |*********                        35811224.91667
#                  3        35920883 |**                               35976618.66667
#                  7        36120030 |*****                            36198730.71429
#                  4        36319177 |***                              36389139.00000
#
#                 26           > 95% |********************             37040615.80769
#
#        mean of 95%  33855431.32794
#          95th %ile        36518292
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                  prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_1024n   1   1        33783357          534        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_1024n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1024 -p 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26561077                   30148116
#                        max  59005746                   37525099
#                       mean  33800373.04663             33909919.05618
#                     median  33756655                   33783357*
#                     stddev   2316417.76471              1298872.88908
#             standard error     96267.03703                56207.72705
#       99% confidence level    247983.88740               144791.10489
#                       skew         2.20915                    0.14541
#                   kurtosis        26.79223                    0.12333
#           time correlation     11212.66121                 8156.93198
#
#               elapsed time        20.03525
#                   run time        19.63024
#          getnsecs overhead      1416
#
#          number of samples       579
#         number of outliers        45
#    number of final samples       534
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        30148116 |**                               30254751.00000
#                  1        30337034 |*                                30503219.00000
#                  2        30525952 |*                                30630022.50000
#                  4        30714870 |***                              30830074.25000
#                  2        30903788 |*                                30935074.50000
#                  3        31092706 |**                               31207793.66667
#                  1        31281624 |*                                31284829.00000
#                  2        31470542 |*                                31568182.00000
#                  3        31659460 |**                               31740899.66667
#                  6        31848378 |*****                            31954602.50000
#                  8        32037296 |******                           32165239.25000
#                 14        32226214 |************                     32313690.50000
#                 19        32415132 |****************                 32497100.63158
#                 27        32604050 |***********************          32727119.29630
#                 34        32792968 |*****************************    32897494.26471
#                 26        32981886 |**********************           33057871.76923
#                 33        33170804 |****************************     33269648.30303
#                 37        33359722 |******************************** 33458120.62162
#                 31        33548640 |**************************       33636616.12903
#                 31        33737558 |**************************       33816969.74194
#                 33        33926476 |****************************     34020534.87879
#                 28        34115394 |************************         34229832.92857
#                 26        34304312 |**********************           34404009.73077
#                 21        34493230 |******************               34568208.00000
#                 19        34682148 |****************                 34780757.00000
#                 20        34871066 |*****************                34949789.15000
#                 18        35059984 |***************                  35150432.83333
#                  9        35248902 |*******                          35308828.77778
#                  9        35437820 |*******                          35528986.66667
#                 15        35626738 |************                     35712830.86667
#                 15        35815656 |************                     35917200.06667
#                  7        36004574 |******                           36107396.14286
#
#                 27           > 95% |***********************          36690133.11111
#
#        mean of 95%  33761860.31953
#          95th %ile        36193483
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_10r   1   1        33453150          537        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_10r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  25732265                   30340114
#                        max  60383304                   37175191
#                       mean  33461030.68013             33628312.51955
#                     median  33390849                   33453150*
#                     stddev   2449858.02840              1190173.68936
#             standard error    100518.89247                51359.78564
#       99% confidence level    258936.66700               132302.80780
#                       skew         2.29078                    0.45248
#                   kurtosis        27.17484                    0.31158
#           time correlation     11210.93440                 7339.39959
#
#               elapsed time        20.03498
#                   run time        19.93708
#          getnsecs overhead      1416
#
#          number of samples       594
#         number of outliers        57
#    number of final samples       537
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5        30340114 |***                              30424715.60000
#                  2        30515554 |*                                30597418.00000
#                  1        30690994 |*                                30821820.00000
#                  1        30866434 |*                                31025724.00000
#                  1        31041874 |*                                31175826.00000
#                  1        31217314 |*                                31332828.00000
#                  0        31392754 |                                              -
#                  2        31568194 |*                                31658929.50000
#                  4        31743634 |**                               31836656.25000
#                 10        31919074 |*******                          32014103.80000
#                 19        32094514 |**************                   32185998.05263
#                 19        32269954 |**************                   32365895.68421
#                 27        32445394 |********************             32539083.77778
#                 34        32620834 |*************************        32713738.17647
#                 43        32796274 |******************************** 32891257.18605
#                 41        32971714 |******************************   33058271.97561
#                 34        33147154 |*************************        33230332.23529
#                 34        33322594 |*************************        33413657.76471
#                 41        33498034 |******************************   33591121.41463
#                 30        33673474 |**********************           33768899.50000
#                 26        33848914 |*******************              33934489.50000
#                 17        34024354 |************                     34120033.35294
#                 15        34199794 |***********                      34307718.66667
#                 15        34375234 |***********                      34479093.86667
#                 24        34550674 |*****************                34627662.45833
#                  9        34726114 |******                           34800164.44444
#                 10        34901554 |*******                          34992106.00000
#                 10        35076994 |*******                          35155258.20000
#                 12        35252434 |********                         35353445.16667
#                  6        35427874 |****                             35488921.00000
#                  6        35603314 |****                             35672056.50000
#                 11        35778754 |********                         35858338.81818
#
#                 27           > 95% |********************             36339854.74074
#
#        mean of 95%  33484760.28431
#          95th %ile        35954176
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_128n   1   1        34020251          532        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_128n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26497671                   30277112
#                        max  58221075                   37758494
#                       mean  34026335.72432             34055108.56579
#                     median  33979551                   34020251*
#                     stddev   2658429.22711              1284325.74708
#             standard error    110006.58414                55682.58297
#       99% confidence level    283376.96074               143438.33373
#                       skew         2.31252                    0.24251
#                   kurtosis        18.13479                    0.03439
#           time correlation     12348.09089                 8138.09862
#
#               elapsed time        20.04570
#                   run time        19.93043
#          getnsecs overhead      1416
#
#          number of samples       584
#         number of outliers        52
#    number of final samples       532
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        30277112 |*                                30298612.50000
#                  1        30467524 |*                                30509313.00000
#                  2        30657936 |*                                30770667.00000
#                  0        30848348 |                                              -
#                  1        31038760 |*                                31113319.00000
#                  1        31229172 |*                                31410723.00000
#                  2        31419584 |*                                31526274.00000
#                  4        31609996 |***                              31715227.25000
#                  4        31800408 |***                              31933604.75000
#                  5        31990820 |****                             32110911.80000
#                 12        32181232 |**********                       32297033.75000
#                 27        32371644 |************************         32480561.44444
#                 22        32562056 |********************             32649037.40909
#                 31        32752468 |****************************     32846794.61290
#                 25        32942880 |**********************           33039721.92000
#                 26        33133292 |***********************          33215289.88462
#                 33        33323704 |******************************   33430803.60606
#                 12        33514116 |**********                       33594856.50000
#                 35        33704528 |******************************** 33779026.65714
#                 31        33894940 |****************************     33987729.22581
#                 35        34085352 |******************************** 34177490.94286
#                 31        34275764 |****************************     34375136.54839
#                 26        34466176 |***********************          34558103.88462
#                 25        34656588 |**********************           34739383.96000
#                 28        34847000 |*************************        34957804.89286
#                 19        35037412 |*****************                35137785.10526
#                 17        35227824 |***************                  35307630.35294
#                 16        35418236 |**************                   35521187.06250
#                 10        35608648 |*********                        35720800.70000
#                 10        35799060 |*********                        35861351.50000
#                  3        35989472 |**                               36104075.00000
#                  9        36179884 |********                         36274642.88889
#
#                 27           > 95% |************************         36910965.00000
#
#        mean of 95%  33902419.21188
#          95th %ile        36370278
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                  prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_128nt   1   1        61646550            1        0        2 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_128nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 128 -p 2048 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  61646550                   61646550
#                        max  61646550                   61646550
#                       mean  61646550.00000             61646550.00000
#                     median  61646550                   61646550*
#                     stddev             nan                        nan
#             standard error             nan                        nan
#       99% confidence level             nan                        nan
#                       skew             nan                        nan
#                   kurtosis             nan                        nan
#           time correlation             nan                        nan
#
#               elapsed time        26.87388
#                   run time         0.12329
#          getnsecs overhead      1416
#
#          number of samples         1
#         number of outliers         0
#    number of final samples         1
#
# WARNINGS
#     Too few samples, 1 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 0.5% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
               prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_1r   1   1        33783843          557        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_1r -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -r 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  27205272                   30280005
#                        max  62305956                   37391582
#                       mean  33865614.33049             33917079.70197
#                     median  33751341                   33783843*
#                     stddev   2086029.67804              1227930.70880
#             standard error     86099.65916                52029.09395
#       99% confidence level    221792.72200               134026.94601
#                       skew         4.18329                    0.38546
#                   kurtosis        59.44957                    0.25805
#           time correlation      9455.61089                 7347.72056
#
#               elapsed time        20.03594
#                   run time        19.94225
#          getnsecs overhead      1416
#
#          number of samples       587
#         number of outliers        30
#    number of final samples       557
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3        30280005 |**                               30343639.66667
#                  0        30467623 |                                              -
#                  3        30655241 |**                               30728444.00000
#                  1        30842859 |*                                30920313.00000
#                  0        31030477 |                                              -
#                  2        31218095 |*                                31298717.50000
#                  1        31405713 |*                                31425817.00000
#                  3        31593331 |**                               31692754.66667
#                  0        31780949 |                                              -
#                  4        31968567 |***                              32064249.75000
#                 13        32156185 |**********                       32272257.61538
#                 19        32343803 |**************                   32433649.84211
#                 34        32531421 |**************************       32633077.64706
#                 26        32719039 |********************             32797382.57692
#                 37        32906657 |****************************     32991020.70270
#                 38        33094275 |*****************************    33186410.28947
#                 41        33281893 |******************************** 33380001.80488
#                 35        33469511 |***************************      33568246.34286
#                 32        33657129 |************************         33765589.56250
#                 41        33844747 |******************************** 33927080.90244
#                 25        34032365 |*******************              34130594.56000
#                 24        34219983 |******************               34319719.58333
#                 32        34407601 |************************         34489241.00000
#                 21        34595219 |****************                 34688109.76190
#                 14        34782837 |**********                       34880526.07143
#                 18        34970455 |**************                   35062028.55556
#                 16        35158073 |************                     35238571.25000
#                 12        35345691 |*********                        35407568.66667
#                  9        35533309 |*******                          35655174.00000
#                  8        35720927 |******                           35820277.50000
#                 12        35908545 |*********                        35985091.41667
#                  5        36096163 |***                              36168668.00000
#
#                 28           > 95% |*********************            36722663.53571
#
#        mean of 95%  33768579.99055
#          95th %ile        36283769
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_256n   1   1        33867442          554        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_256n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 256 -p 1024 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26398362                   30335504
#                        max  62172750                   37380079
#                       mean  33963525.17295             33979601.10469
#                     median  33829741                   33867442*
#                     stddev   2305171.72632              1259131.94930
#             standard error     95388.68475                53495.39043
#       99% confidence level    245721.25191               137804.12575
#                       skew         3.94231                    0.34095
#                   kurtosis        46.02241                    0.08763
#           time correlation     10205.94834                 7613.71848
#
#               elapsed time        20.04785
#                   run time        19.89770
#          getnsecs overhead      1416
#
#          number of samples       584
#         number of outliers        30
#    number of final samples       554
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2        30335504 |*                                30337304.00000
#                  2        30520191 |*                                30549956.00000
#                  2        30704878 |*                                30799658.50000
#                  2        30889565 |*                                30978211.00000
#                  0        31074252 |                                              -
#                  1        31258939 |*                                31422716.00000
#                  2        31443626 |*                                31532317.50000
#                  1        31628313 |*                                31744619.00000
#                  1        31813000 |*                                31992522.00000
#                  4        31997687 |***                              32087597.00000
#                 13        32182374 |**********                       32265739.92308
#                 24        32367061 |*******************              32470884.87500
#                 20        32551748 |****************                 32658178.25000
#                 40        32736435 |******************************** 32832160.17500
#                 39        32921122 |*******************************  33022268.12821
#                 34        33105809 |***************************      33199295.79412
#                 33        33290496 |**************************       33372999.72727
#                 19        33475183 |***************                  33576954.10526
#                 37        33659870 |*****************************    33753391.35135
#                 32        33844557 |*************************        33946732.62500
#                 29        34029244 |***********************          34133957.75862
#                 38        34213931 |******************************   34303482.86842
#                 19        34398618 |***************                  34482431.73684
#                 27        34583305 |*********************            34653216.25926
#                 16        34767992 |************                     34873202.06250
#                 12        34952679 |*********                        35043337.16667
#                 17        35137366 |*************                    35231849.82353
#                 16        35322053 |************                     35428951.00000
#                 14        35506740 |***********                      35588738.42857
#                 11        35691427 |********                         35769206.90909
#                  7        35876114 |*****                            35965264.14286
#                 12        36060801 |*********                        36155140.66667
#
#                 28           > 95% |**********************           36809401.03571
#
#        mean of 95%  33828965.36692
#          95th %ile        36245467
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_32n   1   1        33929740          528        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_32n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  25977256                   30058000
#                        max  63733662                   37899181
#                       mean  33916762.93003             34048553.79924
#                     median  33863838                   33929740*
#                     stddev   2727875.23502              1344342.98655
#             standard error    112687.48729                58505.01897
#       99% confidence level    290282.96726               150708.92888
#                       skew         2.66849                    0.43280
#                   kurtosis        27.68844                    0.38098
#           time correlation     12676.43735                 8461.79404
#
#               elapsed time        20.01506
#                   run time        19.93979
#          getnsecs overhead      1416
#
#          number of samples       586
#         number of outliers        58
#    number of final samples       528
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        30058000 |*                                30058000.00000
#                  2        30261978 |*                                30402152.50000
#                  2        30465956 |*                                30572104.50000
#                  1        30669934 |*                                30712105.00000
#                  2        30873912 |*                                31019059.50000
#                  0        31077890 |                                              -
#                  0        31281868 |                                              -
#                  1        31485846 |*                                31544915.00000
#                  5        31689824 |***                              31803037.40000
#                  8        31893802 |*****                            32008632.12500
#                  8        32097780 |*****                            32194621.50000
#                 18        32301758 |***********                      32416273.61111
#                 25        32505736 |****************                 32599077.44000
#                 31        32709714 |********************             32810631.06452
#                 29        32913692 |******************               33018554.06897
#                 30        33117670 |*******************              33209965.36667
#                 24        33321648 |***************                  33433330.66667
#                 49        33525626 |******************************** 33608336.28571
#                 30        33729604 |*******************              33840171.96667
#                 38        33933582 |************************         34029890.63158
#                 32        34137560 |********************             34242733.93750
#                 33        34341538 |*********************            34437687.33333
#                 27        34545516 |*****************                34644350.85185
#                 16        34749494 |**********                       34832849.25000
#                 12        34953472 |*******                          35020209.41667
#                 15        35157450 |*********                        35272307.26667
#                 15        35361428 |*********                        35455409.40000
#                 15        35565406 |*********                        35657437.86667
#                 11        35769384 |*******                          35892969.36364
#                  8        35973362 |*****                            36070499.87500
#                  7        36177340 |****                             36240406.42857
#                  6        36381318 |***                              36501233.00000
#
#                 27           > 95% |*****************                37210248.22222
#
#        mean of 95%  33878163.08184
#          95th %ile        36585269
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_32nt   1   1        60738973            1        0        2 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_32nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 32 -p 8192 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  60738973                   60738973
#                        max  60738973                   60738973
#                       mean  60738973.00000             60738973.00000
#                     median  60738973                   60738973*
#                     stddev             nan                        nan
#             standard error             nan                        nan
#       99% confidence level             nan                        nan
#                       skew             nan                        nan
#                   kurtosis             nan                        nan
#           time correlation             nan                        nan
#
#               elapsed time        26.75508
#                   run time         0.12148
#          getnsecs overhead      1416
#
#          number of samples         1
#         number of outliers         0
#    number of final samples         1
#
# WARNINGS
#     Too few samples, 1 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 0.5% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_512n   1   1        33778433          539        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_512n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 512 -p 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  26705260                   30946405
#                        max  62065186                   37082168
#                       mean  33942172.61340             33908501.67347
#                     median  33757534                   33778433*
#                     stddev   2385458.70350              1074827.50035
#             standard error     98880.44454                46296.09783
#       99% confidence level    254716.02514               119258.74801
#                       skew         3.85677                    0.47803
#                   kurtosis        41.51614                    0.10476
#           time correlation     10249.08293                 6672.74329
#
#               elapsed time        20.02566
#                   run time        19.81723
#          getnsecs overhead      1416
#
#          number of samples       582
#         number of outliers        43
#    number of final samples       539
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        30946405 |*                                30946405.00000
#                  3        31103145 |**                               31190607.00000
#                  0        31259885 |                                              -
#                  0        31416625 |                                              -
#                  2        31573365 |*                                31595661.00000
#                  3        31730105 |**                               31757679.33333
#                  2        31886845 |*                                31970315.00000
#                  2        32043585 |*                                32173317.50000
#                  9        32200325 |*******                          32293051.66667
#                 12        32357065 |*********                        32433461.25000
#                 14        32513805 |**********                       32580321.00000
#                 24        32670545 |******************               32741680.95833
#                 24        32827285 |******************               32899107.75000
#                 35        32984025 |***************************      33065431.88571
#                 41        33140765 |******************************** 33211159.41463
#                 37        33297505 |****************************     33379018.35135
#                 36        33454245 |****************************     33538255.97222
#                 24        33610985 |******************               33675924.12500
#                 30        33767725 |***********************          33849654.33333
#                 26        33924465 |********************             33988970.34615
#                 28        34081205 |*********************            34154051.67857
#                 25        34237945 |*******************              34299239.16000
#                 25        34394685 |*******************              34463896.64000
#                 22        34551425 |*****************                34616801.31818
#                 17        34708165 |*************                    34779197.05882
#                 13        34864905 |**********                       34931914.61538
#                 10        35021645 |*******                          35109927.70000
#                 10        35178385 |*******                          35273409.10000
#                 13        35335125 |**********                       35397780.92308
#                 12        35491865 |*********                        35560660.33333
#                  7        35648605 |*****                            35717567.71429
#                  5        35805345 |***                              35916816.00000
#
#                 27           > 95% |*********************            36393864.25926
#
#        mean of 95%  33777437.63086
#          95th %ile        35962057
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_64n   1   1        33744732          550        0        1 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_64n -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  25706148                   29903492
#                        max  59456706                   37763873
#                       mean  33843683.62862             33862330.69091
#                     median  33707231                   33744732*
#                     stddev   2326013.27862              1325716.30729
#             standard error     96004.84241                56528.73328
#       99% confidence level    247308.47404               145618.01693
#                       skew         2.53426                    0.34177
#                   kurtosis        27.72710                    0.35902
#           time correlation     10883.06149                 8017.42888
#
#               elapsed time        20.01623
#                   run time        19.92653
#          getnsecs overhead      1416
#
#          number of samples       587
#         number of outliers        37
#    number of final samples       550
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1        29903492 |*                                29903492.00000
#                  4        30108054 |**                               30226669.75000
#                  1        30312616 |*                                30330996.00000
#                  1        30517178 |*                                30590399.00000
#                  2        30721740 |*                                30833551.50000
#                  1        30926302 |*                                30993203.00000
#                  1        31130864 |*                                31236006.00000
#                  1        31335426 |*                                31536609.00000
#                  6        31539988 |****                             31666043.83333
#                  4        31744550 |**                               31824187.25000
#                 11        31949112 |********                         32051832.54545
#                 17        32153674 |************                     32268127.82353
#                 26        32358236 |*******************              32462295.11538
#                 25        32562798 |******************               32653016.12000
#                 39        32767360 |*****************************    32875596.87179
#                 41        32971922 |******************************   33084212.41463
#                 35        33176484 |**************************       33302872.65714
#                 34        33381046 |*************************        33473396.32353
#                 33        33585608 |************************         33679682.24242
#                 43        33790170 |******************************** 33891126.06977
#                 30        33994732 |**********************           34104452.00000
#                 32        34199294 |***********************          34300377.81250
#                 23        34403856 |*****************                34485421.65217
#                 22        34608418 |****************                 34715859.86364
#                 16        34812980 |***********                      34935218.62500
#                 14        35017542 |**********                       35130138.64286
#                 16        35222104 |***********                      35323641.68750
#                 15        35426666 |***********                      35531909.93333
#                  9        35631228 |******                           35705463.00000
#                  9        35835790 |******                           35915609.22222
#                  4        36040352 |**                               36106255.50000
#                  6        36244914 |****                             36317424.50000
#
#                 28           > 95% |********************             36920899.82143
#
#        mean of 95%  33698269.51149
#          95th %ile        36449460
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
                 prc thr      nsecs/call      samples   errors cnt/samp 
posix_spawn_64nt   1   1        60788864            1        0        2 
# bin/../bin-riscv64/posix_spawn -N posix_spawn_64nt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 64 -p 4096 -t 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  60788864                   60788864
#                        max  60788864                   60788864
#                       mean  60788864.00000             60788864.00000
#                     median  60788864                   60788864*
#                     stddev             nan                        nan
#             standard error             nan                        nan
#       99% confidence level             nan                        nan
#                       skew             nan                        nan
#                   kurtosis             nan                        nan
#           time correlation             nan                        nan
#
#               elapsed time        27.59147
#                   run time         0.12158
#          getnsecs overhead      1416
#
#          number of samples         1
#         number of outliers         0
#    number of final samples         1
#
# WARNINGS
#     Too few samples, 1 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 0.4% of elapsed time.
#
# Usage: posix_spawn
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'posix_spawn')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n number of mmaps (default 0)]
#     [-p size of mmaps in pages (default 2)]
#     [-r number of background sleepr threads (default 0)]
#     [-t touch all mmap'd pages
# notes: measures posix_spawn/waitpid time of simple process()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t100k   1   1          916694        16334        0        1   102400
# bin/../bin-riscv64/pread -N pread_t100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    891193                     891193
#                        max   4024133                    1213997
#                       mean    973679.25252               960038.08767
#                     median    917893                     916694*
#                     stddev    118759.55864                84666.25467
#             standard error       914.45540                  662.46673
#       99% confidence level      2355.63710                 1706.51430
#                       skew         3.57313                    1.32868
#                   kurtosis        36.72646                    0.17950
#           time correlation        18.05416                   14.66421
#
#               elapsed time        20.00793
#                   run time        16.44998
#          getnsecs overhead      1416
#
#          number of samples     16866
#         number of outliers       532
#    number of final samples     16334
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 57          891193 |*                                  896277.36842
#               4548          898790 |********************************   904385.65150
#               3292          906387 |***********************            908288.87272
#               1850          913984 |*************                      918877.49297
#               1458          921581 |**********                         924205.71056
#                467          929178 |***                                932538.93576
#                258          936775 |*                                  940058.77907
#                130          944372 |*                                  947998.27692
#                 85          951969 |*                                  955671.35294
#                 71          959566 |*                                  962916.39437
#                 50          967163 |*                                  970663.96000
#                 30          974760 |*                                  978180.66667
#                 28          982357 |*                                  985297.57143
#                 25          989954 |*                                  993738.12000
#                 15          997551 |*                                 1000907.66667
#                 11         1005148 |*                                 1008739.45455
#                 12         1012745 |*                                 1016919.50000
#                 15         1020342 |*                                 1024247.66667
#                 13         1027939 |*                                 1031148.53846
#                  7         1035536 |*                                 1038579.85714
#                  9         1043133 |*                                 1046783.77778
#                 30         1050730 |*                                 1055941.46667
#                216         1058327 |*                                 1063354.08333
#                581         1065924 |****                              1069239.49398
#                388         1073521 |**                                1077482.10567
#                563         1081118 |***                               1084724.03730
#                296         1088715 |**                                1092290.73986
#                284         1096312 |*                                 1099817.46479
#                222         1103909 |*                                 1107846.67117
#                176         1111506 |*                                 1115351.05114
#                170         1119103 |*                                 1122864.30588
#                160         1126700 |*                                 1130373.65000
#
#                817           > 95% |*****                             1167151.98654
#
#        mean of 95%    949133.14114
#          95th %ile         1134296
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t10k   1   1          144666         5305        0        5    10240
# bin/../bin-riscv64/pread -N pread_t10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    139882                     139882
#                        max    647671                     193679
#                       mean    153978.49264               152038.49387
#                     median    144766                     144666*
#                     stddev     21027.02801                13881.35767
#             standard error       285.29753                  190.58523
#       99% confidence level       734.92644                  490.94756
#                       skew         7.07178                    1.35824
#                   kurtosis       121.84232                    0.24100
#           time correlation         9.06801                    7.47222
#
#               elapsed time        20.01004
#                   run time         4.91591
#          getnsecs overhead      1416
#
#          number of samples      5432
#         number of outliers       127
#    number of final samples      5305
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                170          139882 |***                                140941.54706
#                492          141161 |**********                         141576.16667
#                609          142440 |************                       143448.04762
#               1567          143719 |********************************   144191.91959
#                267          144998 |*****                              145528.77903
#                510          146277 |**********                         146911.53529
#                215          147556 |****                               148091.89767
#                 67          148835 |*                                  149450.83582
#                 59          150114 |*                                  150653.28814
#                 44          151393 |*                                  152038.09091
#                 37          152672 |*                                  153312.67568
#                 21          153951 |*                                  154533.38095
#                 13          155230 |*                                  155723.30769
#                 16          156509 |*                                  157174.06250
#                  9          157788 |*                                  158312.11111
#                  6          159067 |*                                  159665.50000
#                 10          160346 |*                                  161047.20000
#                  3          161625 |*                                  162271.33333
#                  6          162904 |*                                  163618.50000
#                  5          164183 |*                                  164875.80000
#                  6          165462 |*                                  166204.50000
#                  9          166741 |*                                  167586.11111
#                 21          168020 |*                                  168972.90476
#                 88          169299 |*                                  169960.97727
#                 74          170578 |*                                  171194.41892
#                140          171857 |**                                 172507.85000
#                116          173136 |**                                 173775.39655
#                125          174415 |**                                 175059.22400
#                 99          175694 |**                                 176318.45455
#                 93          176973 |*                                  177554.24731
#                 83          178252 |*                                  178956.36145
#                 59          179531 |*                                  180154.47458
#
#                266           > 95% |*****                              185578.15414
#
#        mean of 95%    150267.99385
#          95th %ile          180783
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 24.6% of elapsed time.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
          prc thr      nsecs/call      samples   errors cnt/samp     size
pread_t1k   1   1           64757        16826        0       13     1024
# bin/../bin-riscv64/pread -N pread_t1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     63478                      63478
#                        max    254395                      87121
#                       mean     68881.95556                68171.39338
#                     median     65000                      64757*
#                     stddev      8412.77310                 6321.28311
#             standard error        64.20468                   48.73206
#       99% confidence level       165.39125                  125.53379
#                       skew         3.58082                    1.33326
#                   kurtosis        30.53049                    0.11573
#           time correlation         1.23338                    1.05045
#
#               elapsed time        20.00731
#                   run time        16.48222
#          getnsecs overhead      1416
#
#          number of samples     17169
#         number of outliers       343
#    number of final samples     16826
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1071           63478 |****                                63960.55836
#               7019           64027 |********************************    64235.82020
#                727           64576 |***                                 64839.39477
#               2792           65125 |************                        65398.20415
#                534           65674 |**                                  65862.84831
#                272           66223 |*                                   66464.86397
#                128           66772 |*                                   66987.21875
#                 85           67321 |*                                   67586.60000
#                 53           67870 |*                                   68149.50943
#                 35           68419 |*                                   68699.20000
#                 30           68968 |*                                   69182.26667
#                 30           69517 |*                                   69790.36667
#                 17           70066 |*                                   70328.58824
#                 18           70615 |*                                   70920.44444
#                 13           71164 |*                                   71400.07692
#                  8           71713 |*                                   71927.25000
#                 10           72262 |*                                   72479.70000
#                  3           72811 |*                                   73028.33333
#                  6           73360 |*                                   73617.83333
#                  7           73909 |*                                   74174.00000
#                  7           74458 |*                                   74788.42857
#                 35           75007 |*                                   75247.48571
#                114           75556 |*                                   75920.30702
#                437           76105 |*                                   76348.88787
#                307           76654 |*                                   76942.78176
#                445           77203 |**                                  77473.76180
#                355           77752 |*                                   78040.62535
#                447           78301 |**                                  78569.90604
#                328           78850 |*                                   79114.25305
#                284           79399 |*                                   79675.89085
#                209           79948 |*                                   80211.86603
#                158           80497 |*                                   80747.81646
#
#                842           > 95% |***                                 83272.47506
#
#        mean of 95%     67375.90347
#          95th %ile           81021
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z100k   1   1          803792         4632        0        1   102400
# bin/../bin-riscv64/pread -N pread_z100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    777392                     777392
#                        max   4452129                    1065895
#                       mean    849585.06878               841026.13774
#                     median    804192                     803792*
#                     stddev    115259.00912                75076.08468
#             standard error      1676.77185                 1103.10624
#       99% confidence level      4319.36429                 2841.60167
#                       skew        11.63848                    1.47715
#                   kurtosis       307.02330                    0.51517
#           time correlation        52.78729                   44.64991
#
#               elapsed time        20.01196
#                   run time         4.02487
#          getnsecs overhead      1416
#
#          number of samples      4725
#         number of outliers        93
#    number of final samples      4632
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 17          777392 |*                                  781503.76471
#                361          784346 |**********                         789229.95291
#               1142          791300 |********************************   795110.78459
#                923          798254 |*************************          801339.01517
#                492          805208 |*************                      808597.84350
#                369          812162 |**********                         815414.73984
#                163          819116 |****                               822049.32515
#                 93          826070 |**                                 829022.51613
#                 33          833024 |*                                  836259.09091
#                 19          839978 |*                                  843687.10526
#                 13          846932 |*                                  850084.76923
#                 15          853886 |*                                  856726.06667
#                  8          860840 |*                                  863742.75000
#                  4          867794 |*                                  872017.75000
#                  6          874748 |*                                  878593.00000
#                  4          881702 |*                                  885968.00000
#                  4          888656 |*                                  891843.00000
#                  3          895610 |*                                  897893.00000
#                  2          902564 |*                                  906293.50000
#                  2          909518 |*                                  913494.00000
#                  0          916472 |                                              -
#                  3          923426 |*                                  928027.33333
#                  3          930380 |*                                  934093.66667
#                 17          937334 |*                                  941911.23529
#                 62          944288 |*                                  948046.70968
#                 67          951242 |*                                  954707.04478
#                140          958196 |***                                961807.32143
#                109          965150 |***                                968429.52294
#                123          972104 |***                                975379.23577
#                 74          979058 |**                                 982214.20270
#                 72          986012 |**                                 989845.43056
#                 57          992966 |*                                  996183.47368
#
#                232           > 95% |******                            1026152.13793
#
#        mean of 95%    831264.94864
#          95th %ile          999894
#
# WARNINGS
#     Actual benchmark run time only accounts for 20.1% of elapsed time.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z10k   1   1           92819        16711        0        9    10240
# bin/../bin-riscv64/pread -N pread_z10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     91032                      91032
#                        max    398996                     122480
#                       mean     98445.96427                97608.22363
#                     median     92919                      92819*
#                     stddev     11032.26453                 8302.13969
#             standard error        84.56885                   64.22274
#       99% confidence level       217.84935                  165.43777
#                       skew         4.71885                    1.29121
#                   kurtosis        67.12592                    0.01324
#           time correlation         1.61785                    1.40082
#
#               elapsed time        20.00674
#                   run time        16.56207
#          getnsecs overhead      1416
#
#          number of samples     17018
#         number of outliers       307
#    number of final samples     16711
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 32           91032 |*                                   91643.84375
#               6406           91762 |********************************    92258.35732
#               2221           92492 |***********                         92652.54480
#               1524           93222 |*******                             93735.94423
#               1602           93952 |********                            94182.58365
#                380           94682 |*                                   94972.81579
#                132           95412 |*                                   95764.11364
#                 82           96142 |*                                   96500.98780
#                 69           96872 |*                                   97217.94203
#                 58           97602 |*                                   97966.08621
#                 26           98332 |*                                   98607.07692
#                 18           99062 |*                                   99385.61111
#                 18           99792 |*                                  100229.55556
#                 12          100522 |*                                  100980.00000
#                 11          101252 |*                                  101690.72727
#                  7          101982 |*                                  102367.71429
#                  7          102712 |*                                  103014.85714
#                  7          103442 |*                                  103629.57143
#                  6          104172 |*                                  104497.00000
#                  8          104902 |*                                  105189.62500
#                 11          105632 |*                                  106017.63636
#                  7          106362 |*                                  106806.85714
#                231          107092 |*                                  107599.98701
#                475          107822 |**                                 108140.96211
#                377          108552 |*                                  108952.88859
#                549          109282 |**                                 109633.18397
#                322          110012 |*                                  110362.77019
#                338          110742 |*                                  111106.55030
#                233          111472 |*                                  111832.73391
#                246          112202 |*                                  112546.99593
#                228          112932 |*                                  113314.82018
#                232          113662 |*                                  114041.00862
#
#                836           > 95% |****                               117219.57057
#
#        mean of 95%     96575.46230
#          95th %ile          114390
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
          prc thr      nsecs/call      samples   errors cnt/samp     size
pread_z1k   1   1           49861        16862        0       17     1024
# bin/../bin-riscv64/pread -N pread_z1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     49089                      49089
#                        max    240474                      67066
#                       mean     53022.17717                52579.00540
#                     median     49916                      49861*
#                     stddev      6343.49171                 4830.56869
#             standard error        48.45043                   37.20007
#       99% confidence level       124.80831                   95.82737
#                       skew         5.14506                    1.34478
#                   kurtosis        84.41363                    0.15021
#           time correlation         0.91158                    0.79669
#
#               elapsed time        20.00691
#                   run time        16.29009
#          getnsecs overhead      1416
#
#          number of samples     17142
#         number of outliers       280
#    number of final samples     16862
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1955           49089 |*********                           49456.49821
#               6662           49510 |********************************    49634.97298
#                891           49931 |****                                50198.18406
#               2481           50352 |***********                         50509.42523
#                400           50773 |*                                   50924.10250
#                125           51194 |*                                   51374.21600
#                 82           51615 |*                                   51788.54878
#                 50           52036 |*                                   52233.20000
#                 49           52457 |*                                   52647.02041
#                 34           52878 |*                                   53127.50000
#                 35           53299 |*                                   53525.62857
#                 20           53720 |*                                   53932.45000
#                 15           54141 |*                                   54378.66667
#                 13           54562 |*                                   54808.92308
#                 14           54983 |*                                   55225.92857
#                 12           55404 |*                                   55594.83333
#                  7           55825 |*                                   55989.71429
#                  8           56246 |*                                   56442.12500
#                  4           56667 |*                                   56916.00000
#                  5           57088 |*                                   57393.00000
#                 31           57509 |*                                   57814.19355
#                316           57930 |*                                   58192.27848
#                232           58351 |*                                   58539.55172
#                302           58772 |*                                   59000.20199
#                305           59193 |*                                   59395.83934
#                306           59614 |*                                   59823.54575
#                337           60035 |*                                   60249.40356
#                339           60456 |*                                   60659.66667
#                330           60877 |*                                   61078.61212
#                275           61298 |*                                   61517.74909
#                243           61719 |*                                   61922.58848
#                140           62140 |*                                   62330.58571
#
#                844           > 95% |****                                64170.87796
#
#        mean of 95%     51968.22125
#          95th %ile           62539
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
             prc thr      nsecs/call      samples   errors cnt/samp     size
pread_zw100k   1   1          590693        17452        0        1   102400
# bin/../bin-riscv64/pread -N pread_zw100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    577992                     577992
#                        max   2956184                     611293
#                       mean    628537.48517               593369.18508
#                     median    591792                     590693*
#                     stddev     81021.95345                 5975.63352
#             standard error       541.16953                   45.23362
#       99% confidence level      1394.05272                  116.52181
#                       skew         3.58348                    1.43876
#                   kurtosis        39.48022                    0.72186
#           time correlation         8.43507                    1.00584
#
#               elapsed time        20.00953
#                   run time        14.12336
#          getnsecs overhead      1416
#
#          number of samples     22415
#         number of outliers      4963
#    number of final samples     17452
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          577992 |*                                  577992.00000
#                  3          578883 |*                                  579458.66667
#                  0          579774 |                                              -
#                  1          580665 |*                                  580692.00000
#                  1          581556 |*                                  582193.00000
#                  1          582447 |*                                  582492.00000
#                  7          583338 |*                                  583820.57143
#                  3          584229 |*                                  584658.66667
#                 12          585120 |*                                  585667.08333
#                 31          586011 |*                                  586682.48387
#                160          586902 |*                                  587499.66875
#               1067          587793 |*********                          588332.47985
#               2848          588684 |*************************          589124.77212
#               3587          589575 |********************************   589975.89880
#               2694          590466 |************************           590851.85746
#               1466          591357 |*************                      591743.66098
#                762          592248 |******                             592665.82021
#                398          593139 |***                                593560.85930
#                303          594030 |**                                 594487.98680
#                271          594921 |**                                 595379.72325
#                259          595812 |**                                 596296.16216
#                210          596703 |*                                  597158.48095
#                136          597594 |*                                  598034.93382
#                 94          598485 |*                                  598849.78723
#                 55          599376 |*                                  599783.20000
#                 66          600267 |*                                  600805.98485
#                158          601158 |*                                  601625.93671
#                277          602049 |**                                 602509.37906
#                435          602940 |***                                603402.27816
#                540          603831 |****                               604317.22778
#                414          604722 |***                                605183.22705
#                319          605613 |**                                 606056.34483
#
#                873           > 95% |*******                            608489.49141
#
#        mean of 95%    592572.99548
#          95th %ile          606492
#
# WARNINGS
#     Actual benchmark run time only accounts for 70.6% of elapsed time.
#
# Usage: pread
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pread')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (write a byte to each page after read)]
# notes: measures pread()
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_128   1   1         2885727           43        0      128 
# bin/../bin-riscv64/pthread_create -N pthread_128 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 128 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2778287                    2778287
#                        max   3140635                    3052574
#                       mean   2904250.27273              2898752.95349
#                     median   2892013                    2885727*
#                     stddev     76410.08072                67942.25439
#             standard error     11519.25309                10361.09666
#       99% confidence level     29673.59595                26690.18499
#                       skew         0.73219                    0.30683
#                   kurtosis         0.63891                   -0.46894
#           time correlation      5617.21268                 5233.11084
#
#               elapsed time        25.22278
#                   run time        16.35680
#          getnsecs overhead      1416
#
#          number of samples        44
#         number of outliers         1
#    number of final samples        43
#             ops per sample       128.00000 (-B 128)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         2778287 |**********                        2780351.50000
#                  0         2785869 |                                              -
#                  2         2793451 |**********                        2798018.50000
#                  1         2801033 |*****                             2803577.00000
#                  2         2808615 |**********                        2812127.00000
#                  0         2816197 |                                              -
#                  0         2823779 |                                              -
#                  0         2831361 |                                              -
#                  1         2838943 |*****                             2840939.00000
#                  0         2846525 |                                              -
#                  3         2854107 |****************                  2859006.33333
#                  1         2861689 |*****                             2865582.00000
#                  2         2869271 |**********                        2872289.50000
#                  6         2876853 |********************************  2881233.83333
#                  3         2884435 |****************                  2887740.00000
#                  4         2892017 |*********************             2896056.00000
#                  1         2899599 |*****                             2905964.00000
#                  1         2907181 |*****                             2911599.00000
#                  0         2914763 |                                              -
#                  3         2922345 |****************                  2926387.00000
#                  1         2929927 |*****                             2934548.00000
#                  1         2937509 |*****                             2941296.00000
#                  0         2945091 |                                              -
#                  0         2952673 |                                              -
#                  1         2960255 |*****                             2965006.00000
#                  0         2967837 |                                              -
#                  0         2975419 |                                              -
#                  2         2983001 |**********                        2987692.00000
#                  2         2990583 |**********                        2994366.50000
#                  1         2998165 |*****                             3000758.00000
#
#                  3           > 95% |****************                  3032130.33333
#
#        mean of 95%   2888749.65000
#          95th %ile         3020906
#
# WARNINGS
#     Too few samples, 44 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 64.8% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_256   1   1         3002866           22        0      256 
# bin/../bin-riscv64/pthread_create -N pthread_256 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 256 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2908225                    2908225
#                        max   3204359                    3204359
#                       mean   3009544.36364              3009544.36364
#                     median   3002866                    3002866*
#                     stddev     60246.32074                60246.32074
#             standard error     12844.55874                12844.55874
#       99% confidence level     33087.58331                33087.58331
#                       skew         1.33325                    1.33325
#                   kurtosis         2.87729                    2.87729
#           time correlation      8257.24675                 8257.24675
#
#               elapsed time        25.63131
#                   run time        16.94978
#          getnsecs overhead      1416
#
#          number of samples        22
#         number of outliers         0
#    number of final samples        22
#             ops per sample       256.00000 (-B 256)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         2908225 |****************                  2908225.00000
#                  0         2913574 |                                              -
#                  0         2918923 |                                              -
#                  0         2924272 |                                              -
#                  0         2929621 |                                              -
#                  0         2934970 |                                              -
#                  1         2940319 |****************                  2942455.00000
#                  1         2945668 |****************                  2946625.00000
#                  0         2951017 |                                              -
#                  0         2956366 |                                              -
#                  0         2961715 |                                              -
#                  2         2967064 |********************************  2969025.00000
#                  2         2972413 |********************************  2974615.00000
#                  1         2977762 |****************                  2981183.00000
#                  1         2983111 |****************                  2983246.00000
#                  2         2988460 |********************************  2991664.50000
#                  0         2993809 |                                              -
#                  1         2999158 |****************                  3002866.00000
#                  0         3004507 |                                              -
#                  0         3009856 |                                              -
#                  0         3015205 |                                              -
#                  1         3020554 |****************                  3025448.00000
#                  2         3025903 |********************************  3028934.00000
#                  2         3031252 |********************************  3032407.00000
#                  2         3036601 |********************************  3039995.00000
#                  0         3041950 |                                              -
#                  0         3047299 |                                              -
#                  0         3052648 |                                              -
#                  1         3057997 |****************                  3062912.00000
#
#                  2           > 95% |********************************  3141867.50000
#
#        mean of 95%   2996312.05000
#          95th %ile         3079376
#
# WARNINGS
#     Too few samples, 22 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 66.1% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
           prc thr      nsecs/call      samples   errors cnt/samp 
pthread_32   1   1         2591409          179        0       32 
# bin/../bin-riscv64/pthread_create -N pthread_32 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 32 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2394363                    2394363
#                        max   3338969                    2884319
#                       mean   2642657.22680              2605056.81006
#                     median   2598821                    2591409*
#                     stddev    164252.63351                96692.30703
#             standard error     11792.65183                 7227.12235
#       99% confidence level     30377.87111                18617.06717
#                       skew         1.92873                    0.67360
#                   kurtosis         4.31825                    0.19785
#           time correlation      2494.44081                 1792.06662
#
#               elapsed time        25.06188
#                   run time        16.40589
#          getnsecs overhead      1416
#
#          number of samples       194
#         number of outliers        15
#    number of final samples       179
#             ops per sample        32.00000 (-B 32)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2         2394363 |*****                             2399535.00000
#                  0         2407125 |                                              -
#                  1         2419887 |**                                2431316.00000
#                  0         2432649 |                                              -
#                  1         2445411 |**                                2447807.00000
#                  4         2458173 |**********                        2463039.25000
#                  4         2470935 |**********                        2479584.00000
#                  6         2483697 |****************                  2491171.83333
#                  9         2496459 |************************          2504697.44444
#                  9         2509221 |************************          2517554.88889
#                  9         2521983 |************************          2530465.88889
#                 10         2534745 |**************************        2542122.30000
#                  9         2547507 |************************          2553901.00000
#                 10         2560269 |**************************        2566970.50000
#                 12         2573031 |********************************  2578632.83333
#                 10         2585793 |**************************        2592827.20000
#                 11         2598555 |*****************************     2605015.00000
#                  8         2611317 |*********************             2617949.37500
#                 10         2624079 |**************************        2630599.60000
#                  2         2636841 |*****                             2646364.50000
#                  7         2649603 |******************                2654860.42857
#                  7         2662365 |******************                2670268.85714
#                  9         2675127 |************************          2680212.88889
#                  3         2687889 |********                          2691940.33333
#                  2         2700651 |*****                             2712626.00000
#                  2         2713413 |*****                             2718973.00000
#                  2         2726175 |*****                             2732201.50000
#                  3         2738937 |********                          2746499.33333
#                  1         2751699 |**                                2761124.00000
#                  4         2764461 |**********                        2768057.00000
#                  2         2777223 |*****                             2784666.50000
#                  1         2789985 |**                                2796027.00000
#
#                  9           > 95% |************************          2838905.22222
#
#        mean of 95%   2592676.60000
#          95th %ile         2802718
#
# WARNINGS
#     Actual benchmark run time only accounts for 65.5% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
            prc thr      nsecs/call      samples   errors cnt/samp 
pthread_512   1   1         3180300           11        0      512 
# bin/../bin-riscv64/pthread_create -N pthread_512 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 512 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   3110071                    3110071
#                        max   3254254                    3254254
#                       mean   3185113.45455              3185113.45455
#                     median   3180300                    3180300*
#                     stddev     48037.69811                48037.69811
#             standard error     14483.91095                14483.91095
#       99% confidence level     37310.55460                37310.55460
#                       skew         0.00528                    0.00528
#                   kurtosis        -1.40389                   -1.40389
#           time correlation     14376.59091                14376.59091
#
#               elapsed time        26.87416
#                   run time        17.93857
#          getnsecs overhead      1416
#
#          number of samples        11
#         number of outliers         0
#    number of final samples        11
#             ops per sample       512.00000 (-B 512)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         3110071 |****************                  3110071.00000
#                  0         3114577 |                                              -
#                  0         3119083 |                                              -
#                  0         3123589 |                                              -
#                  1         3128095 |****************                  3131030.00000
#                  0         3132601 |                                              -
#                  0         3137107 |                                              -
#                  0         3141613 |                                              -
#                  1         3146119 |****************                  3149178.00000
#                  1         3150625 |****************                  3153055.00000
#                  0         3155131 |                                              -
#                  1         3159637 |****************                  3163009.00000
#                  0         3164143 |                                              -
#                  0         3168649 |                                              -
#                  0         3173155 |                                              -
#                  1         3177661 |****************                  3180300.00000
#                  0         3182167 |                                              -
#                  0         3186673 |                                              -
#                  0         3191179 |                                              -
#                  0         3195685 |                                              -
#                  0         3200191 |                                              -
#                  1         3204697 |****************                  3206204.00000
#                  0         3209203 |                                              -
#                  0         3213709 |                                              -
#                  2         3218215 |********************************  3220629.50000
#                  0         3222721 |                                              -
#                  0         3227227 |                                              -
#                  0         3231733 |                                              -
#                  0         3236239 |                                              -
#                  0         3240745 |                                              -
#                  1         3245251 |****************                  3247888.00000
#
#                  1           > 95% |****************                  3254254.00000
#
#        mean of 95%   3178199.40000
#          95th %ile         3254254
#
# WARNINGS
#     Too few samples, 11 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 66.8% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
           prc thr      nsecs/call      samples   errors cnt/samp 
pthread_64   1   1         2933654           77        0       64 
# bin/../bin-riscv64/pthread_create -N pthread_64 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 64 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2807274                    2807274
#                        max   3388136                    3078746
#                       mean   2966280.53488              2935816.44156
#                     median   2940655                    2933654*
#                     stddev    106503.51480                54703.65093
#             standard error     11484.56936                 6234.05959
#       99% confidence level     29584.25066                16058.93751
#                       skew         1.79631                    0.26354
#                   kurtosis         3.40420                   -0.05866
#           time correlation      3645.97194                 2383.26489
#
#               elapsed time        25.19691
#                   run time        16.32653
#          getnsecs overhead      1416
#
#          number of samples        86
#         number of outliers         9
#    number of final samples        77
#             ops per sample        64.00000 (-B 64)
#
#       recommended -B value         1
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         2807274 |****                              2807274.00000
#                  0         2814107 |                                              -
#                  0         2820940 |                                              -
#                  2         2827773 |*********                         2830590.50000
#                  0         2834606 |                                              -
#                  0         2841439 |                                              -
#                  1         2848272 |****                              2854971.00000
#                  0         2855105 |                                              -
#                  2         2861938 |*********                         2866089.50000
#                  4         2868771 |******************                2872282.00000
#                  3         2875604 |*************                     2881169.66667
#                  4         2882437 |******************                2886624.75000
#                  3         2889270 |*************                     2892245.66667
#                  2         2896103 |*********                         2898802.50000
#                  5         2902936 |**********************            2907542.60000
#                  4         2909769 |******************                2913939.00000
#                  2         2916602 |*********                         2919659.00000
#                  2         2923435 |*********                         2924147.00000
#                  4         2930268 |******************                2931774.50000
#                  7         2937101 |********************************  2939896.14286
#                  2         2943934 |*********                         2946007.00000
#                  4         2950767 |******************                2953913.00000
#                  1         2957600 |****                              2960770.00000
#                  3         2964433 |*************                     2968907.33333
#                  3         2971266 |*************                     2972344.66667
#                  3         2978099 |*************                     2981781.33333
#                  2         2984932 |*********                         2986916.00000
#                  4         2991765 |******************                2994691.00000
#                  2         2998598 |*********                         3000968.50000
#                  1         3005431 |****                              3008626.00000
#                  2         3012264 |*********                         3016133.00000
#
#                  4           > 95% |******************                3057092.50000
#
#        mean of 95%   2929171.17808
#          95th %ile         3025908
#
# WARNINGS
#     Too few samples, 86 < 100, consider running test longer, or for a least 100 samples
#     Actual benchmark run time only accounts for 64.8% of elapsed time.
#
# Usage: pthread_create
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pthread_create')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s stacksize] (specify stacksize)
# notes: measures pthread_create
             prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n100k   1   1            5496        17016        0      165   102400
# bin/../bin-riscv64/pwrite -N pwrite_n100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5300                       5300
#                        max    228445                       7155
#                       mean      5834.12647                 5749.60661
#                     median      5503                       5496*
#                     stddev      2103.24341                  468.49398
#             standard error        15.91404                    3.59150
#       99% confidence level        40.99456                    9.25169
#                       skew        85.73893                    1.32507
#                   kurtosis      8382.61165                    0.26481
#           time correlation         0.10225                    0.07965
#
#               elapsed time        20.00650
#                   run time        16.83995
#          getnsecs overhead      1416
#
#          number of samples     17467
#         number of outliers       451
#    number of final samples     17016
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 48            5300 |*                                    5332.58333
#                425            5346 |**                                   5376.05412
#               2510            5392 |****************                     5420.40797
#               4928            5438 |********************************     5459.37074
#               1476            5484 |*********                            5503.19173
#               1597            5530 |**********                           5553.28366
#                960            5576 |******                               5592.63437
#                278            5622 |*                                    5640.96763
#                213            5668 |*                                    5689.00469
#                117            5714 |*                                    5734.89744
#                 67            5760 |*                                    5780.26866
#                 56            5806 |*                                    5830.39286
#                 32            5852 |*                                    5870.93750
#                 36            5898 |*                                    5919.19444
#                 24            5944 |*                                    5965.58333
#                 32            5990 |*                                    6009.18750
#                 54            6036 |*                                    6056.83333
#                 43            6082 |*                                    6103.53488
#                 38            6128 |*                                    6148.10526
#                 57            6174 |*                                    6200.21053
#                106            6220 |*                                    6243.58491
#                358            6266 |**                                   6291.28771
#                505            6312 |***                                  6334.63366
#                461            6358 |**                                   6379.06291
#                366            6404 |**                                   6426.99454
#                357            6450 |**                                   6473.54902
#                270            6496 |*                                    6517.34074
#                189            6542 |*                                    6564.32804
#                180            6588 |*                                    6610.94444
#                168            6634 |*                                    6655.91667
#                153            6680 |*                                    6702.81699
#                 61            6726 |*                                    6732.54098
#
#                851           > 95% |*****                                6916.19976
#
#        mean of 95%      5688.19177
#          95th %ile            6740
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n10k   1   1            9128         4960        0      100    10240
# bin/../bin-riscv64/pwrite -N pwrite_n10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8770                       8770
#                        max    158094                      11752
#                       mean      9662.36270                 9506.94194
#                     median      9141                       9128*
#                     stddev      2399.57927                  749.64243
#             standard error        33.49917                   10.64421
#       99% confidence level        86.29387                   27.41948
#                       skew        47.84219                    1.33620
#                   kurtosis      2881.54013                    0.34850
#           time correlation         0.57605                    0.44060
#
#               elapsed time        20.01255
#                   run time         4.93357
#          getnsecs overhead      1416
#
#          number of samples      5131
#         number of outliers       171
#    number of final samples      4960
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5            8770 |*                                    8799.60000
#                128            8842 |****                                 8889.14844
#                648            8914 |*********************                8954.61420
#                968            8986 |********************************     9021.97107
#                745            9058 |************************             9089.41745
#                460            9130 |***************                      9165.75870
#                371            9202 |************                         9236.24259
#                213            9274 |*******                              9304.01878
#                 72            9346 |**                                   9376.80556
#                 43            9418 |*                                    9451.97674
#                 25            9490 |*                                    9524.56000
#                 19            9562 |*                                    9591.05263
#                 17            9634 |*                                    9668.52941
#                 10            9706 |*                                    9737.20000
#                  7            9778 |*                                    9826.71429
#                 12            9850 |*                                    9885.41667
#                 10            9922 |*                                    9967.20000
#                 14            9994 |*                                   10029.14286
#                 18           10066 |*                                   10107.00000
#                  8           10138 |*                                   10165.75000
#                 21           10210 |*                                   10246.76190
#                 41           10282 |*                                   10321.80488
#                 75           10354 |**                                  10390.76000
#                128           10426 |****                                10463.16406
#                138           10498 |****                                10533.28986
#                125           10570 |****                                10605.54400
#                109           10642 |***                                 10676.53211
#                104           10714 |***                                 10748.14423
#                 51           10786 |*                                   10818.76471
#                 59           10858 |*                                   10894.94915
#                 42           10930 |*                                   10964.04762
#                 26           11002 |*                                   11029.19231
#
#                248           > 95% |********                            11397.16129
#
#        mean of 95%      9407.45671
#          95th %ile           11071
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 24.7% of elapsed time.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_n1k   1   1           11449         3985        0       79     1024
# bin/../bin-riscv64/pwrite -N pwrite_n1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     11034                      11034
#                        max    179795                      14650
#                       mean     12096.24421                11908.00728
#                     median     11460                      11449*
#                     stddev      3058.71073                  915.76169
#             standard error        47.77486                   14.50669
#       99% confidence level       123.06805                   37.36923
#                       skew        42.19368                    1.30431
#                   kurtosis      2235.43149                    0.24320
#           time correlation         0.89082                    0.67417
#
#               elapsed time        20.01050
#                   run time         3.90948
#          getnsecs overhead      1416
#
#          number of samples      4099
#         number of outliers       114
#    number of final samples      3985
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 28           11034 |*                                   11096.50000
#                212           11120 |*********                           11173.11792
#                619           11206 |**************************          11254.20194
#                753           11292 |********************************    11330.32537
#                454           11378 |*******************                 11418.47797
#                337           11464 |**************                      11504.32641
#                273           11550 |***********                         11587.52015
#                123           11636 |*****                               11673.54472
#                 77           11722 |***                                 11762.28571
#                 52           11808 |**                                  11848.94231
#                 24           11894 |*                                   11936.41667
#                 21           11980 |*                                   12020.19048
#                 11           12066 |*                                   12094.36364
#                 13           12152 |*                                   12194.30769
#                  5           12238 |*                                   12281.20000
#                  8           12324 |*                                   12370.25000
#                  5           12410 |*                                   12441.00000
#                  6           12496 |*                                   12560.50000
#                 10           12582 |*                                   12627.40000
#                 12           12668 |*                                   12713.16667
#                 10           12754 |*                                   12804.90000
#                 21           12840 |*                                   12882.52381
#                 55           12926 |**                                  12977.29091
#                 76           13012 |***                                 13055.00000
#                105           13098 |****                                13141.75238
#                 99           13184 |****                                13228.22222
#                110           13270 |****                                13304.28182
#                 99           13356 |****                                13393.59596
#                 60           13442 |**                                  13484.48333
#                 53           13528 |**                                  13570.75472
#                 33           13614 |*                                   13655.72727
#                 21           13700 |*                                   13741.71429
#
#                200           > 95% |********                            14178.50500
#
#        mean of 95%     11788.03382
#          95th %ile           13783
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 19.5% of elapsed time.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
             prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t100k   1   1         2000809         9226        0        1   102400
# bin/../bin-riscv64/pwrite -N pwrite_t100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1865307                    1865307
#                        max   4925246                    2276913
#                       mean   2002227.52877              1988037.82809
#                     median   2031410                    2000809*
#                     stddev    153982.52522                96296.82279
#             standard error      1588.12401                 1002.54813
#       99% confidence level      4091.00745                 2582.56399
#                       skew         5.08342                    0.33365
#                   kurtosis        48.47115                   -1.17422
#           time correlation        41.36404                   34.30122
#
#               elapsed time        20.00906
#                   run time        18.84050
#          getnsecs overhead      1416
#
#          number of samples      9401
#         number of outliers       175
#    number of final samples      9226
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 23         1865307 |*                                 1871755.08696
#                654         1873661 |*****************                 1879378.33792
#                877         1882015 |***********************           1885648.09578
#               1186         1890369 |********************************  1895273.07926
#               1002         1898723 |***************************       1902321.50100
#                484         1907077 |*************                     1910720.95041
#                169         1915431 |****                              1919141.73964
#                 83         1923785 |**                                1927615.37349
#                 32         1932139 |*                                 1936233.21875
#                 31         1940493 |*                                 1944179.29032
#                 24         1948847 |*                                 1953450.04167
#                 24         1957201 |*                                 1961025.29167
#                  8         1965555 |*                                 1968146.25000
#                  7         1973909 |*                                 1978365.85714
#                  5         1982263 |*                                 1986628.60000
#                  3         1990617 |*                                 1994275.66667
#                  6         1998971 |*                                 2002025.66667
#                  3         2007325 |*                                 2009809.00000
#                  9         2015679 |*                                 2021098.33333
#                102         2024033 |**                                2030059.39216
#                350         2032387 |*********                         2036707.48571
#                583         2040741 |***************                   2045369.13894
#                734         2049095 |*******************               2053188.35831
#                596         2057449 |****************                  2061241.36409
#                411         2065803 |***********                       2069638.60827
#                313         2074157 |********                          2078063.69010
#                222         2082511 |*****                             2086696.63063
#                229         2090865 |******                            2095210.21834
#                188         2099219 |*****                             2103312.48936
#                158         2107573 |****                              2111929.43671
#                125         2115927 |***                               2119816.16000
#                123         2124281 |***                               2128598.44715
#
#                462           > 95% |************                      2179426.02381
#
#        mean of 95%   1977948.67401
#          95th %ile         2132611
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
            prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t10k   1   1          253931        18173        0        2    10240
# bin/../bin-riscv64/pwrite -N pwrite_t10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    247464                     247464
#                        max   1106375                     346766
#                       mean    270230.06540               267285.30358
#                     median    254331                     253931*
#                     stddev     33167.27778                26513.59995
#             standard error       242.83551                  196.67782
#       99% confidence level       625.54428                  506.64206
#                       skew         3.21378                    1.63604
#                   kurtosis        31.39311                    1.01323
#           time correlation         4.49371                    3.85775
#
#               elapsed time        20.00766
#                   run time        15.09358
#          getnsecs overhead      1416
#
#          number of samples     18655
#         number of outliers       482
#    number of final samples     18173
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4          247464 |*                                  248656.00000
#               6140          250011 |********************************   251849.34072
#               3848          252558 |********************               253405.58472
#               1423          255105 |*******                            256431.77793
#               1979          257652 |**********                         258763.59626
#                719          260199 |***                                261141.49374
#                220          262746 |*                                  263937.25000
#                119          265293 |*                                  266419.53782
#                 85          267840 |*                                  268906.60000
#                 49          270387 |*                                  271583.18367
#                 31          272934 |*                                  273852.93548
#                 22          275481 |*                                  276738.04545
#                 16          278028 |*                                  279249.93750
#                 14          280575 |*                                  281850.50000
#                 11          283122 |*                                  284255.63636
#                  6          285669 |*                                  286731.66667
#                  5          288216 |*                                  289824.80000
#                  2          290763 |*                                  292448.50000
#                  2          293310 |*                                  293981.50000
#                  6          295857 |*                                  297159.33333
#                  1          298404 |*                                  298632.00000
#                 22          300951 |*                                  302787.77273
#                184          303498 |*                                  305055.16304
#                403          306045 |**                                 307360.36228
#                370          308592 |*                                  309778.48108
#                375          311139 |*                                  312402.45867
#                236          313686 |*                                  314770.02119
#                209          316233 |*                                  317467.89474
#                157          318780 |*                                  319913.03185
#                170          321327 |*                                  322612.41765
#                198          323874 |*                                  325210.84848
#                238          326421 |*                                  327816.10084
#
#                909           > 95% |****                               335690.33113
#
#        mean of 95%    263683.57918
#          95th %ile          328946
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 75.4% of elapsed time.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
pwrite_t1k   1   1          100599        17144        0        8     1024
# bin/../bin-riscv64/pwrite -N pwrite_t1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     98562                      98562
#                        max    391300                     134116
#                       mean    106369.38768               105812.42382
#                     median    100699                     100599*
#                     stddev     11078.73133                 9436.30861
#             standard error        84.11585                   72.06860
#       99% confidence level       216.68243                  185.64870
#                       skew         3.21344                    1.29449
#                   kurtosis        36.55568                    0.02611
#           time correlation         1.69474                    1.55787
#
#               elapsed time        20.00948
#                   run time        16.46947
#          getnsecs overhead      1416
#
#          number of samples     17347
#         number of outliers       203
#    number of final samples     17144
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                630           98562 |**                                  99240.53968
#               7427           99383 |********************************    99791.81513
#                933          100204 |****                               100560.56270
#               1679          101025 |*******                            101559.76712
#               1472          101846 |******                             102143.82541
#                305          102667 |*                                  102978.38361
#                177          103488 |*                                  103859.60452
#                127          104309 |*                                  104708.22047
#                 55          105130 |*                                  105545.32727
#                 49          105951 |*                                  106353.12245
#                 39          106772 |*                                  107179.53846
#                 26          107593 |*                                  107894.03846
#                 21          108414 |*                                  108870.71429
#                 14          109235 |*                                  109654.57143
#                 12          110056 |*                                  110301.33333
#                 11          110877 |*                                  111282.45455
#                 13          111698 |*                                  112085.46154
#                  6          112519 |*                                  112910.66667
#                  6          113340 |*                                  113676.16667
#                  2          114161 |*                                  114927.50000
#                  5          114982 |*                                  115564.00000
#                 13          115803 |*                                  116257.76923
#                 85          116624 |*                                  117142.60000
#                442          117445 |*                                  117952.55430
#                528          118266 |**                                 118603.32576
#                417          119087 |*                                  119544.25420
#                474          119908 |**                                 120246.58650
#                283          120729 |*                                  121125.10954
#                352          121550 |*                                  121964.90057
#                268          122371 |*                                  122758.46642
#                200          123192 |*                                  123569.05500
#                215          124013 |*                                  124439.60465
#
#                858           > 95% |***                                128135.44988
#
#        mean of 95%    104636.37345
#          95th %ile          124822
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: pwrite
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'pwrite')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures pwrite()
           prc thr      nsecs/call      samples   errors cnt/samp     size
read_t100k   1   1          913096        16512        0        1   102400
# bin/../bin-riscv64/read -N read_t100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    891595                     891595
#                        max   3532986                    1192198
#                       mean    963354.76052               953131.39426
#                     median    914195                     913096*
#                     stddev    105976.12316                79696.35214
#             standard error       814.21389                  620.20977
#       99% confidence level      2097.41498                 1597.66037
#                       skew         3.43833                    1.34010
#                   kurtosis        33.29593                    0.11978
#           time correlation        16.03972                   13.48984
#
#               elapsed time        20.00806
#                   run time        16.34771
#          getnsecs overhead      1416
#
#          number of samples     16941
#         number of outliers       429
#    number of final samples     16512
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 69          891595 |*                                  897739.92754
#               6876          898508 |********************************   902517.20419
#               1218          905421 |*****                              907086.48604
#               2275          912334 |**********                         916470.77407
#               1166          919247 |*****                              921786.86449
#                395          926160 |*                                  929527.30886
#                266          933073 |*                                  936242.10902
#                154          939986 |*                                  943290.35714
#                 91          946899 |*                                  949980.32967
#                 63          953812 |*                                  957608.42857
#                 42          960725 |*                                  963726.76190
#                 23          967638 |*                                  971552.52174
#                 15          974551 |*                                  977342.60000
#                 12          981464 |*                                  984862.66667
#                  9          988377 |*                                  993051.77778
#                  5          995290 |*                                  998876.20000
#                  3         1002203 |*                                 1003229.66667
#                  2         1009116 |*                                 1013597.00000
#                  1         1016029 |*                                 1020297.00000
#                  3         1022942 |*                                 1026129.33333
#                  1         1029855 |*                                 1033197.00000
#                  2         1036768 |*                                 1040647.00000
#                  6         1043681 |*                                 1046913.50000
#                 18         1050594 |*                                 1055541.38889
#                209         1057507 |*                                 1062414.22488
#                748         1064420 |***                               1067640.53476
#                301         1071333 |*                                 1075062.89037
#                714         1078246 |***                               1081732.24510
#                311         1085159 |*                                 1088136.21865
#                277         1092072 |*                                 1095446.86282
#                221         1098985 |*                                 1102297.46154
#                190         1105898 |*                                 1109430.19474
#
#                826           > 95% |***                               1142852.94189
#
#        mean of 95%    943140.95703
#          95th %ile         1112798
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
          prc thr      nsecs/call      samples   errors cnt/samp     size
read_t10k   1   1          137799        17785        0        5    10240
# bin/../bin-riscv64/read -N read_t10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    133699                     133699
#                        max    407547                     184883
#                       mean    144745.85682               144102.61096
#                     median    137832                     137799*
#                     stddev     15227.20573                13603.86575
#             standard error       113.59159                  102.00827
#       99% confidence level       292.61193                  262.77332
#                       skew         2.25735                    1.40264
#                   kurtosis        11.05836                    0.28080
#           time correlation         2.27464                    2.12661
#
#               elapsed time        20.00648
#                   run time        15.59041
#          getnsecs overhead      1416
#
#          number of samples     17970
#         number of outliers       185
#    number of final samples     17785
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                127          133699 |*                                  134791.19685
#               7742          134916 |********************************   135556.89305
#                565          136133 |**                                 136473.54690
#               2827          137350 |***********                        138083.73612
#               1094          138567 |****                               138958.46435
#                666          139784 |**                                 140363.39790
#                365          141001 |*                                  141571.13699
#                211          142218 |*                                  142780.14218
#                106          143435 |*                                  143975.09434
#                 62          144652 |*                                  145326.25806
#                 44          145869 |*                                  146409.59091
#                 18          147086 |*                                  147639.00000
#                 19          148303 |*                                  148877.63158
#                 12          149520 |*                                  150134.25000
#                 14          150737 |*                                  151373.14286
#                  8          151954 |*                                  152487.00000
#                  2          153171 |*                                  154108.00000
#                  8          154388 |*                                  154776.37500
#                  4          155605 |*                                  156303.50000
#                  6          156822 |*                                  157124.33333
#                  5          158039 |*                                  158549.40000
#                  7          159256 |*                                  159797.00000
#                 39          160473 |*                                  161224.53846
#                 67          161690 |*                                  162441.13433
#                498          162907 |**                                 163638.95382
#                418          164124 |*                                  164633.42584
#                453          165341 |*                                  166041.15894
#                445          166558 |*                                  167104.66067
#                287          167775 |*                                  168392.68641
#                318          168992 |*                                  169572.55031
#                258          170209 |*                                  170840.35659
#                200          171426 |*                                  172011.36000
#
#                890           > 95% |***                                176781.42022
#
#        mean of 95%    142381.14661
#          95th %ile          172616
#
# WARNINGS
#     Actual benchmark run time only accounts for 77.9% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
         prc thr      nsecs/call      samples   errors cnt/samp     size
read_t1k   1   1           65007        16471        0       13     1024
# bin/../bin-riscv64/read -N read_t1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     63514                      63514
#                        max    256266                      87036
#                       mean     69035.33732                68131.93224
#                     median     65085                      65007*
#                     stddev      8896.40027                 6302.05559
#             standard error        68.43182                   49.10461
#       99% confidence level       176.28038                  126.49347
#                       skew         3.84577                    1.36991
#                   kurtosis        33.26738                    0.23197
#           time correlation         1.30357                    1.06841
#
#               elapsed time        20.00657
#                   run time        16.26995
#          getnsecs overhead      1416
#
#          number of samples     16901
#         number of outliers       430
#    number of final samples     16471
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               2221           63514 |************                        63989.20351
#               5609           64065 |********************************    64260.10768
#                880           64616 |*****                               64957.60227
#               2624           65167 |**************                      65410.65053
#                549           65718 |***                                 65945.33151
#                284           66269 |*                                   66496.99648
#                133           66820 |*                                   67036.82707
#                 98           67371 |*                                   67653.52041
#                 75           67922 |*                                   68178.88000
#                 51           68473 |*                                   68760.47059
#                 26           69024 |*                                   69304.34615
#                 33           69575 |*                                   69831.84848
#                 38           70126 |*                                   70398.86842
#                 28           70677 |*                                   70912.89286
#                 15           71228 |*                                   71527.53333
#                  8           71779 |*                                   72117.50000
#                 10           72330 |*                                   72604.70000
#                 11           72881 |*                                   73097.81818
#                  7           73432 |*                                   73652.85714
#                  7           73983 |*                                   74263.00000
#                 12           74534 |*                                   74848.00000
#                 37           75085 |*                                   75323.29730
#                198           75636 |*                                   76036.98990
#                370           76187 |**                                  76422.65676
#                291           76738 |*                                   77027.02062
#                369           77289 |**                                  77539.08401
#                330           77840 |*                                   78109.59091
#                338           78391 |*                                   78659.39349
#                327           78942 |*                                   79219.23242
#                267           79493 |*                                   79775.07865
#                226           80044 |*                                   80323.59292
#                175           80595 |*                                   80838.33714
#
#                824           > 95% |****                                83370.09951
#
#        mean of 95%     67329.46213
#          95th %ile           81121
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
           prc thr      nsecs/call      samples   errors cnt/samp     size
read_z100k   1   1          568891        18165        0        1   102400
# bin/../bin-riscv64/read -N read_z100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    555391                     555391
#                        max   5311006                     591891
#                       mean    603835.09408               571927.40259
#                     median    569491                     568891*
#                     stddev     82000.22007                 6663.44569
#             standard error       548.45045                   49.44031
#       99% confidence level      1412.80835                  127.35823
#                       skew        10.70598                    1.40543
#                   kurtosis       493.73670                    0.57626
#           time correlation         7.90879                    1.07196
#
#               elapsed time        20.00770
#                   run time        13.53509
#          getnsecs overhead      1416
#
#          number of samples     22354
#         number of outliers      4189
#    number of final samples     18165
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          555391 |*                                  555623.66667
#                  0          556357 |                                              -
#                  0          557323 |                                              -
#                  0          558289 |                                              -
#                  0          559255 |                                              -
#                  1          560221 |*                                  560691.00000
#                  1          561187 |*                                  561291.00000
#                 12          562153 |*                                  562749.08333
#                 19          563119 |*                                  563569.73684
#                 55          564085 |*                                  564647.18182
#                364          565051 |**                                 565701.79670
#               1384          566017 |**********                         566568.41185
#               3154          566983 |***********************            567483.96005
#               4289          567949 |********************************   568437.73117
#               2672          568915 |*******************                569339.67440
#               1063          569881 |*******                            570234.02916
#                323          570847 |**                                 571287.74303
#                187          571813 |*                                  572292.47594
#                233          572779 |*                                  573272.42918
#                220          573745 |*                                  574273.63636
#                254          574711 |*                                  575202.34252
#                187          575677 |*                                  576115.53476
#                138          576643 |*                                  577085.13768
#                 65          577609 |*                                  578087.81538
#                 79          578575 |*                                  579075.77215
#                135          579541 |*                                  580139.83704
#                256          580507 |*                                  581014.00781
#                415          581473 |***                                581993.39277
#                572          582439 |****                               582967.74476
#                532          583405 |***                                583888.00000
#                412          584371 |***                                584814.56311
#                231          585337 |*                                  585751.64069
#
#                909           > 95% |******                             588806.35644
#
#        mean of 95%    571038.26437
#          95th %ile          586291
#
# WARNINGS
#     Actual benchmark run time only accounts for 67.6% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
          prc thr      nsecs/call      samples   errors cnt/samp     size
read_z10k   1   1           94810        17048        0        8    10240
# bin/../bin-riscv64/read -N read_z10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     92755                      92755
#                        max    666400                     125866
#                       mean    100993.91045                99653.41301
#                     median     94888                      94810*
#                     stddev     13533.04503                 8740.36260
#             standard error       102.30605                   66.94108
#       99% confidence level       263.54039                  172.44023
#                       skew         8.48155                    1.41220
#                   kurtosis       226.80281                    0.32698
#           time correlation         1.75184                    1.40638
#
#               elapsed time        20.00761
#                   run time        15.85424
#          getnsecs overhead      1416
#
#          number of samples     17498
#         number of outliers       450
#    number of final samples     17048
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4           92755 |*                                   93061.00000
#               4197           93544 |***************************         94241.87777
#               4872           94333 |********************************    94504.01663
#                645           95122 |****                                95661.24341
#               2449           95911 |****************                    96148.17885
#                488           96700 |***                                 97007.97541
#                201           97489 |*                                   97898.32836
#                147           98278 |*                                   98616.60544
#                 71           99067 |*                                   99419.88732
#                 43           99856 |*                                  100258.23256
#                 19          100645 |*                                  100960.57895
#                 19          101434 |*                                  101811.94737
#                 16          102223 |*                                  102591.43750
#                 13          103012 |*                                  103410.76923
#                 15          103801 |*                                  104243.66667
#                 14          104590 |*                                  105070.85714
#                  7          105379 |*                                  105761.85714
#                 10          106168 |*                                  106557.20000
#                  9          106957 |*                                  107340.33333
#                  7          107746 |*                                  107967.85714
#                  3          108535 |*                                  108810.66667
#                  5          109324 |*                                  109748.40000
#                 27          110113 |*                                  110741.37037
#                454          110902 |**                                 111379.08811
#                320          111691 |**                                 112022.72812
#                451          112480 |**                                 112936.98004
#                454          113269 |**                                 113636.49119
#                288          114058 |*                                  114478.82639
#                233          114847 |*                                  115228.56223
#                256          115636 |*                                  116037.81641
#                275          116425 |*                                  116779.68364
#                183          117214 |*                                  117608.40984
#
#                853           > 95% |*****                              120919.61313
#
#        mean of 95%     98533.30997
#          95th %ile          117977
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 79.2% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
         prc thr      nsecs/call      samples   errors cnt/samp     size
read_z1k   1   1           54823         5275        0       16     1024
# bin/../bin-riscv64/read -N read_z1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     53312                      53312
#                        max    208445                      72923
#                       mean     57934.63195                57399.77403
#                     median     54842                      54823*
#                     stddev      6946.56900                 5223.23525
#             standard error        94.73279                   71.91647
#       99% confidence level       244.03167                  185.25682
#                       skew         4.59711                    1.32370
#                   kurtosis        57.14821                    0.14846
#           time correlation         3.25435                    2.82334
#
#               elapsed time        20.01059
#                   run time         5.17373
#          getnsecs overhead      1416
#
#          number of samples      5377
#         number of outliers       102
#    number of final samples      5275
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                387           53312 |*******                             53628.38501
#               1619           53775 |********************************    54020.64855
#                454           54238 |********                            54419.62996
#                876           54701 |*****************                   54939.69178
#                337           55164 |******                              55338.94659
#                133           55627 |**                                  55822.21805
#                 58           56090 |*                                   56318.37931
#                 40           56553 |*                                   56773.92500
#                 28           57016 |*                                   57238.17857
#                 21           57479 |*                                   57685.04762
#                 14           57942 |*                                   58190.64286
#                 10           58405 |*                                   58691.00000
#                 12           58868 |*                                   59074.33333
#                  5           59331 |*                                   59543.80000
#                 13           59794 |*                                   59970.84615
#                  4           60257 |*                                   60417.75000
#                  4           60720 |*                                   60896.75000
#                  4           61183 |*                                   61363.50000
#                  7           61646 |*                                   61884.00000
#                  4           62109 |*                                   62476.25000
#                 17           62572 |*                                   62890.58824
#                 49           63035 |*                                   63304.75510
#                 71           63498 |*                                   63753.91549
#                110           63961 |**                                  64201.40909
#                115           64424 |**                                  64670.20000
#                122           64887 |**                                  65096.98361
#                101           65350 |*                                   65564.83168
#                105           65813 |**                                  66036.09524
#                 88           66276 |*                                   66519.72727
#                 81           66739 |*                                   66960.59259
#                 67           67202 |*                                   67427.26866
#                 55           67665 |*                                   67859.61818
#
#                264           > 95% |*****                               70029.87879
#
#        mean of 95%     56734.36839
#          95th %ile           68117
#
# WARNINGS
#     Actual benchmark run time only accounts for 25.9% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
            prc thr      nsecs/call      samples   errors cnt/samp     size
read_zw100k   1   1          584491        17736        0        1   102400
# bin/../bin-riscv64/read -N read_zw100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    571490                     571490
#                        max   3258731                     610791
#                       mean    620930.01073               588296.48387
#                     median    585391                     584491*
#                     stddev     78681.44109                 7508.24181
#             standard error       531.55856                   56.37810
#       99% confidence level      1369.29485                  145.22998
#                       skew         4.37888                    1.28792
#                   kurtosis        68.94606                    0.27738
#           time correlation         8.28204                    1.26933
#
#               elapsed time        20.00621
#                   run time        13.63886
#          getnsecs overhead      1416
#
#          number of samples     21910
#         number of outliers      4174
#    number of final samples     17736
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          571490 |*                                  571490.00000
#                  2          572537 |*                                  572640.50000
#                  0          573584 |                                              -
#                  2          574631 |*                                  575040.50000
#                  1          575678 |*                                  576691.00000
#                  4          576725 |*                                  577190.75000
#                  5          577772 |*                                  578290.80000
#                 17          578819 |*                                  579455.64706
#                 94          579866 |*                                  580561.06383
#                610          580913 |****                               581571.50656
#               2462          581960 |*******************                582578.23314
#               4035          583007 |********************************   583545.57993
#               3237          584054 |*************************          584519.82576
#               1114          585101 |********                           585514.32406
#                367          586148 |**                                 586624.41689
#                264          587195 |**                                 587769.32197
#                316          588242 |**                                 588753.90506
#                516          589289 |****                               589821.57752
#                421          590336 |***                                590806.15439
#                286          591383 |**                                 591837.11888
#                 87          592430 |*                                  592864.52874
#                 45          593477 |*                                  594042.08889
#                 61          594524 |*                                  595158.19672
#                175          595571 |*                                  596153.30286
#                308          596618 |**                                 597167.98052
#                577          597665 |****                               598222.41594
#                501          598712 |***                                599234.55888
#                376          599759 |**                                 600238.93883
#                210          600806 |*                                  601301.57143
#                212          601853 |*                                  602394.38679
#                224          602900 |*                                  603463.44196
#                319          603947 |**                                 604497.70533
#
#                887           > 95% |*******                            606695.76776
#
#        mean of 95%    587327.87062
#          95th %ile          604991
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 68.2% of elapsed time.
#
# Usage: read
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'read')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-read (default /dev/zero)]
#     [-s buffer-size (default 1024)]
#     [-w (store a byte to each page after read)]
# notes: measures read()
             prc thr      nsecs/call      samples   errors cnt/samp 
realpath_tmp   1   1         2424713         3521        0        1 
# bin/../bin-riscv64/realpath -N realpath_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2200710                    2200710
#                        max   4340435                    2725716
#                       mean   2412868.57389              2397334.60863
#                     median   2426512                    2424713*
#                     stddev    169043.11386               112812.53697
#             standard error      2820.12836                 1901.18489
#       99% confidence level      7264.65065                 4897.45227
#                       skew         4.22533                    0.07254
#                   kurtosis        35.77504                   -1.11096
#           time correlation       127.61078                  108.41675
#
#               elapsed time        20.00798
#                   run time         8.67862
#          getnsecs overhead      1416
#
#          number of samples      3593
#         number of outliers        72
#    number of final samples      3521
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4         2200710 |*                                 2205685.00000
#                  6         2212158 |*                                 2220176.66667
#                 19         2223606 |*                                 2229883.94737
#                137         2235054 |*************                     2242129.22628
#                258         2246502 |*************************         2252934.34496
#                316         2257950 |*******************************   2264050.69620
#                320         2269398 |********************************  2274422.46875
#                137         2280846 |*************                     2285833.28467
#                 65         2292294 |******                            2297138.56923
#                 35         2303742 |***                               2309116.71429
#                 25         2315190 |**                                2320247.20000
#                 20         2326638 |**                                2331806.20000
#                 16         2338086 |*                                 2343011.25000
#                 17         2349534 |*                                 2356152.70588
#                 16         2360982 |*                                 2365349.25000
#                 14         2372430 |*                                 2379554.57143
#                 44         2383878 |****                              2391498.40909
#                 78         2395326 |*******                           2401296.73077
#                117         2406774 |***********                       2413115.61538
#                209         2418222 |********************              2424081.31579
#                196         2429670 |*******************               2435557.86224
#                148         2441118 |**************                    2446618.68919
#                165         2452566 |****************                  2458380.60606
#                150         2464014 |***************                   2469885.50000
#                156         2475462 |***************                   2481419.41667
#                153         2486910 |***************                   2492380.42484
#                136         2498358 |*************                     2503419.83824
#                129         2509806 |************                      2515103.33333
#                 84         2521254 |********                          2526512.38095
#                 69         2532702 |******                            2537628.14493
#                 68         2544150 |******                            2549419.66176
#                 37         2555598 |***                               2561030.13514
#
#                177           > 95% |*****************                 2611936.03390
#
#        mean of 95%   2385975.62171
#          95th %ile         2567014
#
# WARNINGS
#     Actual benchmark run time only accounts for 43.4% of elapsed time.
#
# Usage: realpath
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'realpath')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f directory (default = /)]
# notes: measures realpath()
             prc thr      nsecs/call      samples   errors cnt/samp 
realpath_usr   1   1         2570714         7012        0        1 
# bin/../bin-riscv64/realpath -N realpath_usr -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /var/tmp/libmicro.1285/0/1/2/3/4/5/6/7/8/9 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2337211                    2337211
#                        max  17459995                    2883718
#                       mean   2591319.80211              2546414.30106
#                     median   2574214                    2570714*
#                     stddev    289163.24670               112436.76293
#             standard error      3361.90881                 1342.72594
#       99% confidence level      8660.27709                 3458.86203
#                       skew        20.28998                    0.11833
#                   kurtosis       951.78360                   -0.91237
#           time correlation        81.15239                   54.11707
#
#               elapsed time        20.00671
#                   run time        19.19852
#          getnsecs overhead      1416
#
#          number of samples      7398
#         number of outliers       386
#    number of final samples      7012
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6         2337211 |*                                 2342561.16667
#                 10         2349337 |*                                 2356291.20000
#                 22         2361463 |*                                 2367516.27273
#                 88         2373589 |***                               2381283.30682
#                332         2385715 |**************                    2392983.19277
#                587         2397841 |*************************         2404380.09199
#                737         2409967 |********************************  2415694.56174
#                402         2422093 |*****************                 2427421.94776
#                192         2434219 |********                          2439914.44792
#                 73         2446345 |***                               2451727.56164
#                 41         2458471 |*                                 2463020.02439
#                 35         2470597 |*                                 2476009.82857
#                 21         2482723 |*                                 2487698.61905
#                 20         2494849 |*                                 2499668.10000
#                 11         2506975 |*                                 2511904.36364
#                 17         2519101 |*                                 2525872.11765
#                 71         2531227 |***                               2538396.69014
#                233         2543353 |**********                        2550525.22747
#                458         2555479 |*******************               2562039.72926
#                618         2567605 |**************************        2573660.16505
#                516         2579731 |**********************            2585408.04845
#                372         2591857 |****************                  2597616.60484
#                280         2603983 |************                      2609823.99286
#                233         2616109 |**********                        2622166.88841
#                220         2628235 |*********                         2634225.02273
#                220         2640361 |*********                         2645937.41364
#                171         2652487 |*******                           2658513.11111
#                176         2664613 |*******                           2670735.48295
#                137         2676739 |*****                             2683013.66423
#                145         2688865 |******                            2694617.33103
#                118         2700991 |*****                             2706540.12712
#                 99         2713117 |****                              2719205.41414
#
#                351           > 95% |***************                   2770906.47009
#
#        mean of 95%   2534584.73322
#          95th %ile         2725216
#
# Usage: realpath
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'realpath')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f directory (default = /)]
# notes: measures realpath()
        prc thr      nsecs/call      samples   errors cnt/samp 
recurse   1   1          103777         5304        0        8 
# bin/../bin-riscv64/recurse -N recurse -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     98822                      98822
#                        max    441947                     120255
#                       mean    106971.86356               105706.67685
#                     median    103887                     103777*
#                     stddev     10339.57776                 4898.44314
#             standard error       139.45688                   67.25991
#       99% confidence level       359.24092                  173.26154
#                       skew        12.30517                    1.15892
#                   kurtosis       316.48916                    0.02968
#           time correlation         3.92489                    2.86729
#
#               elapsed time        20.00694
#                   run time         5.18976
#          getnsecs overhead      1416
#
#          number of samples      5497
#         number of outliers       193
#    number of final samples      5304
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4           98822 |*                                   99088.25000
#                 28           99349 |*                                   99657.75000
#                112           99876 |******                             100167.13393
#                155          100403 |********                           100681.23226
#                266          100930 |***************                    101212.28195
#                385          101457 |**********************             101740.84935
#                512          101984 |*****************************      102253.41016
#                552          102511 |********************************   102783.29167
#                466          103038 |***************************        103308.00215
#                441          103565 |*************************          103831.46712
#                377          104092 |*********************              104320.54642
#                270          104619 |***************                    104876.77407
#                200          105146 |***********                        105403.17000
#                131          105673 |*******                            105936.35878
#                 72          106200 |****                               106425.47222
#                 52          106727 |***                                106967.82692
#                 29          107254 |*                                  107532.65517
#                 18          107781 |*                                  108013.94444
#                 11          108308 |*                                  108488.36364
#                 14          108835 |*                                  109062.28571
#                 10          109362 |*                                  109651.70000
#                 18          109889 |*                                  110158.16667
#                 38          110416 |**                                 110694.26316
#                 51          110943 |**                                 111182.27451
#                 69          111470 |****                               111754.36232
#                117          111997 |******                             112280.51282
#                126          112524 |*******                            112772.69841
#                141          113051 |********                           113305.19858
#                 85          113578 |****                               113852.83529
#                106          114105 |******                             114365.37736
#                111          114632 |******                             114890.97297
#                 71          115159 |****                               115406.23944
#
#                266           > 95% |***************                    117274.69173
#
#        mean of 95%    105095.90036
#          95th %ile          115656
#
# WARNINGS
#     Actual benchmark run time only accounts for 25.9% of elapsed time.
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
            prc thr      nsecs/call      samples   errors cnt/samp 
recurse_10k   1   1         4552337         4108        0        1 
# bin/../bin-riscv64/recurse -N recurse_10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 10k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   4397235                    4397235
#                        max  29183479                    4769738
#                       mean   4586343.24477              4562056.37220
#                     median   4555937                    4552337*
#                     stddev    399964.98783                69416.72066
#             standard error      6100.82784                 1083.05092
#       99% confidence level     15715.73253                 2789.93917
#                       skew        54.46019                    0.59572
#                   kurtosis      3327.53344                    0.04627
#           time correlation        82.61428                   56.65041
#
#               elapsed time        20.01168
#                   run time        19.74737
#          getnsecs overhead      1416
#
#          number of samples      4298
#         number of outliers       190
#    number of final samples      4108
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4         4397235 |*                                 4401585.00000
#                  6         4406607 |*                                 4410418.33333
#                 13         4415979 |*                                 4420973.30769
#                 19         4425351 |**                                4430966.52632
#                 36         4434723 |****                              4439773.91667
#                 46         4444095 |*****                             4448967.80435
#                 68         4453467 |********                          4458566.10294
#                118         4462839 |**************                    4467851.49153
#                120         4472211 |**************                    4477007.12500
#                147         4481583 |*****************                 4486700.22449
#                179         4490955 |*********************             4495886.00000
#                206         4500327 |*************************         4505272.22330
#                221         4509699 |**************************        4514581.15837
#                262         4519071 |********************************  4524277.23664
#                237         4528443 |****************************      4533002.38819
#                253         4537815 |******************************    4542501.45455
#                230         4547187 |****************************      4552015.89565
#                219         4556559 |**************************        4561259.27854
#                201         4565931 |************************          4570636.04478
#                193         4575303 |***********************           4580061.04145
#                155         4584675 |******************                4589610.30968
#                158         4594047 |*******************               4598812.82278
#                143         4603419 |*****************                 4607999.23077
#                 96         4612791 |***********                       4616969.42708
#                123         4622163 |***************                   4627038.86179
#                 92         4631535 |***********                       4636725.32609
#                 76         4640907 |*********                         4646070.31579
#                 68         4650279 |********                          4654581.75000
#                 58         4659651 |*******                           4664722.05172
#                 57         4669023 |******                            4672774.64912
#                 53         4678395 |******                            4682707.71698
#                 45         4687767 |*****                             4691604.60000
#
#                206           > 95% |*************************         4727195.08252
#
#        mean of 95%   4553338.13173
#          95th %ile         4697138
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
           prc thr      nsecs/call      samples   errors cnt/samp 
recurse_1k   1   1           62233        16718        0       14 
# bin/../bin-riscv64/recurse -N recurse_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     61153                      61153
#                        max   1206306                      72140
#                       mean     64282.61408                63624.56783
#                     median     62260                      62233*
#                     stddev     10063.65411                 2842.73378
#             standard error        76.53246                   21.98589
#       99% confidence level       197.14760                   56.63565
#                       skew        86.40974                    1.33557
#                   kurtosis      9634.80422                    0.23224
#           time correlation         0.67226                    0.49639
#
#               elapsed time        20.00897
#                   run time        16.51373
#          getnsecs overhead      1416
#
#          number of samples     17291
#         number of outliers       573
#    number of final samples     16718
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                411           61153 |***                                 61281.46472
#               3499           61415 |********************************    61563.40640
#               2268           61677 |********************                61793.98589
#               1881           61939 |*****************                   62083.62041
#               1384           62201 |************                        62300.04986
#                587           62463 |*****                               62594.16184
#               1131           62725 |**********                          62849.81609
#                771           62987 |*******                             63110.45785
#                651           63249 |*****                               63380.64823
#                248           63511 |**                                  63602.81452
#                 79           63773 |*                                   63882.58228
#                 33           64035 |*                                   64151.81818
#                 10           64297 |*                                   64397.60000
#                  8           64559 |*                                   64688.75000
#                  2           64821 |*                                   64899.00000
#                  4           65083 |*                                   65233.00000
#                  3           65345 |*                                   65433.00000
#                  3           65607 |*                                   65781.66667
#                  2           65869 |*                                   66079.50000
#                  1           66131 |*                                   66173.00000
#                  0           66393 |                                              -
#                 29           66655 |*                                   66867.89655
#                111           66917 |*                                   67078.98198
#                317           67179 |**                                  67310.94322
#                357           67441 |***                                 67592.54342
#                378           67703 |***                                 67834.60053
#                391           67965 |***                                 68096.71611
#                296           68227 |**                                  68350.66554
#                283           68489 |**                                  68613.03887
#                290           68751 |**                                  68879.80000
#                244           69013 |**                                  69143.39754
#                210           69275 |*                                   69409.37619
#
#                836           > 95% |*******                             70465.47368
#
#        mean of 95%     63264.47481
#          95th %ile           69533
#
# Usage: recurse
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'recurse')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-d depth-limit (default = 100)]
# notes: measures recursion performance
            prc thr      nsecs/call      samples   errors cnt/samp     size
scasecmp_10   1   1             235        17701        0     3548       10
# bin/../bin-riscv64/strcasecmp -N scasecmp_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       230                        230
#                        max    127200                        283
#                       mean       254.32573                  242.08186
#                     median       235                        235*
#                     stddev       980.32223                   13.54171
#             standard error         7.20514                    0.10178
#       99% confidence level        18.56043                    0.26219
#                       skew       121.19254                    1.44677
#                   kurtosis     15348.97994                    0.63786
#           time correlation         0.00584                    0.00219
#
#               elapsed time        20.00730
#                   run time        16.07372
#          getnsecs overhead      1416
#
#          number of samples     18512
#         number of outliers       811
#    number of final samples     17701
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 36             230 |*                                     230.88889
#               4817             232 |********************************      232.87648
#               4813             234 |*******************************       234.24309
#                959             236 |******                                236.60063
#               1842             238 |************                          238.44571
#                800             240 |*****                                 240.34000
#                240             242 |*                                     242.37083
#                 83             244 |*                                     244.45783
#                 41             246 |*                                     246.51220
#                 22             248 |*                                     248.36364
#                 21             250 |*                                     250.57143
#                 22             252 |*                                     252.59091
#                187             254 |*                                     254.72727
#                505             256 |***                                   256.53465
#                368             258 |**                                    258.47826
#                405             260 |**                                    260.55062
#                338             262 |**                                    262.47041
#                296             264 |*                                     264.45270
#                282             266 |*                                     266.55674
#                286             268 |*                                     268.46853
#                271             270 |*                                     270.48708
#                181             272 |*                                     272.13812
#
#                886           > 95% |*****                                 276.56095
#
#        mean of 95%       240.26512
#          95th %ile             273
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: strcasecmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcasecmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcasecmp()
            prc thr      nsecs/call      samples   errors cnt/samp     size
scasecmp_1k   1   1           11272        16060        0       89     1024
# bin/../bin-riscv64/strcasecmp -N scasecmp_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     11143                      11143
#                        max    155110                      12989
#                       mean     11629.79871                11551.42123
#                     median     11299                      11272*
#                     stddev      1362.14939                  479.30095
#             standard error        10.62883                    3.78212
#       99% confidence level        27.37985                    9.74275
#                       skew        73.82236                    1.19004
#                   kurtosis      7565.63526                   -0.17618
#           time correlation         0.11054                    0.08803
#
#               elapsed time        20.00787
#                   run time        17.06779
#          getnsecs overhead      1416
#
#          number of samples     16424
#         number of outliers       364
#    number of final samples     16060
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                539           11143 |***                                 11168.63822
#               4705           11185 |********************************    11213.63252
#               2745           11227 |******************                  11238.46485
#                285           11269 |*                                   11287.76140
#                275           11311 |*                                   11336.30182
#                759           11353 |*****                               11375.27668
#               1565           11395 |**********                          11417.34058
#                794           11437 |*****                               11450.53149
#                245           11479 |*                                   11495.37143
#                 56           11521 |*                                   11537.78571
#                 12           11563 |*                                   11575.75000
#                 12           11605 |*                                   11620.58333
#                  2           11647 |*                                   11667.50000
#                  2           11689 |*                                   11712.50000
#                  3           11731 |*                                   11742.66667
#                  1           11773 |*                                   11796.00000
#                  3           11815 |*                                   11839.66667
#                  2           11857 |*                                   11887.50000
#                  1           11899 |*                                   11934.00000
#                  0           11941 |                                              -
#                  3           11983 |*                                   12006.33333
#                 20           12025 |*                                   12055.45000
#                 99           12067 |*                                   12091.67677
#                327           12109 |**                                  12134.32110
#                460           12151 |***                                 12171.76739
#                588           12193 |***                                 12212.05102
#                369           12235 |**                                  12255.81030
#                230           12277 |*                                   12296.73913
#                320           12319 |**                                  12339.52500
#                304           12361 |**                                  12382.89145
#                289           12403 |*                                   12423.92734
#                242           12445 |*                                   12463.77273
#
#                803           > 95% |*****                               12652.42466
#
#        mean of 95%     11493.47368
#          95th %ile           12484
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: strcasecmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcasecmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcasecmp()
            prc thr      nsecs/call      samples   errors cnt/samp   method
sched_yield   1   1           13916         5036        0       65     libc
# bin/../bin-riscv64/sched_yield -N sched_yield -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     13412                      13412
#                        max    299246                      17645
#                       mean     14629.66343                14447.40925
#                     median     13926                      13916*
#                     stddev      4395.90003                 1065.77761
#             standard error        61.29705                   15.01840
#       99% confidence level       157.90119                   38.68740
#                       skew        54.81913                    1.27405
#                   kurtosis      3457.06693                    0.10973
#           time correlation         0.79260                    0.61996
#
#               elapsed time        20.01288
#                   run time         4.90423
#          getnsecs overhead      1416
#
#          number of samples      5143
#         number of outliers       107
#    number of final samples      5036
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 62           13412 |*                                   13476.79032
#                276           13512 |*******                             13564.02174
#                330           13612 |********                            13672.14848
#               1214           13712 |********************************    13761.45222
#                607           13812 |****************                    13858.74959
#                600           13912 |***************                     13961.27167
#                294           14012 |*******                             14054.72789
#                202           14112 |*****                               14153.60396
#                 79           14212 |**                                  14250.54430
#                 39           14312 |*                                   14356.10256
#                 33           14412 |*                                   14460.33333
#                 12           14512 |*                                   14570.08333
#                  8           14612 |*                                   14664.00000
#                  7           14712 |*                                   14753.85714
#                  6           14812 |*                                   14856.66667
#                  4           14912 |*                                   14963.25000
#                  7           15012 |*                                   15043.57143
#                  9           15112 |*                                   15183.44444
#                 11           15212 |*                                   15260.81818
#                  9           15312 |*                                   15380.33333
#                 12           15412 |*                                   15455.91667
#                 41           15512 |*                                   15573.46341
#                 59           15612 |*                                   15663.30508
#                 95           15712 |**                                  15764.46316
#                147           15812 |***                                 15858.01361
#                142           15912 |***                                 15959.50000
#                117           16012 |***                                 16065.21368
#                112           16112 |**                                  16155.73214
#                 67           16212 |*                                   16268.97015
#                 79           16312 |**                                  16359.69620
#                 66           16412 |*                                   16466.71212
#                 38           16512 |*                                   16547.73684
#
#                252           > 95% |******                              17038.80952
#
#        mean of 95%     14310.90573
#          95th %ile           16604
#
# WARNINGS
#     Actual benchmark run time only accounts for 24.5% of elapsed time.
#
# Usage: sched_yield
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sched_yield')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -s skip libc making system call directly
# note: measures sched_yield()
              prc thr      nsecs/call      samples   errors cnt/samp   method
sched_yield_s   1   1           14354         4049        0       63  syscall
# bin/../bin-riscv64/sched_yield -N sched_yield_s -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     13894                      13894
#                        max    274345                      18074
#                       mean     15103.52787                14881.23487
#                     median     14365                      14354*
#                     stddev      4390.18291                 1074.73939
#             standard error        68.05054                   16.88999
#       99% confidence level       175.29819                   43.50860
#                       skew        50.37333                    1.29978
#                   kurtosis      2930.80828                    0.13545
#           time correlation         1.02871                    0.77406
#
#               elapsed time        20.01269
#                   run time         3.98648
#          getnsecs overhead      1416
#
#          number of samples      4162
#         number of outliers       113
#    number of final samples      4049
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                134           13894 |******                              13960.50746
#                265           13992 |***********                         14038.47170
#                551           14090 |************************            14150.27405
#                712           14188 |********************************    14231.30618
#                528           14286 |***********************             14333.82386
#                377           14384 |****************                    14427.87798
#                199           14482 |********                            14531.86432
#                156           14580 |*******                             14626.92949
#                 63           14678 |**                                  14719.80952
#                 23           14776 |*                                   14824.00000
#                 17           14874 |*                                   14910.29412
#                 21           14972 |*                                   15016.47619
#                 14           15070 |*                                   15119.42857
#                 14           15168 |*                                   15214.35714
#                  5           15266 |*                                   15315.80000
#                  7           15364 |*                                   15426.14286
#                  5           15462 |*                                   15524.60000
#                  8           15560 |*                                   15594.00000
#                  5           15658 |*                                   15712.00000
#                 12           15756 |*                                   15810.75000
#                 10           15854 |*                                   15895.40000
#                 12           15952 |*                                   15996.75000
#                 20           16050 |*                                   16103.00000
#                 41           16148 |*                                   16197.31707
#                 78           16246 |***                                 16299.16667
#                 74           16344 |***                                 16392.06757
#                 82           16442 |***                                 16489.71951
#                 90           16540 |****                                16589.85556
#                103           16638 |****                                16680.61165
#                 88           16736 |***                                 16785.21591
#                 81           16834 |***                                 16883.71605
#                 51           16932 |**                                  16980.76471
#
#                203           > 95% |*********                           17438.60099
#
#        mean of 95%     14746.25169
#          95th %ile           17026
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.9% of elapsed time.
#
# Usage: sched_yield
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sched_yield')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -s skip libc making system call directly
# note: measures sched_yield()
          prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_10   1   1          101012        16747        0        8       10   ---
# bin/../bin-riscv64/select -N select_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     98837                      98837
#                        max   1608110                     133822
#                       mean    107261.67880               106188.01606
#                     median    101288                     101012*
#                     stddev     17253.57408                 9218.73973
#             standard error       132.00701                   71.23658
#       99% confidence level       340.05006                  183.50542
#                       skew        42.96152                    1.31806
#                   kurtosis      3489.12745                    0.09985
#           time correlation         1.83749                    1.55537
#
#               elapsed time        20.00895
#                   run time        16.24831
#          getnsecs overhead      1416
#
#          number of samples     17083
#         number of outliers       336
#    number of final samples     16747
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8           98837 |*                                   99243.50000
#               6168           99655 |********************************   100201.38911
#               2367          100473 |************                       100715.01436
#               1539          101291 |*******                            101849.99155
#               1490          102109 |*******                            102425.83356
#                352          102927 |*                                  103279.17330
#                274          103745 |*                                  104153.23358
#                186          104563 |*                                  104921.27419
#                131          105381 |*                                  105760.03817
#                 84          106199 |*                                  106591.91667
#                 52          107017 |*                                  107360.63462
#                 36          107835 |*                                  108240.22222
#                 31          108653 |*                                  108957.41935
#                 13          109471 |*                                  109943.84615
#                 13          110289 |*                                  110610.38462
#                 10          111107 |*                                  111592.90000
#                  6          111925 |*                                  112284.00000
#                  4          112743 |*                                  113180.00000
#                  6          113561 |*                                  113913.66667
#                  6          114379 |*                                  114797.66667
#                  7          115197 |*                                  115604.14286
#                 12          116015 |*                                  116593.83333
#                126          116833 |*                                  117395.73016
#                495          117651 |**                                 118061.04848
#                418          118469 |**                                 118849.97129
#                475          119287 |**                                 119694.55789
#                315          120105 |*                                  120496.39048
#                291          120923 |*                                  121334.21649
#                259          121741 |*                                  122130.11969
#                266          122559 |*                                  122974.38722
#                272          123377 |*                                  123768.26471
#                197          124195 |*                                  124567.80203
#
#                838           > 95% |****                               128160.79236
#
#        mean of 95%    105030.60915
#          95th %ile          125011
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
           prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_100   1   1          265531         3718        0        2      100   ---
# bin/../bin-riscv64/select -N select_100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    257164                     257164
#                        max   1038996                     350396
#                       mean    281897.13461               278019.54169
#                     median    265998                     265531*
#                     stddev     37230.78836                24184.96016
#             standard error       601.90749                  396.63468
#       99% confidence level      1550.51370                 1021.73093
#                       skew         6.19939                    1.53171
#                   kurtosis        86.91245                    0.75540
#           time correlation        22.29475                   17.79898
#
#               elapsed time        20.01521
#                   run time         3.18179
#          getnsecs overhead      1416
#
#          number of samples      3826
#         number of outliers       108
#    number of final samples      3718
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 10          257164 |*                                  258714.10000
#                 81          259448 |**                                 260949.39506
#               1085          261732 |********************************   263242.86359
#                774          264016 |**********************             264703.19380
#                338          266300 |*********                          267534.58284
#                337          268584 |*********                          269519.78635
#                143          270868 |****                               271909.04895
#                 72          273152 |**                                 274151.84722
#                 32          275436 |*                                  276469.75000
#                 21          277720 |*                                  278558.61905
#                 17          280004 |*                                  281258.52941
#                 12          282288 |*                                  283431.91667
#                  5          284572 |*                                  285711.00000
#                  5          286856 |*                                  287991.20000
#                  9          289140 |*                                  290410.77778
#                  9          291424 |*                                  292623.88889
#                  8          293708 |*                                  294714.62500
#                  8          295992 |*                                  297552.25000
#                  9          298276 |*                                  299394.33333
#                  3          300560 |*                                  301764.66667
#                  7          302844 |*                                  303822.00000
#                  4          305128 |*                                  306385.00000
#                  0          307412 |                                              -
#                 14          309696 |*                                  311026.50000
#                 50          311980 |*                                  313253.52000
#                 83          314264 |**                                 315486.12048
#                103          316548 |***                                317778.81553
#                 84          318832 |**                                 320031.58333
#                 74          321116 |**                                 322179.82432
#                 63          323400 |*                                  324529.58730
#                 41          325684 |*                                  326849.58537
#                 31          327968 |*                                  329082.19355
#
#                186           > 95% |*****                              339711.27419
#
#        mean of 95%    274770.76982
#          95th %ile          330232
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 15.9% of elapsed time.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
            prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_1000   1   1         1155197        13753        0        1     1000   ---
# bin/../bin-riscv64/select -N select_1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1108197                    1108197
#                        max   3174219                    1512301
#                       mean   1221861.31013              1208746.59514
#                     median   1157197                    1155197*
#                     stddev    140807.50319               101203.86050
#             standard error      1186.61285                  862.97528
#       99% confidence level      3056.71471                 2223.02433
#                       skew         3.75415                    0.91852
#                   kurtosis        29.96585                   -0.48208
#           time correlation        27.34662                   23.45321
#
#               elapsed time        20.00817
#                   run time        17.22711
#          getnsecs overhead      1416
#
#          number of samples     14081
#         number of outliers       328
#    number of final samples     13753
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1103         1108197 |****************                  1115082.53853
#               2130         1117351 |********************************  1121178.18826
#               1238         1126505 |******************                1131155.96042
#               1439         1135659 |*********************             1140042.38290
#                870         1144813 |*************                     1149101.26897
#                634         1153967 |*********                         1158335.06782
#                484         1163121 |*******                           1167324.47521
#                326         1172275 |****                              1176516.11963
#                270         1181429 |****                              1185767.53333
#                215         1190583 |***                               1194625.63256
#                174         1199737 |**                                1204039.89655
#                147         1208891 |**                                1213024.79592
#                 96         1218045 |*                                 1222546.52083
#                 82         1227199 |*                                 1231841.64634
#                 85         1236353 |*                                 1240768.45882
#                 52         1245507 |*                                 1249672.88462
#                 46         1254661 |*                                 1259132.78261
#                 68         1263815 |*                                 1268679.02941
#                163         1272969 |**                                1277740.53374
#                306         1282123 |****                              1287027.38235
#                362         1291277 |*****                             1295861.95028
#                406         1300431 |******                            1305189.91379
#                354         1309585 |*****                             1314174.08757
#                303         1318739 |****                              1323160.12211
#                288         1327893 |****                              1332499.49653
#                294         1337047 |****                              1341525.78231
#                260         1346201 |***                               1350779.40385
#                209         1355355 |***                               1359437.88517
#                215         1364509 |***                               1369154.53488
#                175         1373663 |**                                1378382.17143
#                135         1382817 |**                                1387326.83704
#                136         1391971 |**                                1396211.34559
#
#                688           > 95% |**********                        1440392.59012
#
#        mean of 95%   1196548.16847
#          95th %ile         1401099
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
           prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w10   1   1          136649        18077        0        5       10   -w-
# bin/../bin-riscv64/select -N select_w10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 10 -w 1 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    132966                     132966
#                        max    870594                     181983
#                       mean    144856.24535               143438.48802
#                     median    136732                     136649*
#                     stddev     17836.33299                12855.77559
#             standard error       131.19207                   95.61700
#       99% confidence level       337.95078                  246.30939
#                       skew         9.16242                    1.46763
#                   kurtosis       289.53459                    0.47841
#           time correlation         2.27787                    1.95121
#
#               elapsed time        20.00805
#                   run time        15.98414
#          getnsecs overhead      1416
#
#          number of samples     18484
#         number of outliers       407
#    number of final samples     18077
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          132966 |*                                  133685.16667
#               2239          134152 |***********                        135140.04198
#               6414          135338 |********************************   135872.00733
#               1415          136524 |*******                            136933.17173
#               2215          137710 |***********                        138312.11287
#                922          138896 |****                               139341.17787
#                343          140082 |*                                  140593.78426
#                247          141268 |*                                  141837.44130
#                167          142454 |*                                  142960.89222
#                 85          143640 |*                                  144144.78824
#                 30          144826 |*                                  145327.90000
#                104          146012 |*                                  146729.45192
#                 25          147198 |*                                  147712.60000
#                 19          148384 |*                                  149029.15789
#                 30          149570 |*                                  150169.36667
#                 16          150756 |*                                  151358.93750
#                 10          151942 |*                                  152468.10000
#                 14          153128 |*                                  153673.21429
#                  6          154314 |*                                  154876.50000
#                 12          155500 |*                                  156081.66667
#                  6          156686 |*                                  157208.50000
#                  6          157872 |*                                  158270.50000
#                  5          159058 |*                                  159757.40000
#                 28          160244 |*                                  161050.42857
#                354          161430 |*                                  162126.49718
#                514          162616 |**                                 163178.43969
#                439          163802 |**                                 164402.26424
#                430          164988 |**                                 165551.27674
#                293          166174 |*                                  166756.58020
#                273          167360 |*                                  167941.58608
#                248          168546 |*                                  169115.41532
#                258          169732 |*                                  170325.79070
#
#                904           > 95% |****                               174918.51991
#
#        mean of 95%    141781.35480
#          95th %ile          170916
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 79.9% of elapsed time.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
            prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w100   1   1          219049        17310        0        3      100   -w-
# bin/../bin-riscv64/select -N select_w100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 100 -w 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    213030                     213030
#                        max   1004295                     286749
#                       mean    232431.17193               229611.38296
#                     median    219173                     219049*
#                     stddev     28404.83389                19049.85007
#             standard error       213.02294                  144.79149
#       99% confidence level       548.74710                  372.98287
#                       skew         5.70534                    1.41072
#                   kurtosis        79.58672                    0.32763
#           time correlation         3.73526                    3.03561
#
#               elapsed time        20.00850
#                   run time        16.25769
#          getnsecs overhead      1416
#
#          number of samples     17780
#         number of outliers       470
#    number of final samples     17310
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 79          213030 |*                                  214188.27848
#                387          214802 |**                                 215860.85530
#               4494          216574 |*******************************    217872.65888
#               4503          218346 |********************************   218760.38841
#               1447          220118 |**********                         221216.96545
#               1562          221890 |***********                        222602.43150
#                413          223662 |**                                 224435.38257
#                207          225434 |*                                  226294.09179
#                129          227206 |*                                  228031.54264
#                 77          228978 |*                                  229735.37662
#                 50          230750 |*                                  231489.08000
#                 21          232522 |*                                  233358.28571
#                 25          234294 |*                                  235150.28000
#                 19          236066 |*                                  236788.52632
#                 10          237838 |*                                  238783.20000
#                  8          239610 |*                                  240476.62500
#                 12          241382 |*                                  242392.16667
#                  5          243154 |*                                  243866.20000
#                  8          244926 |*                                  245739.12500
#                  4          246698 |*                                  247867.75000
#                  8          248470 |*                                  249342.25000
#                 10          250242 |*                                  250909.00000
#                 11          252014 |*                                  253176.27273
#                141          253786 |*                                  254990.86525
#                529          255558 |***                                256599.18904
#                520          257330 |***                                258148.10000
#                489          259102 |***                                259990.92229
#                373          260874 |**                                 261617.69973
#                236          262646 |*                                  263519.11017
#                246          264418 |*                                  265307.73984
#                211          266190 |*                                  267065.58768
#                210          267962 |*                                  268816.19524
#
#                866           > 95% |******                             276007.23326
#
#        mean of 95%    227168.01113
#          95th %ile          269724
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
             prc thr      nsecs/call      samples   errors cnt/samp    maxfd flags
select_w1000   1   1         1131697        13872        0        1     1000   -w-
# bin/../bin-riscv64/select -N select_w1000 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -n 1000 -w 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1085196                    1085196
#                        max   3695225                    1517401
#                       mean   1211748.86896              1190995.59768
#                     median   1135097                    1131697*
#                     stddev    164729.25527               109176.33640
#             standard error      1374.94164                  926.95569
#       99% confidence level      3541.84966                 2387.83787
#                       skew         3.35851                    1.03796
#                   kurtosis        19.96591                   -0.15001
#           time correlation        30.82645                   24.78099
#
#               elapsed time        20.00833
#                   run time        17.41614
#          getnsecs overhead      1416
#
#          number of samples     14354
#         number of outliers       482
#    number of final samples     13872
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                906         1085196 |***********                       1093163.81126
#               2469         1095390 |********************************  1099870.27380
#               1559         1105584 |********************              1110872.99808
#               1460         1115778 |******************                1120593.04932
#                852         1125972 |***********                       1130514.29460
#                576         1136166 |*******                           1141152.64236
#                397         1146360 |*****                             1151188.36272
#                304         1156554 |***                               1161635.59211
#                232         1166748 |***                               1171516.70259
#                191         1176942 |**                                1181622.67539
#                152         1187136 |*                                 1191976.06579
#                109         1197330 |*                                 1201895.44954
#                 87         1207524 |*                                 1212053.67816
#                 78         1217718 |*                                 1222866.66667
#                 67         1227912 |*                                 1233711.01493
#                 82         1238106 |*                                 1243490.39024
#                169         1248300 |**                                1254313.20118
#                371         1258494 |****                              1263570.94879
#                404         1268688 |*****                             1273733.40842
#                371         1278882 |****                              1284093.82749
#                266         1289076 |***                               1294019.29699
#                264         1299270 |***                               1304388.14773
#                262         1309464 |***                               1314886.20229
#                208         1319658 |**                                1324642.78365
#                224         1329852 |**                                1334892.88393
#                225         1340046 |**                                1345049.96000
#                186         1350240 |**                                1355425.27957
#                170         1360434 |**                                1365771.98235
#                166         1370628 |**                                1375264.17470
#                145         1380822 |*                                 1385813.80000
#                128         1391016 |*                                 1396383.77344
#                 98         1401210 |*                                 1406433.15306
#
#                694           > 95% |********                          1454912.97262
#
#        mean of 95%   1177096.77705
#          95th %ile         1411399
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: select
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'select')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-n fds-per-thread (default 256)]
#     [-r readable-fds (default 0)]
#     [-w writeable-fds (default 0)]
#     [-x] (start -r option with highest fd first; default is lowest first)
# notes: measures select()
      prc thr      nsecs/call      samples   errors cnt/samp 
semop   1   1           99888        11129        0        8 
# bin/../bin-riscv64/semop -N semop -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     98799                      98799
#                        max   1663260                     103566
#                       mean    109423.96361               100392.10666
#                     median    100770                      99888*
#                     stddev     23796.02104                 1058.33705
#             standard error       191.31948                   10.03219
#       99% confidence level       492.83898                   25.84293
#                       skew        20.63745                    0.98104
#                   kurtosis      1190.27239                   -0.15162
#           time correlation         3.01184                    0.30630
#
#               elapsed time        20.00747
#                   run time        14.49814
#          getnsecs overhead      1416
#
#          number of samples     15470
#         number of outliers      4341
#    number of final samples     11129
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3           98799 |*                                   98869.33333
#                 22           98914 |*                                   98993.77273
#                 71           99029 |*                                   99093.08451
#                260           99144 |******                              99209.29231
#                543           99259 |**************                      99317.79190
#                871           99374 |**********************              99435.80253
#               1050           99489 |***************************         99550.78571
#               1240           99604 |********************************    99660.16613
#               1104           99719 |****************************        99772.27899
#                700           99834 |******************                  99883.06000
#                442           99949 |***********                         99997.41855
#                330          100064 |********                           100121.86667
#                214          100179 |*****                              100239.80841
#                197          100294 |*****                              100348.09645
#                231          100409 |*****                              100465.27706
#                222          100524 |*****                              100582.21171
#                204          100639 |*****                              100693.81373
#                156          100754 |****                               100809.14103
#                172          100869 |****                               100931.58140
#                154          100984 |***                                101039.16883
#                183          101099 |****                               101155.62295
#                177          101214 |****                               101273.20904
#                195          101329 |*****                              101385.21538
#                266          101444 |******                             101501.12030
#                267          101559 |******                             101615.32210
#                270          101674 |******                             101730.65185
#                256          101789 |******                             101850.10938
#                225          101904 |*****                              101959.20000
#                176          102019 |****                               102074.32955
#                148          102134 |***                                102187.77027
#                121          102249 |***                                102306.04959
#                102          102364 |**                                 102410.53922
#
#                557           > 95% |**************                     102927.59785
#
#        mean of 95%    100258.52090
#          95th %ile          102466
#
# WARNINGS
#     Actual benchmark run time only accounts for 72.5% of elapsed time.
#
# Usage: semop
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'semop')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures semop()
           prc thr      nsecs/call      samples   errors cnt/samp 
setcontext   1   1           32834        16233        0       28 
# bin/../bin-riscv64/setcontext -N setcontext -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     32041                      32041
#                        max    207797                      44424
#                       mean     35047.51455                34659.85782
#                     median     32945                      32834*
#                     stddev      4444.23237                 3263.34759
#             standard error        34.50121                   25.61321
#       99% confidence level        88.87511                   65.97962
#                       skew         5.83041                    1.24991
#                   kurtosis       146.54924                   -0.11282
#           time correlation         0.66955                    0.56785
#
#               elapsed time        20.00685
#                   run time        16.74718
#          getnsecs overhead      1416
#
#          number of samples     16593
#         number of outliers       360
#    number of final samples     16233
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 13           32041 |*                                   32180.46154
#               5459           32325 |********************************    32535.30738
#               2728           32609 |***************                     32677.35007
#               2481           32893 |**************                      33072.98509
#                805           33177 |****                                33282.91056
#                183           33461 |*                                   33568.80874
#                149           33745 |*                                   33865.07383
#                 98           34029 |*                                   34133.26531
#                 69           34313 |*                                   34467.17391
#                 32           34597 |*                                   34730.62500
#                 22           34881 |*                                   35019.77273
#                 26           35165 |*                                   35328.88462
#                 17           35449 |*                                   35588.70588
#                 23           35733 |*                                   35915.39130
#                 20           36017 |*                                   36137.70000
#                 17           36301 |*                                   36425.29412
#                 10           36585 |*                                   36715.60000
#                  7           36869 |*                                   36967.57143
#                  3           37153 |*                                   37352.66667
#                 20           37437 |*                                   37652.35000
#                 72           37721 |*                                   37837.88889
#                 56           38005 |*                                   38172.98214
#                 91           38289 |*                                   38449.86813
#                257           38573 |*                                   38722.91051
#                300           38857 |*                                   38996.89667
#                499           39141 |**                                  39289.88978
#                512           39425 |***                                 39568.44336
#                490           39709 |**                                  39849.38571
#                381           39993 |**                                  40126.16535
#                230           40277 |*                                   40413.36522
#                178           40561 |*                                   40688.83708
#                173           40845 |*                                   40989.24855
#
#                812           > 95% |****                                42263.44951
#
#        mean of 95%     34259.48713
#          95th %ile           41117
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: setcontext
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'setcontext')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures setcontext()
           prc thr      nsecs/call      samples   errors cnt/samp 
setsockopt   1   1           60826         4177        0       14 
# bin/../bin-riscv64/setsockopt -N setsockopt -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     59526                      59526
#                        max    552248                      87233
#                       mean     65875.12706                64646.61982
#                     median     60946                      60826*
#                     stddev     13131.78563                 7531.07500
#             standard error       199.95582                  116.52651
#       99% confidence level       515.08620                  300.17229
#                       skew        15.62460                    1.43250
#                   kurtosis       499.80402                    0.51461
#           time correlation         6.23703                    5.02604
#
#               elapsed time        20.01213
#                   run time         4.10791
#          getnsecs overhead      1416
#
#          number of samples      4313
#         number of outliers       136
#    number of final samples      4177
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               1691           59526 |********************************    59922.12123
#                424           60198 |********                            60436.51179
#                676           60870 |************                        61212.74112
#                201           61542 |***                                 61772.38806
#                 55           62214 |*                                   62537.01818
#                 34           62886 |*                                   63184.52941
#                 27           63558 |*                                   63871.25926
#                 22           64230 |*                                   64514.68182
#                 13           64902 |*                                   65214.84615
#                 12           65574 |*                                   65935.16667
#                  5           66246 |*                                   66658.60000
#                 11           66918 |*                                   67191.45455
#                  7           67590 |*                                   67927.28571
#                  7           68262 |*                                   68622.28571
#                  3           68934 |*                                   69017.33333
#                  3           69606 |*                                   69816.66667
#                 16           70278 |*                                   70717.50000
#                 29           70950 |*                                   71276.48276
#                 60           71622 |*                                   71959.65000
#                 59           72294 |*                                   72667.49153
#                 54           72966 |*                                   73242.61111
#                 50           73638 |*                                   74009.86000
#                 54           74310 |*                                   74582.12963
#                 35           74982 |*                                   75331.22857
#                 47           75654 |*                                   75994.42553
#                 56           76326 |*                                   76704.75000
#                 57           76998 |*                                   77296.82456
#                 56           77670 |*                                   78044.76786
#                 69           78342 |*                                   78661.66667
#                 60           79014 |*                                   79340.88333
#                 48           79686 |*                                   80002.87500
#                 27           80358 |*                                   80711.96296
#
#                209           > 95% |***                                 83683.63636
#
#        mean of 95%     63643.91406
#          95th %ile           81026
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 20.5% of elapsed time.
#
# Usage: setsockopt
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'setsockopt')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# setsockopt(TCP_NODELAY)
          prc thr      nsecs/call      samples   errors cnt/samp 
sigaction   1   1          117456         4431        0        7 
# bin/../bin-riscv64/sigaction -N sigaction -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    114342                     114342
#                        max   1075196                     156418
#                       mean    124523.72607               123059.51162
#                     median    117542                     117456*
#                     stddev     21669.42478                11126.18319
#             standard error       322.20635                  167.14575
#       99% confidence level       830.00355                  430.56744
#                       skew        23.29693                    1.39288
#                   kurtosis       917.84233                    0.30910
#           time correlation         8.54171                    7.04468
#
#               elapsed time        20.00914
#                   run time         4.01595
#          getnsecs overhead      1416
#
#          number of samples      4523
#         number of outliers        92
#    number of final samples      4431
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                178          114342 |****                               115115.11798
#               1164          115343 |********************************   115890.11942
#                815          116344 |**********************             116751.63067
#                569          117345 |***************                    117861.46573
#                362          118346 |*********                          118784.54420
#                165          119347 |****                               119784.95758
#                 71          120348 |*                                  120758.32394
#                 28          121349 |*                                  121890.89286
#                 13          122350 |*                                  122755.07692
#                 14          123351 |*                                  123854.14286
#                 12          124352 |*                                  124823.91667
#                  6          125353 |*                                  125975.50000
#                  5          126354 |*                                  127255.20000
#                  9          127355 |*                                  127812.77778
#                  6          128356 |*                                  129014.16667
#                  4          129357 |*                                  129832.00000
#                  5          130358 |*                                  130950.00000
#                  3          131359 |*                                  131938.00000
#                  8          132360 |*                                  132887.75000
#                  4          133361 |*                                  133990.50000
#                 23          134362 |*                                  134940.69565
#                 29          135363 |*                                  135803.68966
#                 39          136364 |*                                  136893.46154
#                 69          137365 |*                                  137906.01449
#                 75          138366 |**                                 138834.74667
#                 79          139367 |**                                 139844.16456
#                100          140368 |**                                 140900.68000
#                 91          141369 |**                                 141888.72527
#                 82          142370 |**                                 142832.06098
#                 73          143371 |**                                 143859.82192
#                 57          144372 |*                                  144827.47368
#                 51          145373 |*                                  145844.50980
#
#                222           > 95% |******                             150198.76577
#
#        mean of 95%    121628.07555
#          95th %ile          146349
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 20.1% of elapsed time.
#
# Usage: sigaction
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sigaction')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures sigaction()
           prc thr      nsecs/call      samples   errors cnt/samp 
siglongjmp   1   1           63920         2805        0       14 
# bin/../bin-riscv64/siglongjmp -N siglongjmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     62260                      62260
#                        max    587134                      83270
#                       mean     68082.30003                66803.33405
#                     median     63966                      63920*
#                     stddev     12911.87374                 5556.51198
#             standard error       239.23187                  104.91457
#       99% confidence level       616.26129                  270.25994
#                       skew        23.63973                    1.26008
#                   kurtosis       903.33165                    0.06328
#           time correlation         7.77483                    5.82792
#
#               elapsed time        20.01706
#                   run time         2.89099
#          getnsecs overhead      1416
#
#          number of samples      2913
#         number of outliers       108
#    number of final samples      2805
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                504           62260 |********************************    62623.21032
#                342           62761 |*********************               62899.42690
#                318           63262 |********************                63638.06289
#                476           63763 |******************************      63942.04622
#                112           64264 |*******                             64542.01786
#                178           64765 |***********                         64992.27528
#                 69           65266 |****                                65483.57971
#                 25           65767 |*                                   66037.56000
#                 21           66268 |*                                   66494.33333
#                 18           66769 |*                                   67041.05556
#                 11           67270 |*                                   67476.27273
#                 10           67771 |*                                   68005.30000
#                  5           68272 |*                                   68533.40000
#                  6           68773 |*                                   69129.66667
#                  5           69274 |*                                   69482.20000
#                  5           69775 |*                                   69917.20000
#                  5           70276 |*                                   70539.80000
#                  6           70777 |*                                   71094.00000
#                  8           71278 |*                                   71424.62500
#                  6           71779 |*                                   72119.83333
#                 34           72280 |**                                  72551.14706
#                 33           72781 |**                                  73000.12121
#                 54           73282 |***                                 73529.77778
#                 65           73783 |****                                74029.40000
#                 55           74284 |***                                 74560.25455
#                 67           74785 |****                                75074.59701
#                 52           75286 |***                                 75549.65385
#                 44           75787 |**                                  76051.61364
#                 34           76288 |**                                  76499.85294
#                 37           76789 |**                                  76992.45946
#                 29           77290 |*                                   77568.82759
#                 30           77791 |*                                   78062.80000
#
#                141           > 95% |********                            80152.04965
#
#        mean of 95%     66096.81419
#          95th %ile           78273
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 14.4% of elapsed time.
#
# Usage: siglongjmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'siglongjmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures siglongjmp()
       prc thr      nsecs/call      samples   errors cnt/samp 
signal   1   1          472574         3675        0       10 
# bin/../bin-riscv64/signal -N signal -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    463133                     463133
#                        max    942399                     502714
#                       mean    484008.21320               475669.89850
#                     median    473834                     472574*
#                     stddev     38828.28677                 9023.32171
#             standard error       609.22577                  148.84621
#       99% confidence level      1569.36560                  383.42783
#                       skew         6.54399                    1.01097
#                   kurtosis        52.63519                    0.11850
#           time correlation        17.58099                    7.98160
#
#               elapsed time        20.00884
#                   run time        19.66615
#          getnsecs overhead      1416
#
#          number of samples      4062
#         number of outliers       387
#    number of final samples      3675
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 12          463133 |*                                  463743.83333
#                 60          464108 |******                             464714.73333
#                145          465083 |***************                    465589.57931
#                207          466058 |*********************              466553.48309
#                280          467033 |*****************************      467536.68571
#                308          468008 |********************************   468485.66234
#                305          468983 |*******************************    469474.33115
#                223          469958 |***********************            470441.98206
#                160          470933 |****************                   471415.86250
#                190          471908 |*******************                472358.73684
#                145          472883 |***************                    473337.37931
#                129          473858 |*************                      474325.00775
#                141          474833 |**************                     475299.60284
#                 86          475808 |********                           476221.20930
#                100          476783 |**********                         477278.70000
#                 85          477758 |********                           478239.64706
#                 87          478733 |*********                          479263.42529
#                 65          479708 |******                             480198.61538
#                 67          480683 |******                             481203.85075
#                 49          481658 |*****                              482155.02041
#                 78          482633 |********                           483082.84615
#                 68          483608 |*******                            484144.14706
#                 73          484583 |*******                            485087.97260
#                 70          485558 |*******                            486102.71429
#                 53          486533 |*****                              487043.62264
#                 60          487508 |******                             488025.83333
#                 46          488483 |****                               489005.30435
#                 43          489458 |****                               489869.11628
#                 42          490433 |****                               490917.33333
#                 41          491408 |****                               491932.53659
#                 34          492383 |***                                492945.47059
#                 39          493358 |****                               493890.15385
#
#                184           > 95% |*******************                497955.46739
#
#        mean of 95%    474495.29390
#          95th %ile          494324
#
# Usage: signal
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'signal')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures kill()
            prc thr      nsecs/call      samples   errors cnt/samp 
sigprocmask   1   1           56575        14217        0       19 
# bin/../bin-riscv64/sigprocmask -N sigprocmask -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     54810                      54810
#                        max    232457                      72525
#                       mean     59720.72842                59074.93128
#                     median     56595                      56575*
#                     stddev      6514.07123                 4505.26567
#             standard error        53.95890                   37.78474
#       99% confidence level       138.99814                   97.33349
#                       skew         4.68012                    1.05190
#                   kurtosis        60.90614                   -0.52132
#           time correlation         1.13124                    0.93735
#
#               elapsed time        20.00755
#                   run time        17.42439
#          getnsecs overhead      1416
#
#          number of samples     14574
#         number of outliers       357
#    number of final samples     14217
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  4           54810 |*                                   54895.00000
#                272           55204 |*                                   55520.27574
#               4514           55598 |********************************    55848.52791
#               1541           55992 |**********                          56130.79169
#               2371           56386 |****************                    56613.05567
#                816           56780 |*****                               56921.46446
#                230           57174 |*                                   57343.54348
#                 93           57568 |*                                   57732.47312
#                 57           57962 |*                                   58156.66667
#                 57           58356 |*                                   58532.80702
#                 30           58750 |*                                   58934.83333
#                 19           59144 |*                                   59345.78947
#                 11           59538 |*                                   59703.63636
#                  5           59932 |*                                   60112.00000
#                  6           60326 |*                                   60509.16667
#                  6           60720 |*                                   60859.16667
#                  4           61114 |*                                   61277.50000
#                  3           61508 |*                                   61731.66667
#                  8           61902 |*                                   62043.12500
#                  3           62296 |*                                   62498.33333
#                  6           62690 |*                                   62945.83333
#                132           63084 |*                                   63347.76515
#                316           63478 |**                                  63672.31013
#                367           63872 |**                                  64096.29428
#                464           64266 |***                                 64447.43534
#                337           64660 |**                                  64850.26706
#                424           65054 |***                                 65263.34906
#                404           65448 |**                                  65642.99505
#                351           65842 |**                                  66036.93732
#                295           66236 |**                                  66409.55932
#                192           66630 |*                                   66811.77083
#                168           67024 |*                                   67218.89881
#
#                711           > 95% |*****                               69119.34318
#
#        mean of 95%     58546.16060
#          95th %ile           67405
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: sigprocmask
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'sigprocmask')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures sigprocmask()
         prc thr      nsecs/call      samples   errors cnt/samp 
socket_i   1   1          171185          200        0      400 
# bin/../bin-riscv64/socket -N socket_i -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 400 -f PF_INET 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    144389                     144389
#                        max    229859                     229859
#                       mean    175163.66000               175163.66000
#                     median    171185                     171185*
#                     stddev     22522.66504                22522.66504
#             standard error      1592.59292                 1592.59292
#       99% confidence level      4102.51936                 4102.51936
#                       skew         0.45506                    0.45506
#                   kurtosis        -0.96530                   -0.96530
#           time correlation       382.59311                  382.59311
#
#               elapsed time        20.83740
#                   run time        14.01337
#          getnsecs overhead      1416
#
#          number of samples       200
#         number of outliers         0
#    number of final samples       200
#             ops per sample       400.00000 (-B 400)
#
#       recommended -B value         6
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          144389 |************                       145297.16667
#                 12          146592 |*************************          147766.50000
#                 14          148795 |*****************************      150041.92857
#                 10          150998 |*********************              152060.60000
#                 12          153201 |*************************          154127.75000
#                 15          155404 |********************************   156330.80000
#                  3          157607 |******                             158664.00000
#                  3          159810 |******                             160604.33333
#                  4          162013 |********                           163592.25000
#                  8          164216 |*****************                  165171.87500
#                  8          166419 |*****************                  167167.00000
#                  5          168622 |**********                         169513.80000
#                  4          170825 |********                           172187.50000
#                  4          173028 |********                           174598.00000
#                  6          175231 |************                       176298.00000
#                  6          177434 |************                       178318.16667
#                  2          179637 |****                               180599.00000
#                  5          181840 |**********                         182923.00000
#                  4          184043 |********                           185560.00000
#                  8          186246 |*****************                  187602.37500
#                  8          188449 |*****************                  189558.37500
#                  5          190652 |**********                         191812.40000
#                  2          192855 |****                               194738.50000
#                  4          195058 |********                           196199.25000
#                  6          197261 |************                       198275.33333
#                  3          199464 |******                             199843.33333
#                  5          201667 |**********                         202302.80000
#                  3          203870 |******                             205209.33333
#                  4          206073 |********                           207009.75000
#                  5          208276 |**********                         209259.00000
#                  5          210479 |**********                         211216.00000
#                  1          212682 |**                                 212850.00000
#
#                 10           > 95% |*********************              221050.70000
#
#        mean of 95%    172748.55263
#          95th %ile          214861
#
# WARNINGS
#     Actual benchmark run time only accounts for 67.3% of elapsed time.
#
# Usage: socket
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socket')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f socket-family (default PF_UNIX)]
# notes: measures socket
         prc thr      nsecs/call      samples   errors cnt/samp 
socket_u   1   1          166758          176        0      600 
# bin/../bin-riscv64/socket -N socket_u -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 600 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    137654                     137654
#                        max    216349                     216349
#                       mean    166705.38068               166705.38068
#                     median    166758                     166758*
#                     stddev     19087.86191                19087.86191
#             standard error      1438.80173                 1438.80173
#       99% confidence level      3706.35325                 3706.35325
#                       skew         0.21003                    0.21003
#                   kurtosis        -1.00552                   -1.00552
#           time correlation       372.51066                  372.51066
#
#               elapsed time        25.11464
#                   run time        17.60434
#          getnsecs overhead      1416
#
#          number of samples       176
#         number of outliers         0
#    number of final samples       176
#             ops per sample       600.00000 (-B 600)
#
#       recommended -B value         6
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8          137654 |***********************            138776.50000
#                 11          139565 |********************************   140414.18182
#                  7          141476 |********************               142292.28571
#                  8          143387 |***********************            144494.87500
#                  2          145298 |*****                              146862.00000
#                  5          147209 |**************                     148151.40000
#                  7          149120 |********************               150150.71429
#                  8          151031 |***********************            151731.87500
#                  1          152942 |**                                 153941.00000
#                  8          154853 |***********************            155949.00000
#                  7          156764 |********************               157842.14286
#                  1          158675 |**                                 158878.00000
#                  2          160586 |*****                              161090.50000
#                  5          162497 |**************                     163456.80000
#                  6          164408 |*****************                  165853.16667
#                  7          166319 |********************               166925.42857
#                  5          168230 |**************                     168871.20000
#                  6          170141 |*****************                  170890.50000
#                  8          172052 |***********************            173001.00000
#                  6          173963 |*****************                  174832.00000
#                  5          175874 |**************                     177351.40000
#                  2          177785 |*****                              178858.00000
#                  7          179696 |********************               181041.42857
#                  4          181607 |***********                        182960.00000
#                  3          183518 |********                           185226.33333
#                  7          185429 |********************               186169.71429
#                  3          187340 |********                           187626.33333
#                  6          189251 |*****************                  190313.33333
#                  5          191162 |**************                     191599.40000
#                  4          193073 |***********                        194574.75000
#                  2          194984 |*****                              195895.50000
#                  1          196895 |**                                 197117.00000
#
#                  9           > 95% |**************************         203387.00000
#
#        mean of 95%    164728.52695
#          95th %ile          198782
#
# WARNINGS
#     Actual benchmark run time only accounts for 70.1% of elapsed time.
#
# Usage: socket
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socket')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f socket-family (default PF_UNIX)]
# notes: measures socket
           prc thr      nsecs/call      samples   errors cnt/samp 
socketpair   1   1          592676          200        0      150 
# bin/../bin-riscv64/socketpair -N socketpair -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -B 300 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    503631                     503631
#                        max    768229                     768229
#                       mean    601300.02000               601300.02000
#                     median    592676                     592676*
#                     stddev     66746.39521                66746.39521
#             standard error      4719.68287                 4719.68287
#       99% confidence level     12157.90307                12157.90307
#                       skew         0.28843                    0.28843
#                   kurtosis        -1.10720                   -1.10720
#           time correlation      1143.95556                 1143.95556
#
#               elapsed time        22.66172
#                   run time        18.03928
#          getnsecs overhead      1416
#
#          number of samples       200
#         number of outliers         0
#    number of final samples       200
#             ops per sample       150.00000 (-B 300)
#
#       recommended -B value         2
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          503631 |************                       506556.50000
#                 10          510183 |********************               513782.90000
#                 16          516735 |********************************   519756.12500
#                  9          523287 |******************                 526197.88889
#                  5          529839 |**********                         532202.20000
#                  7          536391 |**************                     538991.14286
#                  3          542943 |******                             545574.33333
#                  7          549495 |**************                     552742.00000
#                  7          556047 |**************                     559239.00000
#                 10          562599 |********************               565503.70000
#                  6          569151 |************                       573020.00000
#                  6          575703 |************                       579034.50000
#                  7          582255 |**************                     585635.71429
#                  4          588807 |********                           593167.25000
#                  3          595359 |******                             599414.66667
#                  1          601911 |**                                 605586.00000
#                  9          608463 |******************                 611638.44444
#                  9          615015 |******************                 618455.00000
#                  2          621567 |****                               624000.00000
#                  4          628119 |********                           631966.00000
#                  8          634671 |****************                   638438.87500
#                  1          641223 |**                                 644701.00000
#                  7          647775 |**************                     651099.85714
#                  5          654327 |**********                         656285.20000
#                  4          660879 |********                           664375.50000
#                  4          667431 |********                           670019.50000
#                  4          673983 |********                           679997.25000
#                 12          680535 |************************           683363.25000
#                  7          687087 |**************                     690665.14286
#                  4          693639 |********                           696646.75000
#                  0          700191 |                                              -
#                  3          706743 |******                             708273.66667
#
#                 10           > 95% |********************               729107.10000
#
#        mean of 95%    594573.33158
#          95th %ile          713269
#
# WARNINGS
#     Actual benchmark run time only accounts for 79.6% of elapsed time.
#
# Usage: socketpair
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'socketpair')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures socketpair
         prc thr      nsecs/call      samples   errors cnt/samp 
stat_tmp   1   1          539290         3445        0        1 
# bin/../bin-riscv64/stat -N stat_tmp -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    526389                     526389
#                        max   1483100                     569190
#                       mean    586034.87288               542248.59565
#                     median    545790                     539290*
#                     stddev     93001.48583                 9016.97554
#             standard error      1370.93410                  153.62655
#       99% confidence level      3531.52625                  395.74199
#                       skew         2.75748                    0.81513
#                   kurtosis        11.05229                   -0.22006
#           time correlation        50.80839                    8.68705
#
#               elapsed time        20.00902
#                   run time         2.70431
#          getnsecs overhead      1416
#
#          number of samples      4602
#         number of outliers      1157
#    number of final samples      3445
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          526389 |*                                  526389.00000
#                  0          527433 |                                              -
#                  6          528477 |*                                  528972.83333
#                 30          529521 |***                                530169.70000
#                 81          530565 |********                           531182.34568
#                170          531609 |*****************                  532209.09412
#                307          532653 |********************************   533181.25081
#                275          533697 |****************************       534248.62182
#                221          534741 |***********************            535246.31222
#                204          535785 |*********************              536288.28922
#                187          536829 |*******************                537310.08021
#                191          537873 |*******************                538401.26178
#                138          538917 |**************                     539433.28986
#                115          539961 |***********                        540516.72174
#                 82          541005 |********                           541530.06098
#                 74          542049 |*******                            542574.93243
#                 90          543093 |*********                          543670.93333
#                 80          544137 |********                           544676.11250
#                 96          545181 |**********                         545746.15625
#                 88          546225 |*********                          546848.92045
#                124          547269 |************                       547809.17742
#                103          548313 |**********                         548850.07767
#                 93          549357 |*********                          549856.61290
#                 99          550401 |**********                         550971.71717
#                 58          551445 |******                             551919.20690
#                 68          552489 |*******                            553012.05882
#                 64          553533 |******                             553977.42188
#                 60          554577 |******                             555123.30000
#                 42          555621 |****                               556170.95238
#                 47          556665 |****                               557209.14894
#                 37          557709 |***                                558184.56757
#                 41          558753 |****                               559190.00000
#
#                173           > 95% |******************                 563620.68786
#
#        mean of 95%    541118.59199
#          95th %ile          559790
#
# WARNINGS
#     Actual benchmark run time only accounts for 13.5% of elapsed time.
#
# Usage: stat
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'stat')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-stat (default /dev/null)]
# notes: measures stat()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strchr_10   1   1            2041         3887        0      448       10
# bin/../bin-riscv64/strchr -N strchr_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1936                       1936
#                        max     59679                       2398
#                       mean      2140.67925                 2080.22125
#                     median      2045                       2041*
#                     stddev       984.59765                  106.06514
#             standard error        15.26737                    1.70124
#       99% confidence level        39.32875                    4.38239
#                       skew        51.20541                    1.17501
#                   kurtosis      2876.93206                    0.27709
#           time correlation         0.15427                    0.08571
#
#               elapsed time        20.00925
#                   run time         3.95032
#          getnsecs overhead      1416
#
#          number of samples      4159
#         number of outliers       272
#    number of final samples      3887
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2            1936 |*                                    1941.00000
#                 36            1948 |**                                   1955.88889
#                143            1960 |**********                           1965.92308
#                281            1972 |********************                 1978.24911
#                337            1984 |************************             1988.97626
#                217            1996 |***************                      2001.03687
#                192            2008 |*************                        2014.21875
#                372            2020 |**************************           2025.92473
#                443            2032 |********************************     2037.29571
#                331            2044 |***********************              2048.80665
#                175            2056 |************                         2060.74857
#                156            2068 |***********                          2073.62821
#                134            2080 |*********                            2084.87313
#                 58            2092 |****                                 2096.55172
#                 32            2104 |**                                   2107.84375
#                 16            2116 |*                                    2121.12500
#                 21            2128 |*                                    2132.52381
#                 17            2140 |*                                    2145.00000
#                 43            2152 |***                                  2158.83721
#                 50            2164 |***                                  2169.36000
#                 57            2176 |****                                 2181.50877
#                 60            2188 |****                                 2193.50000
#                 51            2200 |***                                  2206.50980
#                 75            2212 |*****                                2217.57333
#                 62            2224 |****                                 2229.64516
#                 69            2236 |****                                 2241.44928
#                 73            2248 |*****                                2253.45205
#                 62            2260 |****                                 2264.77419
#                 50            2272 |***                                  2276.70000
#                 52            2284 |***                                  2288.76923
#                 25            2296 |*                                    2298.76000
#
#                195           > 95% |**************                       2343.50256
#
#        mean of 95%      2066.31555
#          95th %ile            2302
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.7% of elapsed time.
#
# Usage: strchr
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strchr')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strchr]
# notes: measures strchr()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strchr_1k   1   1             842        16518        0     1125     1024
# bin/../bin-riscv64/strchr -N strchr_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       826                        826
#                        max     25429                        973
#                       mean       874.74707                  863.63930
#                     median       843                        842*
#                     stddev       208.38268                   36.48367
#             standard error         1.58752                    0.28387
#       99% confidence level         4.08945                    0.73125
#                       skew        99.32548                    1.29973
#                   kurtosis     11362.30062                    0.18589
#           time correlation         0.00948                    0.00648
#
#               elapsed time        20.00729
#                   run time        16.92979
#          getnsecs overhead      1416
#
#          number of samples     17230
#         number of outliers       712
#    number of final samples     16518
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 27             826 |*                                     828.51852
#                377             830 |*                                     832.14854
#               1108             834 |*****                                 835.69404
#               6216             838 |********************************      839.98665
#               1236             842 |******                                842.47330
#                256             846 |*                                     847.92969
#                767             850 |***                                   851.71578
#               1466             854 |*******                               855.68417
#                612             858 |***                                   858.99510
#                287             862 |*                                     863.51568
#                197             866 |*                                     867.26904
#                 65             870 |*                                     871.26154
#                 50             874 |*                                     875.26000
#                 13             878 |*                                     879.69231
#                 24             882 |*                                     883.25000
#                 17             886 |*                                     887.64706
#                 11             890 |*                                     891.27273
#                 25             894 |*                                     895.64000
#                 12             898 |*                                     899.33333
#                 46             902 |*                                     903.89130
#                168             906 |*                                     907.94643
#                414             910 |**                                    911.74396
#                615             914 |***                                   915.29431
#                458             918 |**                                    919.45633
#                297             922 |*                                     923.40741
#                292             926 |*                                     927.48288
#                323             930 |*                                     931.45511
#                262             934 |*                                     935.38931
#                 51             938 |*                                     938.00000
#
#                826           > 95% |****                                  951.81598
#
#        mean of 95%       858.99783
#          95th %ile             938
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: strchr
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strchr')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strchr]
# notes: measures strchr()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcmp_10   1   1             835        16715        0      898       10
# bin/../bin-riscv64/strcmp -N strcmp_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       720                        720
#                        max     43879                       2246
#                       mean      1093.44271                 1086.86258
#                     median       836                        835*
#                     stddev       522.70477                  389.37720
#             standard error         4.03805                    3.01174
#       99% confidence level        10.40201                    7.75824
#                       skew        33.56288                    0.42515
#                   kurtosis      2690.49350                   -1.67951
#           time correlation         0.07468                    0.07286
#
#               elapsed time        20.00599
#                   run time        16.44651
#          getnsecs overhead      1416
#
#          number of samples     16756
#         number of outliers        41
#    number of final samples     16715
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#               4728             720 |********************************      741.36739
#               3314             749 |**********************                758.98008
#                168             778 |*                                     785.55357
#                167             807 |*                                     830.43713
#                800             836 |*****                                 848.64250
#                397             865 |**                                    877.04030
#                207             894 |*                                     905.63285
#                 89             923 |*                                     937.02247
#                 44             952 |*                                     965.00000
#                 23             981 |*                                     993.34783
#                  9            1010 |*                                    1024.77778
#                 12            1039 |*                                    1059.00000
#                  6            1068 |*                                    1080.16667
#                 14            1097 |*                                    1109.21429
#                 15            1126 |*                                    1140.00000
#                  7            1155 |*                                    1171.57143
#                  4            1184 |*                                    1190.25000
#                  1            1213 |*                                    1219.00000
#                  0            1242 |                                              -
#                  4            1271 |*                                    1288.50000
#                  4            1300 |*                                    1316.75000
#                  1            1329 |*                                    1332.00000
#                  2            1358 |*                                    1371.00000
#                  6            1387 |*                                    1396.00000
#                  0            1416 |                                              -
#                139            1445 |*                                    1466.67626
#               1479            1474 |**********                           1491.87830
#               2184            1503 |**************                       1515.82326
#                510            1532 |***                                  1540.86471
#                126            1561 |*                                    1581.33333
#                775            1590 |*****                                1605.87871
#                644            1619 |****                                 1628.37578
#
#                836           > 95% |*****                                1692.83971
#
#        mean of 95%      1054.95900
#          95th %ile            1640
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: strcmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcmp()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcmp_1k   1   1            1126         3872        0      777     1024
# bin/../bin-riscv64/strcmp -N strcmp_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      1108                       1108
#                        max     49379                       1316
#                       mean      1200.75162                 1154.55914
#                     median      1131                       1126*
#                     stddev       935.62680                   53.69129
#             standard error        14.51500                    0.86285
#       99% confidence level        37.39065                    2.22271
#                       skew        45.89168                    1.39622
#                   kurtosis      2181.67165                    0.46410
#           time correlation         0.09734                    0.04019
#
#               elapsed time        20.01465
#                   run time         3.79669
#          getnsecs overhead      1416
#
#          number of samples      4155
#         number of outliers       283
#    number of final samples      3872
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                116            1108 |***                                  1111.87931
#                855            1114 |*****************************        1117.27251
#                942            1120 |********************************     1121.77707
#                169            1126 |*****                                1128.23077
#                214            1132 |*******                              1134.80374
#                313            1138 |**********                           1140.69329
#                220            1144 |*******                              1146.04091
#                 92            1150 |***                                  1152.17391
#                 48            1156 |*                                    1158.47917
#                 22            1162 |*                                    1164.50000
#                 16            1168 |*                                    1170.31250
#                 11            1174 |*                                    1177.18182
#                 11            1180 |*                                    1182.36364
#                  5            1186 |*                                    1188.20000
#                  2            1192 |*                                    1195.50000
#                  7            1198 |*                                    1199.28571
#                  2            1204 |*                                    1206.50000
#                 12            1210 |*                                    1213.41667
#                 33            1216 |*                                    1219.54545
#                 74            1222 |**                                   1224.67568
#                 86            1228 |**                                   1230.44186
#                 94            1234 |***                                  1236.50000
#                 82            1240 |**                                   1242.30488
#                 93            1246 |***                                  1248.65591
#                 68            1252 |**                                   1253.92647
#                 52            1258 |*                                    1260.30769
#                 35            1264 |*                                    1266.20000
#                  4            1270 |*                                    1270.00000
#
#                194           > 95% |******                               1289.10825
#
#        mean of 95%      1147.46221
#          95th %ile            1270
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 19.0% of elapsed time.
#
# Usage: strcmp
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcmp')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcmp()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcpy_10   1   1             200        17019        0     4523       10
# bin/../bin-riscv64/strcpy -N strcpy_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       189                        189
#                        max     35979                        235
#                       mean       209.65840                  204.68042
#                     median       200                        200*
#                     stddev       286.92123                   10.05364
#             standard error         2.15920                    0.07706
#       99% confidence level         5.56209                    0.19852
#                       skew       115.00339                    1.30966
#                   kurtosis     13915.60636                    0.40232
#           time correlation         0.00324                    0.00175
#
#               elapsed time        20.00693
#                   run time        16.50804
#          getnsecs overhead      1416
#
#          number of samples     17658
#         number of outliers       639
#    number of final samples     17019
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5             189 |*                                     189.60000
#                 68             191 |*                                     191.83824
#                184             193 |*                                     193.45652
#                314             195 |*                                     195.70064
#               5360             197 |********************************      197.72444
#               3468             199 |********************                  199.34919
#               2218             201 |*************                         201.52931
#                997             203 |*****                                 203.30893
#                139             205 |*                                     205.25180
#                 23             207 |*                                     207.21739
#                 13             209 |*                                     209.69231
#                 21             211 |*                                     211.61905
#                 76             213 |*                                     213.68421
#                619             215 |***                                   215.68982
#                980             217 |*****                                 217.45000
#                728             219 |****                                  219.47665
#                570             221 |***                                   221.43509
#                296             223 |*                                     223.44257
#                 89             225 |*                                     225.00000
#
#                851           > 95% |*****                                 230.43478
#
#        mean of 95%       203.32484
#          95th %ile             225
#
# Usage: strcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcpy()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strcpy_1k   1   1             902        15978        0     1051     1024
# bin/../bin-riscv64/strcpy -N strcpy_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       891                        891
#                        max     26089                       1040
#                       mean       938.24383                  924.11791
#                     median       904                        902*
#                     stddev       218.81602                   38.57406
#             standard error         1.69097                    0.30516
#       99% confidence level         4.35595                    0.78610
#                       skew        93.20450                    1.36599
#                   kurtosis     10485.91192                    0.32109
#           time correlation         0.01096                    0.00694
#
#               elapsed time        20.00722
#                   run time        16.49671
#          getnsecs overhead      1416
#
#          number of samples     16745
#         number of outliers       767
#    number of final samples     15978
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                202             891 |*                                     893.64356
#               2255             895 |************                          897.15521
#               5614             899 |********************************      899.79640
#                869             903 |****                                  904.09896
#                225             907 |*                                     908.55111
#                755             911 |****                                  912.64106
#               1563             915 |********                              916.53551
#                590             919 |***                                   920.21017
#                195             923 |*                                     924.09231
#                 76             927 |*                                     928.27632
#                 33             931 |*                                     932.33333
#                 20             935 |*                                     936.50000
#                 11             939 |*                                     940.18182
#                 19             943 |*                                     944.84211
#                 14             947 |*                                     949.14286
#                  7             951 |*                                     952.00000
#                 14             955 |*                                     956.78571
#                  5             959 |*                                     960.60000
#                  5             963 |*                                     964.80000
#                 18             967 |*                                     969.27778
#                135             971 |*                                     972.92593
#                408             975 |**                                    976.73039
#                488             979 |**                                    980.38525
#                427             983 |**                                    984.39110
#                272             987 |*                                     988.36397
#                294             991 |*                                     992.61565
#                335             995 |*                                     996.62985
#                267             999 |*                                    1000.35206
#                 63            1003 |*                                    1003.12698
#
#                799           > 95% |****                                 1018.14768
#
#        mean of 95%       919.16832
#          95th %ile            1004
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: strcpy
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strcpy')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned cmp]
# notes: measures strcpy()
         prc thr      nsecs/call      samples   errors cnt/samp   format
strftime   1   1          161180         3994        0       10       %c
# bin/../bin-riscv64/strftime -N strftime -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    153070                     153070
#                        max    866708                     179320
#                       mean    164595.62463               162978.23986
#                     median    161450                     161180*
#                     stddev     15999.92751                 5624.22325
#             standard error       249.63346                   88.99355
#       99% confidence level       643.05579                  229.24738
#                       skew        23.20857                    0.45567
#                   kurtosis       925.68566                   -0.92139
#           time correlation         6.70497                    4.76915
#
#               elapsed time        20.00714
#                   run time         6.76741
#          getnsecs overhead      1416
#
#          number of samples      4108
#         number of outliers       114
#    number of final samples      3994
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  5          153070 |*                                  153310.00000
#                 14          153677 |*                                  154007.14286
#                 33          154284 |***                                154685.45455
#                 82          154891 |********                           155236.46341
#                134          155498 |**************                     155822.91045
#                168          156105 |*****************                  156393.33333
#                186          156712 |*******************                157011.61290
#                226          157319 |***********************            157619.02655
#                276          157926 |*****************************      158241.73913
#                304          158533 |********************************   158828.65132
#                218          159140 |**********************             159424.86239
#                198          159747 |********************               160028.73737
#                117          160354 |************                       160647.09402
#                119          160961 |************                       161273.10924
#                112          161568 |***********                        161812.85714
#                 47          162175 |****                               162472.76596
#                 36          162782 |***                                163093.33333
#                 27          163389 |**                                 163729.62963
#                 43          163996 |****                               164386.74419
#                 63          164603 |******                             164911.26984
#                 99          165210 |**********                         165521.71717
#                115          165817 |************                       166145.82609
#                151          166424 |***************                    166741.58940
#                188          167031 |*******************                167317.18085
#                147          167638 |***************                    167981.29252
#                137          168245 |**************                     168518.39416
#                146          168852 |***************                    169127.87671
#                121          169459 |************                       169732.64463
#                113          170066 |***********                        170364.33628
#                 69          170673 |*******                            170978.26087
#                 58          171280 |******                             171594.13793
#                 42          171887 |****                               172168.09524
#
#                200           > 95% |*********************              174663.50000
#
#        mean of 95%    162362.25356
#          95th %ile          172470
#
# WARNINGS
#     Actual benchmark run time only accounts for 33.8% of elapsed time.
#
# Usage: strftime
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strftime')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f format (default = "%c")]
# notes: measures strftime()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strlen_10   1   1             110        17566        0     7796       10
# bin/../bin-riscv64/strlen -N strlen_10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       107                        107
#                        max     34829                        128
#                       mean       117.41243                  112.42764
#                     median       110                        110*
#                     stddev       283.67979                    5.06374
#             standard error         2.08442                    0.03821
#       99% confidence level         5.36946                    0.09842
#                       skew       108.01135                    1.33130
#                   kurtosis     12557.32532                    0.38309
#           time correlation         0.00232                    0.00086
#
#               elapsed time        20.00733
#                   run time        16.46021
#          getnsecs overhead      1416
#
#          number of samples     18522
#         number of outliers       956
#    number of final samples     17566
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 40             107 |*                                             -
#               1532             108 |********                                      -
#               5590             109 |********************************              -
#               2365             110 |*************                                 -
#               1992             111 |***********                                   -
#               1518             112 |********                                      -
#                362             113 |**                                            -
#                253             114 |*                                             -
#                102             115 |*                                             -
#                 35             116 |*                                             -
#                 22             117 |*                                             -
#                121             118 |*                                             -
#                580             119 |***                                           -
#                764             120 |****                                          -
#                625             121 |***                                           -
#                564             122 |***                                           -
#                222             123 |*                                             -
#
#                879           > 95% |*****                                 124.85893
#
#        mean of 95%       111.77282
#          95th %ile             123
#
# Usage: strlen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strlen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strlen]
# notes: measures strlen()
          prc thr      nsecs/call      samples   errors cnt/samp     size
strlen_1k   1   1             604        16197        0     1551     1024
# bin/../bin-riscv64/strlen -N strlen_1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       591                        591
#                        max     38199                        695
#                       mean       627.44005                  616.70519
#                     median       605                        604*
#                     stddev       333.28632                   26.19507
#             standard error         2.55446                    0.20583
#       99% confidence level         6.58029                    0.53021
#                       skew        99.03233                    1.32340
#                   kurtosis     10424.51357                    0.18621
#           time correlation         0.00776                    0.00472
#
#               elapsed time        20.00795
#                   run time        16.47863
#          getnsecs overhead      1416
#
#          number of samples     17023
#         number of outliers       826
#    number of final samples     16197
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 29             591 |*                                     592.68966
#                625             594 |*****                                 595.54080
#               3979             597 |********************************      598.35888
#               2922             600 |***********************               600.74196
#               1238             603 |*********                             603.83764
#                823             606 |******                                607.08748
#               1346             609 |**********                            610.05423
#               1057             612 |********                              612.84863
#                371             615 |**                                    615.67655
#                109             618 |*                                     618.73394
#                 37             621 |*                                     621.70270
#                 22             624 |*                                     625.00000
#                  7             627 |*                                     627.42857
#                  4             630 |*                                     631.25000
#                  3             633 |*                                     633.66667
#                  7             636 |*                                     636.57143
#                  6             639 |*                                     640.50000
#                  0             642 |                                              -
#                 19             645 |*                                     646.31579
#                 94             648 |*                                     649.42553
#                341             651 |**                                    652.13490
#                590             654 |****                                  654.99153
#                490             657 |***                                   657.94898
#                363             660 |**                                    660.99725
#                401             663 |***                                   664.07980
#                367             666 |**                                    666.98910
#                137             669 |*                                     669.30657
#
#                810           > 95% |******                                679.07037
#
#        mean of 95%       613.42217
#          95th %ile             670
#
# Usage: strlen
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strlen')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-s string size (default 100)]
#     [-n causes unaligned strlen]
# notes: measures strlen()
       prc thr      nsecs/call      samples   errors cnt/samp 
strtol   1   1             246        17346        0     3289 
# bin/../bin-riscv64/strtol -N strtol -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       234                        234
#                        max    176910                        284
#                       mean       268.28442                  250.43174
#                     median       247                        246*
#                     stddev      1368.70300                   11.18189
#             standard error         9.97858                    0.08490
#       99% confidence level        25.70482                    0.21871
#                       skew       119.55820                    1.49044
#                   kurtosis     14988.78811                    0.85026
#           time correlation         0.00707                    0.00187
#
#               elapsed time        20.00658
#                   run time        15.76330
#          getnsecs overhead      1416
#
#          number of samples     18814
#         number of outliers      1468
#    number of final samples     17346
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6             234 |*                                     234.33333
#                 50             236 |*                                     236.74000
#                279             238 |**                                    238.67384
#               1088             240 |*********                             240.64062
#               2719             242 |************************              242.57337
#               3566             244 |********************************      244.49692
#               3057             246 |***************************           246.45044
#               1856             248 |****************                      248.41487
#                934             250 |********                              250.42612
#                369             252 |***                                   252.34417
#                110             254 |*                                     254.43636
#                 32             256 |*                                     256.37500
#                 27             258 |*                                     258.25926
#                 24             260 |*                                     260.70833
#                 39             262 |*                                     262.74359
#                148             264 |*                                     264.62162
#                300             266 |**                                    266.55667
#                443             268 |***                                   268.55305
#                563             270 |*****                                 270.50444
#                466             272 |****                                  272.45064
#                402             274 |***                                   274.40547
#
#                868           > 95% |*******                               278.91705
#
#        mean of 95%       248.93124
#          95th %ile             275
#
# WARNINGS
#     Actual benchmark run time only accounts for 78.8% of elapsed time.
#
# Usage: strtol
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'strtol')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# note: measures strtol()
       prc thr      nsecs/call      samples   errors cnt/samp  command
system   1   1       157301738          153        0        1     A=$$
# bin/../bin-riscv64/system -N system -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min 140891764                  140891764
#                        max 411581709                  185126229
#                       mean 158426258.88535            155360651.10458
#                     median 157833642                  157301738*
#                     stddev  25620202.08598             11040916.18641
#             standard error   2044714.72622               892605.16942
#       99% confidence level   5267185.13475              2299350.91641
#                       skew         6.79671                    0.42578
#                   kurtosis        60.60839                   -0.77293
#           time correlation    339424.29532               242222.33851
#
#               elapsed time        25.07970
#                   run time        25.02654
#          getnsecs overhead      1416
#
#          number of samples       157
#         number of outliers         4
#    number of final samples       153
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  7       140891764 |*************                   141743744.85714
#                 17       141963935 |********************************142533322.88235
#                 13       143036106 |************************        143672224.76923
#                  8       144108277 |***************                 144599166.00000
#                  8       145180448 |***************                 145711090.62500
#                  4       146252619 |*******                         146970353.75000
#                  4       147324790 |*******                         147984264.00000
#                  4       148396961 |*******                         148872549.00000
#                  1       149469132 |*                               150091361.00000
#                  2       150541303 |***                             151418125.50000
#                  1       151613474 |*                               152033683.00000
#                  2       152685645 |***                             153128823.50000
#                  1       153757816 |*                               153928702.00000
#                  1       154829987 |*                               155626219.00000
#                  2       155902158 |***                             156617429.50000
#                  5       156974329 |*********                       157599119.80000
#                  5       158046500 |*********                       158649811.40000
#                 10       159118671 |******************              159616641.50000
#                 11       160190842 |********************            160817701.27273
#                  7       161263013 |*************                   162076058.71429
#                  9       162335184 |****************                162822251.00000
#                  2       163407355 |***                             163564002.50000
#                  2       164479526 |***                             164869866.50000
#                  3       165551697 |*****                           166074195.66667
#                  3       166623868 |*****                           167069373.33333
#                  2       167696039 |***                             168300753.50000
#                  5       168768210 |*********                       169167421.80000
#                  1       169840381 |*                               169867869.00000
#                  0       170912552 |                                              -
#                  1       171984723 |*                               172842000.00000
#                  3       173056894 |*****                           173516674.00000
#                  1       174129065 |*                               174283716.00000
#
#                  8           > 95% |***************                 179093678.62500
#
#        mean of 95% 154051242.68966
#          95th %ile       175201225
#
# Usage: system
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'system')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-c command (default A=$$)]
# notes: measures system()
     prc thr      nsecs/call      samples   errors cnt/samp 
time   1   1             313        16777        0     2944 
# bin/../bin-riscv64/time -N time -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min       288                        288
#                        max     36379                        362
#                       mean       325.92252                  319.91947
#                     median       314                        313*
#                     stddev       286.35413                   13.90242
#             standard error         2.17103                    0.10733
#       99% confidence level         5.59258                    0.27649
#                       skew       117.80055                    1.21193
#                   kurtosis     14557.25265                    0.09314
#           time correlation         0.00429                    0.00251
#
#               elapsed time        20.00694
#                   run time        16.54497
#          getnsecs overhead      1416
#
#          number of samples     17397
#         number of outliers       620
#    number of final samples     16777
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1             288 |*                                     288.00000
#                  0             290 |                                              -
#                  1             292 |*                                     293.00000
#                  0             294 |                                              -
#                  4             296 |*                                     296.25000
#                 12             298 |*                                     298.66667
#                 30             300 |*                                     300.50000
#                 58             302 |*                                     302.51724
#                295             304 |**                                    304.68814
#                705             306 |******                                306.62553
#               1164             308 |**********                            308.56443
#               2674             310 |************************              310.60995
#               3491             312 |********************************      312.45861
#               1634             314 |**************                        314.38311
#               1081             316 |*********                             316.53469
#               1093             318 |**********                            318.46203
#                440             320 |****                                  320.34545
#                 83             322 |*                                     322.21687
#                 32             324 |*                                     324.43750
#                  8             326 |*                                     326.62500
#                 13             328 |*                                     328.76923
#                 23             330 |*                                     330.52174
#                 60             332 |*                                     332.55000
#                141             334 |*                                     334.60993
#                248             336 |**                                    336.56855
#                510             338 |****                                  338.55882
#                764             340 |*******                               340.49869
#                565             342 |*****                                 342.43894
#                410             344 |***                                   344.50000
#                380             346 |***                                   346.51053
#                 18             348 |*                                     348.00000
#
#                839           > 95% |*******                               353.03933
#
#        mean of 95%       318.17599
#          95th %ile             348
#
# Usage: time
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'time')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures time()
      prc thr      nsecs/call      samples   errors cnt/samp 
times   1   1           59475        13779        0       19 
# bin/../bin-riscv64/times -N times -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     57930                      57930
#                        max    193150                      76150
#                       mean     62557.28334                62126.12338
#                     median     59500                      59475*
#                     stddev      5783.45578                 4689.67834
#             standard error        48.77298                   39.95160
#       99% confidence level       125.63920                  102.91533
#                       skew         2.99844                    1.06760
#                   kurtosis        28.80011                   -0.28536
#           time correlation         1.14833                    1.02783
#
#               elapsed time        20.00632
#                   run time        17.59959
#          getnsecs overhead      1416
#
#          number of samples     14061
#         number of outliers       282
#    number of final samples     13779
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                347           57930 |***                                 58236.26801
#               3191           58352 |********************************    58597.54152
#               2385           58774 |***********************             58901.12579
#               1732           59196 |*****************                   59437.43938
#               1114           59618 |***********                         59761.90305
#                266           60040 |**                                  60222.59398
#                150           60462 |*                                   60650.23333
#                106           60884 |*                                   61049.10377
#                 43           61306 |*                                   61520.23256
#                 32           61728 |*                                   61935.46875
#                 20           62150 |*                                   62326.75000
#                 33           62572 |*                                   62764.54545
#                 23           62994 |*                                   63214.78261
#                 16           63416 |*                                   63624.06250
#                 18           63838 |*                                   64039.16667
#                 13           64260 |*                                   64453.84615
#                  9           64682 |*                                   64935.00000
#                 40           65104 |*                                   65398.75000
#                243           65526 |**                                  65766.81070
#                278           65948 |**                                  66162.21223
#                378           66370 |***                                 66579.12698
#                354           66792 |***                                 67006.00282
#                406           67214 |****                                67428.22660
#                429           67636 |****                                67844.66200
#                379           68058 |***                                 68264.56464
#                302           68480 |***                                 68668.92384
#                180           68902 |*                                   69106.88889
#                179           69324 |*                                   69521.98324
#                125           69746 |*                                   69959.92000
#                112           70168 |*                                   70358.21429
#                106           70590 |*                                   70784.24528
#                 81           71012 |*                                   71222.83951
#
#                689           > 95% |******                              73314.47605
#
#        mean of 95%     61537.21772
#          95th %ile           71405
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: times
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'times')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
# notes: measures times()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_a128k   1   1          240897         3662        0        2   131072   a---
# bin/../bin-riscv64/munmap -N unmap_a128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    123985                     223564
#                        max   2003063                     266298
#                       mean    267410.01392               242012.04724
#                     median    244064                     240897*
#                     stddev     69440.22923                 8119.58541
#             standard error      1000.92887                  134.17595
#       99% confidence level      2578.39276                  345.63725
#                       skew         6.53233                    0.62925
#                   kurtosis        99.58639                    0.05266
#           time correlation        30.92215                    7.43177
#
#               elapsed time        20.00882
#                   run time         3.85392
#          getnsecs overhead      1416
#
#          number of samples      4813
#         number of outliers      1151
#    number of final samples      3662
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          223564 |*                                  223997.00000
#                  7          224638 |*                                  225225.57143
#                 12          225712 |*                                  226271.91667
#                 23          226786 |***                                227381.21739
#                 44          227860 |******                             228500.04545
#                 51          228934 |*******                            229482.07843
#                 79          230008 |***********                        230585.31646
#                101          231082 |**************                     231649.29703
#                150          232156 |*********************              232713.90667
#                155          233230 |**********************             233751.47742
#                174          234304 |************************           234855.57471
#                167          235378 |***********************            235918.88024
#                211          236452 |******************************     236993.78673
#                216          237526 |******************************     238039.96296
#                193          238600 |***************************        239156.07254
#                223          239674 |********************************   240240.13901
#                206          240748 |*****************************      241278.81553
#                183          241822 |**************************         242328.18033
#                191          242896 |***************************        243401.39791
#                134          243970 |*******************                244507.72388
#                143          245044 |********************               245584.85315
#                124          246118 |*****************                  246619.41129
#                118          247192 |****************                   247695.97458
#                 98          248266 |**************                     248838.15306
#                 78          249340 |***********                        249904.55128
#                 80          250414 |***********                        250912.46250
#                 78          251488 |***********                        251972.02564
#                 66          252562 |*********                          253039.80303
#                 51          253636 |*******                            254193.37255
#                 52          254710 |*******                            255249.34615
#                 33          255784 |****                               256253.00000
#                 35          256858 |*****                              257351.02857
#
#                184           > 95% |**************************         261499.26087
#
#        mean of 95%    240981.09632
#          95th %ile          257931
#
# WARNINGS
#     Actual benchmark run time only accounts for 19.3% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_a8k   1   1          229430        10508        0        2     8192   a---
# bin/../bin-riscv64/munmap -N unmap_a8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    214630                     214630
#                        max   4420041                     249831
#                       mean    275837.05130               230235.67882
#                     median    232797                     229430*
#                     stddev    129043.79934                 6536.58835
#             standard error      1075.88812                   63.76628
#       99% confidence level      2771.48780                  164.26195
#                       skew        11.72396                    0.55914
#                   kurtosis       311.52601                   -0.02686
#           time correlation        17.14175                    2.09361
#
#               elapsed time        20.00973
#                   run time        11.92240
#          getnsecs overhead      1416
#
#          number of samples     14386
#         number of outliers      3878
#    number of final samples     10508
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          214630 |*                                  214958.16667
#                  8          215510 |*                                  216080.25000
#                 28          216390 |*                                  216845.71429
#                 38          217270 |*                                  217787.28947
#                 82          218150 |****                               218552.25610
#                130          219030 |******                             219478.74615
#                211          219910 |**********                         220381.87204
#                303          220790 |***************                    221260.45875
#                306          221670 |***************                    222106.23529
#                381          222550 |*******************                223006.83727
#                451          223430 |**********************             223872.47672
#                494          224310 |************************           224746.95749
#                585          225190 |*****************************      225617.94530
#                567          226070 |****************************       226502.55908
#                574          226950 |****************************       227390.15331
#                636          227830 |********************************   228265.31132
#                555          228710 |***************************        229134.68288
#                546          229590 |***************************        230020.50549
#                517          230470 |**************************         230889.01354
#                467          231350 |***********************            231784.16274
#                499          232230 |*************************          232675.52705
#                433          233110 |*********************              233543.07159
#                371          233990 |******************                 234395.66846
#                282          234870 |**************                     235288.96809
#                291          235750 |**************                     236178.72852
#                273          236630 |*************                      237068.93773
#                215          237510 |**********                         237947.37674
#                187          238390 |*********                          238843.86096
#                151          239270 |*******                            239679.92715
#                153          240150 |*******                            240572.60784
#                126          241030 |******                             241461.76190
#                116          241910 |*****                              242311.01724
#
#                526           > 95% |**************************         245634.28137
#
#        mean of 95%    229424.25175
#          95th %ile          242764
#
# WARNINGS
#     Actual benchmark run time only accounts for 59.6% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_ra128k   1   1          491297         4628        0        1   131072   ar--
# bin/../bin-riscv64/munmap -N unmap_ra128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    315387                     315387
#                        max   2329609                     768800
#                       mean    500094.08480               483068.50108
#                     median    492947                     491297*
#                     stddev    142331.71006                96030.08526
#             standard error      2059.53657                 1411.59672
#       99% confidence level      5305.36621                 3636.27314
#                       skew         3.26308                    0.42521
#                   kurtosis        22.67731                   -0.32183
#           time correlation        84.03895                   69.40516
#
#               elapsed time        20.00909
#                   run time         4.40385
#          getnsecs overhead      1416
#
#          number of samples      4776
#         number of outliers       148
#    number of final samples      4628
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          315387 |*                                  318923.33333
#                 33          326307 |*                                  332453.48485
#                109          337227 |******                             343697.98165
#                240          348147 |**************                     354215.21250
#                361          359067 |*********************              364797.41828
#                364          369987 |*********************              374586.13187
#                200          380907 |************                       385939.05000
#                 78          391827 |****                               396050.14103
#                 36          402747 |**                                 407375.97222
#                 35          413667 |**                                 419720.62857
#                 41          424587 |**                                 430257.51220
#                 57          435507 |***                                440797.57895
#                 33          446427 |*                                  452065.72727
#                 81          457347 |****                               463470.35802
#                173          468267 |**********                         474390.54913
#                399          479187 |************************           485082.44110
#                532          490107 |********************************   495551.52820
#                439          501027 |**************************         506116.26651
#                241          511947 |**************                     516774.12448
#                123          522867 |*******                            527432.26829
#                 68          533787 |****                               539145.67647
#                 40          544707 |**                                 549930.95000
#                 51          555627 |***                                561692.96078
#                 89          566547 |*****                              572441.97753
#                 93          577467 |*****                              582585.01075
#                137          588387 |********                           593864.00000
#                 96          599307 |*****                              604277.50000
#                 57          610227 |***                                616279.43860
#                 49          621147 |**                                 626807.69388
#                 48          632067 |**                                 637683.87500
#                 50          642987 |***                                647865.68000
#                 40          653907 |**                                 658710.90000
#
#                232           > 95% |*************                      701244.13362
#
#        mean of 95%    471554.22748
#          95th %ile          664799
#
# WARNINGS
#     Actual benchmark run time only accounts for 22.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_ra8k   1   1          459589        13792        0        1     8192   ar--
# bin/../bin-riscv64/munmap -N unmap_ra8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    298387                     377688
#                        max   3148517                     533590
#                       mean    503485.94182               455607.98985
#                     median    462089                     459589*
#                     stddev    171590.60763                25994.51442
#             standard error      1303.60002                  221.34417
#       99% confidence level      3358.07364                  570.18258
#                       skew         5.69884                   -0.51058
#                   kurtosis        48.23916                    0.55710
#           time correlation        20.42539                    6.06934
#
#               elapsed time        20.00697
#                   run time         9.26030
#          getnsecs overhead      1416
#
#          number of samples     17326
#         number of outliers      3534
#    number of final samples     13792
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 45          377688 |*                                  379501.42222
#                 33          381273 |*                                  383006.60606
#                 36          384858 |*                                  386509.33333
#                 40          388443 |*                                  390493.62500
#                 68          392028 |*                                  393887.23529
#                115          395613 |**                                 397674.50435
#                211          399198 |****                               401104.36019
#                294          402783 |*****                              404630.37075
#                368          406368 |*******                            408099.88859
#                323          409953 |******                             411663.50774
#                263          413538 |*****                              415257.05703
#                175          417123 |***                                418834.25714
#                164          420708 |***                                422620.81098
#                153          424293 |***                                426085.46405
#                145          427878 |**                                 429571.96552
#                143          431463 |**                                 433267.67133
#                157          435048 |***                                436794.37580
#                182          438633 |***                                440587.99451
#                244          442218 |****                               444118.22541
#                449          445803 |********                           447770.14031
#                750          449388 |***************                    451320.54133
#               1204          452973 |************************           454857.65282
#               1597          456558 |********************************   458411.53976
#               1535          460143 |******************************     461892.19218
#               1148          463728 |***********************            465459.58711
#                812          467313 |****************                   469060.79557
#                610          470898 |************                       472568.72951
#                563          474483 |***********                        476259.04973
#                445          478068 |********                           479702.18652
#                392          481653 |*******                            483361.21939
#                235          485238 |****                               486820.65957
#                203          488823 |****                               490542.28079
#
#                690           > 95% |*************                      507279.16377
#
#        mean of 95%    452886.79385
#          95th %ile          492389
#
# WARNINGS
#     Actual benchmark run time only accounts for 46.3% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rt128k   1   1          427497         2204        0        1   131072   -r--
# bin/../bin-riscv64/munmap -N unmap_rt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    383188                     383188
#                        max   1590959                     479147
#                       mean    465168.63714               429527.63884
#                     median    433997                     427497*
#                     stddev     85873.80167                16644.25819
#             standard error      1591.07425                  354.53462
#       99% confidence level      4098.60727                  913.28118
#                       skew         4.32254                    0.55891
#                   kurtosis        30.97360                    0.18551
#           time correlation        72.23679                   25.23678
#
#               elapsed time        20.01133
#                   run time         2.66159
#          getnsecs overhead      1416
#
#          number of samples      2913
#         number of outliers       709
#    number of final samples      2204
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          383188 |*                                  383938.00000
#                  2          385643 |*                                  386738.00000
#                  0          388098 |                                              -
#                  3          390553 |*                                  392693.33333
#                  6          393008 |*                                  394309.33333
#                 17          395463 |***                                396941.94118
#                 15          397918 |**                                 399257.33333
#                 22          400373 |****                               401723.68182
#                 43          402828 |********                           404082.62791
#                 38          405283 |*******                            406432.02632
#                 72          407738 |**************                     408995.90278
#                 85          410193 |****************                   411480.42353
#                109          412648 |*********************              413915.53211
#                135          415103 |**************************         416364.13333
#                121          417558 |***********************            418754.98347
#                108          420013 |*********************              421301.62963
#                160          422468 |*******************************    423683.73750
#                163          424923 |********************************   426123.88957
#                134          427378 |**************************         428681.14925
#                129          429833 |*************************          431017.93023
#                125          432288 |************************           433418.53600
#                101          434743 |*******************                435962.18812
#                 89          437198 |*****************                  438412.33708
#                 72          439653 |**************                     440698.97222
#                 68          442108 |*************                      443290.00000
#                 66          444563 |************                       445887.01515
#                 39          447018 |*******                            448189.10256
#                 40          449473 |*******                            450660.75000
#                 45          451928 |********                           453029.04444
#                 30          454383 |*****                              455342.60000
#                 27          456838 |*****                              458137.74074
#                 27          459293 |*****                              460304.11111
#
#                111           > 95% |*********************              469424.85586
#
#        mean of 95%    427411.73292
#          95th %ile          461747
#
# WARNINGS
#     Actual benchmark run time only accounts for 13.3% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rt8k   1   1          442047         9822        0        1     8192   -r--
# bin/../bin-riscv64/munmap -N unmap_rt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    280395                     280395
#                        max   3671681                     693850
#                       mean    479044.15441               457129.28019
#                     median    443197                     442047*
#                     stddev    169540.25934                79414.61664
#             standard error      1680.84233                  801.30985
#       99% confidence level      4329.84984                 2064.17416
#                       skew         7.13689                    0.48765
#                   kurtosis        80.41195                    0.63431
#           time correlation        35.77419                   25.70202
#
#               elapsed time        20.01148
#                   run time         9.76019
#          getnsecs overhead      1416
#
#          number of samples     10174
#         number of outliers       352
#    number of final samples      9822
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 96          280395 |**                                 286829.92708
#                134          290886 |**                                 296920.55970
#                243          301377 |*****                              307074.40329
#                237          311868 |*****                              317005.97890
#                130          322359 |**                                 327454.64615
#                 82          332850 |*                                  337895.39024
#                 55          343341 |*                                  348346.00000
#                 28          353832 |*                                  358935.28571
#                 23          364323 |*                                  369671.39130
#                 47          374814 |*                                  381064.08511
#                 75          385305 |*                                  391359.48000
#                182          395796 |***                                401898.03846
#                549          406287 |***********                        412058.40619
#                907          416778 |*******************                422350.07277
#               1469          427269 |*******************************    432888.68005
#               1503          437760 |********************************   442750.65935
#                850          448251 |******************                 452979.41176
#                450          458742 |*********                          463338.77778
#                221          469233 |****                               473964.64706
#                131          479724 |**                                 484776.13740
#                 94          490215 |**                                 495052.20213
#                126          500706 |**                                 506471.46032
#                169          511197 |***                                516948.40828
#                233          521688 |****                               527108.06438
#                269          532179 |*****                              537742.42379
#                259          542670 |*****                              547843.36680
#                192          553161 |****                               558193.31250
#                149          563652 |***                                568499.67785
#                123          574143 |**                                 579176.13821
#                114          584634 |**                                 589735.50000
#                 91          595125 |*                                  600184.74725
#                 99          605616 |**                                 611092.71717
#
#                492           > 95% |**********                         649332.46545
#
#        mean of 95%    446993.80675
#          95th %ile          616099
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.8% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rz128k   1   1          309965         3433        0        2   131072   -r--
# bin/../bin-riscv64/munmap -N unmap_rz128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    269195                     269195
#                        max   1360556                     412446
#                       mean    333275.52532               319185.33469
#                     median    311931                     309965*
#                     stddev     76258.81583                31177.33542
#             standard error      1261.72649                  532.11082
#       99% confidence level      3250.20744                 1370.71748
#                       skew         5.55158                    1.11022
#                   kurtosis        45.60010                    0.35664
#           time correlation        46.24665                   28.92628
#
#               elapsed time        20.00830
#                   run time         2.98157
#          getnsecs overhead      1416
#
#          number of samples      3653
#         number of outliers       220
#    number of final samples      3433
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 19          269195 |**                                 271305.52632
#                 47          272806 |*****                              274922.65957
#                 46          276417 |*****                              278380.86957
#                 61          280028 |******                             281704.83607
#                 82          283639 |*********                          285548.69512
#                148          287250 |****************                   289291.04054
#                211          290861 |***********************            292688.92417
#                256          294472 |****************************       296376.82031
#                289          298083 |********************************   299927.79239
#                267          301694 |*****************************      303450.88015
#                219          305305 |************************           307125.98630
#                230          308916 |*************************          310718.50000
#                215          312527 |***********************            314485.66977
#                187          316138 |********************               317781.68984
#                156          319749 |*****************                  321468.12821
#                122          323360 |*************                      325092.94262
#                 70          326971 |*******                            328621.68571
#                 56          330582 |******                             332053.17857
#                 36          334193 |***                                335619.44444
#                 21          337804 |**                                 339556.57143
#                 23          341415 |**                                 342611.78261
#                 28          345026 |***                                346690.03571
#                 26          348637 |**                                 350277.34615
#                 36          352248 |***                                354380.08333
#                 40          355859 |****                               357591.77500
#                 39          359470 |****                               361345.28205
#                 44          363081 |****                               365023.81818
#                 50          366692 |*****                              368475.48000
#                 76          370303 |********                           372237.64474
#                 63          373914 |******                             375686.88889
#                 59          377525 |******                             379444.32203
#                 39          381136 |****                               382643.41026
#
#                172           > 95% |*******************                396209.16279
#
#        mean of 95%    315122.74701
#          95th %ile          384746
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.9% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_rz8k   1   1          419347        10360        0        2     8192   -r--
# bin/../bin-riscv64/munmap -N unmap_rz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -r -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    259245                     259245
#                        max   2987723                     639149
#                       mean    453857.41651               431002.50598
#                     median    420846                     419347*
#                     stddev    147149.87722                69481.43068
#             standard error      1410.67022                  682.63551
#       99% confidence level      3633.88649                 1758.46907
#                       skew         6.18340                    0.46114
#                   kurtosis        64.64368                    1.02559
#           time correlation        30.22918                   20.87402
#
#               elapsed time        20.00775
#                   run time         9.94348
#          getnsecs overhead      1416
#
#          number of samples     10881
#         number of outliers       521
#    number of final samples     10360
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 33          259245 |*                                  265379.84848
#                109          268942 |**                                 274389.49541
#                230          278639 |****                               283871.00870
#                225          288336 |****                               292676.36000
#                128          298033 |**                                 302325.77344
#                 56          307730 |*                                  312191.37500
#                 21          317427 |*                                  321741.66667
#                 15          327124 |*                                  331703.93333
#                 15          336821 |*                                  342251.86667
#                 27          346518 |*                                  351619.03704
#                 87          356215 |*                                  361689.78161
#                128          365912 |**                                 371113.05469
#                236          375609 |****                               381101.48305
#                504          385306 |*********                          390664.74802
#                934          395003 |*****************                  400275.13383
#               1533          404700 |*****************************      409701.96999
#               1679          414397 |********************************   419079.81418
#               1132          424094 |*********************              428455.35601
#                592          433791 |***********                        438001.22297
#                302          443488 |*****                              447628.29139
#                170          453185 |***                                457591.42941
#                116          462882 |**                                 467836.22414
#                 93          472579 |*                                  477615.30108
#                124          482276 |**                                 487647.16129
#                133          491973 |**                                 497130.77444
#                200          501670 |***                                506703.64000
#                238          511367 |****                               516578.20168
#                229          521064 |****                               525454.06114
#                197          530761 |***                                535536.68528
#                146          540458 |**                                 545287.95205
#                129          550155 |**                                 554993.77519
#                 81          559852 |*                                  564478.33333
#
#                518           > 95% |*********                          602058.83977
#
#        mean of 95%    421999.54105
#          95th %ile          569548
#
# WARNINGS
#     Actual benchmark run time only accounts for 49.7% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_t128k   1   1          149958         8110        0        4   131072   ----
# bin/../bin-riscv64/munmap -N unmap_t128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    132998                     132998
#                        max   1192369                     188919
#                       mean    182081.79328               154159.32873
#                     median    151938                     149958*
#                     stddev     73080.98918                11587.74674
#             standard error       737.66515                  128.67334
#       99% confidence level      1900.22542                  331.46252
#                       skew         2.94130                    1.34936
#                   kurtosis        12.08619                    0.78889
#           time correlation        17.47490                    4.39339
#
#               elapsed time        20.00818
#                   run time         8.92533
#          getnsecs overhead      1416
#
#          number of samples      9815
#         number of outliers      1705
#    number of final samples      8110
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6          132998 |*                                  133714.66667
#                  1          134477 |*                                  134998.00000
#                  5          135956 |*                                  136712.80000
#                  5          137435 |*                                  138461.80000
#                 39          138914 |*                                  139919.89744
#                149          140393 |*****                              141308.08725
#                320          141872 |***********                        142689.89062
#                628          143351 |**********************             144149.30573
#                851          144830 |******************************     145572.72973
#                900          146309 |********************************   147035.91111
#                817          147788 |*****************************      148491.86169
#                719          149267 |*************************          150000.85814
#                569          150746 |********************               151457.11248
#                448          152225 |***************                    152948.44643
#                336          153704 |***********                        154419.26488
#                253          155183 |********                           155931.98814
#                181          156662 |******                             157412.59669
#                126          158141 |****                               158855.96032
#                135          159620 |****                               160324.91852
#                 92          161099 |***                                161839.29348
#                 64          162578 |**                                 163308.21875
#                 65          164057 |**                                 164802.84615
#                 61          165536 |**                                 166355.14754
#                 74          167015 |**                                 167736.71622
#                 71          168494 |**                                 169221.92958
#                101          169973 |***                                170688.60396
#                110          171452 |***                                172205.58182
#                114          172931 |****                               173713.90351
#                117          174410 |****                               175151.47863
#                119          175889 |****                               176591.96639
#                122          177368 |****                               178089.85246
#                106          178847 |***                                179586.92453
#
#                406           > 95% |**************                     184153.91379
#
#        mean of 95%    152578.61721
#          95th %ile          180319
#
# WARNINGS
#     Actual benchmark run time only accounts for 44.6% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_t8k   1   1          145698         7309        0        4     8192   ----
# bin/../bin-riscv64/munmap -N unmap_t8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    128648                     135348
#                        max   2596324                     158438
#                       mean    174890.74196               146276.42071
#                     median    148018                     145698*
#                     stddev     72056.46464                 4054.63866
#             standard error       712.38359                   47.42673
#       99% confidence level      1835.10013                  122.17125
#                       skew         6.70993                    0.60042
#                   kurtosis       142.17530                    0.03987
#           time correlation        14.97914                    1.86288
#
#               elapsed time        20.00904
#                   run time         8.92138
#          getnsecs overhead      1416
#
#          number of samples     10231
#         number of outliers      2922
#    number of final samples      7309
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          135348 |*                                  135348.00000
#                  1          135929 |*                                  136198.00000
#                  2          136510 |*                                  136827.50000
#                  2          137091 |*                                  137258.00000
#                 22          137672 |*                                  138034.81818
#                 31          138253 |*                                  138547.67742
#                 52          138834 |***                                139130.30769
#                111          139415 |*******                            139715.56757
#                148          139996 |*********                          140269.89189
#                205          140577 |*************                      140883.95122
#                285          141158 |******************                 141456.45614
#                312          141739 |********************               142046.66987
#                366          142320 |***********************            142633.23224
#                414          142901 |**************************         143206.86473
#                432          143482 |***************************        143780.96296
#                499          144063 |********************************   144378.52104
#                412          144644 |**************************         144921.78641
#                439          145225 |****************************       145522.37358
#                403          145806 |*************************          146093.04963
#                359          146387 |***********************            146673.61281
#                349          146968 |**********************             147255.04871
#                321          147549 |********************               147828.59190
#                293          148130 |******************                 148398.52901
#                252          148711 |****************                   149004.84524
#                237          149292 |***************                    149556.05907
#                222          149873 |**************                     150138.00000
#                196          150454 |************                       150736.77551
#                135          151035 |********                           151343.77778
#                140          151616 |********                           151913.21429
#                106          152197 |******                             152490.50000
#                107          152778 |******                             153081.17757
#                 89          153359 |*****                              153643.46067
#
#                366           > 95% |***********************            155955.69672
#
#        mean of 95%    145766.17802
#          95th %ile          153938
#
# WARNINGS
#     Actual benchmark run time only accounts for 44.6% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wa128k   1   1          601391         1939        0        1   131072   a-w-
# bin/../bin-riscv64/munmap -N unmap_wa128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    555390                     555390
#                        max   1715002                     656591
#                       mean    648960.39395               603788.90872
#                     median    606791                     601391*
#                     stddev    106030.75490                17619.11785
#             standard error      2143.45746                  400.12460
#       99% confidence level      5521.54642                 1030.72098
#                       skew         2.85648                    0.62046
#                   kurtosis        11.67631                   -0.00942
#           time correlation       109.66635                   30.50698
#
#               elapsed time        20.01242
#                   run time         1.59275
#          getnsecs overhead      1416
#
#          number of samples      2447
#         number of outliers       508
#    number of final samples      1939
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          555390 |*                                  555390.00000
#                  1          557953 |*                                  559690.00000
#                  2          560516 |*                                  562890.00000
#                  2          563079 |*                                  563540.00000
#                  2          565642 |*                                  567440.00000
#                  4          568205 |*                                  569415.00000
#                  6          570768 |*                                  572706.66667
#                 12          573331 |***                                574873.25000
#                 30          575894 |*******                            577446.66667
#                 55          578457 |*************                      580048.20000
#                 88          581020 |**********************             582361.64773
#                 99          583583 |*************************          584728.49495
#                120          586146 |******************************     587537.62500
#                121          588709 |******************************     589972.00000
#                103          591272 |**************************         592607.67961
#                 98          593835 |************************           595205.48980
#                126          596398 |********************************   597752.90476
#                102          598961 |*************************          600346.14706
#                125          601524 |*******************************    602889.55200
#                120          604087 |******************************     605387.80000
#                 77          606650 |*******************                607931.92208
#                 72          609213 |******************                 610600.13889
#                 63          611776 |****************                   612823.82540
#                 83          614339 |*********************              615659.07229
#                 63          616902 |****************                   618050.71429
#                 55          619465 |*************                      620650.41818
#                 48          622028 |************                       623332.12500
#                 44          624591 |***********                        625940.50000
#                 40          627154 |**********                         628518.10000
#                 25          629717 |******                             631234.68000
#                 33          632280 |********                           633536.06061
#                 22          634843 |*****                              636390.63636
#
#                 97           > 95% |************************           645412.37113
#
#        mean of 95%    601597.01086
#          95th %ile          637391
#
# WARNINGS
#     Actual benchmark run time only accounts for 8.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wa8k   1   1          485847         4369        0        1     8192   a-w-
# bin/../bin-riscv64/munmap -N unmap_wa8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f MAP_ANON 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    352688                     352688
#                        max   1544808                     768050
#                       mean    499991.21916               490102.24720
#                     median    486947                     485847*
#                     stddev    115272.50806                92757.73731
#             standard error      1724.71669                 1403.32778
#       99% confidence level      4442.87020                 3614.97237
#                       skew         1.86898                    0.54803
#                   kurtosis         7.82422                   -0.22871
#           time correlation        79.32926                   70.84896
#
#               elapsed time        20.01254
#                   run time         3.76583
#          getnsecs overhead      1416
#
#          number of samples      4467
#         number of outliers        98
#    number of final samples      4369
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 93          352688 |******                             359331.84946
#                390          362601 |*************************          367964.75385
#                324          372514 |*********************              376609.52469
#                168          382427 |***********                        387018.98810
#                126          392340 |********                           396800.02381
#                 75          402253 |****                               406702.82667
#                 59          412166 |***                                416901.84746
#                 37          422079 |**                                 425937.05405
#                 54          431992 |***                                437023.72222
#                 29          441905 |*                                  446637.13793
#                 51          451818 |***                                457631.07843
#                128          461731 |********                           467346.64844
#                431          471644 |****************************       477436.87935
#                484          481557 |********************************   486400.41116
#                353          491470 |***********************            495945.91501
#                230          501383 |***************                    505743.96522
#                122          511296 |********                           515845.77049
#                 80          521209 |*****                              526267.50000
#                 57          531122 |***                                535723.29825
#                 52          541035 |***                                545885.76923
#                 66          550948 |****                               555883.12121
#                105          560861 |******                             565896.33333
#                107          570774 |*******                            575698.18692
#                 96          580687 |******                             585611.59375
#                 67          590600 |****                               595723.58209
#                 52          600513 |***                                605589.94231
#                 45          610426 |**                                 615538.51111
#                 64          620339 |****                               625668.39062
#                 54          630252 |***                                635282.75926
#                 43          640165 |**                                 645594.72093
#                 58          650078 |***                                654744.29310
#                 50          659991 |***                                665028.18000
#
#                219           > 95% |**************                     702373.62557
#
#        mean of 95%    478900.45639
#          95th %ile          669891
#
# WARNINGS
#     Actual benchmark run time only accounts for 18.8% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wt128k   1   1          707191         3697        0        1   131072   --w-
# bin/../bin-riscv64/munmap -N unmap_wt128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    544290                     544290
#                        max   2049006                    1016495
#                       mean    750670.08308               722732.16581
#                     median    710891                     707191*
#                     stddev    149762.00754                98067.80537
#             standard error      2383.48861                 1612.87879
#       99% confidence level      6139.86666                 4154.77577
#                       skew         2.23012                    0.68943
#                   kurtosis         9.04285                    0.55361
#           time correlation       109.48684                   84.33247
#
#               elapsed time        20.00897
#                   run time         2.97027
#          getnsecs overhead      1416
#
#          number of samples      3948
#         number of outliers       251
#    number of final samples      3697
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 81          544290 |***                                552282.34568
#                138          556303 |******                             561795.61594
#                 94          568316 |****                               574167.62766
#                112          580329 |*****                              585665.08929
#                 83          592342 |***                                597603.45783
#                 59          604355 |**                                 610376.77966
#                 34          616368 |*                                  621919.94118
#                 23          628381 |*                                  635034.13043
#                 16          640394 |*                                  645865.75000
#                 23          652407 |*                                  658830.00000
#                 29          664420 |*                                  670625.48276
#                186          676433 |********                           685361.55914
#                705          688446 |********************************   694612.36028
#                437          700459 |*******************                706128.65217
#                342          712472 |***************                    718064.24269
#                241          724485 |**********                         730266.26556
#                175          736498 |*******                            742044.84000
#                115          748511 |*****                              754438.81739
#                 95          760524 |****                               766315.12632
#                 58          772537 |**                                 777683.46552
#                 26          784550 |*                                  790326.84615
#                 26          796563 |*                                  802273.19231
#                 25          808576 |*                                  815240.32000
#                 18          820589 |*                                  827942.61111
#                 21          832602 |*                                  839559.28571
#                 49          844615 |**                                 850592.79592
#                 53          856628 |**                                 862417.50943
#                 56          868641 |**                                 874862.69643
#                 63          880654 |**                                 885434.46032
#                 44          892667 |*                                  898413.81818
#                 40          904680 |*                                  911238.50000
#                 45          916693 |**                                 921878.02222
#
#                185           > 95% |********                           962220.49730
#
#        mean of 95%    710116.74972
#          95th %ile          928694
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.8% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wt8k   1   1          487589        11172        0        1     8192   --w-
# bin/../bin-riscv64/munmap -N unmap_wt8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    345888                     442789
#                        max   3455420                     538790
#                       mean    545664.42087               490790.08539
#                     median    491989                     487589*
#                     stddev    166450.69172                16027.17138
#             standard error      1364.25828                  151.63219
#       99% confidence level      3514.32932                  390.60453
#                       skew         5.11628                    0.57179
#                   kurtosis        40.15595                    0.68590
#           time correlation        23.47325                    4.68784
#
#               elapsed time        20.00772
#                   run time         8.28306
#          getnsecs overhead      1416
#
#          number of samples     14886
#         number of outliers      3714
#    number of final samples     11172
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 45          442789 |*                                  443867.15556
#                 34          445296 |*                                  446468.52941
#                 19          447803 |*                                  449130.84211
#                 39          450310 |*                                  451449.58974
#                 32          452817 |*                                  454135.71875
#                 43          455324 |*                                  456465.55814
#                 25          457831 |*                                  459267.08000
#                 27          460338 |*                                  461570.29630
#                 40          462845 |*                                  464156.30000
#                 48          465352 |*                                  466729.85417
#                 89          467859 |**                                 469168.61798
#                223          470366 |******                             471797.46637
#                478          472873 |**************                     474235.07741
#                773          475380 |***********************            476648.20828
#               1048          477887 |********************************   479153.67462
#                991          480394 |******************************     481685.68920
#                899          482901 |***************************        484138.19355
#                838          485408 |*************************          486658.10621
#                751          487915 |**********************             489152.86684
#                636          490422 |*******************                491660.81761
#                543          492929 |****************                   494158.76796
#                482          495436 |**************                     496682.63693
#                454          497943 |*************                      499167.62335
#                354          500450 |**********                         501673.70056
#                321          502957 |*********                          504159.83489
#                292          505464 |********                           506694.73973
#                263          507971 |********                           509111.31559
#                242          510478 |*******                            511568.90083
#                167          512985 |*****                              514193.58084
#                158          515492 |****                               516864.36076
#                142          517999 |****                               519215.84507
#                117          520506 |***                                521793.77778
#
#                559           > 95% |*****************                  530021.66726
#
#        mean of 95%    488723.70885
#          95th %ile          522990
#
# WARNINGS
#     Actual benchmark run time only accounts for 41.4% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
             prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wz128k   1   1          586190         3730        0        1   131072   --w-
# bin/../bin-riscv64/munmap -N unmap_wz128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    540090                     540090
#                        max   1821303                     647291
#                       mean    641112.05045               590374.55228
#                     median    593990                     586190*
#                     stddev    131182.05717                18972.14648
#             standard error      1898.00266                  310.64334
#       99% confidence level      4889.25485                  800.21725
#                       skew         4.17704                    0.81254
#                   kurtosis        24.03746                    0.08065
#           time correlation        62.79198                   16.88005
#
#               elapsed time        20.00831
#                   run time         3.07041
#          getnsecs overhead      1416
#
#          number of samples      4777
#         number of outliers      1047
#    number of final samples      3730
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          540090 |*                                  540389.50000
#                  0          542862 |                                              -
#                  1          545634 |*                                  547789.00000
#                  2          548406 |*                                  548940.00000
#                  1          551178 |*                                  552790.00000
#                  8          553950 |*                                  555352.50000
#                  7          556722 |*                                  558132.85714
#                 29          559494 |***                                561058.68966
#                 60          562266 |******                             563809.83333
#                108          565038 |***********                        566677.82407
#                198          567810 |*********************              569296.48990
#                271          570582 |*****************************      571963.36531
#                293          573354 |*******************************    574715.55290
#                296          576126 |********************************   577509.59459
#                212          578898 |**********************             580241.91509
#                252          581670 |***************************        582971.81746
#                193          584442 |********************               585851.23834
#                193          587214 |********************               588495.79793
#                189          589986 |********************               591405.97354
#                165          592758 |*****************                  594098.03030
#                163          595530 |*****************                  596917.21472
#                131          598302 |**************                     599663.58015
#                131          601074 |**************                     602500.94656
#                114          603846 |************                       604951.68421
#                 95          606618 |**********                         607998.70526
#                 76          609390 |********                           610805.98684
#                 68          612162 |*******                            613278.67647
#                 69          614934 |*******                            616249.81159
#                 60          617706 |******                             619038.78333
#                 61          620478 |******                             621795.42623
#                 46          623250 |****                               624494.76087
#                 49          626022 |*****                              627482.34694
#
#                187           > 95% |********************               636594.34759
#
#        mean of 95%    587935.06548
#          95th %ile          628791
#
# WARNINGS
#     Actual benchmark run time only accounts for 15.3% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
           prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_wz8k   1   1          409896         2443        0        1     8192   --w-
# bin/../bin-riscv64/munmap -N unmap_wz8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -w -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    370688                     370688
#                        max   1421899                     452547
#                       mean    447353.56660               410933.89808
#                     median    416247                     409896*
#                     stddev     80146.02078                13894.71368
#             standard error      1399.19695                  281.11749
#       99% confidence level      3604.33134                  724.15866
#                       skew         3.54329                    0.44418
#                   kurtosis        21.38957                    0.06721
#           time correlation        62.60286                   19.12504
#
#               elapsed time        20.01265
#                   run time         2.88739
#          getnsecs overhead      1416
#
#          number of samples      3281
#         number of outliers       838
#    number of final samples      2443
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          370688 |*                                  371638.00000
#                  2          372743 |*                                  373237.50000
#                  8          374798 |*                                  375775.37500
#                  5          376853 |*                                  377607.80000
#                  6          378908 |*                                  379940.66667
#                  4          380963 |*                                  382206.50000
#                  8          383018 |*                                  384276.25000
#                 24          385073 |****                               386408.62500
#                 16          387128 |***                                388079.37500
#                 28          389183 |*****                              390240.21429
#                 46          391238 |*********                          392341.56522
#                107          393293 |*********************              394381.58879
#                146          395348 |*****************************      396420.05479
#                146          397403 |*****************************      398408.85616
#                159          399458 |********************************   400478.01258
#                129          401513 |*************************          402538.50388
#                121          403568 |************************           404517.33058
#                113          405623 |**********************             406672.45133
#                139          407678 |***************************        408661.89928
#                139          409733 |***************************        410696.11511
#                146          411788 |*****************************      412770.26027
#                130          413843 |**************************         414856.17692
#                114          415898 |**********************             416925.56140
#                123          417953 |************************           418932.03252
#                 92          420008 |******************                 421040.18478
#                 91          422063 |******************                 423104.36264
#                 68          424118 |*************                      425183.61765
#                 42          426173 |********                           427106.38095
#                 53          428228 |**********                         429189.03774
#                 45          430283 |*********                          431273.64444
#                 38          432338 |*******                            433449.63158
#                 30          434393 |******                             435353.66667
#
#                123           > 95% |************************           443248.47967
#
#        mean of 95%    409220.66810
#          95th %ile          436447
#
# WARNINGS
#     Actual benchmark run time only accounts for 14.4% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
            prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_z128k   1   1          147818         7242        0        4   131072   ----
# bin/../bin-riscv64/munmap -N unmap_z128k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 128k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    128397                     135298
#                        max   1500862                     161579
#                       mean    177756.78195               148309.71168
#                     median    150218                     147818*
#                     stddev     71912.83064                 4424.68249
#             standard error       715.45316                   51.99395
#       99% confidence level      1843.00735                  133.93643
#                       skew         4.45430                    0.46706
#                   kurtosis        43.58012                   -0.00954
#           time correlation        15.68710                    2.05892
#
#               elapsed time        20.00855
#                   run time         8.89821
#          getnsecs overhead      1416
#
#          number of samples     10103
#         number of outliers      2861
#    number of final samples      7242
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  3          135298 |*                                  135606.33333
#                  2          135962 |*                                  136160.00000
#                  7          136626 |*                                  136951.14286
#                  3          137290 |*                                  137656.00000
#                  8          137954 |*                                  138306.00000
#                 25          138618 |*                                  139047.40000
#                 42          139282 |**                                 139669.30952
#                 72          139946 |****                               140296.38889
#                 74          140610 |****                               140992.39189
#                122          141274 |********                           141602.22131
#                195          141938 |*************                      142293.05128
#                273          142602 |******************                 142948.45788
#                313          143266 |*********************              143609.88498
#                364          143930 |************************           144274.27747
#                416          144594 |****************************       144902.85577
#                433          145258 |*****************************      145594.99769
#                400          145922 |***************************        146263.41250
#                474          146586 |********************************   146909.98312
#                443          147250 |*****************************      147581.30700
#                410          147914 |***************************        148226.85366
#                403          148578 |***************************        148890.15881
#                384          149242 |*************************          149569.58854
#                328          149906 |**********************             150214.34146
#                293          150570 |*******************                150895.64505
#                296          151234 |*******************                151558.40541
#                228          151898 |***************                    152227.05702
#                228          152562 |***************                    152885.14912
#                159          153226 |**********                         153573.97484
#                173          153890 |***********                        154230.08092
#                129          154554 |********                           154876.03101
#                101          155218 |******                             155552.08911
#                 78          155882 |*****                              156223.55128
#
#                363           > 95% |************************           158607.69972
#
#        mean of 95%    147766.29408
#          95th %ile          156538
#
# WARNINGS
#     Actual benchmark run time only accounts for 44.5% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
          prc thr      nsecs/call      samples   errors cnt/samp   length  flags
unmap_z8k   1   1          147978         6976        0        4     8192   ----
# bin/../bin-riscv64/munmap -N unmap_z8k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -l 8k -f /dev/zero 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    130173                     137338
#                        max   3839357                     162379
#                       mean    183092.17592               148601.11267
#                     median    150558                     147978*
#                     stddev    105198.02320                 4592.64621
#             standard error      1060.82190                   54.98697
#       99% confidence level      2732.67722                  141.64642
#                       skew        13.36407                    0.61699
#                   kurtosis       370.34768                    0.04565
#           time correlation        18.92635                    2.20735
#
#               elapsed time        20.01101
#                   run time         9.01365
#          getnsecs overhead      1416
#
#          number of samples      9834
#         number of outliers      2858
#    number of final samples      6976
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          137338 |*                                  137638.00000
#                  4          137971 |*                                  138273.00000
#                 16          138604 |*                                  138935.81250
#                 18          139237 |*                                  139665.77778
#                 39          139870 |**                                 140231.84615
#                 79          140503 |*****                              140826.35443
#                115          141136 |********                           141488.78261
#                139          141769 |**********                         142082.46043
#                215          142402 |****************                   142746.83721
#                237          143035 |*****************                  143349.13924
#                313          143668 |***********************            144006.69010
#                377          144301 |****************************       144626.54111
#                385          144934 |****************************       145237.22078
#                427          145567 |********************************   145894.76815
#                393          146200 |*****************************      146519.88295
#                424          146833 |*******************************    147152.95283
#                376          147466 |****************************       147775.39362
#                408          148099 |******************************     148397.65686
#                343          148732 |*************************          149047.27114
#                320          149365 |***********************            149665.62500
#                318          149998 |***********************            150304.85535
#                270          150631 |********************               150938.00000
#                248          151264 |******************                 151591.46774
#                213          151897 |***************                    152197.43662
#                153          152530 |***********                        152843.09804
#                165          153163 |************                       153444.54545
#                142          153796 |**********                         154104.47887
#                125          154429 |*********                          154718.02400
#                107          155062 |********                           155346.46729
#                102          155695 |*******                            155997.96078
#                 74          156328 |*****                              156636.21622
#                 80          156961 |*****                              157289.11250
#
#                349           > 95% |**************************         159561.34384
#
#        mean of 95%    148023.91022
#          95th %ile          157578
#
# WARNINGS
#     Actual benchmark run time only accounts for 45.0% of elapsed time.
#
# Usage: munmap
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'munmap')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-map (default /dev/zero)]
#     [-l mapping-length (default 8192)]
#     [-r] (read a byte from each page)
#     [-w] (write a byte to each page)
#     [-s] (use MAP_SHARED instead of MAP_PRIVATE)
# notes: measures munmap()
       prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep   1   1         2859013         3542        0        1        1
# bin/../bin-riscv64/usleep -N usleep -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    354587                     354587
#                        max   5242838                    5242838
#                       mean   2758117.98108              2758117.98108
#                     median   2859013                    2859013*
#                     stddev    899789.34152               899789.34152
#             standard error     15118.77368                15118.77368
#       99% confidence level     38945.96100                38945.96100
#                       skew        -0.09908                   -0.09908
#                   kurtosis        -0.81992                   -0.81992
#           time correlation       873.87433                  873.87433
#
#               elapsed time        20.01297
#                   run time         9.77776
#          getnsecs overhead      1416
#
#          number of samples      3542
#         number of outliers         0
#    number of final samples      3542
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          354587 |*                                  397587.50000
#                  1          473264 |*                                  527389.00000
#                  9          591941 |*                                  663846.22222
#                 12          710618 |*                                  782017.00000
#                 20          829295 |***                                893278.20000
#                 28          947972 |****                              1007883.64286
#                 32         1066649 |****                              1133048.71875
#                 65         1185326 |**********                        1252797.01538
#                 90         1304003 |**************                    1361593.67778
#                 93         1422680 |**************                    1489789.81720
#                162         1541357 |*************************         1611603.73457
#                156         1660034 |************************          1721173.01282
#                123         1778711 |*******************               1835581.03252
#                111         1897388 |*****************                 1954534.87387
#                 95         2016065 |**************                    2075407.56842
#                140         2134742 |*********************             2202608.92143
#                 96         2253419 |**************                    2306041.21875
#                127         2372096 |*******************               2429987.88189
#                124         2490773 |*******************               2556983.04032
#                124         2609450 |*******************               2672537.41129
#                140         2728127 |*********************             2790517.90000
#                205         2846804 |********************************  2908657.47317
#                165         2965481 |*************************         3023164.36970
#                186         3084158 |*****************************     3144450.32258
#                177         3202835 |***************************       3264715.49153
#                151         3321512 |***********************           3384758.71523
#                178         3440189 |***************************       3501596.68539
#                139         3558866 |*********************             3616270.35971
#                149         3677543 |***********************           3743468.36242
#                106         3796220 |****************                  3854383.32075
#                 81         3914897 |************                      3974542.40741
#                 77         4033574 |************                      4093635.46753
#
#                178           > 95% |***************************       4395432.26966
#
#        mean of 95%   2671482.44501
#          95th %ile         4152227
#
# WARNINGS
#     Actual benchmark run time only accounts for 48.9% of elapsed time.
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
           prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep_d10   1   1         3886125         4953        0        1       10
# bin/../bin-riscv64/usleep -N usleep_d10 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 10 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2056605                    3071716
#                        max   5186337                    4694932
#                       mean   3876577.66580              3880530.31234
#                     median   3884825                    3886125*
#                     stddev    285389.13923               271537.80992
#             standard error      4037.22326                 3858.30137
#       99% confidence level     10399.88712                 9938.98432
#                       skew        -0.28275                   -0.15398
#                   kurtosis         0.99405                    0.15880
#           time correlation       189.25511                  183.97290
#
#               elapsed time        20.00959
#                   run time        19.38203
#          getnsecs overhead      1416
#
#          number of samples      4997
#         number of outliers        44
#    number of final samples      4953
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 14         3071716 |*                                 3085673.14286
#                  8         3110604 |*                                 3129154.00000
#                 17         3149492 |*                                 3172034.41176
#                 23         3188380 |*                                 3211399.91304
#                 33         3227268 |**                                3242854.09091
#                 46         3266156 |***                               3285722.36957
#                 34         3305044 |**                                3325203.73529
#                 42         3343932 |***                               3363956.92857
#                 65         3382820 |*****                             3403599.29231
#                 86         3421708 |******                            3442837.06977
#                 90         3460596 |*******                           3479360.00000
#                111         3499484 |********                          3520028.55856
#                 92         3538372 |*******                           3558558.81522
#                120         3577260 |*********                         3597066.96667
#                132         3616148 |**********                        3637973.90909
#                172         3655036 |*************                     3675216.21512
#                216         3693924 |*****************                 3714359.75000
#                211         3732812 |****************                  3751865.90521
#                269         3771700 |*********************             3791697.19703
#                387         3810588 |******************************    3832425.36693
#                324         3849476 |*************************         3868161.96914
#                401         3888364 |********************************  3906766.02993
#                310         3927252 |************************          3946628.33548
#                214         3966140 |*****************                 3984562.59813
#                183         4005028 |**************                    4025464.88525
#                218         4043916 |*****************                 4064092.54128
#                234         4082804 |******************                4102235.44444
#                210         4121692 |****************                  4138989.65714
#                118         4160580 |*********                         4179820.44915
#                113         4199468 |*********                         4216675.37168
#                117         4238356 |*********                         4255550.21368
#                 95         4277244 |*******                           4297860.01053
#
#                248           > 95% |*******************               4429137.80242
#
#        mean of 95%   3851613.27566
#          95th %ile         4316128
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
            prc thr      nsecs/call      samples   errors cnt/samp    delta
usleep_d100   1   1         2947914         3460        0        1      100
# bin/../bin-riscv64/usleep -N usleep_d100 -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -d 100 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    334388                     334388
#                        max   6256049                    5651143
#                       mean   2842511.91227              2838082.76012
#                     median   2950515                    2947914*
#                     stddev    951125.31741               944606.11070
#             standard error     16157.94489                16058.78565
#       99% confidence level     41622.86604                41367.43184
#                       skew        -0.17626                   -0.21625
#                   kurtosis        -0.18525                   -0.27185
#           time correlation       930.36001                  926.70706
#
#               elapsed time        20.01052
#                   run time         9.85780
#          getnsecs overhead      1416
#
#          number of samples      3465
#         number of outliers         5
#    number of final samples      3460
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 21          334388 |***                                416012.23810
#                 24          457893 |***                                510951.75000
#                  6          581398 |*                                  636774.00000
#                 27          704903 |****                               754565.96296
#                 27          828408 |****                               893030.29630
#                 22          951913 |***                               1011039.86364
#                 40         1075418 |******                            1135730.77500
#                 40         1198923 |******                            1265929.60000
#                 62         1322428 |*********                         1387106.41935
#                 71         1445933 |***********                       1513281.32394
#                119         1569438 |*******************               1629649.62185
#                131         1692943 |*********************             1755324.25954
#                107         1816448 |*****************                 1871382.77570
#                 72         1939953 |***********                       1994800.52778
#                106         2063458 |*****************                 2123922.02830
#                126         2186963 |********************              2254117.57937
#                100         2310468 |****************                  2372547.52000
#                161         2433973 |*************************         2496121.02484
#                138         2557478 |**********************            2620140.79710
#                150         2680983 |************************          2739721.68000
#                145         2804488 |***********************           2865975.69655
#                180         2927993 |****************************      2990679.85000
#                195         3051498 |*******************************   3113470.02051
#                199         3175003 |********************************  3234169.69849
#                194         3298508 |*******************************   3362778.54639
#                188         3422013 |******************************    3482407.73404
#                162         3545518 |**************************        3610129.38272
#                175         3669023 |****************************      3726796.19429
#                 96         3792528 |***************                   3852248.86458
#                 82         3916033 |*************                     3972158.01220
#                 65         4039538 |**********                        4101650.95385
#                 56         4163043 |*********                         4224000.91071
#
#                173           > 95% |***************************       4640146.39884
#
#        mean of 95%   2743237.30545
#          95th %ile         4286528
#
# WARNINGS
#     Actual benchmark run time only accounts for 49.3% of elapsed time.
#
# Usage: usleep
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'usleep')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     -d delta to wait in microseconds (defaults to 1us)
# note: measures usleep()
            prc thr      nsecs/call      samples   errors cnt/samp     size
write_n100k   1   1            8655         4768        0      105   102400
# bin/../bin-riscv64/write -N write_n100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      8334                       8334
#                        max    133744                      10900
#                       mean      9178.88893                 8969.58201
#                     median      8668                       8655*
#                     stddev      2200.89114                  643.87626
#             standard error        30.99539                    9.32469
#       99% confidence level        79.84413                   24.02040
#                       skew        39.40565                    1.35375
#                   kurtosis      2098.55383                    0.23277
#           time correlation         0.56961                    0.38908
#
#               elapsed time        20.00926
#                   run time         4.84856
#          getnsecs overhead      1416
#
#          number of samples      5042
#         number of outliers       274
#    number of final samples      4768
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            8334 |*                                    8375.87500
#                108            8396 |****                                 8436.60185
#                534            8458 |*******************                  8494.32022
#                775            8520 |****************************         8549.34452
#                857            8582 |********************************     8612.93816
#                529            8644 |*******************                  8671.81853
#                325            8706 |************                         8735.04923
#                263            8768 |*********                            8798.03422
#                157            8830 |*****                                8857.66242
#                 48            8892 |*                                    8924.70833
#                 23            8954 |*                                    8983.95652
#                 20            9016 |*                                    9039.15000
#                 13            9078 |*                                    9106.69231
#                 11            9140 |*                                    9165.18182
#                  8            9202 |*                                    9224.50000
#                  8            9264 |*                                    9302.75000
#                  5            9326 |*                                    9353.80000
#                 12            9388 |*                                    9413.00000
#                 10            9450 |*                                    9475.60000
#                  9            9512 |*                                    9540.44444
#                 12            9574 |*                                    9600.66667
#                 13            9636 |*                                    9671.07692
#                 22            9698 |*                                    9729.59091
#                 35            9760 |*                                    9795.34286
#                 63            9822 |**                                   9856.42857
#                114            9884 |****                                 9915.39474
#                106            9946 |***                                  9980.02830
#                107           10008 |***                                 10037.59813
#                100           10070 |***                                 10102.78000
#                111           10132 |****                                10162.18018
#                 75           10194 |**                                  10221.86667
#                 48           10256 |*                                   10279.93750
#
#                239           > 95% |********                            10510.58996
#
#        mean of 95%      8888.26143
#          95th %ile           10301
#
# WARNINGS
#     Actual benchmark run time only accounts for 24.2% of elapsed time.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
           prc thr      nsecs/call      samples   errors cnt/samp     size
write_n10k   1   1            5456        16287        0      170    10240
# bin/../bin-riscv64/write -N write_n10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min      5268                       5268
#                        max    111543                       6944
#                       mean      5760.66020                 5675.98342
#                     median      5464                       5456*
#                     stddev      1057.76817                  422.91262
#             standard error         8.13788                    3.31383
#       99% confidence level        20.96318                    8.53642
#                       skew        61.80274                    1.33327
#                   kurtosis      5971.69444                    0.19677
#           time correlation         0.09609                    0.07451
#
#               elapsed time        20.00748
#                   run time        16.56475
#          getnsecs overhead      1416
#
#          number of samples     16895
#         number of outliers       608
#    number of final samples     16287
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  8            5268 |*                                    5290.00000
#                202            5308 |*                                    5337.63861
#               1938            5348 |**************                       5372.07688
#               4139            5388 |********************************     5407.46001
#               2284            5428 |*****************                    5443.99387
#               1275            5468 |*********                            5488.68157
#               1435            5508 |***********                          5526.43136
#                615            5548 |****                                 5563.93333
#                171            5588 |*                                    5605.63743
#                 97            5628 |*                                    5646.86598
#                 66            5668 |*                                    5685.00000
#                 58            5708 |*                                    5725.29310
#                 51            5748 |*                                    5766.23529
#                 40            5788 |*                                    5810.30000
#                 31            5828 |*                                    5847.41935
#                 17            5868 |*                                    5882.29412
#                 26            5908 |*                                    5928.30769
#                 31            5948 |*                                    5968.06452
#                 25            5988 |*                                    6008.60000
#                 34            6028 |*                                    6045.44118
#                 42            6068 |*                                    6090.61905
#                 49            6108 |*                                    6128.89796
#                 67            6148 |*                                    6167.40299
#                187            6188 |*                                    6212.25134
#                375            6228 |**                                   6249.43733
#                425            6268 |***                                  6287.61176
#                437            6308 |***                                  6327.39588
#                384            6348 |**                                   6366.42708
#                341            6388 |**                                   6407.09971
#                270            6428 |**                                   6446.65185
#                209            6468 |*                                    6484.79904
#                143            6508 |*                                    6523.44056
#
#                815           > 95% |******                               6700.40613
#
#        mean of 95%      5622.02113
#          95th %ile            6542
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
          prc thr      nsecs/call      samples   errors cnt/samp     size
write_n1k   1   1           12018         3454        0       73     1024
# bin/../bin-riscv64/write -N write_n1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     11647                      11647
#                        max    187944                      15183
#                       mean     12792.41986                12446.10857
#                     median     12037                      12018*
#                     stddev      3818.44897                  915.86118
#             standard error        63.42099                   15.58362
#       99% confidence level       163.37246                   40.14342
#                       skew        32.77191                    1.30740
#                   kurtosis      1371.97771                    0.13061
#           time correlation         1.22625                    0.77185
#
#               elapsed time        20.01528
#                   run time         3.37374
#          getnsecs overhead      1416
#
#          number of samples      3625
#         number of outliers       171
#    number of final samples      3454
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                 44           11647 |*                                   11706.40909
#                596           11731 |*************************           11782.63423
#                755           11815 |********************************    11848.47815
#                202           11899 |********                            11940.22277
#                369           11983 |***************                     12028.63957
#                305           12067 |************                        12100.78361
#                110           12151 |****                                12188.95455
#                115           12235 |****                                12272.85217
#                 59           12319 |**                                  12346.38983
#                 29           12403 |*                                   12446.65517
#                 28           12487 |*                                   12518.57143
#                 12           12571 |*                                   12600.66667
#                 14           12655 |*                                   12696.50000
#                  7           12739 |*                                   12772.42857
#                  2           12823 |*                                   12860.50000
#                  4           12907 |*                                   12950.75000
#                  1           12991 |*                                   13053.00000
#                  3           13075 |*                                   13111.00000
#                 12           13159 |*                                   13179.75000
#                  8           13243 |*                                   13277.37500
#                  4           13327 |*                                   13387.25000
#                 12           13411 |*                                   13454.08333
#                 15           13495 |*                                   13534.73333
#                 45           13579 |*                                   13623.68889
#                 80           13663 |***                                 13703.15000
#                 60           13747 |**                                  13785.25000
#                 82           13831 |***                                 13871.48780
#                 90           13915 |***                                 13958.87778
#                 88           13999 |***                                 14038.38636
#                 47           14083 |*                                   14122.46809
#                 46           14167 |*                                   14203.82609
#                 37           14251 |*                                   14277.70270
#
#                173           > 95% |*******                             14628.73410
#
#        mean of 95%     12331.02347
#          95th %ile           14309
#
# WARNINGS
#     Actual benchmark run time only accounts for 16.9% of elapsed time.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
            prc thr      nsecs/call      samples   errors cnt/samp     size
write_t100k   1   1         1952504         9275        0        1   102400
# bin/../bin-riscv64/write -N write_t100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   1852404                    1852404
#                        max   4674933                    2270907
#                       mean   1989177.52968              1980625.45499
#                     median   2004404                    1952504*
#                     stddev    133976.55260                96794.44905
#             standard error      1382.96650                 1005.06348
#       99% confidence level      3562.52170                 2589.04353
#                       skew         4.64911                    0.32430
#                   kurtosis        50.39692                   -1.30362
#           time correlation        38.56842                   34.33671
#
#               elapsed time        20.00772
#                   run time        18.68541
#          getnsecs overhead      1416
#
#          number of samples      9385
#         number of outliers       110
#    number of final samples      9275
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1         1852404 |*                                 1852404.00000
#                 12         1861086 |*                                 1868769.75000
#               1198         1869768 |***********************           1875765.46745
#                690         1878450 |*************                     1881488.77971
#               1639         1887132 |********************************  1891728.05430
#                686         1895814 |*************                     1899255.34257
#                215         1904496 |****                              1907914.41395
#                 78         1913178 |*                                 1917412.78205
#                 50         1921860 |*                                 1926051.92000
#                 30         1930542 |*                                 1935100.66667
#                 24         1939224 |*                                 1942112.41667
#                 24         1947906 |*                                 1951899.95833
#                 17         1956588 |*                                 1959539.64706
#                  8         1965270 |*                                 1968329.50000
#                  5         1973952 |*                                 1978324.40000
#                  8         1982634 |*                                 1988054.37500
#                  5         1991316 |*                                 1993424.60000
#                  5         1999998 |*                                 2004684.60000
#                  3         2008680 |*                                 2012071.33333
#                129         2017362 |**                                2023863.07752
#                477         2026044 |*********                         2030271.18868
#                656         2034726 |************                      2040052.14634
#                692         2043408 |*************                     2047214.21821
#                486         2052090 |*********                         2056590.61523
#                284         2060772 |*****                             2064713.79930
#                217         2069454 |****                              2073294.36866
#                256         2078136 |****                              2082625.03906
#                210         2086818 |****                              2090794.12857
#                184         2095500 |***                               2099932.78261
#                232         2104182 |****                              2108254.03448
#                187         2112864 |***                               2116880.19251
#                103         2121546 |**                                2125320.48544
#
#                464           > 95% |*********                         2168119.94828
#
#        mean of 95%   1970751.72387
#          95th %ile         2130206
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
           prc thr      nsecs/call      samples   errors cnt/samp     size
write_t10k   1   1          255797        18268        0        2    10240
# bin/../bin-riscv64/write -N write_t10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    249997                     249997
#                        max   1866161                     338698
#                       mean    273356.62303               267793.46557
#                     median    256364                     255797*
#                     stddev     47278.63420                23643.83412
#             standard error       343.70148                  174.93327
#       99% confidence level       885.37501                  450.62809
#                       skew         8.84627                    1.61208
#                   kurtosis       148.51489                    0.88672
#           time correlation         4.81132                    3.42770
#
#               elapsed time        20.00892
#                   run time        15.46744
#          getnsecs overhead      1416
#
#          number of samples     18922
#         number of outliers       654
#    number of final samples     18268
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                489          249997 |**                                 251795.70143
#               3405          252181 |*******************                253949.29222
#               5673          254365 |********************************   254887.20448
#               1433          256549 |********                           257450.60991
#               2265          258733 |************                       259933.51038
#                767          260917 |****                               261904.67014
#                300          263101 |*                                  263967.86333
#                116          265285 |*                                  266233.89655
#                 71          267469 |*                                  268592.67606
#                154          269653 |*                                  270638.14935
#                 57          271837 |*                                  272857.77193
#                 27          274021 |*                                  275084.11111
#                 19          276205 |*                                  277225.31579
#                 22          278389 |*                                  279084.45455
#                 19          280573 |*                                  281599.42105
#                 10          282757 |*                                  284124.00000
#                 16          284941 |*                                  285906.87500
#                  5          287125 |*                                  288431.00000
#                  8          289309 |*                                  290224.37500
#                  6          291493 |*                                  292327.83333
#                  5          293677 |*                                  295124.40000
#                  3          295861 |*                                  297197.33333
#                  1          298045 |*                                  298765.00000
#                  3          300229 |*                                  300875.66667
#                 10          302413 |*                                  303847.80000
#                173          304597 |*                                  306032.07514
#                463          306781 |**                                 307971.02376
#                517          308965 |**                                 309912.24758
#                417          311149 |**                                 312257.92566
#                447          313333 |**                                 314445.04698
#                242          315517 |*                                  316565.84298
#                211          317701 |*                                  318798.90047
#
#                914           > 95% |*****                              327341.82276
#
#        mean of 95%    264657.17431
#          95th %ile          319865
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#     Actual benchmark run time only accounts for 77.3% of elapsed time.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
          prc thr      nsecs/call      samples   errors cnt/samp     size
write_t1k   1   1          100699        16473        0        8     1024
# bin/../bin-riscv64/write -N write_t1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min     98121                      98121
#                        max    260995                     134477
#                       mean    106590.11305               105684.77357
#                     median    100844                     100699*
#                     stddev     11709.45360                 9604.87750
#             standard error        90.27594                   74.83512
#       99% confidence level       232.55081                  192.77528
#                       skew         2.47834                    1.36710
#                   kurtosis        11.57971                    0.24066
#           time correlation         1.84881                    1.63125
#
#               elapsed time        20.00669
#                   run time        16.06533
#          getnsecs overhead      1416
#
#          number of samples     16824
#         number of outliers       351
#    number of final samples     16473
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2           98121 |*                                   98421.00000
#               6537           98978 |********************************    99550.03977
#               1673           99835 |********                           100179.74537
#               1472          100692 |*******                            101237.62160
#               1915          101549 |*********                          101847.67728
#                477          102406 |**                                 102789.87212
#                191          103263 |*                                  103622.11518
#                104          104120 |*                                  104519.32692
#                 78          104977 |*                                  105347.96154
#                 69          105834 |*                                  106283.75362
#                 43          106691 |*                                  107070.25581
#                 27          107548 |*                                  107943.33333
#                 13          108405 |*                                  108825.00000
#                 12          109262 |*                                  109652.16667
#                 19          110119 |*                                  110495.78947
#                  6          110976 |*                                  111478.83333
#                  3          111833 |*                                  112384.66667
#                  8          112690 |*                                  113250.37500
#                  7          113547 |*                                  113850.14286
#                  6          114404 |*                                  114749.16667
#                  6          115261 |*                                  115793.50000
#                 31          116118 |*                                  116761.41935
#                114          116975 |*                                  117428.80702
#                460          117832 |**                                 118349.03261
#                388          118689 |*                                  119082.86598
#                427          119546 |**                                 120026.50585
#                359          120403 |*                                  120759.68245
#                289          121260 |*                                  121723.81661
#                281          122117 |*                                  122531.41281
#                223          122974 |*                                  123381.05830
#                227          123831 |*                                  124217.62996
#                182          124688 |*                                  125120.81868
#
#                824           > 95% |****                               129001.08010
#
#        mean of 95%    104457.05061
#          95th %ile          125522
#
# WARNINGS
#     Mean and median differ by more than one-half the standard deviation.
#
# Usage: write
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'write')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-c ] (make sure buffer is in cache)
# notes: measures write()
             prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n100k   1   1          333446        15617        0        1   102400   10
# bin/../bin-riscv64/writev -N writev_n100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    321496                     324146
#                        max   1539708                     347296
#                       mean    357408.95474               335066.63514
#                     median    335396                     333446*
#                     stddev     50345.53919                 4089.40711
#             standard error       354.09853                   32.72364
#       99% confidence level       912.15781                   84.29608
#                       skew         3.40667                    1.01586
#                   kurtosis        26.49875                    0.12785
#           time correlation         5.94896                    0.84404
#
#               elapsed time        20.00705
#                   run time        14.46037
#          getnsecs overhead      1416
#
#          number of samples     20215
#         number of outliers      4598
#    number of final samples     15617
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          324146 |*                                  324420.50000
#                  1          324754 |*                                  325146.00000
#                  2          325362 |*                                  325620.50000
#                  6          325970 |*                                  326304.33333
#                  7          326578 |*                                  326867.42857
#                 10          327186 |*                                  327480.60000
#                 36          327794 |*                                  328163.80556
#                 45          328402 |*                                  328743.62222
#                 78          329010 |*                                  329329.11538
#                179          329618 |**                                 329971.76536
#                457          330226 |******                             330572.96061
#                944          330834 |*************                      331144.72140
#               2126          331442 |*****************************      331785.76952
#               2287          332050 |********************************   332359.14779
#               1371          332658 |*******************                332939.51933
#                896          333266 |************                       333564.49442
#                698          333874 |*********                          334160.59026
#                612          334482 |********                           334791.58987
#                668          335090 |*********                          335387.47754
#                551          335698 |*******                            335998.94374
#                445          336306 |******                             336605.71461
#                387          336914 |*****                              337214.43411
#                278          337522 |***                                337812.17626
#                311          338130 |****                               338398.56913
#                275          338738 |***                                339019.63636
#                407          339346 |*****                              339647.10565
#                413          339954 |*****                              340268.27603
#                404          340562 |*****                              340850.57921
#                302          341170 |****                               341468.84768
#                234          341778 |***                                342078.26496
#                208          342386 |**                                 342666.43269
#                196          342994 |**                                 343285.79592
#
#                781           > 95% |**********                         345141.71063
#
#        mean of 95%    334536.26078
#          95th %ile          343596
#
# WARNINGS
#     Actual benchmark run time only accounts for 72.3% of elapsed time.
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
            prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n10k   1   1          334238        15481        0        1    10240   10
# bin/../bin-riscv64/writev -N writev_n10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    323546                     323645
#                        max   4395976                     347796
#                       mean    358555.65472               335696.57167
#                     median    335988                     334238*
#                     stddev     57514.64470                 4038.44478
#             standard error       404.86208                   32.45747
#       99% confidence level      1042.92471                   83.61044
#                       skew        19.13963                    1.00594
#                   kurtosis      1211.78380                    0.23985
#           time correlation         6.06346                    0.84225
#
#               elapsed time        20.00790
#                   run time        14.47296
#          getnsecs overhead      1416
#
#          number of samples     20181
#         number of outliers      4700
#    number of final samples     15481
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          323645 |*                                  323645.00000
#                  2          324280 |*                                  324613.00000
#                  2          324915 |*                                  325513.00000
#                  2          325550 |*                                  325763.00000
#                  5          326185 |*                                  326402.80000
#                  5          326820 |*                                  327244.20000
#                 15          327455 |*                                  327830.46667
#                 16          328090 |*                                  328495.06250
#                 41          328725 |*                                  329057.26829
#                119          329360 |*                                  329742.94958
#                262          329995 |****                               330339.19084
#                417          330630 |******                             330945.77698
#                675          331265 |***********                        331643.35407
#               1358          331900 |**********************             332242.15390
#               1800          332535 |*****************************      332843.56222
#               1921          333170 |********************************   333486.38678
#               1626          333805 |***************************        334115.03198
#                938          334440 |***************                    334742.34009
#                638          335075 |**********                         335366.66928
#                576          335710 |*********                          336023.18403
#                527          336345 |********                           336677.56357
#                508          336980 |********                           337273.48228
#                417          337615 |******                             337906.56115
#                313          338250 |*****                              338557.09265
#                312          338885 |*****                              339176.64744
#                304          339520 |*****                              339838.99342
#                336          340155 |*****                              340502.57143
#                344          340790 |*****                              341111.97384
#                417          341425 |******                             341733.74101
#                366          342060 |******                             342379.27869
#                257          342695 |****                               342974.72763
#                186          343330 |***                                343619.18280
#
#                775           > 95% |************                       345753.08000
#
#        mean of 95%    335166.59792
#          95th %ile          343938
#
# WARNINGS
#     Actual benchmark run time only accounts for 72.3% of elapsed time.
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
           prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_n1k   1   1          335838        15679        0        1     1024   10
# bin/../bin-riscv64/writev -N writev_n1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /dev/null 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    326288                     326288
#                        max   1046680                     349438
#                       mean    359008.56189               337348.40927
#                     median    337688                     335838*
#                     stddev     48871.84975                 4039.66680
#             standard error       346.31286                   32.26163
#       99% confidence level       892.10193                   83.10597
#                       skew         2.95876                    0.93589
#                   kurtosis        13.65769                    0.02468
#           time correlation         5.89103                    0.84017
#
#               elapsed time        20.00743
#                   run time        14.31937
#          getnsecs overhead      1416
#
#          number of samples     19915
#         number of outliers      4236
#    number of final samples     15679
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  1          326288 |*                                  326288.00000
#                  3          326893 |*                                  327171.33333
#                  4          327498 |*                                  327738.50000
#                  2          328103 |*                                  328138.00000
#                  4          328708 |*                                  328800.75000
#                 10          329313 |*                                  329643.00000
#                 39          329918 |*                                  330241.94872
#                 48          330523 |*                                  330829.68750
#                 75          331128 |*                                  331442.17333
#                181          331733 |***                                332041.96685
#                550          332338 |*********                          332690.58182
#                939          332943 |****************                   333273.72524
#               1386          333548 |************************           333883.13203
#               1817          334153 |********************************   334473.16456
#               1737          334758 |******************************     335048.91825
#               1256          335363 |**********************             335634.59475
#                786          335968 |*************                      336231.80025
#                581          336573 |**********                         336843.93976
#                625          337178 |***********                        337454.73440
#                614          337783 |**********                         338057.63518
#                622          338388 |**********                         338666.69775
#                455          338993 |********                           339317.19341
#                323          339598 |*****                              339919.02167
#                329          340203 |*****                              340511.73556
#                297          340808 |*****                              341101.65993
#                353          341413 |******                             341721.88102
#                399          342018 |*******                            342321.47118
#                407          342623 |*******                            342913.08354
#                358          343228 |******                             343500.87709
#                289          343833 |*****                              344109.48443
#                218          344438 |***                                344731.58716
#                187          345043 |***                                345334.00535
#
#                784           > 95% |*************                      347144.45026
#
#        mean of 95%    336832.79355
#          95th %ile          345638
#
# WARNINGS
#     Actual benchmark run time only accounts for 71.6% of elapsed time.
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
             prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t100k   1   1        20365161          914        0        1   102400   10
# bin/../bin-riscv64/writev -N writev_t100k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 100k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min  20069558                   20069558
#                        max  36477132                   21112656
#                       mean  20527714.81734             20418419.03939
#                     median  20380858                   20365161*
#                     stddev    819354.16137               234093.74593
#             standard error     26321.44789                 7743.13290
#       99% confidence level     67804.04976                19946.31035
#                       skew        12.01985                    1.04156
#                   kurtosis       189.97299                    0.38564
#           time correlation      1355.15646                  831.90530
#
#               elapsed time        20.01182
#                   run time        19.92920
#          getnsecs overhead      1416
#
#          number of samples       969
#         number of outliers        55
#    number of final samples       914
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  6        20069558 |***                              20085028.16667
#                 18        20096852 |*********                        20114391.66667
#                 32        20124146 |*****************                20141078.18750
#                 41        20151440 |**********************           20165790.17073
#                 59        20178734 |******************************** 20192940.88136
#                 59        20206028 |******************************** 20220330.66102
#                 55        20233322 |*****************************    20247927.70909
#                 56        20260616 |******************************   20274723.33929
#                 47        20287910 |*************************        20300786.51064
#                 45        20315204 |************************         20328740.75556
#                 48        20342498 |**************************       20355729.95833
#                 50        20369792 |***************************      20384009.76000
#                 44        20397086 |***********************          20411035.43182
#                 40        20424380 |*********************            20441062.00000
#                 42        20451674 |**********************           20464649.07143
#                 30        20478968 |****************                 20492834.30000
#                 25        20506262 |*************                    20516992.88000
#                 17        20533556 |*********                        20543895.58824
#                 21        20560850 |***********                      20574855.42857
#                 16        20588144 |********                         20603335.56250
#                 19        20615438 |**********                       20629302.52632
#                 12        20642732 |******                           20661967.50000
#                  8        20670026 |****                             20679021.25000
#                  7        20697320 |***                              20710915.85714
#                  9        20724614 |****                             20740956.22222
#                  7        20751908 |***                              20765129.71429
#                  8        20779202 |****                             20793672.12500
#                  7        20806496 |***                              20817383.28571
#                 11        20833790 |*****                            20845811.54545
#                 12        20861084 |******                           20870998.33333
#                  9        20888378 |****                             20899466.22222
#                  8        20915672 |****                             20933957.62500
#
#                 46           > 95% |************************         21006359.13043
#
#        mean of 95%  20387260.92396
#          95th %ile        20942956
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
            prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t10k   1   1         2577658         7354        0        1    10240   10
# bin/../bin-riscv64/writev -N writev_t10k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 10k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min   2387559                    2387559
#                        max   4903934                    2861754
#                       mean   2558922.47316              2546731.10443
#                     median   2578458                    2577658*
#                     stddev    161720.54193               106546.81000
#             standard error      1873.39245                 1242.44919
#       99% confidence level      4825.85894                 3200.54912
#                       skew         4.98940                    0.02805
#                   kurtosis        47.23184                   -0.94841
#           time correlation        56.13433                   48.28576
#
#               elapsed time        20.00773
#                   run time        19.08436
#          getnsecs overhead      1416
#
#          number of samples      7452
#         number of outliers        98
#    number of final samples      7354
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                198         2387559 |*******                           2394271.48485
#                399         2397669 |**************                    2403607.60652
#                853         2407779 |********************************  2412928.48183
#                726         2417889 |***************************       2421952.43802
#                243         2427999 |*********                         2432177.48971
#                 94         2438109 |***                               2442226.29787
#                 32         2448219 |*                                 2453640.46875
#                 18         2458329 |*                                 2463475.72222
#                 23         2468439 |*                                 2474954.78261
#                 21         2478549 |*                                 2483711.52381
#                 36         2488659 |*                                 2492936.61111
#                 30         2498769 |*                                 2503815.10000
#                  5         2508879 |*                                 2511758.40000
#                  4         2518989 |*                                 2522533.25000
#                  5         2529099 |*                                 2531938.40000
#                 13         2539209 |*                                 2546242.92308
#                115         2549319 |****                              2556119.13043
#                348         2559429 |*************                     2565067.27299
#                647         2569539 |************************          2574759.93354
#                674         2579649 |*************************         2584602.85905
#                502         2589759 |******************                2594620.76892
#                350         2599869 |*************                     2604682.85143
#                287         2609979 |**********                        2614867.73868
#                245         2620089 |*********                         2624902.37551
#                216         2630199 |********                          2635263.03241
#                198         2640309 |*******                           2645681.72727
#                186         2650419 |******                            2655556.74194
#                151         2660529 |*****                             2665280.98013
#                122         2670639 |****                              2675838.09836
#                 94         2680749 |***                               2685891.94681
#                 70         2690859 |**                                2695465.20000
#                 81         2700969 |***                               2704854.23457
#
#                368           > 95% |*************                     2757717.63859
#
#        mean of 95%   2535617.01274
#          95th %ile         2711056
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
           prc thr      nsecs/call      samples   errors cnt/samp     size  vec
writev_t1k   1   1          778076        17306        0        1     1024   10
# bin/../bin-riscv64/writev -N writev_t1k -E -L -W -O 1416 -R 1 -C 200 -D 20000 -X 25000 -s 1k -f /tmp/libmicro.1285/data 
#
# STATISTICS                      nsecs/call (raw)           nsecs/call (outliers removed)
#                        min    749976                     749976
#                        max   1842267                    1047474
#                       mean    829834.01849               814777.09078
#                     median    779977                     778076*
#                     stddev    109327.59649                77570.94460
#             standard error       813.54757                  589.65873
#       99% confidence level      2095.69854                 1518.96088
#                       skew         2.67299                    1.65357
#                   kurtosis        10.48687                    1.09698
#           time correlation        15.35077                   11.94679
#
#               elapsed time        20.00668
#                   run time        15.01273
#          getnsecs overhead      1416
#
#          number of samples     18059
#         number of outliers       753
#    number of final samples     17306
#
# DISTRIBUTION
#             counts      nsecs/call                                            means
#                  2          749976 |*                                  750326.00000
#                 72          757673 |*                                  764040.73611
#               6840          765370 |********************************   769023.86535
#               2235          773067 |**********                         776412.69843
#               2434          780764 |***********                        784753.94248
#               1098          788461 |*****                              791821.62477
#                582          796158 |**                                 799844.21134
#                391          803855 |*                                  806997.87468
#                166          811552 |*                                  815023.93976
#                104          819249 |*                                  822994.54808
#                 45          826946 |*                                  830347.15556
#                 35          834643 |*                                  839121.82857
#                 23          842340 |*                                  845615.26087
#                 19          850037 |*                                  854365.36842
#                 17          857734 |*                                  861011.23529
#                 11          865431 |*                                  870175.63636
#                 14          873128 |*                                  876783.14286
#                  4          880825 |*                                  886625.75000
#                  6          888522 |*                                  893076.00000
#                 18          896219 |*                                  899797.83333
#                  8          903916 |*                                  907725.50000
#                 10          911613 |*                                  915065.40000
#                 41          919310 |*                                  923858.29268
#                172          927007 |*                                  931707.80814
#                357          934704 |*                                  938519.52101
#                397          942401 |*                                  946262.57179
#                373          950098 |*                                  953559.30027
#                279          957795 |*                                  961613.73118
#                200          965492 |*                                  969155.00000
#                191          973189 |*                                  977112.03141
#                152          980886 |*                                  984714.26974
#                144          988583 |*                                  992260.86806
#
#                866           > 95% |****                              1017227.61201
#
#        mean of 95%    804112.72634
#          95th %ile          996275
#
# WARNINGS
#     Actual benchmark run time only accounts for 75.0% of elapsed time.
#
# Usage: writev
#     ---- All Benchmarks ----
#     [-?] (print usage and exit)
#     [-1] (single process; overrides -P > 1)
#     [-A] (align with clock)
#     [-B batch-size (default is calculated)]
#     [-C minimum number of samples (default 100)]
#     [-D minimum duration in ms (default 10000ms)]
#     [-E] (echo name to stderr)
#     [-G framework debugging level]
#     [-H] (suppress headers)
#     [-I nsecs per op] (used to compute batch size)
#     [-L] (print argument line)
#     [-M] (reports mean rather than median)
#     [-N test-name (default 'writev')]
#     [-O getnsecs overhead]
#     [-P processes (default 1)]
#     [-R getnsecs resolution]
#     [-S] (print detailed stats)
#     [-T threads (default 1)]
#     [-V] (print the libMicro version and exit)
#     [-W] (flag possible benchmark problems, implies -S)
#     [-X maximum duration in ms (default 600000ms)]
#     ---- Benchmark Specific ----
#     [-f file-to-write (default /dev/null)]
#     [-s buffer-size (default 1024)]
#     [-v vector-size (default 10)]
# notes: measures writev()
# IOV_MAX is 1024
# SSIZE_MAX is 9223372036854775807
